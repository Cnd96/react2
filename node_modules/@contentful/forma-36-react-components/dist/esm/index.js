import React__default, { createElement, useCallback, createContext, useLayoutEffect, useEffect, useRef, useState, useMemo, forwardRef, Component as Component$1, Children, isValidElement, cloneElement, Fragment as Fragment$1, useReducer } from 'react';
import ReactDOM, { createPortal, render } from 'react-dom';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function unwrapExports (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var classnames = createCommonjsModule(function (module) {
/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if ( module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else {
		window.classNames = classNames;
	}
}());
});

function SvgArrowDown(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M7 10l5 5 5-5z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgArrowDownTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 10 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 10l5 5 5-5H0z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h10v24H0V0z",
    fill: "none"
  }));
}

function SvgArrowUp(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M7 14l5-5 5 5z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgArrowUpTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 10 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 14l5-5 5 5H0z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h10v24H0V0z",
    fill: "none"
  }));
}

function SvgAsset(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), /*#__PURE__*/createElement("g", null, /*#__PURE__*/createElement("path", {
    d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
  }), /*#__PURE__*/createElement("path", {
    d: "M14.14 11.86l-3 3.87L9 13.14 6 17h12l-3.86-5.14z"
  })));
}

function SvgAssetTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 18 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h18v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("g", null, /*#__PURE__*/createElement("path", {
    d: "M16 5v14H2V5h14m0-2H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
  }), /*#__PURE__*/createElement("path", {
    d: "M11.1 11.9l-3 3.9L6 13.1 3 17h12l-3.9-5.1z"
  })));
}

function SvgCalendar(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M8 0a1 1 0 011 1v1h6V1a1 1 0 112 0v1h2.778A3.222 3.222 0 0123 5.222v15.556A3.222 3.222 0 0119.778 24H4.222A3.222 3.222 0 011 20.778V5.222A3.222 3.222 0 014.222 2H7V1a1 1 0 011-1zM7 4H4.222C3.547 4 3 4.547 3 5.222V9h18V5.222C21 4.547 20.453 4 19.778 4H17v1a1 1 0 11-2 0V4H9v1a1 1 0 01-2 0V4zm14 7H3v9.778C3 21.453 3.547 22 4.222 22h15.556c.675 0 1.222-.547 1.222-1.222V11z"
  }));
}

function SvgChatBubble(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgChatBubbleTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M13.5 1.5h-12C.7 1.5 0 2.2 0 3v13.5l3-3h10.5c.8 0 1.5-.7 1.5-1.5V3c0-.8-.7-1.5-1.5-1.5z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }));
}

function SvgCheckCircle(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
  }));
}

function SvgCheckCircleTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M7.5 1.5C3.4 1.5 0 4.9 0 9s3.4 7.5 7.5 7.5S15 13.1 15 9s-3.4-7.5-7.5-7.5zM6 12.8L2.2 9l1.1-1.1L6 10.6l5.7-5.7L12.8 6 6 12.8z"
  }));
}

function SvgChevronDown(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 24 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M5.29289 8.29289C5.68342 7.90237 6.31658 7.90237 6.70711 8.29289L12 13.5858L17.2929 8.29289C17.6834 7.90237 18.3166 7.90237 18.7071 8.29289C19.0976 8.68342 19.0976 9.31658 18.7071 9.70711L12.7071 15.7071C12.3166 16.0976 11.6834 16.0976 11.2929 15.7071L5.29289 9.70711C4.90237 9.31658 4.90237 8.68342 5.29289 8.29289Z"
  }));
}

function SvgChevronDownTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 9 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M1.1 5.9l3.4 3.4 3.4-3.4 1.1 1-4.5 4.5L0 6.9l1.1-1z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h9v18H0V0z",
    fill: "none"
  }));
}

function SvgChevronLeft(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 24 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M15.3738 5.29289C15.7643 5.68342 15.7643 6.31658 15.3738 6.70711L10.0809 12L15.3738 17.2929C15.7643 17.6834 15.7643 18.3166 15.3738 18.7071C14.9833 19.0976 14.3501 19.0976 13.9596 18.7071L7.95956 12.7071C7.56904 12.3166 7.56904 11.6834 7.95956 11.2929L13.9596 5.29289C14.3501 4.90237 14.9833 4.90237 15.3738 5.29289Z"
  }));
}

function SvgChevronLeftTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 5.6 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M5.6 5.6L4.5 4.5 0 9l4.5 4.5 1.1-1.1L2.1 9l3.5-3.4z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h5.6v18H0V0z",
    fill: "none"
  }));
}

function SvgChevronRight(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 24 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M8.62623 18.7071C8.2357 18.3166 8.2357 17.6834 8.62623 17.2929L13.9191 12L8.62623 6.70711C8.2357 6.31658 8.2357 5.68342 8.62623 5.29289C9.01675 4.90237 9.64992 4.90237 10.0404 5.29289L16.0404 11.2929C16.431 11.6834 16.431 12.3166 16.0404 12.7071L10.0404 18.7071C9.64992 19.0976 9.01675 19.0976 8.62623 18.7071Z"
  }));
}

function SvgChevronRightTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 5.6 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M1.1 4.5L0 5.6 3.4 9 0 12.4l1.1 1.1L5.6 9 1.1 4.5z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h5.6v18H0V0z",
    fill: "none"
  }));
}

function SvgChevronUp(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 24 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M18.7071 15.7071C18.3166 16.0976 17.6834 16.0976 17.2929 15.7071L12 10.4142L6.70711 15.7071C6.31659 16.0976 5.68342 16.0976 5.2929 15.7071C4.90237 15.3166 4.90237 14.6834 5.2929 14.2929L11.2929 8.29289C11.6834 7.90237 12.3166 7.90237 12.7071 8.29289L18.7071 14.2929C19.0976 14.6834 19.0976 15.3166 18.7071 15.7071Z"
  }));
}

function SvgChevronUpTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 9 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M1.1 11.6l3.4-3.4 3.4 3.4L9 10.5 4.5 6 0 10.5l1.1 1.1z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h9v18H0V0z",
    fill: "none"
  }));
}

function SvgClock(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
  }));
}

function SvgClockTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 20 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M9.99 0C4.47 0 0 4.48 0 10s4.47 10 9.99 10C15.52 20 20 15.52 20 10S15.52 0 9.99 0zM10 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), /*#__PURE__*/createElement("path", {
    d: "M10.5 5H9v6l5.25 3.15.75-1.23-4.5-2.67V5z"
  }));
}

function SvgClose(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 24 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M18.7071 6.70711C19.0976 6.31658 19.0976 5.68342 18.7071 5.29289C18.3166 4.90237 17.6834 4.90237 17.2929 5.29289L12 10.5858L6.70711 5.29289C6.31658 4.90237 5.68342 4.90237 5.29289 5.29289C4.90237 5.68342 4.90237 6.31658 5.29289 6.70711L10.5858 12L5.29289 17.2929C4.90237 17.6834 4.90237 18.3166 5.29289 18.7071C5.68342 19.0976 6.31658 19.0976 6.70711 18.7071L12 13.4142L17.2929 18.7071C17.6834 19.0976 18.3166 19.0976 18.7071 18.7071C19.0976 18.3166 19.0976 17.6834 18.7071 17.2929L13.4142 12L18.7071 6.70711Z"
  }));
}

function SvgCloseTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 14 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M14 6.4L12.6 5 7 10.6 1.4 5 0 6.4 5.6 12 0 17.6 1.4 19 7 13.4l5.6 5.6 1.4-1.4L8.4 12 14 6.4z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h14v24H0V0z",
    fill: "none"
  }));
}

function CloudUpload(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 24 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l4.65-4.65c.2-.2.51-.2.71 0L17 13h-3z"
  }));
}

function SvgCode(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), /*#__PURE__*/createElement("path", {
    d: "M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"
  }));
}

function SvgCodeTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M5.5 12.5L2.1 9l3.4-3.4-1-1.1L0 9l4.5 4.5 1-1zm3.9 0L12.9 9 9.4 5.6l1.1-1.1L15 9l-4.5 4.5s-1-1-1.1-1z"
  }));
}

function SvgCopy(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z"
  }));
}

function SvgCopyTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 14.2 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h14.2v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M10.5.8h-9C.7.8 0 1.4 0 2.2v10.5h1.5V2.2h9V.8zm2.3 3H4.5c-.8 0-1.5.6-1.5 1.4v10.5c0 .8.7 1.5 1.5 1.5h8.2c.8 0 1.5-.7 1.5-1.5V5.2c0-.8-.6-1.4-1.4-1.4zm0 12H4.5V5.2h8.2v10.6z"
  }));
}

function SvgCycle(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46A7.93 7.93 0 0020 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74A7.93 7.93 0 004 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgCycleTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 16 24",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinejoin: "round",
    strokeMiterlimit: 1.414,
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M8 4V1L4 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46A7.93 7.93 0 0016 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L1.24 7.74A7.93 7.93 0 000 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z",
    fillRule: "nonzero"
  }));
}

function SvgDelete(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgDeleteTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    viewBox: "0 0 14 24",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M1 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H1v12zM14 4h-3.5l-1-1h-5l-1 1H0v2h14V4z"
  }), /*#__PURE__*/createElement("path", {
    fill: "none",
    d: "M-5 0h24v24H-5V0z"
  }));
}

function SvgDone(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 24 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M20.7071 5.29289C21.0976 5.68342 21.0976 6.31658 20.7071 6.70711L9.70711 17.7071C9.51957 17.8946 9.26522 18 9 18C8.73478 18 8.48043 17.8946 8.29289 17.7071L3.29289 12.7071C2.90237 12.3166 2.90237 11.6834 3.29289 11.2929C3.68342 10.9024 4.31658 10.9024 4.70711 11.2929L9 15.5858L19.2929 5.29289C19.6834 4.90237 20.3166 4.90237 20.7071 5.29289Z"
  }));
}

function SvgDoubleArrow(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M 7 14 L 12 20 L 17 14 Z"
  }), /*#__PURE__*/createElement("path", {
    d: "M 6.989 9.951 L 11.989 4 L 16.989 9.951 Z"
  }), /*#__PURE__*/createElement("path", {
    d: "M 0 0 L 24 0 L 24 24 L 0 24 Z",
    fill: "none"
  }));
}

function SvgDownload(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgDownloadTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 10.5 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M10.5 6.8h-3V2.2H3v4.5H0L5.2 12l5.3-5.2zM0 13.5V15h10.5v-1.5H0z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h10.5v18H0V0z",
    fill: "none"
  }));
}

function SvgDrag(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), /*#__PURE__*/createElement("path", {
    d: "M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
  }));
}

function SvgDragTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 10 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h10v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M4 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6C.9 4 0 4.9 0 6s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
  }));
}

function SvgEdit(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04a.996.996 0 000-1.41l-2.34-2.34a.996.996 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgEditTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 13.5 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 12.9v2.8h2.8l8.3-8.3-2.8-2.8L0 12.9zm13.3-7.6c.3-.3.3-.8 0-1.1l-1.8-1.8c-.3-.3-.8-.3-1.1 0L9.1 3.8l2.8 2.8c0 .1 1.4-1.3 1.4-1.3z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h13.5v18H0V0z",
    fill: "none"
  }));
}

function SvgEmbeddedEntryBlock(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M21 15H3c-.6 0-1-.4-1-1v-4c0-.6.4-1 1-1h18c.5 0 1 .4 1 1v4c0 .6-.5 1-1 1zM19.5 7h-15c-.3 0-.5-.2-.5-.5v-1c0-.3.2-.5.5-.5h15c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5zM19.5 19h-15c-.3 0-.5-.2-.5-.5v-1c0-.3.2-.5.5-.5h15c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5zM17.6 23H6.4c-.2 0-.4-.2-.4-.4v-1.1c0-.3.2-.5.4-.5h11.1c.2 0 .4.2.4.4v1.1c.1.3-.1.5-.3.5zM17.6 3H6.4c-.2 0-.4-.2-.4-.4V1.4c0-.2.2-.4.4-.4h11.1c.3 0 .5.2.5.4v1.1c0 .3-.2.5-.4.5z"
  }));
}

function SvgEmbeddedEntryBlockTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 20 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M19 15H1c-.6 0-1-.4-1-1v-4c0-.6.4-1 1-1h18c.5 0 1 .4 1 1v4c0 .6-.5 1-1 1zM17.5 7h-15c-.3 0-.5-.2-.5-.5v-1c0-.3.2-.5.5-.5h15c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5zM17.5 19h-15c-.3 0-.5-.2-.5-.5v-1c0-.3.2-.5.5-.5h15c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5zM15.6 23H4.4c-.2 0-.4-.2-.4-.4v-1.1c0-.3.2-.5.4-.5h11.1c.2 0 .4.2.4.4v1.1c.1.3-.1.5-.3.5zM15.6 3H4.4c-.2 0-.4-.2-.4-.4V1.4c0-.2.2-.4.4-.4h11.1c.3 0 .5.2.5.4v1.1c0 .3-.2.5-.4.5z"
  }));
}

function SvgEmbeddedEntryInline(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M13.4 17H6.6c-.3 0-.6-.3-.6-.6v-2.8c0-.3.3-.6.6-.6h6.8c.3 0 .6.3.6.6v2.8c0 .3-.3.6-.6.6zM22.5 11h-21c-.3 0-.5-.2-.5-.5v-1c0-.3.2-.5.5-.5h20.9c.4 0 .6.2.6.5v.9c0 .4-.2.6-.5.6zM4.5 16h-3c-.3 0-.5-.2-.5-.5v-1c0-.3.2-.5.5-.5h3c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5zM12.6 21H1.4c-.2 0-.4-.2-.4-.4v-1.1c0-.3.2-.5.4-.5h11.1c.2 0 .4.2.4.4v1.1c.1.3-.1.5-.3.5zM15.6 6H1.4c-.2 0-.4-.2-.4-.4V4.4c0-.2.2-.4.4-.4h14.1c.3 0 .5.2.5.4v1.1c0 .3-.2.5-.4.5z"
  }), /*#__PURE__*/createElement("path", {
    d: "M4.5 16h-3c-.3 0-.5-.2-.5-.5v-1c0-.3.2-.5.5-.5h3c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5zM19.5 16h-4c-.3 0-.5-.2-.5-.5v-1c0-.3.2-.5.5-.5h4c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5z"
  }));
}

function SvgEmbeddedEntryInlineTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 22 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M12.4 17H5.6c-.3 0-.6-.3-.6-.6v-2.8c0-.3.3-.6.6-.6h6.8c.3 0 .6.3.6.6v2.8c0 .3-.3.6-.6.6zM21.5 11H.5c-.3 0-.5-.2-.5-.5v-1c0-.3.2-.5.5-.5h20.9c.4 0 .6.2.6.5v.9c0 .4-.2.6-.5.6zM3.5 16h-3c-.3 0-.5-.2-.5-.5v-1c0-.3.2-.5.5-.5h3c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5zM11.6 21H.4c-.2 0-.4-.2-.4-.4v-1.1c0-.3.2-.5.4-.5h11.1c.2 0 .4.2.4.4v1.1c.1.3-.1.5-.3.5zM14.6 6H.4C.2 6 0 5.8 0 5.6V4.4c0-.2.2-.4.4-.4h14.1c.3 0 .5.2.5.4v1.1c0 .3-.2.5-.4.5z"
  }), /*#__PURE__*/createElement("path", {
    d: "M3.5 16h-3c-.3 0-.5-.2-.5-.5v-1c0-.3.2-.5.5-.5h3c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5zM18.5 16h-4c-.3 0-.5-.2-.5-.5v-1c0-.3.2-.5.5-.5h4c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5z"
  }));
}

function SvgEntry(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), /*#__PURE__*/createElement("path", {
    d: "M8 16h8v2H8zM8 12h8v2H8z"
  }), /*#__PURE__*/createElement("path", {
    d: "M14 2H6c-1.1 0-2 .9-2 2v16c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm4 18H6V4h7v5h5v11z"
  }));
}

function SvgEntryTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 16 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h16v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M4 16h8v2H4zM4 12h8v2H4z"
  }), /*#__PURE__*/createElement("path", {
    d: "M10 2H2C.9 2 0 2.9 0 4v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V8l-6-6zm4 18H2V4h7v5h5v11z"
  }));
}

function SvgEnvironment(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16.1 12"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M16.1,7.5l-1.7,1.7l-2.2-2.1l-1,1l2.2,2.2L11.6,12h4.5V7.5z M16.1,4.5V0h-4.5l1.7,1.7L9.8,5.2H4.1v1.5h6.3l4-4L16.1,4.5z"
  }));
}

function SvgEnvironmentAlias(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 16.1 12"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M16.1,7.5l-1.7,1.7l-2.2-2.1l-1,1l2.2,2.2L11.6,12h4.5V7.5z M16.1,4.5V0h-4.5l1.7,1.7L9.8,5.2H4.1v1.5h6.3l4-4L16.1,4.5z"
  }), /*#__PURE__*/createElement("g", null, /*#__PURE__*/createElement("path", {
    d: "M6,12c-3.3,0-6-2.7-6-6s2.7-6,6-6c1.6,0,3.1,0.6,4.3,1.8L9.4,2.6C8.5,1.7,7.3,1.2,6,1.2C3.4,1.2,1.2,3.4,1.2,6 s2.1,4.8,4.8,4.8c1.3,0,2.5-0.5,3.4-1.4l0.9,0.9C9.1,11.4,7.6,12,6,12z"
  })));
}

function SvgErrorCircle(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"
  }));
}

function SvgErrorCircleOutline(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }));
}

function SvgErrorCircleTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M7.5 1.5C3.4 1.5 0 4.9 0 9s3.4 7.5 7.5 7.5S15 13.1 15 9s-3.4-7.5-7.5-7.5zm.7 11.3H6.8v-1.5h1.5v1.5zm0-3H6.8V5.2h1.5v4.6z"
  }));
}

function SvgExternalLink(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    width: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M19 19H5V5h7V3H5a2 2 0 00-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgExternalLinkTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 13.5 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M12 14.2H1.5V3.8h5.2V2.2H1.5C.7 2.2 0 2.9 0 3.8v10.5c0 .8.7 1.5 1.5 1.5H12c.8 0 1.5-.7 1.5-1.5V9H12v5.2zm-3.8-12v1.5h2.7l-7.4 7.4 1.1 1.1L12 4.8v2.7h1.5V2.2H8.2z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h13.5v18H0V0z",
    fill: "none"
  }));
}

function SvgFaceHappy(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M11.99 2C6.47 2 2 6.47 2 12s4.47 10 9.99 10S22 17.53 22 12 17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm1-10.06L14.06 11l1.06-1.06L16.18 11l1.06-1.06-2.12-2.12zm-4.12 0L9.94 11 11 9.94 8.88 7.82 6.76 9.94 7.82 11zM12 17.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgFaceHappyTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M7.5 1.5C3.4 1.5 0 4.9 0 9s3.4 7.5 7.5 7.5S15 13.1 15 9s-3.4-7.5-7.5-7.5zm0 13.5c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6zm.7-7.5l.8.7.8-.8.8.8.8-.8-1.6-1.5-1.6 1.6zm-3 0l.8.7.8-.8-1.6-1.5-1.6 1.6.8.8.8-.8zm2.3 5.6c1.7 0 3.2-1.1 3.8-2.6H3.7c.6 1.5 2.1 2.6 3.8 2.6z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }));
}

function SvgFilter(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgFilterTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 13.5 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M5.2 13.5h3V12h-3v1.5zM0 4.5V6h13.5V4.5H0zm2.2 5.3h9V8.2h-9v1.6z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h13.5v18H0V0z",
    fill: "none"
  }));
}

function SvgFolder(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgFolderCreate(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M20 6h-8l-2-2H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-1 8h-3v3h-2v-3h-3v-2h3V9h2v3h3v2z"
  }));
}

function SvgFolderCreateTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M13.5 4.5h-6L6 3H1.5C.7 3 0 3.7 0 4.5v9c0 .8.7 1.5 1.5 1.5h12c.8 0 1.5-.7 1.5-1.5V6c0-.8-.7-1.5-1.5-1.5zm-.7 6h-2.2v2.2H9v-2.2H6.8V9H9V6.8h1.5V9h2.2v1.5z"
  }));
}

function SvgFolderOpen(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z"
  }));
}

function SvgFolderOpenTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M13.5 4.5h-6L6 3H1.5C.7 3 0 3.7 0 4.5v9c0 .8.7 1.5 1.5 1.5h12c.8 0 1.5-.7 1.5-1.5V6c0-.8-.7-1.5-1.5-1.5zm0 9h-12V6h12v7.5z"
  }));
}

function SvgFolderTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M6 3H1.5C.7 3 0 3.7 0 4.5v9c0 .8.7 1.5 1.5 1.5h12c.8 0 1.5-.7 1.5-1.5V6c0-.8-.7-1.5-1.5-1.5h-6L6 3z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }));
}

function SvgFormatBold(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgFormatBoldTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 10.8 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M8.6 10.8c1-.7 1.6-1.8 1.6-2.8 0-2.3-1.8-4-4-4H0v14h7c2.1 0 3.7-1.7 3.7-3.8.1-1.5-.8-2.8-2.1-3.4zM3 6.5h3c.8 0 1.5.7 1.5 1.5S6.8 9.5 6 9.5H3v-3zm3.5 9H3v-3h3.5c.8 0 1.5.7 1.5 1.5s-.7 1.5-1.5 1.5z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h10.8v24H0V0z",
    fill: "none"
  }));
}

function SvgFormatItalic(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z"
  }));
}

function SvgFormatItalicTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 12 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h12v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M4 4v3h2.2l-3.4 8H0v3h8v-3H5.8l3.4-8H12V4H4z"
  }));
}

function SvgFormatUnderlined(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z"
  }));
}

function SvgFormatUnderlinedTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 14 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h14v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M7 17c3.3 0 6-2.7 6-6V3h-2.5v8c0 1.9-1.6 3.5-3.5 3.5S3.5 12.9 3.5 11V3H1v8c0 3.3 2.7 6 6 6zm-7 2v2h14v-2H0z"
  }));
}

function SvgGift(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: 18,
    height: 18,
    viewBox: "0 0 18 18",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/createElement("g", {
    clipPath: "url(#prefix__clip0)",
    fillRule: "evenodd",
    clipRule: "evenodd"
  }, /*#__PURE__*/createElement("path", {
    d: "M3 9.25a.75.75 0 01.75.75v6.75h10.5V10a.75.75 0 011.5 0v7.5a.75.75 0 01-.75.75H3a.75.75 0 01-.75-.75V10A.75.75 0 013 9.25z"
  }), /*#__PURE__*/createElement("path", {
    d: "M.75 6.25a.75.75 0 01.75-.75h15a.75.75 0 01.75.75V10a.75.75 0 01-.75.75h-15A.75.75 0 01.75 10V6.25zm1.5.75v2.25h13.5V7H2.25z"
  }), /*#__PURE__*/createElement("path", {
    d: "M9 5.5a.75.75 0 01.75.75V17.5a.75.75 0 01-1.5 0V6.25A.75.75 0 019 5.5z"
  }), /*#__PURE__*/createElement("path", {
    d: "M5.625 3.25a1.125 1.125 0 000 2.25h2.366a6.15 6.15 0 00-.351-.764C7.168 3.88 6.52 3.25 5.625 3.25zM9 6.25l.735-.148v-.006l-.003-.012-.01-.04a7.962 7.962 0 00-.166-.607 8.02 8.02 0 00-.602-1.423c-.56-1.018-1.6-2.264-3.329-2.264a2.625 2.625 0 000 5.25H9a.75.75 0 00.735-.897L9 6.25z"
  }), /*#__PURE__*/createElement("path", {
    d: "M9.046 4.014c.56-1.018 1.6-2.264 3.329-2.264a2.625 2.625 0 010 5.25H9a.75.75 0 01-.735-.897L9 6.25a101.52 101.52 0 01-.735-.148v-.006l.003-.012.01-.04a7.977 7.977 0 01.166-.607c.12-.382.314-.899.602-1.423zm.963 1.486h2.366a1.125 1.125 0 000-2.25c-.895 0-1.543.629-2.015 1.486a6.15 6.15 0 00-.35.764zm-.274.898z"
  })), /*#__PURE__*/createElement("defs", null, /*#__PURE__*/createElement("clipPath", {
    id: "prefix__clip0"
  }, /*#__PURE__*/createElement("path", {
    fill: "#fff",
    d: "M0 0h18v18H0z"
  }))));
}

function SvgHeading(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M14.8 5v5.5H9.2V5H6.4v14h2.8v-6.1h5.6V19h2.8V5z"
  }));
}

function SvgHeadingOne(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M11.7 5v5.5H6.1V5H3.3v14h2.8v-6.1h5.6V19h2.8V5zM18.6 19v-6.3L17.1 14l-1-1.4 2.8-2.1h1.8V19h-2.1z"
  }));
}

function SvgHeadingOneTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 13 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h13v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M6.3 3.8v4.1H2.1V3.8H0V14.2h2.1V9.7h4.2v4.5h2.1V3.8zM11.5 14.2V9.5l-1.1 1-.8-1 2.1-1.6H13v6.4h-1.5z"
  }));
}

function SvgHeadingTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 8.4 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h8.4v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M6.3 3.8v4.1H2.1V3.8H0V14.2h2.1V9.7h4.2v4.5h2.1V3.8z"
  }));
}

function SvgHeadingTwo(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M10.8 5v5.5H5.3V5H2.4v14h2.9v-6.1h5.5V19h2.9V5zM15.4 19v-1.7l3.3-3c.2-.2.4-.4.5-.6.1-.2.2-.4.2-.7 0-.3-.1-.6-.3-.7-.2-.2-.4-.3-.8-.3-.3 0-.6.1-.8.4-.2.2-.3.5-.4.9l-1.9-.3c0-.4.2-.8.4-1.2.2-.3.4-.6.7-.9.3-.2.6-.4 1-.5s.8-.2 1.2-.2c.4 0 .8.1 1.1.2.4.1.7.3 1 .5.3.2.5.5.7.8.2.3.3.7.3 1.2 0 .3 0 .6-.1.8-.1.2-.2.5-.3.7-.1.2-.3.4-.5.6-.2.2-.4.4-.6.5l-2 1.8h3.5V19h-6.2z"
  }));
}

function SvgHeadingTwoTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 14.4 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h14.4v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M6.3 3.8v4.1H2.2V3.8H0V14.2h2.2V9.7h4.1v4.5h2.2V3.8zM9.8 14.2V13l2.5-2.2c.2-.1.3-.3.4-.4.1-.2.2-.3.2-.5s-.1-.4-.2-.5c-.3-.3-.5-.4-.8-.4-.2 0-.5.1-.6.3-.1.1-.2.4-.3.7l-1.4-.2c0-.3.2-.6.3-.9.1-.2.3-.5.5-.7.2-.1.5-.3.8-.4.3-.1.6-.1.9-.1.3 0 .6.1.8.1.3.1.5.2.8.4.2.2.4.4.5.6s.2.5.2.9c0 .2 0 .5-.1.6-.1.1-.2.4-.2.5-.1.2-.2.3-.4.5-.2.1-.3.3-.4.4L11.8 13h2.6v1.3H9.8z"
  }));
}

function SvgHelpCircle(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z"
  }));
}

function SvgHelpCircleInverted(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "22",
    height: "22",
    viewBox: "0 0 22 22"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z",
    stroke: "white",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M11.545 12.4267L11.545 12.4267L11.5452 12.424C11.5617 12.1009 11.6251 11.8675 11.7824 11.6526C11.9426 11.4337 12.2066 11.225 12.6445 10.967L12.6451 10.9667C13.5697 10.4133 14.1293 9.65976 14.1293 8.55664C14.1293 7.77191 13.8071 7.1048 13.2522 6.63544C12.6986 6.16714 11.919 5.9 11.0078 5.9C9.61504 5.9 8.53153 6.48625 8.09344 7.47641C7.96552 7.75376 7.9 8.00709 7.9 8.31738C7.9 8.54471 7.96551 8.73994 8.10111 8.87863C8.23704 9.01765 8.43116 9.0873 8.66309 9.0873C8.84907 9.0873 9.01208 9.0461 9.14782 8.9371C9.28176 8.82955 9.37718 8.66547 9.44869 8.44379L9.44872 8.4438L9.44947 8.44125C9.55376 8.08601 9.73402 7.81728 9.9808 7.63674C10.2278 7.45603 10.5494 7.35781 10.9463 7.35781C11.3808 7.35781 11.7386 7.48996 11.9864 7.71024C12.2333 7.92968 12.3775 8.24212 12.3775 8.61816C12.3775 8.93652 12.3083 9.18522 12.1457 9.41384C11.9806 9.64593 11.7141 9.8647 11.3048 10.1116C10.8536 10.3824 10.5122 10.67 10.2841 11.0077C10.0546 11.3474 9.94395 11.7314 9.94395 12.1865V12.3438C9.94395 12.5858 10.0081 12.8107 10.1466 12.9769C10.2871 13.1456 10.496 13.2436 10.7617 13.2436C11.0072 13.2436 11.1991 13.1631 11.3325 13.0113C11.463 12.8626 11.527 12.6575 11.545 12.4267ZM10.7617 16.1488C11.3276 16.1488 11.7641 15.7232 11.7641 15.167C11.7641 14.6107 11.3276 14.1852 10.7617 14.1852C10.2095 14.1852 9.76621 14.6107 9.76621 15.167C9.76621 15.7232 10.2095 16.1488 10.7617 16.1488Z",
    fill: "white",
    stroke: "white",
    strokeWidth: "0.2"
  }));
}

function SvgHelpCircleTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M7.5 1.5C3.4 1.5 0 4.9 0 9s3.4 7.5 7.5 7.5S15 13.1 15 9s-3.4-7.5-7.5-7.5zm.7 12.7H6.8v-1.5h1.5v1.5zm1.6-5.8l-.7.7c-.5.5-.9 1-.9 2.1H6.8v-.4c0-.8.3-1.6.9-2.1l.9-.9c.2-.3.4-.6.4-1 0-.8-.7-1.5-1.5-1.5S6 5.9 6 6.8H4.5c0-1.7 1.3-3 3-3s3 1.3 3 3c0 .6-.3 1.2-.7 1.6z"
  }));
}

function SvgHorizontalRule(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M3.6 11.2h16.8v1.7H3.6z"
  }));
}

function SvgHorizontalRuleTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 12.6 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h12.6v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 8.4h12.6v1.3H0z"
  }));
}

function SvgInfoCircle(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"
  }));
}

function SvgInfoCircleTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M7.5 1.5C3.4 1.5 0 4.9 0 9s3.4 7.5 7.5 7.5S15 13.1 15 9s-3.4-7.5-7.5-7.5zm.7 11.3H6.8V8.2h1.5v4.6zm0-6H6.8V5.2h1.5v1.6z"
  }));
}

function SvgLanguage(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 24 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95a15.65 15.65 0 00-1.38-3.56A8.03 8.03 0 0118.92 8zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56A7.987 7.987 0 015.08 16zm2.95-8H5.08a7.987 7.987 0 014.33-3.56A15.65 15.65 0 008.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95a8.03 8.03 0 01-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z"
  }));
}

function SvgLink(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    width: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"
  }));
}

function SvgLinkAlternate(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "m10.4744 13.5256c.4436.4219.4436 1.1144 0 1.5363-.4219.422-1.11438.422-1.53634 0-2.10982-2.1098-2.10982-5.53958 0-7.6494l3.83014-3.83014c2.1098-2.10981 5.5396-2.10981 7.6494 0 2.1099 2.10982 2.1099 5.53963 0 7.64944l-1.6121 1.6121c.0108-.8872-.1298-1.7744-.4328-2.6183l.5086-.51935c1.2767-1.26589 1.2767-3.32161 0-4.58751-1.2659-1.27671-3.3217-1.27671-4.5875 0l-3.8194 3.81932c-1.27667 1.26584-1.27667 3.32164 0 4.58754zm3.0512-4.58754c.4219-.42197 1.1144-.42197 1.5363 0 2.1099 2.10984 2.1099 5.53964 0 7.64944l-3.8301 3.8301c-2.10981 2.1099-5.53962 2.1099-7.64944 0-2.10981-2.1098-2.10981-5.5396 0-7.6494l1.61212-1.6121c-.01082.8872.12984 1.7744.43279 2.6291l-.50853.5086c-1.27671 1.2658-1.27671 3.3216 0 4.5875 1.2659 1.2767 3.32162 1.2767 4.58751 0l3.81935-3.8194c1.2767-1.2658 1.2767-3.3216 0-4.5875-.4436-.4219-.4436-1.11438 0-1.53634z"
  }));
}

function SvgLinkTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M1.4 9c0-1.3 1-2.3 2.3-2.3h3V5.2h-3C1.7 5.2 0 6.9 0 9s1.7 3.8 3.8 3.8h3v-1.4h-3c-1.3-.1-2.4-1.1-2.4-2.4zm3.1.8h6V8.2h-6v1.6zm6.7-4.6h-3v1.4h3c1.3 0 2.3 1 2.3 2.3s-1 2.3-2.3 2.3h-3v1.4h3c2.1 0 3.8-1.7 3.8-3.8s-1.7-3.6-3.8-3.6z"
  }));
}

function SvgListBulleted(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"
  }), /*#__PURE__*/createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
}

function SvgListBulletedTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 13.9 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M1.1 7.9C.5 7.9 0 8.4 0 9s.5 1.1 1.1 1.1S2.2 9.6 2.2 9s-.5-1.1-1.1-1.1zm0-4.5C.5 3.4 0 3.9 0 4.5s.5 1.1 1.1 1.1 1.1-.5 1.1-1.1-.5-1.1-1.1-1.1zm0 9c-.6 0-1.1.5-1.1 1.1s.5 1.1 1.1 1.1 1.1-.5 1.1-1.1-.5-1.1-1.1-1.1zm2.3 1.8h10.5v-1.5H3.4v1.5zm0-4.4h10.5V8.2H3.4v1.6zm0-6v1.5h10.5V3.8H3.4z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h13.9v18H0V0z",
    fill: "none"
  }));
}

function SvgListNumbered(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgListNumberedTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 14.2 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 12.8h1.5v.4H.8v.8h.8v.4H0v.6h2.2v-3H0v.8zM.8 6h.8V3H0v.8h.8V6zM0 8.2h1.3L0 9.8v.7h2.2v-.7H.9l1.3-1.6v-.7H0v.7zm3.8-4.4v1.5h10.5V3.8H3.8zm0 10.4h10.5v-1.5H3.8v1.5zm0-4.4h10.5V8.2H3.8v1.6z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h14.2v18H0V0z",
    fill: "none"
  }));
}

function SvgLock(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"
  }));
}

function SvgLockTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 12 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h12v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M10.5 6h-.7V4.5C9.8 2.4 8.1.7 6 .7S2.2 2.4 2.2 4.5V6h-.7C.7 6 0 6.7 0 7.5V15c0 .8.7 1.5 1.5 1.5h9c.8 0 1.5-.7 1.5-1.5V7.5c0-.8-.7-1.5-1.5-1.5zM6 12.8c-.8 0-1.5-.7-1.5-1.5S5.2 9.8 6 9.8s1.5.7 1.5 1.5-.7 1.5-1.5 1.5zM8.3 6H3.7V4.5c0-1.3 1-2.3 2.3-2.3s2.3 1 2.3 2.3V6z"
  }));
}

function SvgLogout(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), /*#__PURE__*/createElement("path", {
    clipRule: "evenodd",
    d: "M5 4a1 1 0 00-1 1v14a1 1 0 001 1h4a1 1 0 110 2H5a3 3 0 01-3-3V5a3 3 0 013-3h4a1 1 0 010 2H5zM15.293 6.293a1 1 0 011.414 0l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414-1.414L19.586 12l-4.293-4.293a1 1 0 010-1.414z"
  }), /*#__PURE__*/createElement("path", {
    clipRule: "evenodd",
    d: "M8 12a1 1 0 011-1h12a1 1 0 110 2H9a1 1 0 01-1-1z"
  }));
}

function SvgLooksOne(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14h-2V9h-2V7h4v10z"
  }));
}

function SvgLooksOneTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 18 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h18v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M16 3H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H9V9H7V7h4v10z"
  }));
}

function SvgLooksTwo(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 8a2 2 0 01-2 2h-2v2h4v2H9v-4a2 2 0 012-2h2V9H9V7h4a2 2 0 012 2v2z"
  }));
}

function SvgLooksTwoTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 18 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h18v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M16 3H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 8c0 1.1-.9 2-2 2H8v2h4v2H6v-4c0-1.1.9-2 2-2h2V9H6V7h4c1.1 0 2 .9 2 2v2z"
  }));
}

function SvgMenu(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
  }));
}

function SvgMenuTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 13.5 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h13.5v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 13.5h13.5V12H0v1.5zm0-3.7h13.5V8.2H0v1.6zm0-5.3V6h13.5V4.5H0z"
  }));
}

function SvgMenuTrimmed$1(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none"
  }, props), /*#__PURE__*/createElement("rect", {
    x: "4",
    y: "11",
    width: "16",
    height: "2",
    rx: "1"
  }));
}

function SvgMoreHorizontal(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
  }));
}

function SvgMoreHorizontalTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 12 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h12v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M1.5 7.5C.7 7.5 0 8.2 0 9s.7 1.5 1.5 1.5S3 9.8 3 9s-.7-1.5-1.5-1.5zm9 0C9.7 7.5 9 8.2 9 9s.7 1.5 1.5 1.5S12 9.8 12 9s-.7-1.5-1.5-1.5zM6 7.5c-.8 0-1.5.7-1.5 1.5s.7 1.5 1.5 1.5S7.5 9.8 7.5 9 6.8 7.5 6 7.5z"
  }));
}

function SvgMoreVertical(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
  }));
}

function SvgMoreVerticalTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 3 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h3v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M1.5 6C2.3 6 3 5.3 3 4.5S2.3 3 1.5 3 0 3.7 0 4.5.7 6 1.5 6zm0 1.5C.7 7.5 0 8.2 0 9s.7 1.5 1.5 1.5S3 9.8 3 9s-.7-1.5-1.5-1.5zm0 4.5c-.8 0-1.5.7-1.5 1.5S.7 15 1.5 15 3 14.3 3 13.5 2.3 12 1.5 12z"
  }));
}

function SvgPerson(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
  }));
}

function SvgPlus(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgPlusCircle(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"
  }));
}

function SvgPlusCircleTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M7.5 1.5C3.4 1.5 0 4.9 0 9s3.4 7.5 7.5 7.5S15 13.1 15 9s-3.4-7.5-7.5-7.5zm3.7 8.3h-3v3H6.8v-3h-3V8.2h3v-3h1.5v3h3v1.6z"
  }));
}

function SvgPlusTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 10.5 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M10.5 9.8H6v4.5H4.5V9.8H0V8.2h4.5V3.8H6v4.5h4.5v1.5z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h10.5v18H0V0z",
    fill: "none"
  }));
}

function SvgPreview(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 24 24",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
  }));
}

function SvgPuzzle(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M9.793.005a3.493 3.493 0 013.487 3.28l.006.212v.704h3.326a2.972 2.972 0 011.803.614l.15.123.143.134c.51.51.816 1.186.865 1.901l.008.196-.002 3.323h.703c.784 0 1.54.264 2.152.742l.163.135.155.147a3.494 3.494 0 01-2.258 5.957l-.212.007h-.704v3.325a2.974 2.974 0 01-.613 1.802l-.124.15-.134.144a2.974 2.974 0 01-1.9.865l-.196.007h-4.857V21.34a1.962 1.962 0 00-3.911-.176l-.012.166v2.443H2.975A2.974 2.974 0 01.012 21l-.007-.196v-4.856h2.433a1.962 1.962 0 00.176-3.91l-.166-.014H.018V7.17a2.965 2.965 0 012.76-2.961l.196-.007H6.3V3.5c0-.785.264-1.542.741-2.152l.136-.163.147-.155A3.493 3.493 0 019.793.005zm0 1.74c-.908 0-1.665.693-1.745 1.597l-.008.154V5.94H2.974c-.628 0-1.149.484-1.21 1.103l-.007.125-.001 3.115h.692c.913 0 1.791.336 2.468.941l.152.144a3.704 3.704 0 01-2.41 6.315l-.209.005h-.702v3.116c0 .634.492 1.163 1.11 1.222l.118.005H6.09v-.703c0-.912.338-1.789.941-2.465l.145-.152a3.704 3.704 0 016.314 2.408l.006.21v.702h3.114c.631 0 1.157-.487 1.22-1.103l.007-.124v-5.065h2.445a1.752 1.752 0 00.153-3.499l-.153-.005h-2.446V7.168c0-.634-.49-1.163-1.108-1.223l-.118-.006h-5.067V3.496a1.75 1.75 0 00-1.75-1.751z"
  }));
}

function SvgQuote(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgQuoteTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 10.5 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M.8 12.8H3l1.5-3V5.2H0v4.5h2.2L.8 12.8zm6 0H9l1.5-3V5.2H6v4.5h2.2l-1.4 3.1z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h10.5v18H0V0z",
    fill: "none"
  }));
}

function SvgReceipt(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M18 17H6v-2h12v2zm0-4H6v-2h12v2zm0-4H6V7h12v2zM3 22l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2v20z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgReceiptTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 13.5 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M11.2 12.8h-9v-1.5h9v1.5zm0-3h-9V8.2h9v1.6zm0-3h-9V5.2h9v1.6zM0 16.5l1.1-1.1 1.1 1.1 1.1-1.1 1.1 1.1 1.1-1.1 1.1 1.1 1.1-1.1L9 16.5l1.1-1.1 1.1 1.1 1.1-1.1 1.1 1.1v-15l-1.1 1.1-1.1-1.1-1.1 1.1L9 1.5 7.9 2.6 6.8 1.5 5.6 2.6 4.5 1.5 3.4 2.6 2.2 1.5 1.1 2.6 0 1.5v15z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h13.5v18H0V0z",
    fill: "none"
  }));
}

function SvgReferences(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), /*#__PURE__*/createElement("path", {
    d: "M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3h7zM7 9H4V5h3v4zm10 6h3v4h-3v-4zm0-10h3v4h-3V5z"
  }));
}

function SvgRelease(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M3.426 1.5C3.865.569 4.68 0 5.689 0h12.622c.995 0 1.95.666 2.294 1.57v.003s2.262 5.71 2.329 6.069C23 8 23 8 23 8.455v13.09C23 22.857 21.902 24 20.571 24H3.43C2.097 24 1 22.856 1 21.546V8.455C1 8 1 8 1.066 7.642c.067-.358 2.33-6.074 2.33-6.074a.997.997 0 01.03-.068zM3.838 6H11V2H5.69c-.152 0-.302.046-.441.324L3.839 6zM13 2v4h7.162l-1.426-3.715-.002-.006C18.688 2.156 18.48 2 18.311 2H13zM3.429 8C3.236 8 3 8.214 3 8.455v13.09c0 .241.236.455.429.455H20.57c.193 0 .429-.214.429-.454V8.455c0-.241-.236-.455-.429-.455H3.43zM13 19a1 1 0 011-1h5a1 1 0 110 2h-5a1 1 0 01-1-1z"
  }));
}

function SvgReleaseTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 22 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M2.426 1.5C2.865.569 3.68 0 4.689 0h12.622c.995 0 1.95.666 2.294 1.57v.003s2.262 5.71 2.329 6.069C22 8 22 8 22 8.455v13.09C22 22.857 20.902 24 19.571 24H2.43C1.097 24 0 22.856 0 21.546V8.455C0 8 0 8 .066 7.642c.067-.358 2.33-6.074 2.33-6.074a.997.997 0 01.03-.068zM2.838 6H10V2H4.69c-.152 0-.302.046-.441.324L2.839 6zM12 2v4h7.162l-1.426-3.715-.002-.006C17.688 2.156 17.48 2 17.311 2H12zM2.429 8C2.236 8 2 8.214 2 8.455v13.09c0 .241.236.455.429.455H19.57c.193 0 .429-.214.429-.454V8.455c0-.241-.236-.455-.429-.455H2.43zM12 19a1 1 0 011-1h5a1 1 0 110 2h-5a1 1 0 01-1-1z"
  }));
}

function SvgSearch(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgSearchTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 13.1 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M9.4 10.5h-.6l-.2-.2c.7-.9 1.2-2 1.2-3.2 0-2.7-2.2-4.9-4.9-4.9S0 4.4 0 7.1 2.2 12 4.9 12c1.2 0 2.3-.4 3.2-1.2l.1.2v.6l3.8 3.7 1.1-1.1-3.7-3.7zm-4.5 0C3 10.5 1.5 9 1.5 7.1S3 3.8 4.9 3.8s3.4 1.5 3.4 3.4-1.6 3.3-3.4 3.3z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h13.1v18H0V0z",
    fill: "none"
  }));
}

function SvgSettings(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65A.488.488 0 0014 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z"
  }));
}

function SvgSettingsTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 14.6 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h14.6v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M12.9 9.7c0-.2.1-.5.1-.7s0-.5-.1-.7L14.5 7c.1-.1.2-.3.1-.5L13 4c-.1-.2-.3-.2-.5-.2l-1.9.8c-.3-.4-.7-.6-1.2-.8l-.3-2c0-.2-.2-.3-.4-.3h-3c-.2 0-.3.1-.4.3l-.3 2c-.3.2-.7.4-1.1.7L2 3.8c-.2-.1-.4 0-.4.2L.1 6.5c-.1.2-.1.4 0 .5l1.6 1.2c0 .2-.1.5-.1.7s0 .5.1.7L.1 11c-.1.1-.1.3 0 .5L1.6 14c.1.2.3.2.5.2l1.9-.8c.4.3.8.5 1.3.7l.3 2c0 .2.2.3.4.3h3c.2 0 .3-.1.4-.3l.3-2c.5-.2.9-.4 1.3-.7l1.9.8c.2.1.4 0 .5-.2l1.5-2.6c.1-.2.1-.4-.1-.5l-1.9-1.2zm-5.6 1.9c-1.4 0-2.6-1.2-2.6-2.6s1.2-2.6 2.6-2.6S9.9 7.6 9.9 9s-1.2 2.6-2.6 2.6z"
  }));
}

function SvgShoppingCart(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49A1.003 1.003 0 0020 4H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgShoppingCartTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M4.5 13.5c-.8 0-1.5.7-1.5 1.5s.7 1.5 1.5 1.5S6 15.8 6 15s-.7-1.5-1.5-1.5zM0 1.5V3h1.5l2.7 5.7-1 1.8c-.1.2-.2.5-.2.7 0 .8.7 1.5 1.5 1.5h9v-1.5H4.8c-.1 0-.2-.1-.2-.2v-.1l.7-1.2h5.6c.6 0 1.1-.3 1.3-.8L14.9 4c.1 0 .1-.1.1-.2 0-.5-.3-.8-.8-.8h-11l-.7-1.5H0zm12 12c-.8 0-1.5.7-1.5 1.5s.7 1.5 1.5 1.5 1.5-.7 1.5-1.5-.7-1.5-1.5-1.5z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }));
}

function SvgStar(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
}

function SvgStarTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 15 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M7.5 13l4.6 2.8-1.2-5.3L15 6.9l-5.4-.4-2.1-5-2.1 5-5.4.4 4.1 3.5-1.2 5.3L7.5 13z"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 0h15v18H0V0z",
    fill: "none"
  }));
}

function SvgCode$1(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("g", null, /*#__PURE__*/createElement("rect", {
    fill: "none",
    height: "24",
    width: "24"
  }), /*#__PURE__*/createElement("path", {
    d: "M22,18h-2v1h3v1h-4v-2c0-0.55,0.45-1,1-1h2v-1h-3v-1h3c0.55,0,1,0.45,1,1v1C23,17.55,22.55,18,22,18z M5.88,18h2.66 l3.4-5.42h0.12l3.4,5.42h2.66l-4.65-7.27L17.81,4h-2.68l-3.07,4.99h-0.12L8.85,4H6.19l4.32,6.73L5.88,18z"
  })));
}

function SvgCode$2(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 13 18"
  }, props), /*#__PURE__*/createElement("g", null, /*#__PURE__*/createElement("rect", {
    fill: "none",
    height: "24",
    width: "24"
  }), /*#__PURE__*/createElement("path", {
    d: "M22,18h-2v1h3v1h-4v-2c0-0.55,0.45-1,1-1h2v-1h-3v-1h3c0.55,0,1,0.45,1,1v1C23,17.55,22.55,18,22,18z M5.88,18h2.66 l3.4-5.42h0.12l3.4,5.42h2.66l-4.65-7.27L17.81,4h-2.68l-3.07,4.99h-0.12L8.85,4H6.19l4.32,6.73L5.88,18z"
  })));
}

function SvgCode$3(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("g", null, /*#__PURE__*/createElement("rect", {
    fill: "none",
    height: "24",
    width: "24",
    x: "0",
    y: "0"
  }), /*#__PURE__*/createElement("path", {
    d: "M22,7h-2v1h3v1h-4V7c0-0.55,0.45-1,1-1h2V5h-3V4h3c0.55,0,1,0.45,1,1v1C23,6.55,22.55,7,22,7z M5.88,20h2.66l3.4-5.42h0.12 l3.4,5.42h2.66l-4.65-7.27L17.81,6h-2.68l-3.07,4.99h-0.12L8.85,6H6.19l4.32,6.73L5.88,20z"
  })));
}

function SvgCode$4(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 13 18"
  }, props), /*#__PURE__*/createElement("g", null, /*#__PURE__*/createElement("rect", {
    fill: "none",
    height: "24",
    width: "24",
    x: "0",
    y: "0"
  }), /*#__PURE__*/createElement("path", {
    d: "M22,7h-2v1h3v1h-4V7c0-0.55,0.45-1,1-1h2V5h-3V4h3c0.55,0,1,0.45,1,1v1C23,6.55,22.55,7,22,7z M5.88,20h2.66l3.4-5.42h0.12 l3.4,5.42h2.66l-4.65-7.27L17.81,6h-2.68l-3.07,4.99h-0.12L8.85,6H6.19l4.32,6.73L5.88,20z"
  })));
}

function SvgAsset$1(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h10v4h8v10z"
  }));
}

function SvgTable(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M5,4H19A2,2 0 0,1 21,6V18A2,2 0 0,1 19,20H5A2,2 0 0,1 3,18V6A2,2 0 0,1 5,4M5,8V12H11V8H5M13,8V12H19V8H13M5,14V18H11V14H5M13,14V18H19V14H13Z"
  }));
}

function SvgTags(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58s1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41s-.23-1.06-.59-1.42zM13 20.01L4 11V4h7v-.01l9 9-7 7.02z"
  }), /*#__PURE__*/createElement("circle", {
    cx: 6.5,
    cy: 6.5,
    r: 1.5
  }));
}

function SvgText(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("defs", null, /*#__PURE__*/createElement("path", {
    d: "M24 24H0V0h24v24z",
    id: "Text_svg__a"
  })), /*#__PURE__*/createElement("clipPath", {
    id: "Text_svg__b"
  }, /*#__PURE__*/createElement("use", {
    overflow: "visible",
    xlinkHref: "#Text_svg__a"
  })), /*#__PURE__*/createElement("path", {
    clipPath: "url(#Text_svg__b)",
    d: "M2.5 4v3h5v12h3V7h5V4h-13zm19 5h-9v3h3v7h3v-7h3V9z"
  }));
}

function SvgTextTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 14.2 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("defs", null, /*#__PURE__*/createElement("path", {
    id: "TextTrimmed_svg__a",
    d: "M0 0h14.2v18H0z"
  })), /*#__PURE__*/createElement("clipPath", {
    id: "TextTrimmed_svg__b"
  }, /*#__PURE__*/createElement("use", {
    xlinkHref: "#TextTrimmed_svg__a",
    overflow: "visible"
  })), /*#__PURE__*/createElement("path", {
    d: "M0 3v2.2h3.8v9H6v-9h3.8V3H0zm14.2 3.8H7.5V9h2.2v5.2H12V9h2.2V6.8z",
    clipPath: "url(#TextTrimmed_svg__b)"
  }));
}

function SvgThumbDown(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v1.91l.01.01L1 14c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"
  }));
}

function SvgThumbDownTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 16.5 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h16.5v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M10.5 2.2H3.8c-.6 0-1.2.4-1.4.9L.1 8.5c-.1.1-.1.3-.1.5v1.5c0 .8.7 1.5 1.5 1.5h4.7l-.7 3.4v.2c0 .3.1.6.3.8l.8.8 4.9-4.9c.3-.3.4-.6.4-1.1V3.8c.1-.9-.6-1.6-1.4-1.6zm3 0v9h3v-9h-3z"
  }));
}

function SvgThumbUp(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z"
  }));
}

function SvgThumbUpTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 16.5 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h16.5v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 15.8h3v-9H0v9zm16.5-8.3c0-.8-.7-1.5-1.5-1.5h-4.7l.7-3.4v-.2c0-.3-.1-.6-.3-.8L9.9.8l-5 4.9c-.2.3-.4.6-.4 1.1v7.5c0 .8.7 1.5 1.5 1.5h6.8c.6 0 1.2-.4 1.4-.9l2.3-5.3c.1-.2.1-.4.1-.5V7.5h-.1z"
  }));
}

function SvgUsers(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z"
  }));
}

function SvgUsersTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 16.5 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h16.5v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M11.2 8.2c1.2 0 2.2-1 2.2-2.2s-1-2.2-2.2-2.2S9 4.8 9 6s1 2.2 2.2 2.2zm-6 0c1.2 0 2.2-1 2.2-2.2s-1-2.2-2.2-2.2S3 4.8 3 6s1 2.2 2.2 2.2zm0 1.6c-1.7 0-5.2.8-5.2 2.6v1.9h10.5v-1.9c0-1.8-3.5-2.6-5.3-2.6zm6 0h-.7c.9.6 1.5 1.5 1.5 2.6v1.9h4.5v-1.9c0-1.8-3.5-2.6-5.3-2.6z"
  }));
}

function SvgWarning(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    height: "1em",
    viewBox: "0 0 24 24",
    width: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
  }));
}

function SvgWarningTrimmed(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 16.5 18",
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M0 0h16.5v18H0V0z",
    fill: "none"
  }), /*#__PURE__*/createElement("path", {
    d: "M0 15.8h16.5L8.2 1.5 0 15.8zm9-2.3H7.5V12H9v1.5zm0-3H7.5v-3H9v3z"
  }));
}

function SvgWorkflows(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("path", {
    d: "M18.6 4l-4.4 4.533h3.3v7.934c0 1.246-.99 2.266-2.2 2.266s-2.2-1.02-2.2-2.266V8.533C13.1 6.03 11.131 4 8.7 4S4.3 6.029 4.3 8.533v7.934H1L5.4 21l4.4-4.533H6.5V8.533c0-1.246.99-2.266 2.2-2.266s2.2 1.02 2.2 2.266v7.934C10.9 18.97 12.869 21 15.3 21s4.4-2.029 4.4-4.533V8.533H23z"
  }));
}

var _excluded = ["className", "icon", "size", "color", "testId"];
var styles = {
  "Icon": "Icon__Icon___38Epv",
  "Icon--tiny": "Icon__Icon--tiny___V4Pr9",
  "Icon--small": "Icon__Icon--small___1yGZK",
  "Icon--medium": "Icon__Icon--medium___3Pezi",
  "Icon--large": "Icon__Icon--large___215R6",
  "Icon--trimmed": "Icon__Icon--trimmed___1CmZL",
  "Icon--primary": "Icon__Icon--primary___3M4Il",
  "Icon--positive": "Icon__Icon--positive___1V4nP",
  "Icon--negative": "Icon__Icon--negative___1dled",
  "Icon--warning": "Icon__Icon--warning___39Bnz",
  "Icon--secondary": "Icon__Icon--secondary___1ztcw",
  "Icon--muted": "Icon__Icon--muted___3egnD",
  "Icon--white": "Icon__Icon--white___3GVPJ"
};
var iconComponents = {
  ArrowDown: SvgArrowDown,
  ArrowDownTrimmed: SvgArrowDownTrimmed,
  ArrowUp: SvgArrowUp,
  ArrowUpTrimmed: SvgArrowUpTrimmed,
  Asset: SvgAsset,
  AssetTrimmed: SvgAssetTrimmed,
  Calendar: SvgCalendar,
  ChatBubble: SvgChatBubble,
  ChatBubbleTrimmed: SvgChatBubbleTrimmed,
  CheckCircle: SvgCheckCircle,
  CheckCircleTrimmed: SvgCheckCircleTrimmed,
  ChevronDown: SvgChevronDown,
  ChevronDownTrimmed: SvgChevronDownTrimmed,
  ChevronLeft: SvgChevronLeft,
  ChevronLeftTrimmed: SvgChevronLeftTrimmed,
  ChevronRight: SvgChevronRight,
  ChevronRightTrimmed: SvgChevronRightTrimmed,
  ChevronUp: SvgChevronUp,
  ChevronUpTrimmed: SvgChevronUpTrimmed,
  Clock: SvgClock,
  ClockTrimmed: SvgClockTrimmed,
  Close: SvgClose,
  CloseTrimmed: SvgCloseTrimmed,
  CloudUpload: CloudUpload,
  Code: SvgCode,
  CodeTrimmed: SvgCodeTrimmed,
  Copy: SvgCopy,
  CopyTrimmed: SvgCopyTrimmed,
  Cycle: SvgCycle,
  CycleTrimmed: SvgCycleTrimmed,
  Delete: SvgDelete,
  DeleteTrimmed: SvgDeleteTrimmed,
  Done: SvgDone,
  DoubleArrow: SvgDoubleArrow,
  Download: SvgDownload,
  DownloadTrimmed: SvgDownloadTrimmed,
  Drag: SvgDrag,
  DragTrimmed: SvgDragTrimmed,
  Edit: SvgEdit,
  EditTrimmed: SvgEditTrimmed,
  EmbeddedEntryBlock: SvgEmbeddedEntryBlock,
  EmbeddedEntryBlockTrimmed: SvgEmbeddedEntryBlockTrimmed,
  EmbeddedEntryInline: SvgEmbeddedEntryInline,
  EmbeddedEntryInlineTrimmed: SvgEmbeddedEntryInlineTrimmed,
  Entry: SvgEntry,
  EntryTrimmed: SvgEntryTrimmed,
  Environment: SvgEnvironment,
  EnvironmentAlias: SvgEnvironmentAlias,
  ErrorCircle: SvgErrorCircle,
  ErrorCircleOutline: SvgErrorCircleOutline,
  ErrorCircleTrimmed: SvgErrorCircleTrimmed,
  ExternalLink: SvgExternalLink,
  ExternalLinkTrimmed: SvgExternalLinkTrimmed,
  FaceHappy: SvgFaceHappy,
  FaceHappyTrimmed: SvgFaceHappyTrimmed,
  Filter: SvgFilter,
  FilterTrimmed: SvgFilterTrimmed,
  Folder: SvgFolder,
  FolderCreate: SvgFolderCreate,
  FolderCreateTrimmed: SvgFolderCreateTrimmed,
  FolderOpen: SvgFolderOpen,
  FolderOpenTrimmed: SvgFolderOpenTrimmed,
  FolderTrimmed: SvgFolderTrimmed,
  FormatBold: SvgFormatBold,
  FormatBoldTrimmed: SvgFormatBoldTrimmed,
  FormatItalic: SvgFormatItalic,
  FormatItalicTrimmed: SvgFormatItalicTrimmed,
  FormatUnderlined: SvgFormatUnderlined,
  FormatUnderlinedTrimmed: SvgFormatUnderlinedTrimmed,
  Gift: SvgGift,
  Heading: SvgHeading,
  HeadingOne: SvgHeadingOne,
  HeadingOneTrimmed: SvgHeadingOneTrimmed,
  HeadingTrimmed: SvgHeadingTrimmed,
  HeadingTwo: SvgHeadingTwo,
  HeadingTwoTrimmed: SvgHeadingTwoTrimmed,
  HelpCircle: SvgHelpCircle,
  HelpCircleInverted: SvgHelpCircleInverted,
  HelpCircleTrimmed: SvgHelpCircleTrimmed,
  HorizontalRule: SvgHorizontalRule,
  HorizontalRuleTrimmed: SvgHorizontalRuleTrimmed,
  InfoCircle: SvgInfoCircle,
  InfoCircleTrimmed: SvgInfoCircleTrimmed,
  Language: SvgLanguage,
  Link: SvgLink,
  LinkAlternate: SvgLinkAlternate,
  LinkTrimmed: SvgLinkTrimmed,
  ListBulleted: SvgListBulleted,
  ListBulletedTrimmed: SvgListBulletedTrimmed,
  ListNumbered: SvgListNumbered,
  ListNumberedTrimmed: SvgListNumberedTrimmed,
  Lock: SvgLock,
  LockTrimmed: SvgLockTrimmed,
  Logout: SvgLogout,
  LooksOne: SvgLooksOne,
  LooksOneTrimmed: SvgLooksOneTrimmed,
  LooksTwo: SvgLooksTwo,
  LooksTwoTrimmed: SvgLooksTwoTrimmed,
  Menu: SvgMenu,
  MenuTrimmed: SvgMenuTrimmed,
  Minus: SvgMenuTrimmed$1,
  MoreHorizontal: SvgMoreHorizontal,
  MoreHorizontalTrimmed: SvgMoreHorizontalTrimmed,
  MoreVertical: SvgMoreVertical,
  MoreVerticalTrimmed: SvgMoreVerticalTrimmed,
  Person: SvgPerson,
  Plus: SvgPlus,
  PlusCircle: SvgPlusCircle,
  PlusCircleTrimmed: SvgPlusCircleTrimmed,
  PlusTrimmed: SvgPlusTrimmed,
  Preview: SvgPreview,
  Puzzle: SvgPuzzle,
  Quote: SvgQuote,
  QuoteTrimmed: SvgQuoteTrimmed,
  Receipt: SvgReceipt,
  ReceiptTrimmed: SvgReceiptTrimmed,
  References: SvgReferences,
  Release: SvgRelease,
  ReleaseTrimmed: SvgReleaseTrimmed,
  Search: SvgSearch,
  SearchTrimmed: SvgSearchTrimmed,
  Settings: SvgSettings,
  SettingsTrimmed: SvgSettingsTrimmed,
  ShoppingCart: SvgShoppingCart,
  ShoppingCartTrimmed: SvgShoppingCartTrimmed,
  Star: SvgStar,
  StarTrimmed: SvgStarTrimmed,
  Subscript: SvgCode$1,
  SubscriptTrimmed: SvgCode$2,
  Superscript: SvgCode$3,
  SuperscriptTrimmed: SvgCode$4,
  Tab: SvgAsset$1,
  Table: SvgTable,
  Tags: SvgTags,
  Text: SvgText,
  TextTrimmed: SvgTextTrimmed,
  ThumbDown: SvgThumbDown,
  ThumbDownTrimmed: SvgThumbDownTrimmed,
  ThumbUp: SvgThumbUp,
  ThumbUpTrimmed: SvgThumbUpTrimmed,
  Users: SvgUsers,
  UsersTrimmed: SvgUsersTrimmed,
  Warning: SvgWarning,
  WarningTrimmed: SvgWarningTrimmed,
  Workflows: SvgWorkflows
};
function Icon(_ref) {
  var _cn;

  var className = _ref.className,
      icon = _ref.icon,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'small' : _ref$size,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'primary' : _ref$color,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-icon' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  var classNames = classnames(styles.Icon, (_cn = {}, _defineProperty(_cn, styles["Icon--".concat(size)], size), _defineProperty(_cn, styles["Icon--".concat(color)], color), _defineProperty(_cn, styles['Icon--trimmed'], icon.toLowerCase().includes('trimmed')), _cn), className);
  var Element = iconComponents[icon];
  return /*#__PURE__*/React__default.createElement(Element, _extends({
    "data-test-id": testId,
    className: classNames
  }, otherProps));
}

var _excluded$1 = ["className", "children"];
var styles$1 = {
  "TabFocusTrap": "TabFocusTrap__TabFocusTrap___39Vty"
};
function TabFocusTrap(_ref) {
  var className = _ref.className,
      children = _ref.children,
      otherProps = _objectWithoutProperties(_ref, _excluded$1);

  var classNames = classnames(styles$1.TabFocusTrap, className);
  return /*#__PURE__*/React__default.createElement("span", _extends({
    tabIndex: -1,
    className: classNames
  }, otherProps), children);
}

var _excluded$2 = ["children", "className", "disabled", "href", "icon", "iconPosition", "linkType", "onClick", "testId", "text"];
var styles$2 = {
  "TextLink": "TextLink__TextLink___1biUr a11y__focus-outline--default___2hwb1",
  "TextLink--primary": "TextLink__TextLink--primary___2Vc9F",
  "TextLink__icon": "TextLink__TextLink__icon___3ggiB",
  "TextLink--positive": "TextLink__TextLink--positive___3X5ph",
  "TextLink--negative": "TextLink__TextLink--negative___3yhMk",
  "TextLink--secondary": "TextLink__TextLink--secondary___WbTVM",
  "TextLink--muted": "TextLink__TextLink--muted___TMxw0",
  "TextLink--white": "TextLink__TextLink--white___nesMH",
  "TextLink--disabled": "TextLink__TextLink--disabled___3vo9n",
  "TextLink__icon-wrapper": "TextLink__TextLink__icon-wrapper___25_tI",
  "TextLink__icon-wrapper--right": "TextLink__TextLink__icon-wrapper--right___3ybuG"
};
function TextLink(_ref) {
  var _cn;

  var children = _ref.children,
      className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      href = _ref.href,
      icon = _ref.icon,
      _ref$iconPosition = _ref.iconPosition,
      iconPosition = _ref$iconPosition === void 0 ? 'left' : _ref$iconPosition,
      _ref$linkType = _ref.linkType,
      linkType = _ref$linkType === void 0 ? 'primary' : _ref$linkType,
      onClick = _ref.onClick,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-text-link' : _ref$testId,
      text = _ref.text,
      otherProps = _objectWithoutProperties(_ref, _excluded$2);

  var renderIcon = useCallback(function (icon, linkType) {
    if (!icon) return undefined;
    return /*#__PURE__*/React__default.createElement("span", {
      className: iconPosition === 'right' ? styles$2['TextLink__icon-wrapper--right'] : styles$2['TextLink__icon-wrapper']
    }, /*#__PURE__*/React__default.createElement(Icon, {
      icon: icon,
      color: linkType,
      className: styles$2.TextLink__icon
    }));
  }, [iconPosition]);
  var classNames = classnames(styles$2.TextLink, className, (_cn = {}, _defineProperty(_cn, styles$2["TextLink--".concat(linkType)], linkType), _defineProperty(_cn, styles$2['TextLink--disabled'], disabled), _cn));
  var content = /*#__PURE__*/React__default.createElement(TabFocusTrap, null, icon && iconPosition === 'left' && renderIcon(icon, linkType) // eslint-disable-line @typescript-eslint/no-non-null-assertion
  , text || children, icon && iconPosition === 'right' && renderIcon(icon, linkType) // eslint-disable-line @typescript-eslint/no-non-null-assertion
  );

  if (href) {
    return /*#__PURE__*/React__default.createElement("a", _extends({
      className: classNames,
      "data-test-id": testId,
      onClick: disabled ? function (e) {
        e.preventDefault();
      } : onClick,
      href: href
    }, otherProps), content);
  }

  return /*#__PURE__*/React__default.createElement("button", _extends({
    type: "button",
    className: classNames,
    "data-test-id": testId,
    onClick: !disabled ? onClick : function () {},
    disabled: disabled
  }, otherProps), content);
}

var _excluded$3 = ["label", "onClose", "testId", "onDrag", "className", "dragHandleComponent", "variant"];
var styles$3 = {
  "Pill": "Pill__Pill___2yQFD a11y__focus-outline--default___2hwb1",
  "Pill--deleted": "Pill__Pill--deleted___mwXFF",
  "Pill--idle": "Pill__Pill--idle___3nZ8p",
  "Pill--active": "Pill__Pill--active___3tkL1",
  "Pill__label": "Pill__Pill__label____EsBZ",
  "Pill__label--deleted": "Pill__Pill__label--deleted___1FySm",
  "Pill__label--idle": "Pill__Pill__label--idle___3PU9m",
  "Pill__label--active": "Pill__Pill__label--active___1ZryI",
  "Pill__close-button": "Pill__Pill__close-button___3OlnQ a11y__focus-outline--default___2hwb1",
  "Pill__close-button--deleted": "Pill__Pill__close-button--deleted___s0x2C",
  "Pill__close-button--idle": "Pill__Pill__close-button--idle___OneTW",
  "Pill__close-button--active": "Pill__Pill__close-button--active___3FpQZ",
  "Pill__drag-icon": "Pill__Pill__drag-icon___2aB1g",
  "Pill__icon--deleted": "Pill__Pill__icon--deleted___V8b3O",
  "Pill__icon--idle": "Pill__Pill__icon--idle___1Yi7d",
  "Pill__icon--active": "Pill__Pill__icon--active___11oHX"
};
function Pill(_ref) {
  var label = _ref.label,
      onClose = _ref.onClose,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-pill' : _ref$testId,
      onDrag = _ref.onDrag,
      className = _ref.className,
      dragHandleComponent = _ref.dragHandleComponent,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? 'idle' : _ref$variant,
      otherProps = _objectWithoutProperties(_ref, _excluded$3);

  var classNames = classnames(styles$3.Pill, styles$3["Pill--".concat(variant)], className);
  return /*#__PURE__*/React__default.createElement("div", _extends({
    className: classNames,
    "data-test-id": testId
  }, otherProps, {
    onDrag: onDrag
  }), onDrag && (dragHandleComponent ? dragHandleComponent : /*#__PURE__*/React__default.createElement("span", {
    className: styles$3['Pill__drag-icon']
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: "Drag",
    color: "muted",
    className: styles$3["Pill__icon--".concat(variant)]
  }))), /*#__PURE__*/React__default.createElement("span", {
    "aria-label": label,
    title: label,
    className: classnames(styles$3.Pill__label, styles$3["Pill__label--".concat(variant)])
  }, label), onClose && variant !== 'deleted' && /*#__PURE__*/React__default.createElement("button", {
    type: "button",
    "aria-label": "close",
    onClick: onClose,
    className: classnames(styles$3['Pill__close-button'], styles$3["Pill__close-button--".concat(variant)])
  }, /*#__PURE__*/React__default.createElement(TabFocusTrap, null, /*#__PURE__*/React__default.createElement(Icon, {
    icon: "Close",
    color: "muted",
    className: styles$3["Pill__icon--".concat(variant)]
  }))));
}

var _excluded$4 = ["className", "children", "testId"];
var styles$4 = {
  "HelpText": "HelpText__HelpText___uWbja"
};
function HelpText(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-help-text' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$4);

  var classNames = classnames(styles$4.HelpText, className);
  return /*#__PURE__*/React__default.createElement("p", _extends({}, otherProps, {
    className: classNames,
    "data-test-id": testId
  }), children);
}

var _excluded$5 = ["children", "className", "htmlFor", "required", "requiredText", "testId"];
var styles$5 = {
  "FormLabel": "FormLabel__FormLabel___3d6zQ",
  "FormLabel__required-text": "FormLabel__FormLabel__required-text___3mvdm"
};
var FormLabel = function FormLabel(_ref) {
  var children = _ref.children,
      className = _ref.className,
      htmlFor = _ref.htmlFor,
      _ref$required = _ref.required,
      required = _ref$required === void 0 ? false : _ref$required,
      _ref$requiredText = _ref.requiredText,
      requiredText = _ref$requiredText === void 0 ? 'required' : _ref$requiredText,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-form-label' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$5);

  var classNames = classnames(styles$5.FormLabel, className);
  return /*#__PURE__*/React__default.createElement("label", _extends({
    className: classNames,
    "data-test-id": testId,
    htmlFor: htmlFor
  }, otherProps), children, required && // eslint-disable-line @typescript-eslint/no-non-null-assertion
  !!requiredText.length &&
  /*#__PURE__*/
  // eslint-disable-line @typescript-eslint/no-non-null-assertion
  React__default.createElement("span", {
    className: styles$5['FormLabel__required-text']
  }, "(", requiredText, ")"));
};

var _excluded$6 = ["className", "children", "testId"];
var styles$6 = {
  "ValidationMessage": "ValidationMessage__ValidationMessage___3_rEq",
  "ValidationMessage__icon": "ValidationMessage__ValidationMessage__icon___3HPCh",
  "ValidationMessage__text": "ValidationMessage__ValidationMessage__text___8FBj5"
};
function ValidationMessage(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-validation-message' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$6);

  var classNames = classnames(styles$6['ValidationMessage'], className);
  return /*#__PURE__*/React__default.createElement("div", _extends({}, otherProps, {
    className: classNames,
    "data-test-id": testId
  }), /*#__PURE__*/React__default.createElement(Icon, {
    icon: "ErrorCircleOutline",
    className: styles$6['ValidationMessage__icon'],
    color: "negative"
  }), /*#__PURE__*/React__default.createElement("p", {
    className: styles$6['ValidationMessage__text']
  }, children));
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

var toggleSelection = function () {
  var selection = document.getSelection();
  if (!selection.rangeCount) {
    return function () {};
  }
  var active = document.activeElement;

  var ranges = [];
  for (var i = 0; i < selection.rangeCount; i++) {
    ranges.push(selection.getRangeAt(i));
  }

  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML
    case 'INPUT':
    case 'TEXTAREA':
      active.blur();
      break;

    default:
      active = null;
      break;
  }

  selection.removeAllRanges();
  return function () {
    selection.type === 'Caret' &&
    selection.removeAllRanges();

    if (!selection.rangeCount) {
      ranges.forEach(function(range) {
        selection.addRange(range);
      });
    }

    active &&
    active.focus();
  };
};

var clipboardToIE11Formatting = {
  "text/plain": "Text",
  "text/html": "Url",
  "default": "Text"
};

var defaultMessage = "Copy to clipboard: #{key}, Enter";

function format(message) {
  var copyKey = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C";
  return message.replace(/#{\s*key\s*}/g, copyKey);
}

function copy(text, options) {
  var debug,
    message,
    reselectPrevious,
    range,
    selection,
    mark,
    success = false;
  if (!options) {
    options = {};
  }
  debug = options.debug || false;
  try {
    reselectPrevious = toggleSelection();

    range = document.createRange();
    selection = document.getSelection();

    mark = document.createElement("span");
    mark.textContent = text;
    // reset user styles for span element
    mark.style.all = "unset";
    // prevents scrolling to the end of the page
    mark.style.position = "fixed";
    mark.style.top = 0;
    mark.style.clip = "rect(0, 0, 0, 0)";
    // used to preserve spaces and line breaks
    mark.style.whiteSpace = "pre";
    // do not inherit user-select (it may be `none`)
    mark.style.webkitUserSelect = "text";
    mark.style.MozUserSelect = "text";
    mark.style.msUserSelect = "text";
    mark.style.userSelect = "text";
    mark.addEventListener("copy", function(e) {
      e.stopPropagation();
      if (options.format) {
        e.preventDefault();
        if (typeof e.clipboardData === "undefined") { // IE 11
          debug && console.warn("unable to use e.clipboardData");
          debug && console.warn("trying IE specific stuff");
          window.clipboardData.clearData();
          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting["default"];
          window.clipboardData.setData(format, text);
        } else { // all other browsers
          e.clipboardData.clearData();
          e.clipboardData.setData(options.format, text);
        }
      }
      if (options.onCopy) {
        e.preventDefault();
        options.onCopy(e.clipboardData);
      }
    });

    document.body.appendChild(mark);

    range.selectNodeContents(mark);
    selection.addRange(range);

    var successful = document.execCommand("copy");
    if (!successful) {
      throw new Error("copy command was unsuccessful");
    }
    success = true;
  } catch (err) {
    debug && console.error("unable to copy using execCommand: ", err);
    debug && console.warn("trying IE specific stuff");
    try {
      window.clipboardData.setData(options.format || "text", text);
      options.onCopy && options.onCopy(window.clipboardData);
      success = true;
    } catch (err) {
      debug && console.error("unable to copy using clipboardData: ", err);
      debug && console.error("falling back to prompt");
      message = format("message" in options ? options.message : defaultMessage);
      window.prompt(message, text);
    }
  } finally {
    if (selection) {
      if (typeof selection.removeRange == "function") {
        selection.removeRange(range);
      } else {
        selection.removeAllRanges();
      }
    }

    if (mark) {
      document.body.removeChild(mark);
    }
    reselectPrevious();
  }

  return success;
}

var copyToClipboard = copy;

var Component = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CopyToClipboard = void 0;

var _react = _interopRequireDefault(React__default);

var _copyToClipboard = _interopRequireDefault(copyToClipboard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var CopyToClipboard =
/*#__PURE__*/
function (_React$PureComponent) {
  _inherits(CopyToClipboard, _React$PureComponent);

  function CopyToClipboard() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, CopyToClipboard);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CopyToClipboard)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "onClick", function (event) {
      var _this$props = _this.props,
          text = _this$props.text,
          onCopy = _this$props.onCopy,
          children = _this$props.children,
          options = _this$props.options;

      var elem = _react["default"].Children.only(children);

      var result = (0, _copyToClipboard["default"])(text, options);

      if (onCopy) {
        onCopy(text, result);
      } // Bypass onClick if it was present


      if (elem && elem.props && typeof elem.props.onClick === 'function') {
        elem.props.onClick(event);
      }
    });

    return _this;
  }

  _createClass(CopyToClipboard, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          _text = _this$props2.text,
          _onCopy = _this$props2.onCopy,
          _options = _this$props2.options,
          children = _this$props2.children,
          props = _objectWithoutProperties(_this$props2, ["text", "onCopy", "options", "children"]);

      var elem = _react["default"].Children.only(children);

      return _react["default"].cloneElement(elem, _objectSpread({}, props, {
        onClick: this.onClick
      }));
    }
  }]);

  return CopyToClipboard;
}(_react["default"].PureComponent);

exports.CopyToClipboard = CopyToClipboard;

_defineProperty(CopyToClipboard, "defaultProps", {
  onCopy: undefined,
  options: undefined
});
});

unwrapExports(Component);
var Component_1 = Component.CopyToClipboard;

var CopyToClipboard = Component.CopyToClipboard;

CopyToClipboard.CopyToClipboard = CopyToClipboard;
var lib = CopyToClipboard;

var ManagerReferenceNodeContext = createContext();
var ManagerReferenceNodeSetterContext = createContext();

/**
 * Simple ponyfill for Object.fromEntries
 */

var fromEntries = function fromEntries(entries) {
  return entries.reduce(function (acc, _ref) {
    var key = _ref[0],
        value = _ref[1];
    acc[key] = value;
    return acc;
  }, {});
};
/**
 * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs
 */

var useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? useLayoutEffect : useEffect;

var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [top, bottom, right, left];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []); // modifiers that need to read the DOM

var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers

var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

function getNodeName(element) {
  return element ? (element.nodeName || '').toLowerCase() : null;
}

/*:: import type { Window } from '../types'; */

/*:: declare function getWindow(node: Node | Window): Window; */
function getWindow(node) {
  if (node.toString() !== '[object Window]') {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }

  return node;
}

/*:: declare function isElement(node: mixed): boolean %checks(node instanceof
  Element); */

function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}
/*:: declare function isHTMLElement(node: mixed): boolean %checks(node instanceof
  HTMLElement); */


function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}
/*:: declare function isShadowRoot(node: mixed): boolean %checks(node instanceof
  ShadowRoot); */


function isShadowRoot(node) {
  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}

// and applies them to the HTMLElements such as popper and arrow

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function (name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name]; // arrow is optional + virtual elements

    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    } // Flow doesn't support to extend this property, but it's the most
    // effective way to apply styles to an HTMLElement
    // $FlowFixMe[cannot-write]


    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function (name) {
      var value = attributes[name];

      if (value === false) {
        element.removeAttribute(name);
      } else {
        element.setAttribute(name, value === true ? '' : value);
      }
    });
  });
}

function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);

  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }

  return function () {
    Object.keys(state.elements).forEach(function (name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

      var style = styleProperties.reduce(function (style, property) {
        style[property] = '';
        return style;
      }, {}); // arrow is optional + virtual elements

      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }

      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
} // eslint-disable-next-line import/no-unused-modules


var applyStyles$1 = {
  name: 'applyStyles',
  enabled: true,
  phase: 'write',
  fn: applyStyles,
  effect: effect,
  requires: ['computeStyles']
};

function getBasePlacement(placement) {
  return placement.split('-')[0];
}

// Returns the layout rect of an element relative to its offsetParent. Layout
// means it doesn't take into account transforms.
function getLayoutRect(element) {
  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width: element.offsetWidth,
    height: element.offsetHeight
  };
}

function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

  if (parent.contains(child)) {
    return true;
  } // then fallback to custom implementation with Shadow DOM support
  else if (rootNode && isShadowRoot(rootNode)) {
      var next = child;

      do {
        if (next && parent.isSameNode(next)) {
          return true;
        } // $FlowFixMe[prop-missing]: need a better way to handle this...


        next = next.parentNode || next.host;
      } while (next);
    } // Give up, the result is false


  return false;
}

function getComputedStyle(element) {
  return getWindow(element).getComputedStyle(element);
}

function isTableElement(element) {
  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
}

function getDocumentElement(element) {
  // $FlowFixMe[incompatible-return]: assume body is always available
  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
  element.document) || window.document).documentElement;
}

function getParentNode(element) {
  if (getNodeName(element) === 'html') {
    return element;
  }

  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || // DOM Element detected
    // $FlowFixMe[incompatible-return]: need a better way to handle this...
    element.host || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element) // fallback

  );
}

function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle(element).position === 'fixed') {
    return null;
  }

  var offsetParent = element.offsetParent;

  if (offsetParent) {
    var html = getDocumentElement(offsetParent);

    if (getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && getComputedStyle(html).position !== 'static') {
      return html;
    }
  }

  return offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block


function getContainingBlock(element) {
  var currentNode = getParentNode(element);

  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that
    // create a containing block.

    if (css.transform !== 'none' || css.perspective !== 'none' || css.willChange && css.willChange !== 'auto') {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }

  return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.


function getOffsetParent(element) {
  var window = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);

  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {
    offsetParent = getTrueOffsetParent(offsetParent);
  }

  if (offsetParent && getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static') {
    return window;
  }

  return offsetParent || getContainingBlock(element) || window;
}

function getMainAxisFromPlacement(placement) {
  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
}

function within(min, value, max) {
  return Math.max(min, Math.min(value, max));
}

function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

function mergePaddingObject(paddingObject) {
  return Object.assign(Object.assign({}, getFreshSideObject()), paddingObject);
}

function expandToHashMap(value, keys) {
  return keys.reduce(function (hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

function arrow(_ref) {
  var _state$modifiersData$;

  var state = _ref.state,
      name = _ref.name;
  var arrowElement = state.elements.arrow;
  var popperOffsets = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? 'height' : 'width';

  if (!arrowElement || !popperOffsets) {
    return;
  }

  var paddingObject = state.modifiersData[name + "#persistent"].padding;
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === 'y' ? top : left;
  var maxProp = axis === 'y' ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
  // outside of the popper bounds

  var min = paddingObject[minProp];
  var max = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset = within(min, center, max); // Prevents breaking syntax highlighting...

  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}

function effect$1(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$element = options.element,
      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element,
      _options$padding = options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;

  if (arrowElement == null) {
    return;
  } // CSS selector


  if (typeof arrowElement === 'string') {
    arrowElement = state.elements.popper.querySelector(arrowElement);

    if (!arrowElement) {
      return;
    }
  }

  if (process.env.NODE_ENV !== "production") {
    if (!isHTMLElement(arrowElement)) {
      console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));
    }
  }

  if (!contains(state.elements.popper, arrowElement)) {
    if (process.env.NODE_ENV !== "production") {
      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', 'element.'].join(' '));
    }

    return;
  }

  state.elements.arrow = arrowElement;
  state.modifiersData[name + "#persistent"] = {
    padding: mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements))
  };
} // eslint-disable-next-line import/no-unused-modules


var arrow$1 = {
  name: 'arrow',
  enabled: true,
  phase: 'main',
  fn: arrow,
  effect: effect$1,
  requires: ['popperOffsets'],
  requiresIfExists: ['preventOverflow']
};

var unsetSides = {
  top: 'auto',
  right: 'auto',
  bottom: 'auto',
  left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.

function roundOffsetsByDPR(_ref) {
  var x = _ref.x,
      y = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: Math.round(x * dpr) / dpr || 0,
    y: Math.round(y * dpr) / dpr || 0
  };
}

function mapToStyles(_ref2) {
  var _Object$assign2;

  var popper = _ref2.popper,
      popperRect = _ref2.popperRect,
      placement = _ref2.placement,
      offsets = _ref2.offsets,
      position = _ref2.position,
      gpuAcceleration = _ref2.gpuAcceleration,
      adaptive = _ref2.adaptive,
      roundOffsets = _ref2.roundOffsets;

  var _ref3 = roundOffsets ? roundOffsetsByDPR(offsets) : offsets,
      _ref3$x = _ref3.x,
      x = _ref3$x === void 0 ? 0 : _ref3$x,
      _ref3$y = _ref3.y,
      y = _ref3$y === void 0 ? 0 : _ref3$y;

  var hasX = offsets.hasOwnProperty('x');
  var hasY = offsets.hasOwnProperty('y');
  var sideX = left;
  var sideY = top;
  var win = window;

  if (adaptive) {
    var offsetParent = getOffsetParent(popper);

    if (offsetParent === getWindow(popper)) {
      offsetParent = getDocumentElement(popper);
    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it

    /*:: offsetParent = (offsetParent: Element); */


    if (placement === top) {
      sideY = bottom;
      y -= offsetParent.clientHeight - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }

    if (placement === left) {
      sideX = right;
      x -= offsetParent.clientWidth - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }

  var commonStyles = Object.assign({
    position: position
  }, adaptive && unsetSides);

  if (gpuAcceleration) {
    var _Object$assign;

    return Object.assign(Object.assign({}, commonStyles), {}, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) < 2 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }

  return Object.assign(Object.assign({}, commonStyles), {}, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}

function computeStyles(_ref4) {
  var state = _ref4.state,
      options = _ref4.options;
  var _options$gpuAccelerat = options.gpuAcceleration,
      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
      _options$adaptive = options.adaptive,
      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
      _options$roundOffsets = options.roundOffsets,
      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;

  if (process.env.NODE_ENV !== "production") {
    var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || '';

    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {
      return transitionProperty.indexOf(property) >= 0;
    })) {
      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: "transform", "top", "right", "bottom", "left".', '\n\n', 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\n\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));
    }
  }

  var commonStyles = {
    placement: getBasePlacement(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration: gpuAcceleration
  };

  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign(Object.assign({}, state.styles.popper), mapToStyles(Object.assign(Object.assign({}, commonStyles), {}, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive: adaptive,
      roundOffsets: roundOffsets
    })));
  }

  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign(Object.assign({}, state.styles.arrow), mapToStyles(Object.assign(Object.assign({}, commonStyles), {}, {
      offsets: state.modifiersData.arrow,
      position: 'absolute',
      adaptive: false,
      roundOffsets: roundOffsets
    })));
  }

  state.attributes.popper = Object.assign(Object.assign({}, state.attributes.popper), {}, {
    'data-popper-placement': state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var computeStyles$1 = {
  name: 'computeStyles',
  enabled: true,
  phase: 'beforeWrite',
  fn: computeStyles,
  data: {}
};

var passive = {
  passive: true
};

function effect$2(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      options = _ref.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize;
  var window = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

  if (scroll) {
    scrollParents.forEach(function (scrollParent) {
      scrollParent.addEventListener('scroll', instance.update, passive);
    });
  }

  if (resize) {
    window.addEventListener('resize', instance.update, passive);
  }

  return function () {
    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.removeEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.removeEventListener('resize', instance.update, passive);
    }
  };
} // eslint-disable-next-line import/no-unused-modules


var eventListeners = {
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: function fn() {},
  effect: effect$2,
  data: {}
};

var hash = {
  left: 'right',
  right: 'left',
  bottom: 'top',
  top: 'bottom'
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

var hash$1 = {
  start: 'end',
  end: 'start'
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function (matched) {
    return hash$1[matched];
  });
}

function getBoundingClientRect(element) {
  var rect = element.getBoundingClientRect();
  return {
    width: rect.width,
    height: rect.height,
    top: rect.top,
    right: rect.right,
    bottom: rect.bottom,
    left: rect.left,
    x: rect.left,
    y: rect.top
  };
}

function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

function getWindowScrollBarX(element) {
  // If <html> has a CSS width greater than the viewport, then this will be
  // incorrect for RTL.
  // Popper 1 is broken in this case and never had a bug report so let's assume
  // it's not an issue. I don't think anyone ever specifies width on <html>
  // anyway.
  // Browsers where the left scrollbar doesn't cause an issue report `0` for
  // this (e.g. Edge 2019, IE11, Safari)
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}

function getViewportRect(element) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper
  // can be obscured underneath it.
  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even
  // if it isn't open, so if this isn't available, the popper will be detected
  // to overflow the bottom of the screen too early.

  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding
    // errors due to floating point numbers, so we need to check precision.
    // Safari returns a number <= 0, usually < -1 when pinch-zoomed
    // Feature detection fails in mobile emulation mode in Chrome.
    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <
    // 0.001
    // Fallback here: "Not Safari" userAgent

    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }

  return {
    width: width,
    height: height,
    x: x + getWindowScrollBarX(element),
    y: y
  };
}

// of the `<html>` and `<body>` rect bounds if horizontally scrollable

function getDocumentRect(element) {
  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = element.ownerDocument.body;
  var width = Math.max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = Math.max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;

  if (getComputedStyle(body || html).direction === 'rtl') {
    x += Math.max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }

  return {
    width: width,
    height: height,
    x: x,
    y: y
  };
}

function isScrollParent(element) {
  // Firefox wants us to check `-x` and `-y` variations as well
  var _getComputedStyle = getComputedStyle(element),
      overflow = _getComputedStyle.overflow,
      overflowX = _getComputedStyle.overflowX,
      overflowY = _getComputedStyle.overflowY;

  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

function getScrollParent(node) {
  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
  }

  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }

  return getScrollParent(getParentNode(node));
}

/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

function listScrollParents(element, list) {
  if (list === void 0) {
    list = [];
  }

  var scrollParent = getScrollParent(element);
  var isBody = getNodeName(scrollParent) === 'body';
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
  updatedList.concat(listScrollParents(getParentNode(target)));
}

function rectToClientRect(rect) {
  return Object.assign(Object.assign({}, rect), {}, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

function getInnerBoundingClientRect(element) {
  var rect = getBoundingClientRect(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}

function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`


function getClippingParents(element) {
  var clippingParents = listScrollParents(getParentNode(element));
  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;

  if (!isElement(clipperElement)) {
    return [];
  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


  return clippingParents.filter(function (clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
  });
} // Gets the maximum area that the element is visible in due to any number of
// clipping parents


function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents[0];
  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = Math.max(rect.top, accRect.top);
    accRect.right = Math.min(rect.right, accRect.right);
    accRect.bottom = Math.min(rect.bottom, accRect.bottom);
    accRect.left = Math.max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

function getVariation(placement) {
  return placement.split('-')[1];
}

function computeOffsets(_ref) {
  var reference = _ref.reference,
      element = _ref.element,
      placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference.x + reference.width / 2 - element.width / 2;
  var commonY = reference.y + reference.height / 2 - element.height / 2;
  var offsets;

  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference.y - element.height
      };
      break;

    case bottom:
      offsets = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;

    case right:
      offsets = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;

    case left:
      offsets = {
        x: reference.x - element.width,
        y: commonY
      };
      break;

    default:
      offsets = {
        x: reference.x,
        y: reference.y
      };
  }

  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

  if (mainAxis != null) {
    var len = mainAxis === 'y' ? 'height' : 'width';

    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
        break;

      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
        break;
    }
  }

  return offsets;
}

function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$placement = _options.placement,
      placement = _options$placement === void 0 ? state.placement : _options$placement,
      _options$boundary = _options.boundary,
      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
      _options$rootBoundary = _options.rootBoundary,
      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
      _options$elementConte = _options.elementContext,
      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
      _options$altBoundary = _options.altBoundary,
      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
      _options$padding = _options.padding,
      padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var referenceElement = state.elements.reference;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
  var referenceClientRect = getBoundingClientRect(referenceElement);
  var popperOffsets = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: 'absolute',
    placement: placement
  });
  var popperClientRect = rectToClientRect(Object.assign(Object.assign({}, popperRect), popperOffsets));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
  // 0 or negative = within the clipping rect

  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

  if (elementContext === popper && offsetData) {
    var offset = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function (key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
      overflowOffsets[key] += offset[axis] * multiply;
    });
  }

  return overflowOffsets;
}

/*:: type OverflowsMap = { [ComputedPlacement]: number }; */

/*;; type OverflowsMap = { [key in ComputedPlacement]: number }; */
function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      placement = _options.placement,
      boundary = _options.boundary,
      rootBoundary = _options.rootBoundary,
      padding = _options.padding,
      flipVariations = _options.flipVariations,
      _options$allowedAutoP = _options.allowedAutoPlacements,
      allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
    return getVariation(placement) === variation;
  }) : basePlacements;
  var allowedPlacements = placements$1.filter(function (placement) {
    return allowedAutoPlacements.indexOf(placement) >= 0;
  });

  if (allowedPlacements.length === 0) {
    allowedPlacements = placements$1;

    if (process.env.NODE_ENV !== "production") {
      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(' '));
    }
  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


  var overflows = allowedPlacements.reduce(function (acc, placement) {
    acc[placement] = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding
    })[getBasePlacement(placement)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function (a, b) {
    return overflows[a] - overflows[b];
  });
}

function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }

  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}

function flip(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;

  if (state.modifiersData[name]._skip) {
    return;
  }

  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
      specifiedFallbackPlacements = options.fallbackPlacements,
      padding = options.padding,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      _options$flipVariatio = options.flipVariations,
      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
      allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      flipVariations: flipVariations,
      allowedAutoPlacements: allowedAutoPlacements
    }) : placement);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements[0];

  for (var i = 0; i < placements.length; i++) {
    var placement = placements[i];

    var _basePlacement = getBasePlacement(placement);

    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? 'width' : 'height';
    var overflow = detectOverflow(state, {
      placement: placement,
      boundary: boundary,
      rootBoundary: rootBoundary,
      altBoundary: altBoundary,
      padding: padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;

    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }

    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];

    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }

    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }

    if (checks.every(function (check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }

    checksMap.set(placement, checks);
  }

  if (makeFallbackChecks) {
    // `2` may be desired in some cases – research later
    var numberOfChecks = flipVariations ? 3 : 1;

    var _loop = function _loop(_i) {
      var fittingPlacement = placements.find(function (placement) {
        var checks = checksMap.get(placement);

        if (checks) {
          return checks.slice(0, _i).every(function (check) {
            return check;
          });
        }
      });

      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };

    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);

      if (_ret === "break") break;
    }
  }

  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
} // eslint-disable-next-line import/no-unused-modules


var flip$1 = {
  name: 'flip',
  enabled: true,
  phase: 'main',
  fn: flip,
  requiresIfExists: ['offset'],
  data: {
    _skip: false
  }
};

function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }

  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}

function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function (side) {
    return overflow[side] >= 0;
  });
}

function hide(_ref) {
  var state = _ref.state,
      name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: 'reference'
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets: referenceClippingOffsets,
    popperEscapeOffsets: popperEscapeOffsets,
    isReferenceHidden: isReferenceHidden,
    hasPopperEscaped: hasPopperEscaped
  };
  state.attributes.popper = Object.assign(Object.assign({}, state.attributes.popper), {}, {
    'data-popper-reference-hidden': isReferenceHidden,
    'data-popper-escaped': hasPopperEscaped
  });
} // eslint-disable-next-line import/no-unused-modules


var hide$1 = {
  name: 'hide',
  enabled: true,
  phase: 'main',
  requiresIfExists: ['preventOverflow'],
  fn: hide
};

function distanceAndSkiddingToXY(placement, rects, offset) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;

  var _ref = typeof offset === 'function' ? offset(Object.assign(Object.assign({}, rects), {}, {
    placement: placement
  })) : offset,
      skidding = _ref[0],
      distance = _ref[1];

  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}

function offset(_ref2) {
  var state = _ref2.state,
      options = _ref2.options,
      name = _ref2.name;
  var _options$offset = options.offset,
      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function (acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement],
      x = _data$state$placement.x,
      y = _data$state$placement.y;

  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var offset$1 = {
  name: 'offset',
  enabled: true,
  phase: 'main',
  requires: ['popperOffsets'],
  fn: offset
};

function popperOffsets(_ref) {
  var state = _ref.state,
      name = _ref.name;
  // Offsets are the actual position the popper needs to have to be
  // properly positioned near its reference element
  // This is the most basic placement, and will be adjusted by
  // the modifiers in the next step
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: 'absolute',
    placement: state.placement
  });
} // eslint-disable-next-line import/no-unused-modules


var popperOffsets$1 = {
  name: 'popperOffsets',
  enabled: true,
  phase: 'read',
  fn: popperOffsets,
  data: {}
};

function getAltAxis(axis) {
  return axis === 'x' ? 'y' : 'x';
}

function preventOverflow(_ref) {
  var state = _ref.state,
      options = _ref.options,
      name = _ref.name;
  var _options$mainAxis = options.mainAxis,
      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
      _options$altAxis = options.altAxis,
      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
      boundary = options.boundary,
      rootBoundary = options.rootBoundary,
      altBoundary = options.altBoundary,
      padding = options.padding,
      _options$tether = options.tether,
      tether = _options$tether === void 0 ? true : _options$tether,
      _options$tetherOffset = options.tetherOffset,
      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary: boundary,
    rootBoundary: rootBoundary,
    padding: padding,
    altBoundary: altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign(Object.assign({}, state.rects), {}, {
    placement: state.placement
  })) : tetherOffset;
  var data = {
    x: 0,
    y: 0
  };

  if (!popperOffsets) {
    return;
  }

  if (checkMainAxis) {
    var mainSide = mainAxis === 'y' ? top : left;
    var altSide = mainAxis === 'y' ? bottom : right;
    var len = mainAxis === 'y' ? 'height' : 'width';
    var offset = popperOffsets[mainAxis];
    var min = popperOffsets[mainAxis] + overflow[mainSide];
    var max = popperOffsets[mainAxis] - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
    // outside the reference bounds

    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
    // to include its full size in the calculation. If the reference is small
    // and near the edge of a boundary, the popper can overflow even if the
    // reference is not overflowing as well (e.g. virtual elements with no
    // width or height)

    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;
    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? Math.min(min, tetherMin) : min, offset, tether ? Math.max(max, tetherMax) : max);
    popperOffsets[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset;
  }

  if (checkAltAxis) {
    var _mainSide = mainAxis === 'x' ? top : left;

    var _altSide = mainAxis === 'x' ? bottom : right;

    var _offset = popperOffsets[altAxis];

    var _min = _offset + overflow[_mainSide];

    var _max = _offset - overflow[_altSide];

    var _preventedOffset = within(_min, _offset, _max);

    popperOffsets[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }

  state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules


var preventOverflow$1 = {
  name: 'preventOverflow',
  enabled: true,
  phase: 'main',
  fn: preventOverflow,
  requiresIfExists: ['offset']
};

function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}

function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}

// Composite means it takes into account transforms as well as layout.

function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }

  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement);
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };

  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }

    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }

  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

function order(modifiers) {
  var map = new Map();
  var visited = new Set();
  var result = [];
  modifiers.forEach(function (modifier) {
    map.set(modifier.name, modifier);
  }); // On visiting object, check for its dependencies and visit them recursively

  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function (dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);

        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }

  modifiers.forEach(function (modifier) {
    if (!visited.has(modifier.name)) {
      // check for visited object
      sort(modifier);
    }
  });
  return result;
}

function orderModifiers(modifiers) {
  // order based on dependencies
  var orderedModifiers = order(modifiers); // order based on phase

  return modifierPhases.reduce(function (acc, phase) {
    return acc.concat(orderedModifiers.filter(function (modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

function debounce(fn) {
  var pending;
  return function () {
    if (!pending) {
      pending = new Promise(function (resolve) {
        Promise.resolve().then(function () {
          pending = undefined;
          resolve(fn());
        });
      });
    }

    return pending;
  };
}

function format$1(str) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return [].concat(args).reduce(function (p, c) {
    return p.replace(/%s/, c);
  }, str);
}

var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
var VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];
function validateModifiers(modifiers) {
  modifiers.forEach(function (modifier) {
    Object.keys(modifier).forEach(function (key) {
      switch (key) {
        case 'name':
          if (typeof modifier.name !== 'string') {
            console.error(format$1(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', "\"" + String(modifier.name) + "\""));
          }

          break;

        case 'enabled':
          if (typeof modifier.enabled !== 'boolean') {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', "\"" + String(modifier.enabled) + "\""));
          }

        case 'phase':
          if (modifierPhases.indexOf(modifier.phase) < 0) {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + modifierPhases.join(', '), "\"" + String(modifier.phase) + "\""));
          }

          break;

        case 'fn':
          if (typeof modifier.fn !== 'function') {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'effect':
          if (typeof modifier.effect !== 'function') {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', "\"" + String(modifier.fn) + "\""));
          }

          break;

        case 'requires':
          if (!Array.isArray(modifier.requires)) {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', "\"" + String(modifier.requires) + "\""));
          }

          break;

        case 'requiresIfExists':
          if (!Array.isArray(modifier.requiresIfExists)) {
            console.error(format$1(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', "\"" + String(modifier.requiresIfExists) + "\""));
          }

          break;

        case 'options':
        case 'data':
          break;

        default:
          console.error("PopperJS: an invalid property has been provided to the \"" + modifier.name + "\" modifier, valid properties are " + VALID_PROPERTIES.map(function (s) {
            return "\"" + s + "\"";
          }).join(', ') + "; but \"" + key + "\" was provided.");
      }

      modifier.requires && modifier.requires.forEach(function (requirement) {
        if (modifiers.find(function (mod) {
          return mod.name === requirement;
        }) == null) {
          console.error(format$1(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
        }
      });
    });
  });
}

function uniqueBy(arr, fn) {
  var identifiers = new Set();
  return arr.filter(function (item) {
    var identifier = fn(item);

    if (!identifiers.has(identifier)) {
      identifiers.add(identifier);
      return true;
    }
  });
}

function mergeByName(modifiers) {
  var merged = modifiers.reduce(function (merged, current) {
    var existing = merged[current.name];
    merged[current.name] = existing ? Object.assign(Object.assign(Object.assign({}, existing), current), {}, {
      options: Object.assign(Object.assign({}, existing.options), current.options),
      data: Object.assign(Object.assign({}, existing.data), current.data)
    }) : current;
    return merged;
  }, {}); // IE11 does not support Object.values

  return Object.keys(merged).map(function (key) {
    return merged[key];
  });
}

var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';
var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
var DEFAULT_OPTIONS = {
  placement: 'bottom',
  modifiers: [],
  strategy: 'absolute'
};

function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return !args.some(function (element) {
    return !(element && typeof element.getBoundingClientRect === 'function');
  });
}

function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }

  var _generatorOptions = generatorOptions,
      _generatorOptions$def = _generatorOptions.defaultModifiers,
      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
      _generatorOptions$def2 = _generatorOptions.defaultOptions,
      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper(reference, popper, options) {
    if (options === void 0) {
      options = defaultOptions;
    }

    var state = {
      placement: 'bottom',
      orderedModifiers: [],
      options: Object.assign(Object.assign({}, DEFAULT_OPTIONS), defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference,
        popper: popper
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state: state,
      setOptions: function setOptions(options) {
        cleanupModifierEffects();
        state.options = Object.assign(Object.assign(Object.assign({}, defaultOptions), state.options), options);
        state.scrollParents = {
          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
          popper: listScrollParents(popper)
        }; // Orders the modifiers based on their dependencies and `phase`
        // properties

        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

        state.orderedModifiers = orderedModifiers.filter(function (m) {
          return m.enabled;
        }); // Validate the provided modifiers so that the consumer will get warned
        // if one of the modifiers is invalid for any reason

        if (process.env.NODE_ENV !== "production") {
          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {
            var name = _ref.name;
            return name;
          });
          validateModifiers(modifiers);

          if (getBasePlacement(state.options.placement) === auto) {
            var flipModifier = state.orderedModifiers.find(function (_ref2) {
              var name = _ref2.name;
              return name === 'flip';
            });

            if (!flipModifier) {
              console.error(['Popper: "auto" placements require the "flip" modifier be', 'present and enabled to work.'].join(' '));
            }
          }

          var _getComputedStyle = getComputedStyle(popper),
              marginTop = _getComputedStyle.marginTop,
              marginRight = _getComputedStyle.marginRight,
              marginBottom = _getComputedStyle.marginBottom,
              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can
          // cause bugs with positioning, so we'll warn the consumer


          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {
            return parseFloat(margin);
          })) {
            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));
          }
        }

        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }

        var _state$elements = state.elements,
            reference = _state$elements.reference,
            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
        // anymore

        if (!areValidElements(reference, popper)) {
          if (process.env.NODE_ENV !== "production") {
            console.error(INVALID_ELEMENT_ERROR);
          }

          return;
        } // Store the reference and popper rects to be read by modifiers


        state.rects = {
          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
          popper: getLayoutRect(popper)
        }; // Modifiers have the ability to reset the current update cycle. The
        // most common use case for this is the `flip` modifier changing the
        // placement, which then needs to re-run all the modifiers, because the
        // logic was previously ran for the previous placement and is therefore
        // stale/incorrect

        state.reset = false;
        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
        // is filled with the initial data specified by the modifier. This means
        // it doesn't persist and is fresh on each update.
        // To ensure persistent data, use `${name}#persistent`

        state.orderedModifiers.forEach(function (modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;

        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (process.env.NODE_ENV !== "production") {
            __debug_loops__ += 1;

            if (__debug_loops__ > 100) {
              console.error(INFINITE_LOOP_ERROR);
              break;
            }
          }

          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }

          var _state$orderedModifie = state.orderedModifiers[index],
              fn = _state$orderedModifie.fn,
              _state$orderedModifie2 = _state$orderedModifie.options,
              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
              name = _state$orderedModifie.name;

          if (typeof fn === 'function') {
            state = fn({
              state: state,
              options: _options,
              name: name,
              instance: instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function () {
        return new Promise(function (resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };

    if (!areValidElements(reference, popper)) {
      if (process.env.NODE_ENV !== "production") {
        console.error(INVALID_ELEMENT_ERROR);
      }

      return instance;
    }

    instance.setOptions(options).then(function (state) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state);
      }
    }); // Modifiers have the ability to execute arbitrary code before the first
    // update cycle runs. They will be executed in the same order as the update
    // cycle. This is useful when a modifier adds some persistent data that
    // other modifiers need to use, but the modifier is run after the dependent
    // one.

    function runModifierEffects() {
      state.orderedModifiers.forEach(function (_ref3) {
        var name = _ref3.name,
            _ref3$options = _ref3.options,
            options = _ref3$options === void 0 ? {} : _ref3$options,
            effect = _ref3.effect;

        if (typeof effect === 'function') {
          var cleanupFn = effect({
            state: state,
            name: name,
            instance: instance,
            options: options
          });

          var noopFn = function noopFn() {};

          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }

    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function (fn) {
        return fn();
      });
      effectCleanupFns = [];
    }

    return instance;
  };
}

var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];
var createPopper = /*#__PURE__*/popperGenerator({
  defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */

var hasElementType = typeof Element !== 'undefined';
var hasMap = typeof Map === 'function';
var hasSet = typeof Set === 'function';
var hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;

// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js

function equal(a, b) {
  // START: fast-deep-equal es6/index.js 3.1.1
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    if (a.constructor !== b.constructor) return false;

    var length, i, keys;
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (!equal(a[i], b[i])) return false;
      return true;
    }

    // START: Modifications:
    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code
    //    to co-exist with es5.
    // 2. Replace `for of` with es5 compliant iteration using `for`.
    //    Basically, take:
    //
    //    ```js
    //    for (i of a.entries())
    //      if (!b.has(i[0])) return false;
    //    ```
    //
    //    ... and convert to:
    //
    //    ```js
    //    it = a.entries();
    //    while (!(i = it.next()).done)
    //      if (!b.has(i.value[0])) return false;
    //    ```
    //
    //    **Note**: `i` access switches to `i.value`.
    var it;
    if (hasMap && (a instanceof Map) && (b instanceof Map)) {
      if (a.size !== b.size) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!b.has(i.value[0])) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!equal(i.value[1], b.get(i.value[0]))) return false;
      return true;
    }

    if (hasSet && (a instanceof Set) && (b instanceof Set)) {
      if (a.size !== b.size) return false;
      it = a.entries();
      while (!(i = it.next()).done)
        if (!b.has(i.value[0])) return false;
      return true;
    }
    // END: Modifications

    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (a[i] !== b[i]) return false;
      return true;
    }

    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();

    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) return false;

    for (i = length; i-- !== 0;)
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
    // END: fast-deep-equal

    // START: react-fast-compare
    // custom handling for DOM elements
    if (hasElementType && a instanceof Element) return false;

    // custom handling for React/Preact
    for (i = length; i-- !== 0;) {
      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {
        // React-specific: avoid traversing React elements' _owner
        // Preact-specific: avoid traversing Preact elements' __v and __o
        //    __v = $_original / $_vnode
        //    __o = $_owner
        // These properties contain circular references and are not needed when
        // comparing the actual elements (and not their owners)
        // .$$typeof and ._store on just reasonable markers of elements

        continue;
      }

      // all other properties should be traversed as usual
      if (!equal(a[keys[i]], b[keys[i]])) return false;
    }
    // END: react-fast-compare

    // START: fast-deep-equal
    return true;
  }

  return a !== a && b !== b;
}
// end fast-deep-equal

var reactFastCompare = function isEqual(a, b) {
  try {
    return equal(a, b);
  } catch (error) {
    if (((error.message || '').match(/stack|recursion/i))) {
      // warn on circular references, don't crash
      // browsers give this different errors name and messages:
      // chrome/safari: "RangeError", "Maximum call stack size exceeded"
      // firefox: "InternalError", too much recursion"
      // edge: "Error", "Out of stack space"
      console.warn('react-fast-compare cannot handle circular refs');
      return false;
    }
    // some other error. we should definitely know about these
    throw error;
  }
};

var EMPTY_MODIFIERS = [];
var usePopper = function usePopper(referenceElement, popperElement, options) {
  if (options === void 0) {
    options = {};
  }

  var prevOptions = useRef(null);
  var optionsWithDefaults = {
    onFirstUpdate: options.onFirstUpdate,
    placement: options.placement || 'bottom',
    strategy: options.strategy || 'absolute',
    modifiers: options.modifiers || EMPTY_MODIFIERS
  };

  var _React$useState = useState({
    styles: {
      popper: {
        position: optionsWithDefaults.strategy,
        left: '0',
        top: '0'
      }
    },
    attributes: {}
  }),
      state = _React$useState[0],
      setState = _React$useState[1];

  var updateStateModifier = useMemo(function () {
    return {
      name: 'updateState',
      enabled: true,
      phase: 'write',
      fn: function fn(_ref) {
        var state = _ref.state;
        var elements = Object.keys(state.elements);
        setState({
          styles: fromEntries(elements.map(function (element) {
            return [element, state.styles[element] || {}];
          })),
          attributes: fromEntries(elements.map(function (element) {
            return [element, state.attributes[element]];
          }))
        });
      },
      requires: ['computeStyles']
    };
  }, []);
  var popperOptions = useMemo(function () {
    var newOptions = {
      onFirstUpdate: optionsWithDefaults.onFirstUpdate,
      placement: optionsWithDefaults.placement,
      strategy: optionsWithDefaults.strategy,
      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {
        name: 'applyStyles',
        enabled: false
      }])
    };

    if (reactFastCompare(prevOptions.current, newOptions)) {
      return prevOptions.current || newOptions;
    } else {
      prevOptions.current = newOptions;
      return newOptions;
    }
  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);
  var popperInstanceRef = useRef();
  useIsomorphicLayoutEffect(function () {
    if (popperInstanceRef.current) {
      popperInstanceRef.current.setOptions(popperOptions);
    }
  }, [popperOptions]);
  useIsomorphicLayoutEffect(function () {
    if (referenceElement == null || popperElement == null) {
      return;
    }

    var createPopper$1 = options.createPopper || createPopper;
    var popperInstance = createPopper$1(referenceElement, popperElement, popperOptions);
    popperInstanceRef.current = popperInstance;
    return function () {
      popperInstance.destroy();
      popperInstanceRef.current = null;
    };
  }, [referenceElement, popperElement, options.createPopper]);
  return {
    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
    styles: state.styles,
    attributes: state.attributes,
    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
  };
};

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = process.env.NODE_ENV !== 'production';

var warning = function() {};

if (__DEV__) {
  var printWarning = function printWarning(format, args) {
    var len = arguments.length;
    args = new Array(len > 1 ? len - 1 : 0);
    for (var key = 1; key < len; key++) {
      args[key - 1] = arguments[key];
    }
    var argIndex = 0;
    var message = 'Warning: ' +
      format.replace(/%s/g, function() {
        return args[argIndex++];
      });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
      );
    }
    if (!condition) {
      printWarning.apply(null, [format].concat(args));
    }
  };
}

var warning_1 = warning;

var dist = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", {
      value: true
    });

    module.exports = {
  "contentWidthDefault": "1280px",
  "contentWidthText": "768px",
  "contentWidthFull": "100%",
  "spacing2Xs": "0.25rem",
  "spacingXs": "0.5rem",
  "spacingS": "0.75rem",
  "spacingM": "1rem",
  "spacingL": "1.5rem",
  "spacingXl": "2rem",
  "spacing2Xl": "3rem",
  "spacing3Xl": "4rem",
  "spacing4Xl": "5rem",
  "zIndexNegative": -1,
  "zIndexWorkbench": 0,
  "zIndexDefault": 1,
  "zIndexWorkbenchHeader": 10,
  "zIndexModal": 100,
  "zIndexModalContent": 101,
  "zIndexDropdown": 1000,
  "zIndexTooltip": 10000,
  "zIndexNotification": 100000,
  "borderRadiusSmall": "4px",
  "borderRadiusMedium": "6px",
  "boxShadowPositive": "0px 1px 0px rgb(25, 37, 50, 0.1)",
  "boxShadowDefault": "0px 0px 0px 1px rgba(25, 37, 50, 0.1), 0px 3px 7px -3px rgba(25, 37, 50, 0.1), 0px 6px 12px -2px rgba(25, 37, 50, 0.1);",
  "boxShadowHeavy": "0px 0px 0px 1px rgba(25, 37, 50, 0.1), 0px -6px 16px -6px rgba(25, 37, 50, 0.03), 0px 8px 16px -8px rgba(25, 37, 50, 0.2), 0px 13px 27px -5px rgba(25, 37, 50, 0.15);",
  "insetBoxShadowDefault": "inset 0px 2px 0px rgba(225, 228, 232, 0.2);",
  "glowPrimary": "0px 0px 0px 3px #98CBFF",
  "glowNegative": "0px 0px 0px 3px #FFB1B2",
  "glowPositive": "0px 0px 0px 3px #9ED696",
  "glowWarning": "0px 0px 0px 3px #FDE5C0",
  "glowMuted": "0px 0px 0px 3px #E7EBEE",
  "colorBlack": "#0C141C",
  "colorBlueLightest": "#E8F5FF",
  "colorBlueLight": "#98CBFF",
  "colorBlueMid": "#036FE3",
  "colorBlueBase": "#0059C8",
  "colorBlueDark": "#0041AB",
  "blue100": "#E8F5FF",
  "blue200": "#CEECFF",
  "blue300": "#98CBFF",
  "blue400": "#40A0FF",
  "blue500": "#036FE3",
  "blue600": "#0059C8",
  "blue700": "#0041AB",
  "blue800": "#003298",
  "blue900": "#002A8E",
  "colorContrastDark": "#0C141C",
  "colorContrastMid": "#111B2B",
  "colorContrastLight": "#1B273A",
  "colorCoralDark": "#FFE0E0",
  "colorCoralMid": "#FFF2F2",
  "colorElementDarkest": "#67728A",
  "colorElementDark": "#AEC1CC",
  "colorElementMid": "#CFD9E0",
  "colorElementLight": "#E7EBEE",
  "colorElementLightest": "#F7F9FA",
  "gray100": "#F7F9FA",
  "gray200": "#E7EBEE",
  "gray300": "#CFD9E0",
  "gray400": "#AEC1CC",
  "gray500": "#67728A",
  "gray600": "#5A657C",
  "gray700": "#414D63",
  "gray800": "#1B273A",
  "gray900": "#111B2B",
  "colorGreenDark": "#00550C",
  "colorGreenBase": "#006D23",
  "colorGreenMid": "#008539",
  "colorGreenLight": "#9ED696",
  "colorGreenLightest": "#EAF9E8",
  "green100": "#EAF9E8",
  "green200": "#CDF3C6",
  "green300": "#9ED696",
  "green400": "#5DB057",
  "green500": "#008539",
  "green600": "#006D23",
  "green700": "#00550C",
  "green800": "#004700",
  "green900": "#003F00",
  "colorIceDark": "#CEECFF",
  "colorIceMid": "#E8F5FF",
  "colorMintDark": "#CDF3C6",
  "colorMintMid": "#EAF9E8",
  "colorOrangeDark": "#B12D00",
  "colorOrangeBase": "#CC4500",
  "colorOrangeMid": "#F07F23",
  "colorOrangeLight": "#FDE5C0",
  "colorOrangeLightest": "#FFF2E4",
  "orange100": "#FFF2E4",
  "orange200": "#FDE5C0",
  "orange300": "#FDB882",
  "orange400": "#F07F23",
  "orange500": "#CC4500",
  "orange600": "#B12D00",
  "orange700": "#892300",
  "orange800": "#731A00",
  "orange900": "#631C00",
  "colorPeachDark": "#FDE5C0",
  "colorPeachMid": "#FFF2E4",
  "colorPurpleDark": "#5127B5",
  "colorPurpleBase": "#6C3ECF",
  "colorPurpleMid": "#8553E7",
  "colorPurpleLight": "#D1BBFF",
  "colorPurpleLightest": "#F7F2FF",
  "purple100": "#F7F2FF",
  "purple200": "#EDE3FF",
  "purple300": "#D1BBFF",
  "purple400": "#AE89FF",
  "purple500": "#8553E7",
  "purple600": "#6C3ECF",
  "purple700": "#5127B5",
  "purple800": "#3E16A4",
  "purple900": "#340E9C",
  "colorRedDark": "#990017",
  "colorRedBase": "#BD002A",
  "colorRedMid": "#DA294A",
  "colorRedLight": "#FFB1B2",
  "colorRedLightest": "#FFF2F2",
  "red100": "#FFF2F2",
  "red200": "#FFE0E0",
  "red300": "#FFB1B2",
  "red400": "#FF707D",
  "red500": "#DA294A",
  "red600": "#BD002A",
  "red700": "#990017",
  "red800": "#7F0010",
  "red900": "#72000E",
  "colorPrimary": "#036FE3",
  "colorPositive": "#008539",
  "colorNegative": "#DA294A",
  "colorWarning": "#F07F23",
  "colorTextDark": "#111B2B",
  "colorTextBase": "#1B273A",
  "colorTextMid": "#414D63",
  "colorTextLight": "#5A657C",
  "colorTextLightest": "#67728A",
  "colorWhite": "#ffffff",
  "colorYellowDark": "#956300",
  "colorYellowBase": "#EAAF09",
  "colorYellowMid": "#FFC835",
  "colorYellowLight": "#FFD960",
  "colorYellowLightest": "#FFF6CC",
  "yellow100": "#FEF9DF",
  "yellow200": "#FFF6CC",
  "yellow300": "#FFE993",
  "yellow400": "#FFD960",
  "yellow500": "#FFC835",
  "yellow600": "#EAAF09",
  "yellow700": "#B78300",
  "yellow800": "#956300",
  "yellow900": "#7F5200",
  "transitionDurationShort": "0.1s",
  "transitionDurationDefault": "0.2s",
  "transitionDurationLong": "0.3s",
  "transitionEasingDefault": "ease-in-out",
  "transitionEasingCubicBezier": "cubic-bezier(0.13, 0.62, 0.11, 0.99)",
  "fontBaseDefault": "16",
  "fontSize4Xl": "3rem",
  "fontSize3Xl": "2.25rem",
  "fontSize2Xl": "1.75rem",
  "fontSizeXl": "1.25rem",
  "fontSizeL": "1rem",
  "fontSizeM": "0.875rem",
  "fontSizeS": "0.75rem",
  "fontStackPrimary": "-apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol",
  "fontStackMonospace": "SFMono-Regular, Consolas, Liberation Mono, Menlo,monospace",
  "fontWeightNormal": 400,
  "fontWeightMedium": 500,
  "fontWeightDemiBold": 600,
  "letterSpacingWide": "0.1rem",
  "lineHeightDefault": "1.5",
  "lineHeightCondensed": "1.25",
  "lineHeight4Xl": "3.5rem",
  "lineHeight3Xl": "3rem",
  "lineHeight2Xl": "2.25rem",
  "lineHeightXl": "2rem",
  "lineHeightL": "1.5rem",
  "lineHeightM": "1.25rem",
  "lineHeightS": "1rem"
};
});

var tokens = unwrapExports(dist);

function Portal(_ref) {
  var children = _ref.children,
      containerElement = _ref.container;
  var container = useRef(containerElement);
  var portal = useRef(document.createElement('div'));
  useEffect(function () {
    if (!container.current) {
      container.current = document.body;
    }

    var portalContainer = portal.current;
    container.current.appendChild(portalContainer);
    return function () {
      if (container.current) {
        container.current.removeChild(portalContainer);
      }
    };
  }, []);
  return portal.current ? /*#__PURE__*/createPortal(children, portal.current) : null;
}

var _excluded$7 = ["children", "className", "containerElement", "content", "id", "isVisible", "hideDelay", "onBlur", "onFocus", "onMouseLeave", "onMouseOver", "targetWrapperClassName", "maxWidth", "testId", "place", "usePortal"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var styles$7 = {
  "Tooltip__target-wrapper": "Tooltip__Tooltip__target-wrapper___Mtw42",
  "Tooltip": "Tooltip__Tooltip___32xAi",
  "Tooltip--hidden": "Tooltip__Tooltip--hidden___3uqEe",
  "TooltipContainer": "Tooltip__TooltipContainer___3YlPf",
  "Tooltip__arrow": "Tooltip__Tooltip__arrow___JuQmJ"
};
var Tooltip = function Tooltip(_ref) {
  var children = _ref.children,
      className = _ref.className,
      _ref$containerElement = _ref.containerElement,
      ContainerElement = _ref$containerElement === void 0 ? 'span' : _ref$containerElement,
      content = _ref.content,
      id = _ref.id,
      _ref$isVisible = _ref.isVisible,
      isVisible = _ref$isVisible === void 0 ? false : _ref$isVisible,
      _ref$hideDelay = _ref.hideDelay,
      hideDelay = _ref$hideDelay === void 0 ? 0 : _ref$hideDelay,
      _onBlur = _ref.onBlur,
      _onFocus = _ref.onFocus,
      _onMouseLeave = _ref.onMouseLeave,
      onMouseOver = _ref.onMouseOver,
      targetWrapperClassName = _ref.targetWrapperClassName,
      _ref$maxWidth = _ref.maxWidth,
      maxWidth = _ref$maxWidth === void 0 ? 360 : _ref$maxWidth,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-tooltip' : _ref$testId,
      _ref$place = _ref.place,
      place = _ref$place === void 0 ? 'auto' : _ref$place,
      _ref$usePortal = _ref.usePortal,
      usePortal = _ref$usePortal === void 0 ? false : _ref$usePortal,
      otherProps = _objectWithoutProperties(_ref, _excluded$7);

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      show = _useState2[0],
      setShow = _useState2[1];

  var elementRef = useRef(null);
  var popperRef = useRef(null);

  var _useState3 = useState(null),
      _useState4 = _slicedToArray(_useState3, 2),
      arrowRef = _useState4[0],
      setArrowRef = _useState4[1];

  var _usePopper = usePopper(elementRef.current, popperRef.current, {
    placement: place,
    modifiers: [{
      name: 'arrow',
      options: {
        element: arrowRef,
        padding: parseFloat(tokens.borderRadiusSmall)
      }
    }, {
      name: 'offset',
      options: {
        offset: [0, 10]
      }
    }]
  }),
      popperStyles = _usePopper.styles,
      attributes = _usePopper.attributes,
      forceUpdate = _usePopper.forceUpdate; // necessary to update tooltip position in case the content is being updated


  useEffect(function () {
    if (forceUpdate !== null) {
      forceUpdate();
    }
  }, [content, forceUpdate]);

  var _useState5 = useState(false),
      _useState6 = _slicedToArray(_useState5, 2),
      isHoveringTarget = _useState6[0],
      setIsHoveringTarget = _useState6[1];

  var _useState7 = useState(false),
      _useState8 = _slicedToArray(_useState7, 2),
      isHoveringContent = _useState8[0],
      setIsHoveringContent = _useState8[1];

  useEffect(function () {
    setShow(isHoveringContent || isHoveringTarget);
  }, [isHoveringTarget, isHoveringContent]);
  useEffect(function () {
    if (isVisible) setShow(true); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  var contentMaxWidth = typeof maxWidth === 'string' ? maxWidth : "".concat(maxWidth, "px");

  var contentStyles = _objectSpread({
    zIndex: tokens.zIndexTooltip,
    maxWidth: contentMaxWidth
  }, popperStyles.popper);

  if (!content) {
    return /*#__PURE__*/React__default.createElement(ContainerElement, {
      className: targetWrapperClassName
    }, children);
  }

  var tooltip = /*#__PURE__*/React__default.createElement("span", _extends({
    id: id,
    ref: popperRef,
    role: "tooltip",
    style: contentStyles,
    className: classnames(styles$7.Tooltip, className),
    "data-test-id": testId,
    onMouseEnter: function onMouseEnter() {
      setIsHoveringContent(true);
    },
    onMouseLeave: function onMouseLeave() {
      setIsHoveringContent(false);
    }
  }, attributes.popper), /*#__PURE__*/React__default.createElement("span", null, content), /*#__PURE__*/React__default.createElement("span", {
    className: styles$7['Tooltip__arrow'],
    "data-placement": attributes.popper && attributes.popper['data-popper-placement'],
    ref: setArrowRef,
    style: popperStyles.arrow
  }));
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(ContainerElement, _extends({
    ref: elementRef,
    className: classnames(styles$7.TooltipContainer, targetWrapperClassName),
    onMouseEnter: function onMouseEnter(evt) {
      setIsHoveringTarget(true);
      if (onMouseOver) onMouseOver(evt);
    },
    onMouseLeave: function onMouseLeave(evt) {
      setTimeout(function () {
        return setIsHoveringTarget(false);
      }, hideDelay);
      if (_onMouseLeave) _onMouseLeave(evt);
    },
    onFocus: function onFocus(evt) {
      setIsHoveringTarget(true);
      if (_onFocus) _onFocus(evt);
    },
    onBlur: function onBlur(evt) {
      setTimeout(function () {
        return setIsHoveringTarget(false);
      }, hideDelay);
      if (_onBlur) _onBlur(evt);
    }
  }, otherProps), children), show ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, usePortal ? /*#__PURE__*/React__default.createElement(Portal, null, tooltip) : tooltip) : null);
};

var _excluded$8 = ["copyValue", "className", "testId", "onCopy", "tooltipPlace", "tooltipText", "tooltipCopiedText"];
var styles$8 = {
  "CopyButton": "CopyButton__CopyButton___OoA5D",
  "CopyButton__button": "CopyButton__CopyButton__button___52Bc0 a11y__focus-outline--default___2hwb1",
  "CopyButton__text": "CopyButton__CopyButton__text___269PQ helpers__sr-only___3Kv3z",
  "CopyButton__TabFocusTrap": "CopyButton__CopyButton__TabFocusTrap___1Q_DQ"
};
function CopyButton(_ref) {
  var copyValue = _ref.copyValue,
      className = _ref.className,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-copy-button' : _ref$testId,
      onCopy = _ref.onCopy,
      tooltipPlace = _ref.tooltipPlace,
      _ref$tooltipText = _ref.tooltipText,
      tooltipText = _ref$tooltipText === void 0 ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, "Copy to ", /*#__PURE__*/React__default.createElement("br", null), " clipboard") : _ref$tooltipText,
      _ref$tooltipCopiedTex = _ref.tooltipCopiedText,
      tooltipCopiedText = _ref$tooltipCopiedTex === void 0 ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, "Copied!") : _ref$tooltipCopiedTex,
      otherProps = _objectWithoutProperties(_ref, _excluded$8);

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      copied = _useState2[0],
      setCopied = _useState2[1];

  var button = useRef(null);
  var tooltipAnchor = useRef(null);
  var handleCopy = useCallback(function (e) {
    if (onCopy) {
      onCopy(e);
    }

    setCopied(true);
    setTimeout(function () {
      setCopied(false);

      if (button.current) {
        button.current.blur();
      }
    }, 1000);
  }, [onCopy]);
  var classNames = classnames(styles$8['CopyButton'], className);
  return /*#__PURE__*/React__default.createElement("div", _extends({
    ref: tooltipAnchor,
    className: classNames,
    id: "copyButton",
    "data-test-id": testId
  }, otherProps), /*#__PURE__*/React__default.createElement(lib, {
    text: copyValue || '',
    onCopy: handleCopy
  }, /*#__PURE__*/React__default.createElement(Tooltip, {
    place: tooltipPlace,
    content: copied ? /*#__PURE__*/React__default.createElement("span", null, tooltipCopiedText) : /*#__PURE__*/React__default.createElement("span", null, tooltipText)
  }, /*#__PURE__*/React__default.createElement("button", {
    type: "button",
    ref: button,
    className: styles$8['CopyButton__button']
  }, /*#__PURE__*/React__default.createElement(TabFocusTrap, {
    className: styles$8['CopyButton__TabFocusTrap']
  }, /*#__PURE__*/React__default.createElement("span", {
    className: styles$8['CopyButton__text']
  }, "Copy ", copyValue, " to clipboard"), /*#__PURE__*/React__default.createElement(Icon, {
    icon: "Copy",
    color: "muted"
  }))))));
}

var _excluded$9 = ["className", "disabled", "error", "id", "inputRef", "isReadOnly", "maxLength", "name", "labelText", "onBlur", "onChange", "onCopy", "onKeyDown", "placeholder", "required", "testId", "type", "value", "width", "willBlurOnEsc", "withCopyButton"];
var styles$9 = {
  "TextInput": "TextInput__TextInput___36-K-",
  "TextInput__input": "TextInput__TextInput__input___27vDB a11y__focus-border--default___60AXp",
  "TextInput--small": "TextInput__TextInput--small___19AFQ",
  "TextInput--medium": "TextInput__TextInput--medium___1bR2D",
  "TextInput--large": "TextInput__TextInput--large___KwY4O",
  "TextInput--full": "TextInput__TextInput--full___1EJEW",
  "TextInput--disabled": "TextInput__TextInput--disabled___2t7VS",
  "TextInput--negative": "TextInput__TextInput--negative___iVq__",
  "TextInput--with-copy-button": "TextInput__TextInput--with-copy-button___4ehAW",
  "TextInput__copy-button": "TextInput__TextInput__copy-button___3Sy2W"
};
var TextInput = function TextInput(_ref) {
  var _cn;

  var className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      error = _ref.error,
      id = _ref.id,
      inputRef = _ref.inputRef,
      _ref$isReadOnly = _ref.isReadOnly,
      isReadOnly = _ref$isReadOnly === void 0 ? false : _ref$isReadOnly,
      maxLength = _ref.maxLength,
      name = _ref.name,
      labelText = _ref.labelText,
      onBlur = _ref.onBlur,
      onChange = _ref.onChange,
      onCopy = _ref.onCopy,
      onKeyDown = _ref.onKeyDown,
      placeholder = _ref.placeholder,
      _ref$required = _ref.required,
      required = _ref$required === void 0 ? false : _ref$required,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-text-input' : _ref$testId,
      type = _ref.type,
      value = _ref.value,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? 'full' : _ref$width,
      _ref$willBlurOnEsc = _ref.willBlurOnEsc,
      willBlurOnEsc = _ref$willBlurOnEsc === void 0 ? true : _ref$willBlurOnEsc,
      _ref$withCopyButton = _ref.withCopyButton,
      withCopyButton = _ref$withCopyButton === void 0 ? false : _ref$withCopyButton,
      otherProps = _objectWithoutProperties(_ref, _excluded$9);

  var _useState = useState(value),
      _useState2 = _slicedToArray(_useState, 2),
      valueState = _useState2[0],
      setValueState = _useState2[1];

  var handleFocus = function handleFocus(e) {
    e.persist();

    if (disabled) {
      e.target.select();
    }
  };

  var handleChange = useCallback(function (e) {
    e.persist();
    if (disabled || isReadOnly) return;

    if (onChange) {
      onChange(e);
    }

    setValueState(e.currentTarget.value);
  }, [onChange, disabled, isReadOnly]);
  var handleKeyDown = useCallback(function (e) {
    e.persist();

    if (onKeyDown) {
      onKeyDown(e);
    }

    if (e.nativeEvent.code === 'Escape' && willBlurOnEsc) {
      e.currentTarget.blur();
    }
  }, [willBlurOnEsc, onKeyDown]);
  useEffect(function () {
    setValueState(value);
  }, [value]);
  var widthClass = "TextInput--".concat(width);
  var classNames = classnames(styles$9['TextInput'], className, styles$9[widthClass], (_cn = {}, _defineProperty(_cn, styles$9['TextInput--disabled'], disabled), _defineProperty(_cn, styles$9['TextInput--negative'], error), _defineProperty(_cn, styles$9['TextInput--with-copy-button'], withCopyButton), _cn));
  return /*#__PURE__*/React__default.createElement("div", {
    className: classNames
  }, /*#__PURE__*/React__default.createElement("input", _extends({
    onKeyDown: handleKeyDown,
    "aria-label": labelText,
    className: styles$9['TextInput__input'],
    id: id,
    name: name,
    required: required,
    placeholder: placeholder,
    maxLength: maxLength,
    "data-test-id": testId,
    disabled: disabled,
    onBlur: onBlur,
    onFocus: handleFocus,
    onChange: handleChange,
    value: valueState,
    type: type,
    ref: inputRef
  }, otherProps)), withCopyButton && /*#__PURE__*/React__default.createElement(CopyButton, {
    onCopy: onCopy,
    copyValue: valueState,
    className: styles$9['TextInput__copy-button']
  }));
};

var _excluded$a = ["className", "disabled", "error", "id", "maxLength", "name", "onBlur", "onChange", "onKeyDown", "placeholder", "required", "resize", "rows", "testId", "textareaRef", "value", "width", "willBlurOnEsc"];
var styles$a = {
  "Textarea": "Textarea__Textarea___qcph7",
  "Textarea__textarea": "Textarea__Textarea__textarea___30c64 a11y__focus-border--default___60AXp",
  "Textarea--small": "Textarea__Textarea--small___3duGT",
  "Textarea--medium": "Textarea__Textarea--medium___2ylrR",
  "Textarea--large": "Textarea__Textarea--large___2jIb0",
  "Textarea--full": "Textarea__Textarea--full___1OW4s",
  "Textarea--disabled": "Textarea__Textarea--disabled___2tLQn",
  "Textarea--negative": "Textarea__Textarea--negative___1RyoO",
  "Textarea--resize-none": "Textarea__Textarea--resize-none___3TaC5",
  "Textarea--resize-both": "Textarea__Textarea--resize-both___3n7KA",
  "Textarea--resize-horizontal": "Textarea__Textarea--resize-horizontal___3U9t-",
  "Textarea--resize-vertical": "Textarea__Textarea--resize-vertical___1J6l-"
};
var Textarea = function Textarea(_ref) {
  var _cn;

  var className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      error = _ref.error,
      id = _ref.id,
      maxLength = _ref.maxLength,
      name = _ref.name,
      onBlur = _ref.onBlur,
      onChange = _ref.onChange,
      onKeyDown = _ref.onKeyDown,
      placeholder = _ref.placeholder,
      _ref$required = _ref.required,
      required = _ref$required === void 0 ? false : _ref$required,
      _ref$resize = _ref.resize,
      resize = _ref$resize === void 0 ? 'vertical' : _ref$resize,
      rows = _ref.rows,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-textarea' : _ref$testId,
      textareaRef = _ref.textareaRef,
      value = _ref.value,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? 'full' : _ref$width,
      _ref$willBlurOnEsc = _ref.willBlurOnEsc,
      willBlurOnEsc = _ref$willBlurOnEsc === void 0 ? true : _ref$willBlurOnEsc,
      otherProps = _objectWithoutProperties(_ref, _excluded$a);

  var _useState = useState(value),
      _useState2 = _slicedToArray(_useState, 2),
      valueState = _useState2[0],
      setValueState = _useState2[1];

  useEffect(function () {
    setValueState(value);
  }, [value]);
  var handleKeyDown = useCallback(function (e) {
    e.persist();

    if (onKeyDown) {
      onKeyDown(e);
    }

    if (e.nativeEvent.code === 'Escape' && willBlurOnEsc) {
      e.currentTarget.blur();
    }
  }, [willBlurOnEsc, onKeyDown]);
  var handleChange = useCallback(function (e) {
    e.persist();
    setValueState(e.target.value);

    if (onChange) {
      onChange(e);
    }
  }, [onChange]);
  var widthClass = "Textarea--".concat(width);
  var resizeClass = "Textarea--resize-".concat(resize);
  var classNames = classnames(styles$a['Textarea'], className, styles$a[widthClass], styles$a[resizeClass], (_cn = {}, _defineProperty(_cn, styles$a['Textarea--disabled'], disabled), _defineProperty(_cn, styles$a['Textarea--negative'], error), _cn));
  return /*#__PURE__*/React__default.createElement("div", {
    className: classNames
  }, /*#__PURE__*/React__default.createElement("textarea", _extends({
    "data-test-id": testId,
    "aria-label": name,
    className: styles$a['Textarea__textarea'],
    id: id,
    rows: rows,
    onBlur: onBlur,
    disabled: disabled,
    placeholder: placeholder,
    name: name,
    onChange: handleChange,
    maxLength: maxLength,
    value: disabled ? value : valueState,
    onKeyDown: handleKeyDown,
    required: required,
    ref: textareaRef
  }, otherProps)));
};

var _excluded$b = ["className", "countCharacters", "formLabelProps", "helpText", "id", "labelText", "name", "onBlur", "onChange", "onFocus", "required", "testId", "textarea", "textInputProps", "textLinkProps", "validationMessage", "value", "width"];
var styles$b = {
  "TextField": "TextField__TextField___Sf6eo",
  "TextField--small": "TextField__TextField--small___13h4C",
  "TextField--medium": "TextField__TextField--medium___1bB-F",
  "TextField--large": "TextField__TextField--large___3GaTm",
  "TextField--full": "TextField__TextField--full___11DBK",
  "TextField__label-wrapper": "TextField__TextField__label-wrapper___2-MJT",
  "TextField__label-link": "TextField__TextField__label-link___u94cw",
  "TextField__validation-message": "TextField__TextField__validation-message___1Idkl",
  "TextField__help-text": "TextField__TextField__help-text___p4rVf",
  "TextField__hints": "TextField__TextField__hints___3Di2P",
  "TextField__count": "TextField__TextField__count___jiTTs"
};
var TextField = function TextField(_ref) {
  var className = _ref.className,
      _ref$countCharacters = _ref.countCharacters,
      countCharacters = _ref$countCharacters === void 0 ? false : _ref$countCharacters,
      formLabelProps = _ref.formLabelProps,
      helpText = _ref.helpText,
      id = _ref.id,
      labelText = _ref.labelText,
      name = _ref.name,
      onBlur = _ref.onBlur,
      onChange = _ref.onChange,
      onFocus = _ref.onFocus,
      _ref$required = _ref.required,
      required = _ref$required === void 0 ? false : _ref$required,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-text-field' : _ref$testId,
      _ref$textarea = _ref.textarea,
      textarea = _ref$textarea === void 0 ? false : _ref$textarea,
      textInputProps = _ref.textInputProps,
      textLinkProps = _ref.textLinkProps,
      validationMessage = _ref.validationMessage,
      value = _ref.value,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? 'full' : _ref$width,
      otherProps = _objectWithoutProperties(_ref, _excluded$b);

  var _useState = useState(value),
      _useState2 = _slicedToArray(_useState, 2),
      valueState = _useState2[0],
      setValueState = _useState2[1]; // Store a copy of the value in state.
  // This is used by this component when the `countCharacters`
  // option is on


  var handleOnChange = useCallback(function (e) {
    setValueState(e.target.value);
    if (onChange) onChange(e);
  }, [onChange]);
  var widthClass = "TextField--".concat(width);
  var classNames = classnames(styles$b['TextField'], styles$b[widthClass], className);
  var Element = textarea ? Textarea : TextInput;
  return /*#__PURE__*/React__default.createElement("div", _extends({
    className: classNames
  }, otherProps, {
    "data-test-id": testId
  }), /*#__PURE__*/React__default.createElement("div", {
    className: styles$b['TextField__label-wrapper']
  }, /*#__PURE__*/React__default.createElement(FormLabel, _extends({}, formLabelProps, {
    htmlFor: id,
    required: required
  }), labelText), textLinkProps && /*#__PURE__*/React__default.createElement(TextLink, _extends({
    className: styles$b['TextField__label-link']
  }, textLinkProps), textLinkProps.text)), /*#__PURE__*/React__default.createElement(Element, _extends({
    error: !!validationMessage,
    name: name,
    id: id,
    onBlur: onBlur,
    onFocus: onFocus,
    onChange: handleOnChange,
    value: value,
    required: required,
    width: 'full'
  }, textInputProps)), (helpText || countCharacters) && /*#__PURE__*/React__default.createElement("div", {
    className: styles$b['TextField__hints']
  }, helpText && /*#__PURE__*/React__default.createElement(HelpText, {
    className: styles$b['TextField__help-text']
  }, helpText), countCharacters && textInputProps && textInputProps.maxLength && /*#__PURE__*/React__default.createElement(HelpText, {
    className: classnames(styles$b['TextField__help-text'], styles$b['TextField__count'])
  }, valueState ? valueState.length : 0, "/", textInputProps.maxLength)), validationMessage && /*#__PURE__*/React__default.createElement(ValidationMessage, {
    className: styles$b['TextField__validation-message']
  }, validationMessage));
};

var _excluded$c = ["className", "testId", "children", "href", "rel", "target", "onClick", "padding", "selected", "ariaLabel"];
var styles$c = {
  "Card": "Card__Card___1_26G",
  "Card--padding-default": "Card__Card--padding-default___xgDF9",
  "Card--padding-large": "Card__Card--padding-large___2KzUK",
  "Card--padding-none": "Card__Card--padding-none___1_Xu1",
  "Card--is-interactive": "Card__Card--is-interactive___3nFqr",
  "Card--is-selected": "Card__Card--is-selected___IBDSP"
};
var Card = function Card(_ref) {
  var _cn;

  var className = _ref.className,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-card' : _ref$testId,
      children = _ref.children,
      href = _ref.href,
      _ref$rel = _ref.rel,
      rel = _ref$rel === void 0 ? 'noreferrer' : _ref$rel,
      target = _ref.target,
      onClick = _ref.onClick,
      _ref$padding = _ref.padding,
      padding = _ref$padding === void 0 ? 'default' : _ref$padding,
      _ref$selected = _ref.selected,
      selected = _ref$selected === void 0 ? false : _ref$selected,
      ariaLabel = _ref.ariaLabel,
      otherProps = _objectWithoutProperties(_ref, _excluded$c);

  var classNames = classnames(styles$c.Card, className, (_cn = {}, _defineProperty(_cn, styles$c["Card--padding-".concat(padding)], padding), _defineProperty(_cn, styles$c['Card--is-interactive'], onClick || href), _defineProperty(_cn, styles$c['Card--is-selected'], selected), _cn));
  var Element = href ? 'a' : 'div';
  var handleClick = onClick ? function (event) {
    return onClick(event);
  } : undefined;
  var handleKeyDown = onClick ? function (event) {
    if (event.nativeEvent.code === 'Enter' || event.nativeEvent.code === 'Space') {
      onClick(event);
      event.currentTarget.focus();
    }
  } : undefined;
  return /*#__PURE__*/React__default.createElement(Element, _extends({
    className: classNames,
    href: href,
    rel: href && rel,
    target: target,
    "data-test-id": testId,
    "aria-label": otherProps.title || ariaLabel,
    "aria-pressed": onClick ? selected ? 'true' : 'false' : undefined,
    tabIndex: onClick ? 0 : undefined,
    role: onClick ? 'button' : undefined,
    onClick: handleClick,
    onKeyDown: handleKeyDown
  }, otherProps), children);
};

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

var _typeof_1 = createCommonjsModule(function (module) {
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
  }

  return _typeof(obj);
}

module.exports = _typeof;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

var _typeof = unwrapExports(_typeof_1);

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

var _excluded$d = ["isActive", "isDisabled", "isTitle", "onClick", "submenuToggleLabel", "testId"],
    _excluded2 = ["onEnter", "onLeave", "onFocus", "children"],
    _excluded3 = ["onMouseDown", "href", "children", "listItemRef"];
var styles$d = {
  "DropdownListItem": "DropdownListItem__DropdownListItem___LOUnP",
  "DropdownListItem__button": "DropdownListItem__DropdownListItem__button___1Po6h a11y__focus-outline--default___2hwb1",
  "DropdownListItem__submenu-toggle": "DropdownListItem__DropdownListItem__submenu-toggle___1SVw1",
  "DropdownListItem__button__inner-wrapper": "DropdownListItem__DropdownListItem__button__inner-wrapper___LFlkP",
  "DropdownListItem--disabled": "DropdownListItem__DropdownListItem--disabled___1txXv",
  "DropdownListItem--active": "DropdownListItem__DropdownListItem--active___21eet",
  "DropdownListItem--title": "DropdownListItem__DropdownListItem--title___CyVKB"
};
var DropdownListItem = /*#__PURE__*/forwardRef(function DropdownListItem(_ref, refCallback) {
  var _cn;

  var _ref$isActive = _ref.isActive,
      isActive = _ref$isActive === void 0 ? false : _ref$isActive,
      _ref$isDisabled = _ref.isDisabled,
      isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,
      _ref$isTitle = _ref.isTitle,
      isTitle = _ref$isTitle === void 0 ? false : _ref$isTitle,
      onClick = _ref.onClick,
      submenuToggleLabel = _ref.submenuToggleLabel,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-dropdown-list-item' : _ref$testId,
      props = _objectWithoutProperties(_ref, _excluded$d);

  // We're not dealing with React RefObjects but with useState (because we
  // want to re-render on all changes)
  var setReference = refCallback;
  var renderSubmenuToggle = useCallback(function () {
    var onEnter = props.onEnter,
        onLeave = props.onLeave,
        onFocus = props.onFocus,
        children = props.children,
        otherProps = _objectWithoutProperties(props, _excluded2);

    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("button", _extends({
      type: "button",
      "data-test-id": "cf-ui-dropdown-submenu-toggle",
      className: styles$d['DropdownListItem__button'],
      onClick: onClick,
      onMouseEnter: onEnter,
      onFocus: onFocus,
      onMouseLeave: onLeave
    }, otherProps), /*#__PURE__*/React__default.createElement(TabFocusTrap, {
      className: styles$d['DropdownListItem__button__inner-wrapper']
    }, submenuToggleLabel)), children);
  }, [onClick, submenuToggleLabel, props]);
  var renderListItem = useCallback(function () {
    var onMouseDown = props.onMouseDown,
        href = props.href,
        children = props.children,
        listItemRef = props.listItemRef,
        otherProps = _objectWithoutProperties(props, _excluded3);

    var isClickable = onClick || onMouseDown || href;

    if (isClickable) {
      var Element = href ? 'a' : 'button';
      var buttonProps = {
        disabled: isDisabled,
        'aria-disabled': isDisabled
      };
      var linkProps = {
        href: href
      };
      return /*#__PURE__*/React__default.createElement(Element, _extends({
        onClick: !isDisabled && onClick !== undefined ? onClick : undefined,
        onMouseDown: !isDisabled && onMouseDown !== undefined ? onMouseDown : undefined,
        type: "button"
      }, href ? linkProps : buttonProps, otherProps, {
        className: styles$d['DropdownListItem__button'],
        "data-test-id": "cf-ui-dropdown-list-item-button"
      }), /*#__PURE__*/React__default.createElement(TabFocusTrap, {
        className: styles$d['DropdownListItem__button__inner-wrapper']
      }, children));
    }

    return children;
  }, [isDisabled, onClick, props]);
  var className = props.className,
      listItemRef = props.listItemRef,
      onMouseDown = props.onMouseDown,
      href = props.href;
  var classNames = classnames(styles$d['DropdownListItem'], className, (_cn = {}, _defineProperty(_cn, styles$d['DropdownListItem__submenu-toggle'], submenuToggleLabel || onClick || onMouseDown || href), _defineProperty(_cn, styles$d['DropdownListItem--disabled'], isDisabled), _defineProperty(_cn, styles$d['DropdownListItem--active'], isActive), _defineProperty(_cn, styles$d['DropdownListItem--title'], isTitle), _cn));
  return /*#__PURE__*/React__default.createElement("li", {
    className: classNames,
    "data-test-id": testId,
    role: "menuitem",
    ref: function ref(node) {
      if (setReference) {
        setReference(node);
      }

      if (listItemRef) {
        listItemRef.current = node;
      }
    }
  }, submenuToggleLabel ? renderSubmenuToggle() : renderListItem());
});
DropdownListItem.displayName = 'DropdownListItem';

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

/**
 * Runs the given handler when a click event is fired outside the HTMLElement
 * the given RefObject points to.
 *
 * @param refs - RefObject[] pointing to a HTMLElement to track clicks outside
 * @param handler - Event handler to run on click outside
 */

function useOnClickOutside(refs, handler) {
  var noHandler = !handler;
  var handlerRef = useRef(handler);
  useEffect(function () {
    if (noHandler) {
      return;
    }

    var refContains = function refContains(ref, node) {
      return ref.current && ref.current.contains(node);
    };

    var listener = function listener(event) {
      if (!handlerRef.current || refs.some(function (ref) {
        return refContains(ref, event.target);
      })) {
        return;
      }

      handlerRef.current(event);
    };

    document.addEventListener('click', listener, {});
    return function () {
      document.removeEventListener('click', listener, {});
    };
  }, [noHandler, refs]);
}

var _excluded$e = ["children", "className", "getRef", "isOpen", "onClose", "openSubmenu", "style", "submenu", "testId", "usePortal", "nonClosingRefs", "focusContainerOnOpen"];
var styles$e = {
  "DropdownContainer": "DropdownContainer__DropdownContainer___3WlJM"
};
var DropdownContainer = /*#__PURE__*/forwardRef(function DropdownContainer(_ref, refCallback) {
  var children = _ref.children,
      className = _ref.className,
      getRef = _ref.getRef,
      isOpen = _ref.isOpen,
      onClose = _ref.onClose,
      openSubmenu = _ref.openSubmenu,
      style = _ref.style,
      _ref$submenu = _ref.submenu,
      submenu = _ref$submenu === void 0 ? false : _ref$submenu,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-dropdown-portal' : _ref$testId,
      _ref$usePortal = _ref.usePortal,
      usePortal = _ref$usePortal === void 0 ? true : _ref$usePortal,
      nonClosingRefs = _ref.nonClosingRefs,
      focusContainerOnOpen = _ref.focusContainerOnOpen,
      props = _objectWithoutProperties(_ref, _excluded$e);

  // We're not dealing with React RefObjects but with useState (because we
  // want to re-render on all changes)
  var setReference = refCallback;
  var dropdown = useRef(null);
  var classNames = classnames(className, styles$e['DropdownContainer']);
  var clickableRefs = [dropdown].concat(_toConsumableArray(nonClosingRefs || []));
  useOnClickOutside(clickableRefs, function (event) {
    if (isOpen && onClose) {
      event.stopImmediatePropagation();
      onClose(event);
    }
  });
  useEffect(function () {
    if (getRef && dropdown.current) {
      getRef(dropdown.current);
    }

    if (focusContainerOnOpen && dropdown.current) {
      dropdown.current.focus({
        preventScroll: true
      });
    }
  }, [getRef, focusContainerOnOpen]);
  var dropdownComponent = /*#__PURE__*/React__default.createElement("div", _extends({}, props, {
    className: classNames,
    "data-test-id": testId // tabIndex is Necessary to focus the container for keyboard accessibility
    // eslint-disable-next-line
    ,
    tabIndex: 0,
    onMouseEnter: function onMouseEnter() {
      if (openSubmenu) {
        openSubmenu(true);
      }
    },
    onFocus: function onFocus() {
      if (openSubmenu) {
        openSubmenu(true);
      }
    },
    onMouseLeave: function onMouseLeave() {
      if (openSubmenu) {
        openSubmenu(false);
      }
    },
    ref: function ref(node) {
      setReference(node);
      dropdown.current = node;
    },
    style: style
  }), children);
  return submenu || usePortal === false ? dropdownComponent : /*#__PURE__*/React__default.createElement(Portal, null, dropdownComponent);
});
DropdownContainer.displayName = 'DropdownContainer';

var _excluded$f = ["children", "className", "dropdownContainerClassName", "getContainerRef", "isAutoalignmentEnabled", "isFullWidth", "isOpen", "onClose", "position", "submenuToggleLabel", "testId", "toggleElement", "usePortal", "nonClosingRefs", "focusContainerOnOpen"];
var styles$f = {
  "Dropdown": "Dropdown__Dropdown___nAsJ-"
};
var offsetModifier = {
  name: 'offset',
  options: {
    offset: [0, 0]
  }
};
/**
 * Popper.js modifier to give the popper element the full width of the reference
 */

var sameWidth = {
  name: 'sameWidth',
  enabled: true,
  phase: 'beforeWrite',
  requires: ['computeStyles'],
  fn: function fn(_ref) {
    var state = _ref.state;
    state.styles.popper.width = "".concat(state.rects.reference.width, "px");
  },
  effect: function effect(_ref2) {
    var state = _ref2.state;
    var reference = state.elements.reference;
    state.elements.popper.style.width = "".concat(reference.offsetWidth, "px");
    return function () {};
  }
};

/**
 * Helper method to map our current Dropdown position props to Popper.js
 * placements.
 *
 * @todo: Maybe we can use the Popper placements in the next breaking change?
 */
var mapPositionTypeToPlacement = function mapPositionTypeToPlacement(position) {
  switch (position) {
    case 'bottom-left':
      return 'bottom-start';

    case 'bottom-right':
      return 'bottom-end';

    case 'right':
      return 'right-start';

    case 'left':
      return 'left-start';

    case 'top-left':
      return 'top-start';

    case 'top-right':
      return 'top-end';

    default:
      return position;
  }
};

function Dropdown(_ref3) {
  var children = _ref3.children,
      className = _ref3.className,
      dropdownContainerClassName = _ref3.dropdownContainerClassName,
      getContainerRef = _ref3.getContainerRef,
      _ref3$isAutoalignment = _ref3.isAutoalignmentEnabled,
      isAutoalignmentEnabled = _ref3$isAutoalignment === void 0 ? true : _ref3$isAutoalignment,
      isFullWidth = _ref3.isFullWidth,
      _ref3$isOpen = _ref3.isOpen,
      isOpenProp = _ref3$isOpen === void 0 ? false : _ref3$isOpen,
      onClose = _ref3.onClose,
      _ref3$position = _ref3.position,
      position = _ref3$position === void 0 ? 'bottom-left' : _ref3$position,
      submenuToggleLabel = _ref3.submenuToggleLabel,
      _ref3$testId = _ref3.testId,
      testId = _ref3$testId === void 0 ? 'cf-ui-dropdown' : _ref3$testId,
      toggleElement = _ref3.toggleElement,
      usePortal = _ref3.usePortal,
      nonClosingRefs = _ref3.nonClosingRefs,
      _ref3$focusContainerO = _ref3.focusContainerOnOpen,
      focusContainerOnOpen = _ref3$focusContainerO === void 0 ? true : _ref3$focusContainerO,
      otherProps = _objectWithoutProperties(_ref3, _excluded$f);

  var _useState = useState(null),
      _useState2 = _slicedToArray(_useState, 2),
      referenceElement = _useState2[0],
      setReferenceElement = _useState2[1];

  var _useState3 = useState(null),
      _useState4 = _slicedToArray(_useState3, 2),
      popperElement = _useState4[0],
      setPopperElement = _useState4[1];

  var _useState5 = useState(isOpenProp),
      _useState6 = _slicedToArray(_useState5, 2),
      isOpen = _useState6[0],
      setIsOpen = _useState6[1];

  var placement = mapPositionTypeToPlacement(position);

  var _usePopper = usePopper(referenceElement, popperElement, {
    placement: placement,
    modifiers: [offsetModifier, isFullWidth ? sameWidth : {}, isAutoalignmentEnabled !== undefined ? {
      name: 'preventOverflow',
      options: {
        mainAxis: isAutoalignmentEnabled
      }
    } : {}, isAutoalignmentEnabled === false ? {
      name: 'flip',
      options: {
        fallbackPlacements: []
      }
    } : {}]
  }),
      attributes = _usePopper.attributes,
      forceUpdate = _usePopper.forceUpdate,
      popperStyles = _usePopper.styles;

  var classNames = classnames(styles$f['Dropdown'], className);
  var containerTestId = testId ? "".concat(testId, "-container") : testId;
  var toggleElementIdSuffix = useRef(Math.random() * Date.now());
  var toggleElementId = "dropdown-trigger-".concat(toggleElementIdSuffix.current);
  useEffect(function () {
    setIsOpen(isOpenProp);
  }, [isOpenProp]);
  useEffect(function () {
    if (forceUpdate) {
      forceUpdate();
    }
  }, [children, forceUpdate]);

  var openSubmenu = function openSubmenu(isOpen) {
    if (submenuToggleLabel) {
      setIsOpen(isOpen);
    }
  };

  var handleOnClose = useCallback(function () {
    var toggleElementNode = document.querySelector("[data-node-id=\"".concat(toggleElementId, "\"]"));
    toggleElementNode === null || toggleElementNode === void 0 ? void 0 : toggleElementNode.focus();

    if (onClose) {
      onClose();
    }
  }, [toggleElementId, onClose]);
  var close = useCallback(function () {
    setIsOpen(false);
    handleOnClose();
  }, [handleOnClose, setIsOpen]);
  var handleEscapeKey = useCallback(function (event) {
    if (event.code === 'Escape') {
      event.stopPropagation();
      close();
    }
  }, [close]);
  useEffect(function () {
    if (isOpen) {
      document.addEventListener('keydown', handleEscapeKey, true);
      return function () {
        document.removeEventListener('keydown', handleEscapeKey, true);
      };
    }
  }, [handleEscapeKey, isOpen]);
  return submenuToggleLabel ? /*#__PURE__*/React__default.createElement(DropdownListItem, _extends({
    testId: testId,
    submenuToggleLabel: submenuToggleLabel,
    onEnter: function onEnter() {
      return setIsOpen(true);
    },
    onClick: function onClick() {
      return setIsOpen(true);
    },
    onLeave: function onLeave() {
      return setIsOpen(false);
    },
    "aria-expanded": isOpen,
    ref: setReferenceElement
  }, otherProps), toggleElement && /*#__PURE__*/React__default.cloneElement(toggleElement, {
    'aria-haspopup': 'menu',
    'aria-expanded': isOpen
  }), isOpen && /*#__PURE__*/React__default.createElement(DropdownContainer, _extends({
    nonClosingRefs: nonClosingRefs,
    className: dropdownContainerClassName,
    getRef: getContainerRef,
    isOpen: isOpen,
    onClose: handleOnClose,
    openSubmenu: openSubmenu,
    ref: setPopperElement,
    style: popperStyles.popper,
    submenu: true,
    focusContainerOnOpen: focusContainerOnOpen,
    usePortal: usePortal
  }, attributes.popper), children)) : /*#__PURE__*/React__default.createElement("div", _extends({
    "data-test-id": testId,
    className: classNames,
    ref: setReferenceElement
  }, otherProps), toggleElement && /*#__PURE__*/React__default.cloneElement(toggleElement, {
    'aria-haspopup': 'menu',
    'aria-expanded': isOpen,
    'data-node-id': toggleElementId
  }), isOpen && /*#__PURE__*/React__default.createElement(DropdownContainer, _extends({
    nonClosingRefs: nonClosingRefs,
    className: dropdownContainerClassName,
    getRef: getContainerRef,
    isOpen: isOpen,
    onClose: handleOnClose,
    openSubmenu: openSubmenu,
    ref: setPopperElement,
    style: popperStyles.popper,
    submenu: false,
    focusContainerOnOpen: focusContainerOnOpen,
    testId: containerTestId,
    usePortal: usePortal
  }, attributes.popper), children));
}

var _excluded$g = ["className", "border", "maxHeight", "testId", "children", "listRef", "styles"];

function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var cssStyles = {
  "DropdownList": "DropdownList__DropdownList___2EMLM",
  "DropdownList--border-top": "DropdownList__DropdownList--border-top___ojlyY",
  "DropdownList--border-bottom": "DropdownList__DropdownList--border-bottom___3F_82"
};
var DropdownList = function DropdownList(_ref) {
  var className = _ref.className,
      border = _ref.border,
      maxHeight = _ref.maxHeight,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-dropdown-list' : _ref$testId,
      children = _ref.children,
      listRef = _ref.listRef,
      styles = _ref.styles,
      otherProps = _objectWithoutProperties(_ref, _excluded$g);

  var classNames = classnames(cssStyles['DropdownList'], className, _defineProperty({}, cssStyles["DropdownList--border-".concat(border)], border));
  return /*#__PURE__*/React__default.createElement("ul", _extends({
    ref: listRef,
    "data-test-id": testId,
    role: "menu",
    style: _objectSpread$1({
      maxHeight: maxHeight || 'auto',
      overflowY: maxHeight ? 'auto' : 'visible'
    }, styles),
    className: classNames
  }, otherProps), children);
};

var _excluded$h = ["buttonType", "className", "disabled", "href", "iconProps", "label", "onClick", "testId", "withDropdown", "target", "rel"];

function ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$2(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var styles$g = {
  "IconButton": "IconButton__IconButton___1_XeU a11y__focus-outline--default___2hwb1",
  "IconButton__inner": "IconButton__IconButton__inner___3fnmT",
  "IconButton--primary": "IconButton__IconButton--primary___1nYDN",
  "IconButton__icon": "IconButton__IconButton__icon___3yZQN",
  "IconButton--positive": "IconButton__IconButton--positive___HkCX3",
  "IconButton--negative": "IconButton__IconButton--negative___dW81q",
  "IconButton--secondary": "IconButton__IconButton--secondary___3Gc3d",
  "IconButton--muted": "IconButton__IconButton--muted___22_IZ",
  "IconButton--white": "IconButton__IconButton--white___3GUQP",
  "IconButton--disabled": "IconButton__IconButton--disabled___1YhDh",
  "IconButton__label": "IconButton__IconButton__label___1kp5y helpers__sr-only___3Kv3z",
  "IconButton__dropdown": "IconButton__IconButton__dropdown___NoDIS"
};
var IconButton = function IconButton(_ref) {
  var _cn;

  var _ref$buttonType = _ref.buttonType,
      buttonType = _ref$buttonType === void 0 ? 'primary' : _ref$buttonType,
      className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      href = _ref.href,
      iconProps = _ref.iconProps,
      label = _ref.label,
      onClick = _ref.onClick,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-icon-button' : _ref$testId,
      _ref$withDropdown = _ref.withDropdown,
      withDropdown = _ref$withDropdown === void 0 ? false : _ref$withDropdown,
      target = _ref.target,
      rel = _ref.rel,
      otherProps = _objectWithoutProperties(_ref, _excluded$h);

  var classNames = classnames(styles$g.IconButton, className, (_cn = {}, _defineProperty(_cn, styles$g['IconButton--disabled'], disabled), _defineProperty(_cn, styles$g["IconButton--".concat(buttonType)], buttonType), _cn));

  var elementProps = _objectSpread$2({
    className: classNames,
    onClick: !disabled ? onClick : undefined,
    'data-test-id': testId
  }, otherProps);

  var content = /*#__PURE__*/React__default.createElement(TabFocusTrap, {
    className: styles$g.IconButton__inner
  }, /*#__PURE__*/React__default.createElement(Icon, _extends({}, iconProps, {
    className: classnames(styles$g.IconButton__icon, iconProps.className)
  })), label && /*#__PURE__*/React__default.createElement("span", {
    className: styles$g.IconButton__label
  }, label), withDropdown && /*#__PURE__*/React__default.createElement(Icon, {
    icon: "ChevronDown",
    color: "secondary",
    className: styles$g.IconButton__dropdown
  }));

  if (href) {
    if (disabled) {
      return /*#__PURE__*/React__default.createElement("a", elementProps, content);
    }

    return /*#__PURE__*/React__default.createElement("a", _extends({}, elementProps, {
      href: href,
      target: target,
      rel: rel
    }), content);
  }

  return /*#__PURE__*/React__default.createElement("button", _extends({}, elementProps, {
    type: "button",
    disabled: disabled
  }), content);
};

var _excluded$i = ["className", "children", "testId", "iconButtonProps", "isDisabled"];

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }
var defaultProps = {
  testId: 'cf-ui-card-actions',
  isDisabled: false
};
var CardActions = /*#__PURE__*/function (_Component) {
  _inherits(CardActions, _Component);

  var _super = _createSuper(CardActions);

  function CardActions() {
    var _this;

    _classCallCheck(this, CardActions);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      isDropdownOpen: false
    };

    _this.handleClick = function (event) {
      _this.setState(function (prevState) {
        return {
          isDropdownOpen: !prevState.isDropdownOpen
        };
      });

      if (_this.props.iconButtonProps && _this.props.iconButtonProps.onClick) {
        event.stopPropagation();
      }
    };

    return _this;
  }

  _createClass(CardActions, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          className = _this$props.className,
          children = _this$props.children,
          testId = _this$props.testId,
          iconButtonProps = _this$props.iconButtonProps,
          isDisabled = _this$props.isDisabled,
          otherProps = _objectWithoutProperties(_this$props, _excluded$i);

      return /*#__PURE__*/React__default.createElement(Dropdown, _extends({
        onClose: function onClose() {
          _this2.setState({
            isDropdownOpen: false
          });
        },
        position: "bottom-right",
        className: className,
        isOpen: this.state.isDropdownOpen,
        testId: testId,
        toggleElement: /*#__PURE__*/React__default.createElement(IconButton, _extends({
          iconProps: {
            icon: 'MoreHorizontal'
          },
          buttonType: "secondary",
          disabled: isDisabled,
          label: "Actions"
        }, iconButtonProps, {
          onClick: function onClick(event) {
            event.preventDefault();

            _this2.handleClick(event);
          }
        }))
      }, otherProps), React__default.Children.map(children, function (listItems) {
        return React__default.Children.map(listItems, function (item) {
          // React.Children behaves differently if the object is a Fragment.
          var resolvedChildren = item.type === React__default.Fragment ? item.props.children : item;
          var enhancedChildren = React__default.Children.map(resolvedChildren, function (child) {
            return /*#__PURE__*/React__default.cloneElement(child, {
              onClick: function onClick(e) {
                if (child.props.onClick) {
                  child.props.onClick(e);
                }

                _this2.setState({
                  isDropdownOpen: false
                });

                e.stopPropagation();
              }
            });
          });
          return enhancedChildren;
        });
      }));
    }
  }]);

  return CardActions;
}(Component$1);
CardActions.defaultProps = defaultProps;

var illustrationName = {
  Archive: 'Archive',
  Audio: 'Audio',
  Code: 'Code',
  Image: 'Image',
  Markup: 'Markup',
  Pdf: 'Pdf',
  Plaintext: 'Plaintext',
  Presentation: 'Presentation',
  Richtext: 'Richtext',
  Spreadsheet: 'Spreadsheet',
  Video: 'Video'
};

function SvgArchive(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("g", {
    fill: "none",
    stroke: "#000",
    strokeLinejoin: "round",
    strokeMiterlimit: 10
  }, /*#__PURE__*/createElement("path", {
    strokeLinecap: "round",
    d: "M20.5 23.5h-17V.5h13l4 4z"
  }), /*#__PURE__*/createElement("path", {
    strokeLinecap: "round",
    d: "M11.5.5v2.001h1v5h-3V2.5M10.5 9.5h1M10.5 11.5h1M10.5 13.5h1M10.5 15.5h1M10.5 17.5h1M10.5 19.5h1M10.5 21.5h1M11.5 10.5h1M11.5 12.5h1M11.5 14.5h1M11.5 16.5h1M11.5 18.5h1M11.5 20.5h1"
  }), /*#__PURE__*/createElement("path", {
    d: "M9.5 5.5H11"
  })));
}

function SvgAudio(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("g", {
    fill: "none",
    stroke: "#000",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeMiterlimit: 10
  }, /*#__PURE__*/createElement("path", {
    d: "M9 12.5H7.25a.75.75 0 00-.75.75v1.5c0 .414.336.75.75.75H9l3.5 3.5V9L9 12.5zM16 11c.834.688 1.5 1.835 1.5 3 0 1.163-.669 2.312-1.5 3M14 12.25c.562.409 1 1.001 1 1.75 0 .749-.438 1.341-1 1.75"
  }), /*#__PURE__*/createElement("path", {
    d: "M21.5 23.5h-19V.5h13l6 6z"
  }), /*#__PURE__*/createElement("path", {
    d: "M15.5.5v6h6"
  })));
}

function SvgCode$5(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 24 24",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeMiterlimit: 10,
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("g", {
    fill: "none",
    stroke: "#000"
  }, /*#__PURE__*/createElement("path", {
    d: "M21.7 23.5h-19V.5h13l6 6v17z"
  }), /*#__PURE__*/createElement("path", {
    d: "M15.7.5v6h6"
  }), /*#__PURE__*/createElement("g", {
    strokeMiterlimit: 4
  }, /*#__PURE__*/createElement("path", {
    d: "M10.776 9.095c-3.326 0 .475 4.274-3.326 5.225M10.776 19.544c-3.326 0 .475-4.274-3.326-5.225"
  }), /*#__PURE__*/createElement("g", null, /*#__PURE__*/createElement("path", {
    d: "M13.626 9.095c3.324 0-.475 4.274 3.324 5.225M13.626 19.544c3.324 0-.475-4.274 3.324-5.225"
  })))));
}

function SvgImage(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("g", {
    fill: "none",
    stroke: "#000",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeMiterlimit: 10
  }, /*#__PURE__*/createElement("path", {
    d: "M19.5 23.5H.5V.5h13l6 6z"
  }), /*#__PURE__*/createElement("path", {
    d: "M13.5.5v6h6M13 11l-3 5.5-2-2-2.5 5h10z"
  }), /*#__PURE__*/createElement("circle", {
    cx: 7,
    cy: 9,
    r: 1.5
  })));
}

function SvgMarkup(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    viewBox: "0 0 24 24",
    fillRule: "evenodd",
    clipRule: "evenodd",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeMiterlimit: 10,
    width: "1em",
    height: "1em"
  }, props), /*#__PURE__*/createElement("g", {
    fill: "none",
    stroke: "#000"
  }, /*#__PURE__*/createElement("path", {
    d: "M20.688 23.492h-17v-23h11l6 6v17z"
  }), /*#__PURE__*/createElement("path", {
    d: "M14.688.492v6h6M14.688 10.492l4 4-4 4M9.688 10.492l-4 4 4 4"
  })));
}

function SvgPdf(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("g", {
    fill: "none",
    stroke: "#000",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeMiterlimit: 10
  }, /*#__PURE__*/createElement("path", {
    d: "M15.5.5v6h6"
  }), /*#__PURE__*/createElement("path", {
    d: "M21.5 23.5h-19V.5h13l6 6z"
  }), /*#__PURE__*/createElement("path", {
    d: "M11.5 18.5v-5h1c1.152 0 2 1.068 2 2.5s-.848 2.5-2 2.5h-1zM16.5 18.5v-5H19M16.5 15.5H18M6.5 18.499V13.5h1.25a1.25 1.25 0 110 2.5H6.5"
  })));
}

function SvgPlaintext(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("g", {
    fill: "none",
    stroke: "#000",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeMiterlimit: 10
  }, /*#__PURE__*/createElement("path", {
    d: "M21.5 23.5h-19V.5h13l6 6z"
  }), /*#__PURE__*/createElement("path", {
    d: "M15.5.5v6h6M7.5 7.5H12M7.5 10.5h9M7.5 13.5h3M7.5 16.5h3M7.5 19.5h3"
  }), /*#__PURE__*/createElement("g", null, /*#__PURE__*/createElement("path", {
    d: "M12.5 14.5v-1h4v1M14.5 13.5v6M13 19.5h3"
  }))));
}

function SvgPresentation(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("g", {
    fill: "none",
    stroke: "#000",
    strokeLinejoin: "round",
    strokeMiterlimit: 10
  }, /*#__PURE__*/createElement("path", {
    d: "M.5.5h22v3H.5z"
  }), /*#__PURE__*/createElement("path", {
    strokeLinecap: "round",
    d: "M.521 17.5h21.958"
  }), /*#__PURE__*/createElement("path", {
    d: "M2.5 3.5h18v14h-18zM11.5 17.5v3"
  }), /*#__PURE__*/createElement("circle", {
    cx: 11.5,
    cy: 22,
    r: 1.5
  }), /*#__PURE__*/createElement("g", {
    strokeLinecap: "round"
  }, /*#__PURE__*/createElement("path", {
    d: "M10.5 8.228l3.272 2.272-3.272 2.272z"
  }), /*#__PURE__*/createElement("circle", {
    cx: 11.5,
    cy: 10.5,
    r: 5
  }))));
}

function SvgRichtext(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("g", {
    fill: "none",
    stroke: "#000",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeMiterlimit: 10
  }, /*#__PURE__*/createElement("path", {
    d: "M21.5 23.5h-19V.5h13l6 6z"
  }), /*#__PURE__*/createElement("path", {
    d: "M15.5.5v6h6"
  })), /*#__PURE__*/createElement("path", {
    fill: "none",
    stroke: "#000",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeMiterlimit: 10,
    d: "M6.5 7.5h5M6.5 10.5h9M6.5 13.5h2M6.5 16.5h2M6.5 19.5h2M11.542 20.5H17.5l-2.479-4z"
  }), /*#__PURE__*/createElement("path", {
    fill: "none",
    stroke: "#000",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeMiterlimit: 10,
    d: "M11.5 13.5h6v7h-6z"
  }), /*#__PURE__*/createElement("path", {
    d: "M13.5 15a.5.5 0 10.002 1.002A.5.5 0 0013.5 15z"
  }));
}

function SvgSpreadsheet(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("g", {
    fill: "none",
    stroke: "#000",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeMiterlimit: 10
  }, /*#__PURE__*/createElement("path", {
    d: "M20.5 23.5h-17V.5h11l6 6z"
  }), /*#__PURE__*/createElement("path", {
    d: "M14.5.5v6h6M6.5 8.5h11v12h-11zM6.5 11.5h11M6.5 14.5h11M6.5 17.5h11M10.5 8.5v12"
  })));
}

function SvgVideo(props) {
  return /*#__PURE__*/createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24"
  }, props), /*#__PURE__*/createElement("g", {
    fill: "none",
    stroke: "#000",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeMiterlimit: 10
  }, /*#__PURE__*/createElement("path", {
    d: "M20.5 23.5h-17V.5h11l6 6z"
  }), /*#__PURE__*/createElement("path", {
    d: "M14.5.5v6h6M8.5 8.5l8 5-8 5z"
  })));
}

var _excluded$j = ["className", "testId", "illustration"];
var styles$h = {
  "Illustration": "Illustration__Illustration___1R5Px"
};
var ILLUSTRATION_NAMES = Object.keys(illustrationName);
function isIllustrationType(name) {
  return ILLUSTRATION_NAMES.includes(name);
}
function Illustration(_ref) {
  var className = _ref.className,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-illustration' : _ref$testId,
      illustration = _ref.illustration,
      otherProps = _objectWithoutProperties(_ref, _excluded$j);

  var illustrationComponents = {
    Archive: SvgArchive,
    Audio: SvgAudio,
    Richtext: SvgRichtext,
    Code: SvgCode$5,
    Image: SvgImage,
    Markup: SvgMarkup,
    Pdf: SvgPdf,
    Plaintext: SvgPlaintext,
    Presentation: SvgPresentation,
    Spreadsheet: SvgSpreadsheet,
    Video: SvgVideo
  };
  var classNames = classnames(styles$h['Illustration'], className);
  var Element = illustrationComponents[illustration];
  return /*#__PURE__*/React__default.createElement(Element, _extends({}, otherProps, {
    "data-test-id": testId,
    className: classNames
  }));
}

var _excluded$k = ["type", "testId"];
var DEFAULT_ILLUSTRATION_NAME = 'Archive';

/**
 * Renders only the Illustration that would represent this asset's type
 */
function AssetIcon(_ref) {
  var _ref$type = _ref.type,
      type = _ref$type === void 0 ? 'archive' : _ref$type,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-asset-icon' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$k);

  var illustrationName = type.charAt(0).toUpperCase() + type.slice(1); // eslint-disable-line @typescript-eslint/no-non-null-assertion

  if (!isIllustrationType(illustrationName)) {
    illustrationName = DEFAULT_ILLUSTRATION_NAME;
  }

  return /*#__PURE__*/React__default.createElement(Illustration, _extends({
    illustration: illustrationName,
    testId: testId
  }, otherProps));
}

var _excluded$l = ["className", "src", "status", "testId", "title", "type"];
var styles$i = {
  "Asset": "Asset__Asset___1zgnB",
  "Asset__image-container": "Asset__Asset__image-container___1oHDv",
  "Asset__image-container__image": "Asset__Asset__image-container__image___3J2Ik",
  "Asset__title-container": "Asset__Asset__title-container___jUj2R",
  "Asset__title-container__title": "Asset__Asset__title-container__title___1AHiK",
  "Asset__asset-container": "Asset__Asset__asset-container___226So",
  "Asset__asset-container__title": "Asset__Asset__asset-container__title___y3fAq",
  "Asset__illustration-container": "Asset__Asset__illustration-container___D0AVE"
};
var types = {
  archive: 'archive',
  audio: 'audio',
  code: 'code',
  image: 'image',
  markup: 'markup',
  pdf: 'pdf',
  plaintext: 'plaintext',
  presentation: 'presentation',
  richtext: 'richtext',
  spreadsheet: 'spreadsheet',
  video: 'video'
};
function isAssetType(type) {
  return Object.keys(types).includes(type);
}
function Asset(_ref) {
  var className = _ref.className,
      src = _ref.src,
      status = _ref.status,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-asset' : _ref$testId,
      title = _ref.title,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? 'image' : _ref$type,
      otherProps = _objectWithoutProperties(_ref, _excluded$l);

  var classNames = classnames(styles$i.Asset, className);
  var isImage = type === 'image' && src !== undefined && src !== ''; // Do not show image previews when publish status is archived

  var showPreview = isImage && status !== 'archived';
  return /*#__PURE__*/React__default.createElement("div", _extends({
    className: classNames,
    "data-test-id": testId
  }, otherProps), showPreview ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("div", {
    className: styles$i['Asset__image-container']
  }, /*#__PURE__*/React__default.createElement("img", {
    className: styles$i['Asset__image-container__image'],
    src: src,
    alt: title
  })), title && /*#__PURE__*/React__default.createElement("div", {
    className: styles$i['Asset__title-container']
  }, /*#__PURE__*/React__default.createElement("span", {
    className: styles$i['Asset__title-container__title']
  }, title))) : /*#__PURE__*/React__default.createElement("div", {
    className: styles$i['Asset__asset-container']
  }, /*#__PURE__*/React__default.createElement("div", {
    className: styles$i['Asset__illustration-container']
  }, /*#__PURE__*/React__default.createElement(AssetIcon, {
    type: type
  })), title && /*#__PURE__*/React__default.createElement("span", {
    className: styles$i['Asset__asset-container__title']
  }, title)));
}

var _excluded$m = ["className", "children", "tagType", "size", "entityStatusType", "testId"];
var styles$j = {
  "Tag": "Tag__Tag___Y-myd",
  "Tag--primary": "Tag__Tag--primary___2Hk3I",
  "Tag--positive": "Tag__Tag--positive___1cepi",
  "Tag--negative": "Tag__Tag--negative___12luW",
  "Tag--warning": "Tag__Tag--warning___3Bet2",
  "Tag--secondary": "Tag__Tag--secondary___2vTK0",
  "Tag--muted": "Tag__Tag--muted___1Uba5",
  "Tag--primary-filled": "Tag__Tag--primary-filled___36ZvU",
  "Tag--featured": "Tag__Tag--featured___1m-dR",
  "Tag--small": "Tag__Tag--small___xgHQ9"
};
var statusTagTypeMap = {
  published: 'positive',
  draft: 'warning',
  archived: 'negative',
  changed: 'primary',
  deleted: 'negative',
  "new": 'primary-filled'
};
function Tag(_ref) {
  var _cn;

  var className = _ref.className,
      children = _ref.children,
      _ref$tagType = _ref.tagType,
      tagType = _ref$tagType === void 0 ? 'primary' : _ref$tagType,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'default' : _ref$size,
      entityStatusType = _ref.entityStatusType,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-tag' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$m);

  var classNames = classnames(styles$j.Tag, className, (_cn = {}, _defineProperty(_cn, styles$j["Tag--".concat(entityStatusType ? statusTagTypeMap[entityStatusType] : tagType)], entityStatusType ? statusTagTypeMap[entityStatusType] : tagType), _defineProperty(_cn, styles$j["Tag--".concat(size)], size !== 'default'), _cn));
  return /*#__PURE__*/React__default.createElement("div", _extends({
    className: classNames,
    "data-test-id": testId
  }, otherProps), children);
}

function SkeletonText(_ref) {
  var _ref$numberOfLines = _ref.numberOfLines,
      numberOfLines = _ref$numberOfLines === void 0 ? 1 : _ref$numberOfLines,
      _ref$offsetLeft = _ref.offsetLeft,
      offsetLeft = _ref$offsetLeft === void 0 ? 0 : _ref$offsetLeft,
      _ref$offsetTop = _ref.offsetTop,
      offsetTop = _ref$offsetTop === void 0 ? 0 : _ref$offsetTop,
      _ref$lineHeight = _ref.lineHeight,
      lineHeight = _ref$lineHeight === void 0 ? 21 : _ref$lineHeight,
      _ref$marginBottom = _ref.marginBottom,
      marginBottom = _ref$marginBottom === void 0 ? 20 : _ref$marginBottom,
      width = _ref.width;
  var getLineWidth = useCallback(function (lastLine) {
    if (width) {
      return width;
    }

    return lastLine ? '80%' : '100%';
  }, [width]);
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, Array.from(Array(numberOfLines)).map(function (_, index) {
    return /*#__PURE__*/React__default.createElement("rect", {
      key: "skeleton-display-text-".concat(index) // eslint-disable-line
      ,
      x: offsetLeft,
      y: index * (+lineHeight + +marginBottom) + +offsetTop // eslint-disable-line @typescript-eslint/no-non-null-assertion
      ,
      rx: "0",
      ry: "0",
      width: getLineWidth(numberOfLines > 1 && numberOfLines - index === 1 // eslint-disable-line @typescript-eslint/no-non-null-assertion
      ),
      height: lineHeight
    });
  }));
}

var _excluded$n = ["lineHeight", "marginBottom", "numberOfLines", "offsetLeft", "offsetTop"];

var SkeletonBodyText = function SkeletonBodyText(_ref) {
  var _ref$lineHeight = _ref.lineHeight,
      lineHeight = _ref$lineHeight === void 0 ? 16 : _ref$lineHeight,
      _ref$marginBottom = _ref.marginBottom,
      marginBottom = _ref$marginBottom === void 0 ? 8 : _ref$marginBottom,
      _ref$numberOfLines = _ref.numberOfLines,
      numberOfLines = _ref$numberOfLines === void 0 ? 2 : _ref$numberOfLines,
      _ref$offsetLeft = _ref.offsetLeft,
      offsetLeft = _ref$offsetLeft === void 0 ? 0 : _ref$offsetLeft,
      _ref$offsetTop = _ref.offsetTop,
      offsetTop = _ref$offsetTop === void 0 ? 0 : _ref$offsetTop,
      otherProps = _objectWithoutProperties(_ref, _excluded$n);

  return /*#__PURE__*/React__default.createElement(SkeletonText, _extends({
    lineHeight: lineHeight,
    marginBottom: marginBottom,
    numberOfLines: numberOfLines > 0 // eslint-disable-line @typescript-eslint/no-non-null-assertion
    ? numberOfLines : 1,
    offsetLeft: offsetLeft,
    offsetTop: offsetTop
  }, otherProps));
};

var _excluded$o = ["className", "children", "testId", "ariaLabel", "width", "height", "preserveAspectRatio", "clipId", "gradientId", "animateId", "backgroundColor", "backgroundOpacity", "animate", "speed", "foregroundColor", "foregroundOpacity", "svgWidth", "svgHeight"];
var styles$k = {
  "SkeletonContainer": "SkeletonContainer__SkeletonContainer___23jiu"
};
var idCounter = 0;
function SkeletonContainer(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-skeleton-form' : _ref$testId,
      _ref$ariaLabel = _ref.ariaLabel,
      ariaLabel = _ref$ariaLabel === void 0 ? 'Loading component...' : _ref$ariaLabel,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? '100%' : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? '100%' : _ref$height,
      _ref$preserveAspectRa = _ref.preserveAspectRatio,
      preserveAspectRatio = _ref$preserveAspectRa === void 0 ? 'xMidYMid meet' : _ref$preserveAspectRa,
      _ref$clipId = _ref.clipId,
      clipId = _ref$clipId === void 0 ? "cf-ui-skeleton-clip-".concat(idCounter++) : _ref$clipId,
      _ref$gradientId = _ref.gradientId,
      gradientId = _ref$gradientId === void 0 ? "cf-ui-skeleton-clip-gradient-".concat(idCounter++) : _ref$gradientId,
      _ref$animateId = _ref.animateId,
      animateId = _ref$animateId === void 0 ? "animation-".concat(idCounter++) : _ref$animateId,
      _ref$backgroundColor = _ref.backgroundColor,
      backgroundColor = _ref$backgroundColor === void 0 ? '#e5ebed' : _ref$backgroundColor,
      _ref$backgroundOpacit = _ref.backgroundOpacity,
      backgroundOpacity = _ref$backgroundOpacit === void 0 ? 1 : _ref$backgroundOpacit,
      _ref$animate = _ref.animate,
      animate = _ref$animate === void 0 ? true : _ref$animate,
      _ref$speed = _ref.speed,
      speed = _ref$speed === void 0 ? 2 : _ref$speed,
      _ref$foregroundColor = _ref.foregroundColor,
      foregroundColor = _ref$foregroundColor === void 0 ? '#f7f9fa' : _ref$foregroundColor,
      _ref$foregroundOpacit = _ref.foregroundOpacity,
      foregroundOpacity = _ref$foregroundOpacit === void 0 ? 1 : _ref$foregroundOpacit,
      _ref$svgWidth = _ref.svgWidth,
      svgWidth = _ref$svgWidth === void 0 ? '100%' : _ref$svgWidth,
      _ref$svgHeight = _ref.svgHeight,
      svgHeight = _ref$svgHeight === void 0 ? '100%' : _ref$svgHeight,
      otherProps = _objectWithoutProperties(_ref, _excluded$o);

  var classNames = classnames(styles$k['SkeletonContainer'], className);
  return /*#__PURE__*/React__default.createElement("svg", _extends({
    role: "img",
    className: classNames,
    "aria-label": ariaLabel,
    preserveAspectRatio: preserveAspectRatio,
    width: svgWidth,
    height: svgHeight,
    "data-test-id": testId
  }, otherProps), ariaLabel ? /*#__PURE__*/React__default.createElement("title", null, ariaLabel) : null, /*#__PURE__*/React__default.createElement("rect", {
    x: "0",
    y: "0",
    width: width,
    height: height,
    clipPath: "url(#".concat(clipId, ")"),
    style: {
      fill: "url(#".concat(gradientId, ")")
    }
  }), /*#__PURE__*/React__default.createElement("defs", null, /*#__PURE__*/React__default.createElement("clipPath", {
    id: clipId
  }, children), /*#__PURE__*/React__default.createElement("linearGradient", {
    id: gradientId
  }, /*#__PURE__*/React__default.createElement("stop", {
    offset: "0%",
    stopColor: backgroundColor,
    stopOpacity: backgroundOpacity
  }, animate && /*#__PURE__*/React__default.createElement("animate", {
    id: animateId,
    attributeName: "stop-color",
    values: "".concat(backgroundColor, "; ").concat(foregroundColor, "; ").concat(backgroundColor),
    dur: "".concat(speed, "s"),
    repeatCount: "indefinite"
  })), /*#__PURE__*/React__default.createElement("stop", {
    offset: "50%",
    stopColor: foregroundColor,
    stopOpacity: foregroundOpacity
  }, animate && /*#__PURE__*/React__default.createElement("animate", {
    attributeName: "stop-color",
    values: "".concat(backgroundColor, "; ").concat(foregroundColor, "; ").concat(backgroundColor),
    begin: "".concat(animateId, ".begin+0.25s"),
    dur: "".concat(speed, "s"),
    repeatCount: "indefinite"
  })), /*#__PURE__*/React__default.createElement("stop", {
    offset: "100%",
    stopColor: backgroundColor,
    stopOpacity: backgroundOpacity
  }, animate && /*#__PURE__*/React__default.createElement("animate", {
    attributeName: "stop-color",
    begin: "".concat(animateId, ".begin+0.5s"),
    values: "".concat(backgroundColor, "; ").concat(foregroundColor, "; ").concat(backgroundColor),
    dur: "".concat(speed, "s"),
    repeatCount: "indefinite"
  })))));
}

var _excluded$p = ["lineHeight", "marginBottom", "numberOfLines", "offsetLeft", "offsetTop", "width"];

function SkeletonDisplayText(_ref) {
  var _ref$lineHeight = _ref.lineHeight,
      lineHeight = _ref$lineHeight === void 0 ? 21 : _ref$lineHeight,
      _ref$marginBottom = _ref.marginBottom,
      marginBottom = _ref$marginBottom === void 0 ? 20 : _ref$marginBottom,
      _ref$numberOfLines = _ref.numberOfLines,
      numberOfLines = _ref$numberOfLines === void 0 ? 1 : _ref$numberOfLines,
      _ref$offsetLeft = _ref.offsetLeft,
      offsetLeft = _ref$offsetLeft === void 0 ? 0 : _ref$offsetLeft,
      _ref$offsetTop = _ref.offsetTop,
      offsetTop = _ref$offsetTop === void 0 ? 0 : _ref$offsetTop,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? 100 : _ref$width,
      otherProps = _objectWithoutProperties(_ref, _excluded$p);

  return /*#__PURE__*/React__default.createElement(SkeletonText, _extends({
    lineHeight: lineHeight,
    marginBottom: marginBottom,
    numberOfLines: numberOfLines,
    offsetLeft: offsetLeft,
    offsetTop: offsetTop,
    width: width
  }, otherProps));
}

var _excluded$q = ["testId", "offsetLeft", "offsetTop", "width", "height", "radiusX", "radiusY"];
function SkeletonImage(_ref) {
  var _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-skeleton-image' : _ref$testId,
      offsetLeft = _ref.offsetLeft,
      offsetTop = _ref.offsetTop,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? 70 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? 70 : _ref$height,
      _ref$radiusX = _ref.radiusX,
      radiusX = _ref$radiusX === void 0 ? 0 : _ref$radiusX,
      _ref$radiusY = _ref.radiusY,
      radiusY = _ref$radiusY === void 0 ? 0 : _ref$radiusY,
      otherProps = _objectWithoutProperties(_ref, _excluded$q);

  return /*#__PURE__*/React__default.createElement("rect", _extends({
    x: offsetLeft,
    y: offsetTop,
    rx: radiusX,
    ry: radiusY,
    width: width,
    height: height,
    "data-test-id": testId
  }, otherProps));
}

var _excluded$r = ["className", "children", "layout", "testId"];
var styles$l = {
  "Table": "Table__Table___3vKIR",
  "Table--inline": "Table__Table--inline___2jv97"
};
var Table = function Table(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$layout = _ref.layout,
      layout = _ref$layout === void 0 ? 'inline' : _ref$layout,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-table' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$r);

  return /*#__PURE__*/React__default.createElement("table", _extends({
    className: classnames(className, styles$l['Table'], _defineProperty({}, styles$l['Table--inline'], layout === 'inline')),
    cellPadding: "0",
    cellSpacing: "0",
    "data-test-id": testId
  }, otherProps), children);
};

var _excluded$s = ["className", "children", "testId"];
var TableBody = function TableBody(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-table-body' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$s);

  return /*#__PURE__*/React__default.createElement("tbody", _extends({
    "data-test-id": testId,
    className: className
  }, otherProps), children);
};

var contextOptions = {
  body: {
    name: 'body',
    element: 'td'
  },
  head: {
    name: 'head',
    element: 'th'
  }
};
var TableCellContext = /*#__PURE__*/React__default.createContext(contextOptions.body);

var _excluded$t = ["align", "children", "className", "sorting", "testId"];
var styles$m = {
  "TableCell--head": "TableCell__TableCell--head___3AHws",
  "TableCell--head__sorting": "TableCell__TableCell--head__sorting___AjdIZ",
  "TableCell": "TableCell__TableCell___ZC2ZI",
  "TableRow--selected": "TableCell__TableRow--selected___15cRw"
};
var TableCell = function TableCell(_ref) {
  var _ref$align = _ref.align,
      align = _ref$align === void 0 ? 'left' : _ref$align,
      children = _ref.children,
      className = _ref.className,
      _ref$sorting = _ref.sorting,
      sorting = _ref$sorting === void 0 ? false : _ref$sorting,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-table-cell' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$t);

  return /*#__PURE__*/React__default.createElement(TableCellContext.Consumer, null, function (_ref2) {
    var _cn;

    var context = _ref2.name,
        element = _ref2.element,
        offsetTop = _ref2.offsetTop;
    var Element = element;
    return /*#__PURE__*/React__default.createElement(Element, _extends({
      className: classnames(styles$m['TableCell'], className, (_cn = {}, _defineProperty(_cn, styles$m['TableCell--head'], context === 'head'), _defineProperty(_cn, styles$m['TableCell--head__sorting'], sorting), _cn)),
      style: {
        top: offsetTop
      },
      align: align,
      "data-test-id": testId
    }, otherProps), children);
  });
};

var _excluded$u = ["children", "className", "isSticky", "offsetTop", "testId"];
var styles$n = {
  "TableHead--sticky": "TableHead__TableHead--sticky___1YzE0"
};
var TableHead = function TableHead(_ref) {
  var children = _ref.children,
      className = _ref.className,
      _ref$isSticky = _ref.isSticky,
      isSticky = _ref$isSticky === void 0 ? false : _ref$isSticky,
      offsetTop = _ref.offsetTop,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-table-head' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$u);

  var classNames = classnames(className, _defineProperty({}, styles$n["TableHead--sticky"], isSticky));

  if (isSticky) {
    contextOptions.head.offsetTop = offsetTop || 0;
  }

  return /*#__PURE__*/React__default.createElement(TableCellContext.Provider, {
    value: contextOptions.head
  }, /*#__PURE__*/React__default.createElement("thead", _extends({
    className: classNames,
    "data-test-id": testId
  }, otherProps), children));
};

var _excluded$v = ["active", "children", "className", "direction", "testId"];
var styles$o = {
  "TableSortingLabel__button": "TableSortingLabel__TableSortingLabel__button___1bp8L",
  "TableSortingLabel__button__text": "TableSortingLabel__TableSortingLabel__button__text___Cg0gl",
  "TableSortingLabel__icon": "TableSortingLabel__TableSortingLabel__icon___dwu6n",
  "TableSortingLabel__icon--asc": "TableSortingLabel__TableSortingLabel__icon--asc___27th8",
  "TableSortingLabel__icon--desc": "TableSortingLabel__TableSortingLabel__icon--desc___L0Qns"
};
var TableSortingLabel = function TableSortingLabel(_ref) {
  var active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      direction = _ref.direction,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-table-sorting-label' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$v);

  var renderIcon = function renderIcon() {
    var classNames = classnames(styles$o['TableSortingLabel__icon'], styles$o["TableSortingLabel__icon--".concat(direction)]);
    return /*#__PURE__*/React__default.createElement(Icon, {
      className: classNames,
      icon: "ArrowUp",
      color: "muted"
    });
  };

  return /*#__PURE__*/React__default.createElement("button", _extends({
    type: "button",
    className: classnames(styles$o['TableSortingLabel__button'], className),
    "data-test-id": testId
  }, otherProps), /*#__PURE__*/React__default.createElement(TabFocusTrap, {
    className: styles$o['TableSortingLabel__button__text']
  }, children, active && renderIcon()));
};

var _excluded$w = ["className", "children", "selected", "testId"];
var styles$p = {
  "TableCell--head": "TableCell__TableCell--head___3AHws",
  "TableCell--head__sorting": "TableCell__TableCell--head__sorting___AjdIZ",
  "TableCell": "TableCell__TableCell___ZC2ZI",
  "TableRow--selected": "TableCell__TableRow--selected___15cRw"
};
var TableRow = function TableRow(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$selected = _ref.selected,
      selected = _ref$selected === void 0 ? false : _ref$selected,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-table-row' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$w);

  return /*#__PURE__*/React__default.createElement("tr", _extends({
    className: classnames(className, _defineProperty({}, styles$p['TableRow--selected'], selected)),
    "data-test-id": testId
  }, otherProps), children);
};

var SkeletonTableCell = function SkeletonTableCell() {
  return /*#__PURE__*/React__default.createElement(TableCell, null, /*#__PURE__*/React__default.createElement(SkeletonContainer, {
    svgHeight: 16 // This is equal to the default height of a SkeletonText line, if no value is passed the svg will be bigger than the line

  }, /*#__PURE__*/React__default.createElement(SkeletonBodyText, {
    numberOfLines: 1
  })));
};

var SkeletonRow = function SkeletonRow(_ref) {
  var _ref$columnCount = _ref.columnCount,
      columnCount = _ref$columnCount === void 0 ? 5 : _ref$columnCount,
      _ref$rowCount = _ref.rowCount,
      rowCount = _ref$rowCount === void 0 ? 1 : _ref$rowCount;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, Array.from(Array(rowCount)).map(function (_, rowIndex) {
    return /*#__PURE__*/React__default.createElement(TableRow, {
      key: rowIndex
    }, Array.from(Array(columnCount)).map(function (_, cellIndex) {
      return /*#__PURE__*/React__default.createElement(SkeletonTableCell, {
        key: cellIndex
      });
    }));
  }));
};

var AssetCardSkeleton = function AssetCardSkeleton(props) {
  return /*#__PURE__*/React__default.createElement(SkeletonContainer, {
    svgWidth: props.size === 'small' ? 150 : 240
  }, /*#__PURE__*/React__default.createElement(SkeletonImage, {
    offsetLeft: props.size === 'small' ? 40 : 85,
    offsetTop: props.size === 'small' ? 50 : 100
  }), /*#__PURE__*/React__default.createElement(SkeletonBodyText, {
    offsetLeft: props.size === 'small' ? 25 : 70,
    offsetTop: props.size === 'small' ? 140 : 190,
    numberOfLines: 1,
    width: 100
  }));
};

var _excluded$x = ["className", "testId", "children", "isDragActive"];
var styles$q = {
  "CardDragHandle": "CardDragHandle__CardDragHandle___2rqnO",
  "CardDragHandle--drag-active": "CardDragHandle__CardDragHandle--drag-active___2e8vp",
  "CardDragHandle__sr-label": "CardDragHandle__CardDragHandle__sr-label___3CueY helpers__sr-only___3Kv3z"
};
function CardDragHandle(_ref) {
  var className = _ref.className,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-card-drag-handle' : _ref$testId,
      children = _ref.children,
      _ref$isDragActive = _ref.isDragActive,
      isDragActive = _ref$isDragActive === void 0 ? false : _ref$isDragActive,
      otherProps = _objectWithoutProperties(_ref, _excluded$x);

  var classNames = classnames(styles$q.CardDragHandle, _defineProperty({}, styles$q['CardDragHandle--drag-active'], isDragActive), className);
  return /*#__PURE__*/React__default.createElement("div", _extends({
    className: classNames,
    "data-test-id": testId
  }, otherProps), /*#__PURE__*/React__default.createElement(Icon, {
    icon: "Drag",
    color: "muted"
  }), /*#__PURE__*/React__default.createElement("span", {
    className: styles$q['CardDragHandle__sr-label']
  }, children));
}

var _excluded$y = ["className", "src", "type", "title", "status", "statusIcon", "isLoading", "dropdownListElements", "isDragActive", "size", "testId", "cardDragHandleProps", "cardDragHandleComponent", "withDragHandle"];
var styles$r = {
  "AssetCard": "AssetCard__AssetCard____VWXj",
  "AssetCard--size-small": "AssetCard__AssetCard--size-small___2fyHk",
  "AssetCard__asset": "AssetCard__AssetCard__asset___189id",
  "AssetCard--drag-active": "AssetCard__AssetCard--drag-active___WtiNB",
  "AssetCard__wrapper": "AssetCard__AssetCard__wrapper___24k3w",
  "AssetCard__content": "AssetCard__AssetCard__content___2ZY73",
  "AssetCard__header": "AssetCard__AssetCard__header___2ahyT",
  "AssetCard__icon": "AssetCard__AssetCard__icon___1rpC0",
  "AssetCard__actions": "AssetCard__AssetCard__actions___2Nbjg"
};
function AssetCard(_ref) {
  var _cn;

  var className = _ref.className,
      src = _ref.src,
      type = _ref.type,
      title = _ref.title,
      status = _ref.status,
      statusIcon = _ref.statusIcon,
      _ref$isLoading = _ref.isLoading,
      isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,
      dropdownListElements = _ref.dropdownListElements,
      isDragActive = _ref.isDragActive,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'default' : _ref$size,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-asset-card' : _ref$testId,
      cardDragHandleProps = _ref.cardDragHandleProps,
      cardDragHandleComponent = _ref.cardDragHandleComponent,
      withDragHandle = _ref.withDragHandle,
      otherProps = _objectWithoutProperties(_ref, _excluded$y);

  var renderStatus = useCallback(function (status, statusIcon) {
    var label;
    var type = null;

    switch (status) {
      case 'archived':
        label = 'archived';
        type = 'negative';
        break;

      case 'changed':
        label = 'changed';
        type = 'primary';
        break;

      case 'published':
        label = 'published';
        type = 'positive';
        break;

      default:
        label = 'draft';
        type = 'warning';
    }

    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, statusIcon && typeof statusIcon === 'string' ? /*#__PURE__*/React__default.createElement(Icon, {
      icon: statusIcon,
      color: "muted",
      className: styles$r['AssetCard__icon']
    }) : statusIcon, /*#__PURE__*/React__default.createElement(Tag, {
      tagType: type
    }, label));
  }, []);
  var renderCardDragHandle = useCallback(function () {
    if (cardDragHandleComponent) {
      return cardDragHandleComponent;
    } else if (withDragHandle) {
      return /*#__PURE__*/React__default.createElement(CardDragHandle, _extends({
        isDragActive: isDragActive
      }, cardDragHandleProps), "Reorder entry");
    }
  }, [cardDragHandleComponent, cardDragHandleProps, isDragActive, withDragHandle]);
  var classNames = classnames(styles$r.AssetCard, (_cn = {}, _defineProperty(_cn, styles$r['AssetCard--drag-active'], isDragActive), _defineProperty(_cn, styles$r["AssetCard--size-".concat(size)], size), _cn), className);
  return /*#__PURE__*/React__default.createElement(Card, _extends({
    className: classNames,
    padding: "none",
    testId: testId,
    title: title
  }, otherProps), isLoading ? /*#__PURE__*/React__default.createElement(AssetCardSkeleton, {
    size: size
  }) : /*#__PURE__*/React__default.createElement(React__default.Fragment, null, renderCardDragHandle(), /*#__PURE__*/React__default.createElement("div", {
    className: styles$r['AssetCard__wrapper']
  }, /*#__PURE__*/React__default.createElement("div", {
    className: styles$r['AssetCard__header']
  }, status && renderStatus(status, statusIcon), dropdownListElements && /*#__PURE__*/React__default.createElement(CardActions, {
    className: styles$r['AssetCard__actions'],
    iconButtonProps: {
      onClick: function onClick(e) {
        return e.stopPropagation;
      }
    }
  }, dropdownListElements)), /*#__PURE__*/React__default.createElement("div", {
    className: styles$r['AssetCard__content']
  }, /*#__PURE__*/React__default.createElement(Asset, {
    className: styles$r['AssetCard__asset'],
    src: src,
    title: title,
    type: type,
    status: status
  })))));
}

var truncate = createCommonjsModule(function (module) {
/*global module:true*/
/*jslint nomen:true*/
/**
 * @module Utility
 */
(function (context, undefined$1) {

    var DEFAULT_TRUNCATE_SYMBOL = '…',
        // Limit emails to no more than about 600 chars, well over the max of ~300.
        // cf. RFC: https://www.rfc-editor.org/errata_search.php?eid=1690
        URL_REGEX = /(((ftp|https?):\/\/)[\-\w@:%_\+.~#?,&\/\/=]+)|((mailto:)?[_.\w-]{1,300}@(.{1,300}\.)[a-zA-Z]{2,3})/g;

    function __appendEllipsis(string, options, content) {
        if (content.length === string.length || !options.ellipsis) {
            return content;
        }
        content += options.ellipsis;
        return content;
    }
    /**
     * Truncate HTML string and keep tag safe.
     *
     * @method truncate
     * @param {String} string string needs to be truncated
     * @param {Number} maxLength length of truncated string
     * @param {Object} options (optional)
     * @param {Boolean|String} [options.ellipsis] omission symbol for truncated string, '...' by default
     * @return {String} truncated string
     */
    function truncate(string, maxLength, options) {
        var content = '', // truncated text storage
            matches = true,
            remainingLength = maxLength,
            result,
            index;

        options = options || {};
        options.ellipsis = (typeof options.ellipsis === "undefined") ? DEFAULT_TRUNCATE_SYMBOL : options.ellipsis;

        if (!string || string.length === 0) {
            return '';
        }

        matches = true;
        while (matches) {
            URL_REGEX.lastIndex = content.length;
            matches = URL_REGEX.exec(string);
            // Don't try to retain URLs longer than 3k chars, well over the 99th percentile of ~347
            if (!matches || (matches.index - content.length) >= remainingLength || URL_REGEX.lastIndex >= (maxLength + 3000)) {
                content += string.substring(content.length, maxLength);
                return __appendEllipsis(string, options, content);
            }

            result = matches[0];
            index = matches.index;
            content += string.substring(content.length, index + result.length);
            remainingLength -= index + result.length;

            if (remainingLength <= 0) {
                break;
            }
        }

        return __appendEllipsis(string, options, content);
    }

    if ( module.exports) {
        module.exports = truncate;
    } else {
        context.truncate = truncate;
    }
}(String));
});

var EntryCardSkeleton = function EntryCardSkeleton() {
  return /*#__PURE__*/React__default.createElement(SkeletonContainer, {
    width: "100%"
  }, /*#__PURE__*/React__default.createElement(SkeletonDisplayText, {
    numberOfLines: 1,
    offsetTop: 2.5
  }), /*#__PURE__*/React__default.createElement(SkeletonBodyText, {
    numberOfLines: 3,
    offsetTop: 37.5
  }));
};

var _excluded$z = ["className", "title", "onClick", "description", "contentType", "status", "statusIcon", "thumbnailElement", "loading", "dropdownListElements", "isDragActive", "size", "testId", "cardDragHandleComponent", "cardDragHandleProps", "withDragHandle"];
var styles$s = {
  "EntryCard": "EntryCard__EntryCard___2kIVv",
  "EntryCard__header": "EntryCard__EntryCard__header___3s_4z",
  "EntryCard--size-default": "EntryCard__EntryCard--size-default___ahhv9",
  "EntryCard--size-small": "EntryCard__EntryCard--size-small___wmiCz",
  "EntryCard--size-auto": "EntryCard__EntryCard--size-auto___roGvN",
  "EntryCard__wrapper": "EntryCard__EntryCard__wrapper___2i20k",
  "EntryCard__skeleton-wrapper": "EntryCard__EntryCard__skeleton-wrapper___1p3KI",
  "EntryCard--drag-active": "EntryCard__EntryCard--drag-active___26ZqT",
  "EntryCard--is-loading": "EntryCard__EntryCard--is-loading___310RH",
  "EntryCard__content-type": "EntryCard__EntryCard__content-type___77aij",
  "EntryCard__icon": "EntryCard__EntryCard__icon___27uFX",
  "EntryCard__actions": "EntryCard__EntryCard__actions___1yMP3",
  "EntryCard__content": "EntryCard__EntryCard__content___1pcqO",
  "EntryCard__body": "EntryCard__EntryCard__body___21HhK",
  "EntryCard__title": "EntryCard__EntryCard__title___2q3bn",
  "EntryCard__description": "EntryCard__EntryCard__description___11s4-",
  "EntryCard__thumbnail": "EntryCard__EntryCard__thumbnail___3mEp5"
};
function EntryCard(_ref) {
  var className = _ref.className,
      _ref$title = _ref.title,
      title = _ref$title === void 0 ? 'Untitled' : _ref$title,
      onClick = _ref.onClick,
      description = _ref.description,
      contentType = _ref.contentType,
      status = _ref.status,
      statusIcon = _ref.statusIcon,
      thumbnailElement = _ref.thumbnailElement,
      loading = _ref.loading,
      dropdownListElements = _ref.dropdownListElements,
      isDragActive = _ref.isDragActive,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'default' : _ref$size,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-entry-card' : _ref$testId,
      cardDragHandleComponent = _ref.cardDragHandleComponent,
      cardDragHandleProps = _ref.cardDragHandleProps,
      withDragHandle = _ref.withDragHandle,
      otherProps = _objectWithoutProperties(_ref, _excluded$z);

  var renderTitle = useCallback(function (_size, title) {
    if (!title) {
      return;
    }

    var truncatedTitle = truncate(title, 255, {});
    return /*#__PURE__*/React__default.createElement("h1", {
      title: title.length > 255 ? title : '',
      className: styles$s.EntryCard__title,
      "data-test-id": "title"
    }, truncatedTitle);
  }, []);
  var renderDescription = useCallback(function (size, description) {
    if (!description || size === 'small') {
      return;
    }

    var truncatedDescription = truncate(description, 95, {});
    return /*#__PURE__*/React__default.createElement("p", {
      className: styles$s.EntryCard__description
    }, truncatedDescription);
  }, []);
  var renderThumbnail = useCallback(function (size, thumbnailElement) {
    if (!thumbnailElement || size === 'small') {
      return;
    }

    return /*#__PURE__*/React__default.createElement("figure", {
      className: styles$s.EntryCard__thumbnail
    }, thumbnailElement);
  }, []);
  var renderStatus = useCallback(function (status) {
    var label;
    var type;

    switch (status) {
      case 'archived':
        label = 'archived';
        type = 'negative';
        break;

      case 'changed':
        label = 'changed';
        type = 'primary';
        break;

      case 'published':
        label = 'published';
        type = 'positive';
        break;

      default:
        label = 'draft';
        type = 'warning';
    }

    return /*#__PURE__*/React__default.createElement(Tag, {
      tagType: type
    }, label);
  }, []);
  var renderCardDragHandle = useCallback(function () {
    if (cardDragHandleComponent) {
      return cardDragHandleComponent;
    } else if (withDragHandle) {
      return /*#__PURE__*/React__default.createElement(CardDragHandle, _extends({
        isDragActive: isDragActive
      }, cardDragHandleProps), "Reorder entry");
    }
  }, [cardDragHandleComponent, cardDragHandleProps, isDragActive, withDragHandle]);
  var classNames = classnames(styles$s.EntryCard, styles$s["EntryCard--size-".concat(size)], _defineProperty({}, styles$s['EntryCard--drag-active'], isDragActive), className);
  return /*#__PURE__*/React__default.createElement(Card, _extends({
    className: classNames,
    onClick: !loading ? onClick : undefined,
    padding: "none",
    "data-test-id": testId
  }, otherProps), loading ? /*#__PURE__*/React__default.createElement("div", {
    className: classnames(styles$s.EntryCard__wrapper, styles$s['EntryCard__skeleton-wrapper'])
  }, /*#__PURE__*/React__default.createElement(EntryCardSkeleton, null)) : /*#__PURE__*/React__default.createElement(React__default.Fragment, null, renderCardDragHandle(), /*#__PURE__*/React__default.createElement("div", {
    className: styles$s.EntryCard__wrapper
  }, /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement("div", {
    className: styles$s.EntryCard__header
  }, /*#__PURE__*/React__default.createElement("div", {
    className: styles$s['EntryCard__content-type'],
    "data-test-id": "content-type"
  }, contentType), statusIcon && typeof statusIcon === 'string' ? /*#__PURE__*/React__default.createElement(Icon, {
    icon: statusIcon,
    color: "muted",
    className: styles$s['EntryCard__icon']
  }) : statusIcon, status && renderStatus(status), dropdownListElements && /*#__PURE__*/React__default.createElement(CardActions, {
    className: styles$s['EntryCard__actions'],
    iconButtonProps: {
      onClick: function onClick(e) {
        return e.stopPropagation;
      }
    }
  }, dropdownListElements)), /*#__PURE__*/React__default.createElement("div", {
    className: styles$s.EntryCard__content
  }, /*#__PURE__*/React__default.createElement("div", {
    className: styles$s.EntryCard__body
  }, renderTitle(size, title), renderDescription(size, description)), renderThumbnail(size, thumbnailElement))))));
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}var AsyncMode=l;var ConcurrentMode=m;var ContextConsumer=k;var ContextProvider=h;var Element$1=c;var ForwardRef=n;var Fragment=e;var Lazy=t;var Memo=r;var Portal$1=d;
var Profiler=g;var StrictMode=f;var Suspense=p;var isAsyncMode=function(a){return A(a)||z(a)===l};var isConcurrentMode=A;var isContextConsumer=function(a){return z(a)===k};var isContextProvider=function(a){return z(a)===h};var isElement$1=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===c};var isForwardRef=function(a){return z(a)===n};var isFragment=function(a){return z(a)===e};var isLazy=function(a){return z(a)===t};
var isMemo=function(a){return z(a)===r};var isPortal=function(a){return z(a)===d};var isProfiler=function(a){return z(a)===g};var isStrictMode=function(a){return z(a)===f};var isSuspense=function(a){return z(a)===p};
var isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};var typeOf=z;

var reactIs_production_min = {
	AsyncMode: AsyncMode,
	ConcurrentMode: ConcurrentMode,
	ContextConsumer: ContextConsumer,
	ContextProvider: ContextProvider,
	Element: Element$1,
	ForwardRef: ForwardRef,
	Fragment: Fragment,
	Lazy: Lazy,
	Memo: Memo,
	Portal: Portal$1,
	Profiler: Profiler,
	StrictMode: StrictMode,
	Suspense: Suspense,
	isAsyncMode: isAsyncMode,
	isConcurrentMode: isConcurrentMode,
	isContextConsumer: isContextConsumer,
	isContextProvider: isContextProvider,
	isElement: isElement$1,
	isForwardRef: isForwardRef,
	isFragment: isFragment,
	isLazy: isLazy,
	isMemo: isMemo,
	isPortal: isPortal,
	isProfiler: isProfiler,
	isStrictMode: isStrictMode,
	isSuspense: isSuspense,
	isValidElementType: isValidElementType,
	typeOf: typeOf
};

var reactIs_development = createCommonjsModule(function (module, exports) {



if (process.env.NODE_ENV !== "production") {
  (function() {

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}
});
var reactIs_development_1 = reactIs_development.AsyncMode;
var reactIs_development_2 = reactIs_development.ConcurrentMode;
var reactIs_development_3 = reactIs_development.ContextConsumer;
var reactIs_development_4 = reactIs_development.ContextProvider;
var reactIs_development_5 = reactIs_development.Element;
var reactIs_development_6 = reactIs_development.ForwardRef;
var reactIs_development_7 = reactIs_development.Fragment;
var reactIs_development_8 = reactIs_development.Lazy;
var reactIs_development_9 = reactIs_development.Memo;
var reactIs_development_10 = reactIs_development.Portal;
var reactIs_development_11 = reactIs_development.Profiler;
var reactIs_development_12 = reactIs_development.StrictMode;
var reactIs_development_13 = reactIs_development.Suspense;
var reactIs_development_14 = reactIs_development.isAsyncMode;
var reactIs_development_15 = reactIs_development.isConcurrentMode;
var reactIs_development_16 = reactIs_development.isContextConsumer;
var reactIs_development_17 = reactIs_development.isContextProvider;
var reactIs_development_18 = reactIs_development.isElement;
var reactIs_development_19 = reactIs_development.isForwardRef;
var reactIs_development_20 = reactIs_development.isFragment;
var reactIs_development_21 = reactIs_development.isLazy;
var reactIs_development_22 = reactIs_development.isMemo;
var reactIs_development_23 = reactIs_development.isPortal;
var reactIs_development_24 = reactIs_development.isProfiler;
var reactIs_development_25 = reactIs_development.isStrictMode;
var reactIs_development_26 = reactIs_development.isSuspense;
var reactIs_development_27 = reactIs_development.isValidElementType;
var reactIs_development_28 = reactIs_development.typeOf;

var reactIs = createCommonjsModule(function (module) {

if (process.env.NODE_ENV === 'production') {
  module.exports = reactIs_production_min;
} else {
  module.exports = reactIs_development;
}
});

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1 = ReactPropTypesSecret;

var printWarning$1 = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning$1 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning$1(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning$1(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures = {};
  }
};

var checkPropTypes_1 = checkPropTypes;

var has$1 = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning$2 = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning$2 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

var factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret_1) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning$2(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!reactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning$2(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning$2('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has$1(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning$2('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning$2(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = objectAssign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes_1;
  ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret_1) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  }  shim.isRequired = shim;
  function getShim() {
    return shim;
  }  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

var propTypes = createCommonjsModule(function (module) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs = reactIs;

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = factoryWithThrowingShims();
}
});

/**
 * Checks if a given element has a CSS class.
 * 
 * @param element the element
 * @param className the CSS class name
 */
function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

/**
 * Adds a CSS class to a given element.
 * 
 * @param element the element
 * @param className the CSS class name
 */

function addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + " " + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + " " + className);
}

function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}
/**
 * Removes a CSS class from a given element.
 * 
 * @param element the element
 * @param className the CSS class name
 */


function removeClass(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === 'string') {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
  }
}

var config = {
  disabled: false
};

var timeoutsShape = process.env.NODE_ENV !== 'production' ? propTypes.oneOfType([propTypes.number, propTypes.shape({
  enter: propTypes.number,
  exit: propTypes.number,
  appear: propTypes.number
}).isRequired]) : null;
var classNamesShape = process.env.NODE_ENV !== 'production' ? propTypes.oneOfType([propTypes.string, propTypes.shape({
  enter: propTypes.string,
  exit: propTypes.string,
  active: propTypes.string
}), propTypes.shape({
  enter: propTypes.string,
  enterDone: propTypes.string,
  enterActive: propTypes.string,
  exit: propTypes.string,
  exitDone: propTypes.string,
  exitActive: propTypes.string
})]) : null;

var TransitionGroupContext = React__default.createContext(null);

var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

var Transition = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  } // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }
  ;

  var _proto = Transition.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      if (nextStatus === ENTERING) {
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;

    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],
        maybeNode = _ref2[0],
        maybeAppearing = _ref2[1];

    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter || config.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }

    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(maybeNode, maybeAppearing);

      _this2.onTransitionEnd(enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };

  _proto.performExit = function performExit() {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED

    if (!exit || config.disabled) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(maybeNode);
      });
      return;
    }

    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(maybeNode);

      _this3.onTransitionEnd(timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }

    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],
          maybeNode = _ref3[0],
          maybeNextCallback = _ref3[1];

      this.props.addEndListener(maybeNode, maybeNextCallback);
    }

    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children,
        _in = _this$props.in,
        _mountOnEnter = _this$props.mountOnEnter,
        _unmountOnExit = _this$props.unmountOnExit,
        _appear = _this$props.appear,
        _enter = _this$props.enter,
        _exit = _this$props.exit,
        _timeout = _this$props.timeout,
        _addEndListener = _this$props.addEndListener,
        _onEnter = _this$props.onEnter,
        _onEntering = _this$props.onEntering,
        _onEntered = _this$props.onEntered,
        _onExit = _this$props.onExit,
        _onExiting = _this$props.onExiting,
        _onExited = _this$props.onExited,
        _nodeRef = _this$props.nodeRef,
        childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);

    return (
      /*#__PURE__*/
      // allows for nested Transitions
      React__default.createElement(TransitionGroupContext.Provider, {
        value: null
      }, typeof children === 'function' ? children(status, childProps) : React__default.cloneElement(React__default.Children.only(children), childProps))
    );
  };

  return Transition;
}(React__default.Component);

Transition.contextType = TransitionGroupContext;
Transition.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: propTypes.shape({
    current: typeof Element === 'undefined' ? propTypes.any : function (propValue, key, componentName, location, propFullName, secret) {
      var value = propValue[key];
      return propTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
    }
  }),

  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: propTypes.oneOfType([propTypes.func.isRequired, propTypes.element.isRequired]).isRequired,

  /**
   * Show the component; triggers the enter or exit states
   */
  in: propTypes.bool,

  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: propTypes.bool,

  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: propTypes.bool,

  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: propTypes.bool,

  /**
   * Enable or disable enter transitions.
   */
  enter: propTypes.bool,

  /**
   * Enable or disable exit transitions.
   */
  exit: propTypes.bool,

  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = timeoutsShape;
    if (!props.addEndListener) pt = pt.isRequired;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return pt.apply(void 0, [props].concat(args));
  },

  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: propTypes.func,

  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: propTypes.func,

  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: propTypes.func,

  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: propTypes.func,

  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: propTypes.func,

  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: propTypes.func,

  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: propTypes.func
} : {}; // Name the function so it is clearer in the documentation

function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;

var _addClass = function addClass$1(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return addClass(node, c);
  });
};

var removeClass$1 = function removeClass$1(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return removeClass(node, c);
  });
};
/**
 * A transition component inspired by the excellent
 * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should
 * use it if you're using CSS transitions or animations. It's built upon the
 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
 * component, so it inherits all of its props.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` states of the transition. The first class is applied and then a
 * second `*-active` class in order to activate the CSS transition. After the
 * transition, matching `*-done` class names are applied to persist the
 * transition state.
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
 *         <div>
 *           {"I'll receive my-node-* classes"}
 *         </div>
 *       </CSSTransition>
 *       <button type="button" onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the `in` prop is set to `true`, the child component will first receive
 * the class `example-enter`, then the `example-enter-active` will be added in
 * the next tick. `CSSTransition` [forces a
 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * between before adding the `example-enter-active`. This is an important trick
 * because it allows us to transition between `example-enter` and
 * `example-enter-active` even though they were added immediately one after
 * another. Most notably, this is what makes it possible for us to animate
 * _appearance_.
 *
 * ```css
 * .my-node-enter {
 *   opacity: 0;
 * }
 * .my-node-enter-active {
 *   opacity: 1;
 *   transition: opacity 200ms;
 * }
 * .my-node-exit {
 *   opacity: 1;
 * }
 * .my-node-exit-active {
 *   opacity: 0;
 *   transition: opacity 200ms;
 * }
 * ```
 *
 * `*-active` classes represent which styles you want to animate **to**, so it's
 * important to add `transition` declaration only to them, otherwise transitions
 * might not behave as intended! This might not be obvious when the transitions
 * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in
 * the example above (minus `transition`), but it becomes apparent in more
 * complex transitions.
 *
 * **Note**: If you're using the
 * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)
 * prop, make sure to define styles for `.appear-*` classes as well.
 */


var CSSTransition = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(CSSTransition, _React$Component);

  function CSSTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };

    _this.onEnter = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),
          node = _this$resolveArgument[0],
          appearing = _this$resolveArgument[1];

      _this.removeClasses(node, 'exit');

      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');

      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };

    _this.onEntering = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),
          node = _this$resolveArgument2[0],
          appearing = _this$resolveArgument2[1];

      var type = appearing ? 'appear' : 'enter';

      _this.addClass(node, type, 'active');

      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };

    _this.onEntered = function (maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),
          node = _this$resolveArgument3[0],
          appearing = _this$resolveArgument3[1];

      var type = appearing ? 'appear' : 'enter';

      _this.removeClasses(node, type);

      _this.addClass(node, type, 'done');

      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };

    _this.onExit = function (maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),
          node = _this$resolveArgument4[0];

      _this.removeClasses(node, 'appear');

      _this.removeClasses(node, 'enter');

      _this.addClass(node, 'exit', 'base');

      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };

    _this.onExiting = function (maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),
          node = _this$resolveArgument5[0];

      _this.addClass(node, 'exit', 'active');

      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };

    _this.onExited = function (maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),
          node = _this$resolveArgument6[0];

      _this.removeClasses(node, 'exit');

      _this.addClass(node, 'exit', 'done');

      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };

    _this.resolveArguments = function (maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`
      : [maybeNode, maybeAppearing];
    };

    _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === 'string';
      var prefix = isStringClassNames && classNames ? classNames + "-" : '';
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
      return {
        baseClassName: baseClassName,
        activeClassName: activeClassName,
        doneClassName: doneClassName
      };
    };

    return _this;
  }

  var _proto = CSSTransition.prototype;

  _proto.addClass = function addClass(node, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];

    var _this$getClassNames = this.getClassNames('enter'),
        doneClassName = _this$getClassNames.doneClassName;

    if (type === 'appear' && phase === 'done' && doneClassName) {
      className += " " + doneClassName;
    } // This is to force a repaint,
    // which is necessary in order to transition styles when adding a class name.


    if (phase === 'active') {
      /* eslint-disable no-unused-expressions */
      node && node.scrollTop;
    }

    if (className) {
      this.appliedClasses[type][phase] = className;

      _addClass(node, className);
    }
  };

  _proto.removeClasses = function removeClasses(node, type) {
    var _this$appliedClasses$ = this.appliedClasses[type],
        baseClassName = _this$appliedClasses$.base,
        activeClassName = _this$appliedClasses$.active,
        doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};

    if (baseClassName) {
      removeClass$1(node, baseClassName);
    }

    if (activeClassName) {
      removeClass$1(node, activeClassName);
    }

    if (doneClassName) {
      removeClass$1(node, doneClassName);
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        _ = _this$props.classNames,
        props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);

    return /*#__PURE__*/React__default.createElement(Transition, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };

  return CSSTransition;
}(React__default.Component);

CSSTransition.defaultProps = {
  classNames: ''
};
CSSTransition.propTypes = process.env.NODE_ENV !== "production" ? _extends({}, Transition.propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: classNamesShape,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: propTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: propTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: propTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExit: propTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: propTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExited: propTypes.func
}) : {};

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */

function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && isValidElement(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list


  var nextKeysPending = Object.create(null);
  var pendingKeys = [];

  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i;
  var childMapping = {};

  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }

    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`


  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}

function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return cloneElement(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!isValidElement(child)) return;
    var hasPrev = (key in prevChildMapping);
    var hasNext = (key in nextChildMapping);
    var prevChild = prevChildMapping[key];
    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = cloneElement(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = cloneElement(child, {
        in: false
      });
    } else if (hasNext && hasPrev && isValidElement(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = cloneElement(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}

var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var defaultProps$1 = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
};
/**
 * The `<TransitionGroup>` component manages a set of transition components
 * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
 * components, `<TransitionGroup>` is a state machine for managing the mounting
 * and unmounting of components over time.
 *
 * Consider the example below. As items are removed or added to the TodoList the
 * `in` prop is toggled automatically by the `<TransitionGroup>`.
 *
 * Note that `<TransitionGroup>`  does not define any animation behavior!
 * Exactly _how_ a list item animates is up to the individual transition
 * component. This means you can mix and match animations across different list
 * items.
 */

var TransitionGroup = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;

    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear


    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }

  var _proto = TransitionGroup.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };

  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  } // node is `undefined` when user provided `nodeRef` prop
  ;

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node);
    }

    if (this.mounted) {
      this.setState(function (state) {
        var children = _extends({}, state.children);

        delete children[child.key];
        return {
          children: children
        };
      });
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);

    var contextValue = this.state.contextValue;
    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component === null) {
      return /*#__PURE__*/React__default.createElement(TransitionGroupContext.Provider, {
        value: contextValue
      }, children);
    }

    return /*#__PURE__*/React__default.createElement(TransitionGroupContext.Provider, {
      value: contextValue
    }, /*#__PURE__*/React__default.createElement(Component, props, children));
  };

  return TransitionGroup;
}(React__default.Component);

TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: propTypes.any,

  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: propTypes.node,

  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: propTypes.bool,

  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: propTypes.bool,

  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: propTypes.bool,

  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: propTypes.func
} : {};
TransitionGroup.defaultProps = defaultProps$1;

/**
 * The `<ReplaceTransition>` component is a specialized `Transition` component
 * that animates between two children.
 *
 * ```jsx
 * <ReplaceTransition in>
 *   <Fade><div>I appear first</div></Fade>
 *   <Fade><div>I replace the above</div></Fade>
 * </ReplaceTransition>
 * ```
 */

var ReplaceTransition = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(ReplaceTransition, _React$Component);

  function ReplaceTransition() {
    var _this;

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;

    _this.handleEnter = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _this.handleLifecycle('onEnter', 0, args);
    };

    _this.handleEntering = function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return _this.handleLifecycle('onEntering', 0, args);
    };

    _this.handleEntered = function () {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return _this.handleLifecycle('onEntered', 0, args);
    };

    _this.handleExit = function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      return _this.handleLifecycle('onExit', 1, args);
    };

    _this.handleExiting = function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      return _this.handleLifecycle('onExiting', 1, args);
    };

    _this.handleExited = function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      return _this.handleLifecycle('onExited', 1, args);
    };

    return _this;
  }

  var _proto = ReplaceTransition.prototype;

  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;

    var children = this.props.children;
    var child = React__default.Children.toArray(children)[idx];
    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);

    if (this.props[handler]) {
      var maybeNode = child.props.nodeRef ? undefined : ReactDOM.findDOMNode(this);
      this.props[handler](maybeNode);
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        inProp = _this$props.in,
        props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);

    var _React$Children$toArr = React__default.Children.toArray(children),
        first = _React$Children$toArr[0],
        second = _React$Children$toArr[1];

    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return /*#__PURE__*/React__default.createElement(TransitionGroup, props, inProp ? React__default.cloneElement(first, {
      key: 'first',
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : React__default.cloneElement(second, {
      key: 'second',
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };

  return ReplaceTransition;
}(React__default.Component);

ReplaceTransition.propTypes = process.env.NODE_ENV !== "production" ? {
  in: propTypes.bool.isRequired,
  children: function children(props, propName) {
    if (React__default.Children.count(props[propName]) !== 2) return new Error("\"" + propName + "\" must be exactly two transition components.");
    return null;
  }
} : {};

var _leaveRenders, _enterRenders;

function areChildrenDifferent(oldChildren, newChildren) {
  if (oldChildren === newChildren) return false;

  if (React__default.isValidElement(oldChildren) && React__default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
    return false;
  }

  return true;
}
/**
 * Enum of modes for SwitchTransition component
 * @enum { string }
 */


var modes = {
  out: 'out-in',
  in: 'in-out'
};

var callHook = function callHook(element, name, cb) {
  return function () {
    var _element$props;

    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);
    cb();
  };
};

var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {
  var current = _ref.current,
      changeState = _ref.changeState;
  return React__default.cloneElement(current, {
    in: false,
    onExited: callHook(current, 'onExited', function () {
      changeState(ENTERING, null);
    })
  });
}, _leaveRenders[modes.in] = function (_ref2) {
  var current = _ref2.current,
      changeState = _ref2.changeState,
      children = _ref2.children;
  return [current, React__default.cloneElement(children, {
    in: true,
    onEntered: callHook(children, 'onEntered', function () {
      changeState(ENTERING);
    })
  })];
}, _leaveRenders);
var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {
  var children = _ref3.children,
      changeState = _ref3.changeState;
  return React__default.cloneElement(children, {
    in: true,
    onEntered: callHook(children, 'onEntered', function () {
      changeState(ENTERED, React__default.cloneElement(children, {
        in: true
      }));
    })
  });
}, _enterRenders[modes.in] = function (_ref4) {
  var current = _ref4.current,
      children = _ref4.children,
      changeState = _ref4.changeState;
  return [React__default.cloneElement(current, {
    in: false,
    onExited: callHook(current, 'onExited', function () {
      changeState(ENTERED, React__default.cloneElement(children, {
        in: true
      }));
    })
  }), React__default.cloneElement(children, {
    in: true
  })];
}, _enterRenders);
/**
 * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).
 * You can use it when you want to control the render between state transitions.
 * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.
 *
 * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.
 * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.
 *
 * **Note**: If you want the animation to happen simultaneously
 * (that is, to have the old child removed and a new child inserted **at the same time**),
 * you should use
 * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)
 * instead.
 *
 * ```jsx
 * function App() {
 *  const [state, setState] = useState(false);
 *  return (
 *    <SwitchTransition>
 *      <CSSTransition
 *        key={state ? "Goodbye, world!" : "Hello, world!"}
 *        addEndListener={(node, done) => node.addEventListener("transitionend", done, false)}
 *        classNames='fade'
 *      >
 *        <button onClick={() => setState(state => !state)}>
 *          {state ? "Goodbye, world!" : "Hello, world!"}
 *        </button>
 *      </CSSTransition>
 *    </SwitchTransition>
 *  );
 * }
 * ```
 *
 * ```css
 * .fade-enter{
 *    opacity: 0;
 * }
 * .fade-exit{
 *    opacity: 1;
 * }
 * .fade-enter-active{
 *    opacity: 1;
 * }
 * .fade-exit-active{
 *    opacity: 0;
 * }
 * .fade-enter-active,
 * .fade-exit-active{
 *    transition: opacity 500ms;
 * }
 * ```
 */

var SwitchTransition = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(SwitchTransition, _React$Component);

  function SwitchTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      status: ENTERED,
      current: null
    };
    _this.appeared = false;

    _this.changeState = function (status, current) {
      if (current === void 0) {
        current = _this.state.current;
      }

      _this.setState({
        status: status,
        current: current
      });
    };

    return _this;
  }

  var _proto = SwitchTransition.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };

  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.children == null) {
      return {
        current: null
      };
    }

    if (state.status === ENTERING && props.mode === modes.in) {
      return {
        status: ENTERING
      };
    }

    if (state.current && areChildrenDifferent(state.current, props.children)) {
      return {
        status: EXITING
      };
    }

    return {
      current: React__default.cloneElement(props.children, {
        in: true
      })
    };
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        mode = _this$props.mode,
        _this$state = this.state,
        status = _this$state.status,
        current = _this$state.current;
    var data = {
      children: children,
      current: current,
      changeState: this.changeState,
      status: status
    };
    var component;

    switch (status) {
      case ENTERING:
        component = enterRenders[mode](data);
        break;

      case EXITING:
        component = leaveRenders[mode](data);
        break;

      case ENTERED:
        component = current;
    }

    return /*#__PURE__*/React__default.createElement(TransitionGroupContext.Provider, {
      value: {
        isMounting: !this.appeared
      }
    }, component);
  };

  return SwitchTransition;
}(React__default.Component);

SwitchTransition.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * Transition modes.
   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.
   * `in-out`: New element transitions in first, then when complete, the current element transitions out.
   *
   * @type {'out-in'|'in-out'}
   */
  mode: propTypes.oneOf([modes.in, modes.out]),

  /**
   * Any `Transition` or `CSSTransition` component.
   */
  children: propTypes.oneOfType([propTypes.element.isRequired])
} : {};
SwitchTransition.defaultProps = {
  mode: modes.out
};

var InlineEntryCardSkeleton = function InlineEntryCardSkeleton() {
  return /*#__PURE__*/React__default.createElement(SkeletonContainer, {
    width: "100%",
    clipId: "f36-inline-entry-card-skeleton",
    svgHeight: 16
  }, /*#__PURE__*/React__default.createElement(SkeletonBodyText, {
    numberOfLines: 1
  }));
};

var _excluded$A = ["className", "dropdownListElements", "isSelected", "children", "testId", "isLoading", "status", "href"];
var styles$t = {
  "InlineEntryCard": "InlineEntryCard__InlineEntryCard___2cGQw",
  "InlineEntryCard__skeleton-wrapper": "InlineEntryCard__InlineEntryCard__skeleton-wrapper___BA5rM",
  "InlineEntryCard__text-wrapper": "InlineEntryCard__InlineEntryCard__text-wrapper___3Sf6P",
  "InlineEntryCard__status-indicator": "InlineEntryCard__InlineEntryCard__status-indicator___1sYHe",
  "InlineEntryCard__status-indicator--published": "InlineEntryCard__InlineEntryCard__status-indicator--published___2iM7W",
  "InlineEntryCard__status-indicator--draft": "InlineEntryCard__InlineEntryCard__status-indicator--draft___8AKK1",
  "InlineEntryCard__status-indicator--archived": "InlineEntryCard__InlineEntryCard__status-indicator--archived___3-aWk",
  "InlineEntryCard__status-indicator--changed": "InlineEntryCard__InlineEntryCard__status-indicator--changed___ArwPC",
  "InlineEntryCard__actions": "InlineEntryCard__InlineEntryCard__actions___3DzZi",
  "InlineEntryCard__spinner--enter": "InlineEntryCard__InlineEntryCard__spinner--enter___jY1EO",
  "InlineEntryCard__spinner--enter-active": "InlineEntryCard__InlineEntryCard__spinner--enter-active___AZomL",
  "InlineEntryCard__spinner--exit": "InlineEntryCard__InlineEntryCard__spinner--exit___29TCK",
  "InlineEntryCard__spinner--exit-active": "InlineEntryCard__InlineEntryCard__spinner--exit-active___31qgq"
};
function InlineEntryCard(_ref) {
  var className = _ref.className,
      dropdownListElements = _ref.dropdownListElements,
      isSelected = _ref.isSelected,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-inline-entry-card' : _ref$testId,
      isLoading = _ref.isLoading,
      status = _ref.status,
      href = _ref.href,
      otherProps = _objectWithoutProperties(_ref, _excluded$A);

  var classNames = classnames(styles$t.InlineEntryCard, className);
  var statusIndicatorClassNames = classnames(styles$t['InlineEntryCard__status-indicator'], _defineProperty({}, styles$t["InlineEntryCard__status-indicator--".concat(status)], status && !isLoading));
  return /*#__PURE__*/React__default.createElement(Card, _extends({
    selected: isSelected,
    className: classNames,
    href: href
  }, otherProps, {
    "data-test-id": testId
  }), /*#__PURE__*/React__default.createElement(CSSTransition, {
    timeout: 100,
    "in": isLoading,
    classNames: {
      enter: styles$t['InlineEntryCard__spinner--enter'],
      enterActive: styles$t['InlineEntryCard__spinner--enter-active'],
      exit: styles$t['InlineEntryCard__spinner--exit'],
      exitActive: styles$t['InlineEntryCard__spinner--exit-active']
    },
    mountOnEnter: true,
    unmountOnExit: true
  }, /*#__PURE__*/React__default.createElement("div", {
    className: styles$t['InlineEntryCard__skeleton-wrapper']
  }, /*#__PURE__*/React__default.createElement(InlineEntryCardSkeleton, null))), /*#__PURE__*/React__default.createElement("div", {
    className: statusIndicatorClassNames
  }), /*#__PURE__*/React__default.createElement("span", {
    className: styles$t['InlineEntryCard__text-wrapper']
  }, isLoading ? 'Loading' : children), dropdownListElements && /*#__PURE__*/React__default.createElement(CardActions, {
    className: styles$t['InlineEntryCard__actions'],
    iconButtonProps: {
      onClick: function onClick(e) {
        return e.stopPropagation;
      }
    }
  }, dropdownListElements));
}

var dayjs_min = createCommonjsModule(function (module, exports) {
!function(t,e){module.exports=e();}(commonjsGlobal,(function(){var t=1e3,e=6e4,n=36e5,r="millisecond",i="second",s="minute",u="hour",a="day",o="week",f="month",h="quarter",c="year",d="date",$="Invalid Date",l=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},m=function(t,e,n){var r=String(t);return !r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},g={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return (e<=0?"+":"-")+m(r,2,"0")+":"+m(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return -t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return +(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return {M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},D="en",v={};v[D]=M;var p=function(t){return t instanceof _},S=function(t,e,n){var r;if(!t)return D;if("string"==typeof t)v[t]&&(r=t),e&&(v[t]=e,r=t);else {var i=t.name;v[i]=t,r=i;}return !n&&r&&(D=r),r||!n&&D},w=function(t,e){if(p(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=g;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t);}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match(l);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init();},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds();},m.$utils=function(){return O},m.isValid=function(){return !(this.$d.toString()===$)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),$=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},l=function(t,e){return O.w(n.toDate()[t].apply(n.toDate("s"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,g="set"+(this.$u?"UTC":"");switch(h){case c:return r?$(1,0):$(31,11);case f:return r?$(1,M):$(0,M+1);case o:var D=this.$locale().weekStart||0,v=(y<D?y+7:y)-D;return $(r?m-v:m+(6-v),M);case a:case d:return l(g+"Hours",0);case u:return l(g+"Minutes",1);case s:return l(g+"Seconds",2);case i:return l(g+"Milliseconds",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h="set"+(this.$u?"UTC":""),$=(n={},n[a]=h+"Date",n[d]=h+"Date",n[f]=h+"Month",n[c]=h+"FullYear",n[u]=h+"Hours",n[s]=h+"Minutes",n[i]=h+"Seconds",n[r]=h+"Milliseconds",n)[o],l=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[$](l),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d;}else $&&this.$d[$](l);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,$=this;r=Number(r);var l=O.p(h),y=function(t){var e=w($);return O.w(e.date(e.date()+Math.round(t*r)),$)};if(l===f)return this.set(f,this.$M+r);if(l===c)return this.set(c,this.$y+r);if(l===a)return y(1);if(l===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[l]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||$;var r=t||"YYYY-MM-DDTHH:mm:ssZ",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].substr(0,s)},c=function(t){return O.s(s%12||12,t,"0")},d=n.meridiem||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,"0"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,"0"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,"0"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,"0"),s:String(this.$s),ss:O.s(this.$s,2,"0"),SSS:O.s(this.$ms,3,"0"),Z:i};return r.replace(y,(function(t,e){return e||l[t]||i.replace(":","")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,$){var l,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,g=this-M,D=O.m(this,M);return D=(l={},l[c]=D/12,l[f]=D,l[h]=D/3,l[o]=(g-m)/6048e5,l[a]=(g-m)/864e5,l[u]=g/n,l[s]=g/e,l[i]=g/t,l)[y]||g,$?D:O.a(D)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return v[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),b=_.prototype;return w.prototype=b,[["$ms",r],["$s",i],["$m",s],["$H",u],["$W",a],["$M",f],["$y",c],["$D",d]].forEach((function(t){b[t[1]]=function(e){return this.$g(e,t[0],t[1])};})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=v[D],w.Ls=v,w.p={},w}));
});

var relativeTime = createCommonjsModule(function (module, exports) {
!function(r,e){module.exports=e();}(commonjsGlobal,(function(){return function(r,e,t){r=r||{};var n=e.prototype,o={future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"};function i(r,e,t,o){return n.fromToBase(r,e,t,o)}t.en.relativeTime=o,n.fromToBase=function(e,n,i,d,u){for(var f,a,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:"s",r:44,d:"second"},{l:"m",r:89},{l:"mm",r:44,d:"minute"},{l:"h",r:89},{l:"hh",r:21,d:"hour"},{l:"d",r:35},{l:"dd",r:25,d:"day"},{l:"M",r:45},{l:"MM",r:10,d:"month"},{l:"y",r:17},{l:"yy",d:"year"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(f=d?t(e).diff(i,y.d,!0):i.diff(e,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(f));if(s=f>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(""+p)),a="string"==typeof v?v.replace("%d",p):v(p,n,y.l,s);break}}if(n)return a;var M=s?l.future:l.past;return "function"==typeof M?M(a):M.replace("%s",a)},n.to=function(r,e){return i(r,e,this,!0)},n.from=function(r,e){return i(r,e,this)};var d=function(r){return r.$u?t.utc():t()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)};}}));
});

var utc = createCommonjsModule(function (module, exports) {
!function(t,i){module.exports=i();}(commonjsGlobal,(function(){var t="minute",i=/[+-]\d\d(?::?\d\d)?/g,e=/([+-]|\d\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t);};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds();}else r.call(this);};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if("string"==typeof s&&null===(s=function(t){void 0===t&&(t="");var s=t.match(i);if(!s)return null;var f=(""+s[0]).match(e)||["-",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:"+"===n?u:-u}(s)))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r;}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?"YYYY-MM-DDTHH:mm:ss[Z]":"");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||(new Date).getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return !!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return "s"===t&&this.$offset?n(this.format("YYYY-MM-DD HH:mm:ss:SSS")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)};}}));
});

dayjs_min.extend(utc);
dayjs_min.extend(relativeTime);
var formatTokens = {
  FULL: 'D MMM YYYY[ at ]h:mm a',
  DATE_ONLY: 'D MMM YYYY',
  TIME_ONLY: 'h:mm a',
  WEEKDAY_DATE: 'ddd[, ]D MMM'
};
var formatTokensMachineReadable = {
  FULL: 'YYYY-MM-DDTHH:mm:ss.SSS[Z]',
  DATE_ONLY: 'YYYY-MM-DD',
  TIME_ONLY: 'HH:mm:ss.SSS',
  WEEKDAY_DATE: 'MM-DD'
};

/**
 * @example
 * > formatDateTime(date)
 * 13 Aug 2019 at 10:00 am
 *
 * @example
 * > formatDateTime(date, 'DATE_ONLY')
 * 13 Aug 2019
 */
var formatDateTime = function formatDateTime(date) {
  var token = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'FULL';

  if (!formatTokens[token]) {
    throw new TypeError("Unknown date format '".concat(token, "'"));
  }

  return dayjs_min(date).format(formatTokens[token]);
};
/**
 * @example
 * > formatMachineReadableDateTime(date)
 * 2019-08-13T10:00:00.000Z
 *
 * @example
 * > formatMachineReadableDateTime(date, 'DATE_ONLY')
 * 2019-08-13
 */

var formatMachineReadableDateTime = function formatMachineReadableDateTime(date) {
  var token = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'FULL';

  if (!formatTokens[token]) {
    throw new TypeError("Unknown date format '".concat(token, "'"));
  }

  return dayjs_min(date).utc().format(formatTokensMachineReadable[token]);
};
/**
 * @example
 * > formatDate(date)
 * 13 Aug 2019
 */

var formatDate = function formatDate(date) {
  return formatDateTime(date, 'DATE_ONLY');
};
/**
 * @example
 * > formatTime(date)
 * 8:00 am
 */

var formatTime = function formatTime(date) {
  return formatDateTime(date, 'TIME_ONLY');
};
/**
 * @example
 * > formatWeekdayDate(date)
 * Mon, 12 Aug
 */

var formatWeekdayDate = function formatWeekdayDate(date) {
  return formatDateTime(date, 'WEEKDAY_DATE');
};
var formatRelativeDateTime = function formatRelativeDateTime(date) {
  var baseDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Date();
  return dayjs_min(date).from(baseDate);
};

var dateUtils = /*#__PURE__*/Object.freeze({
  __proto__: null,
  formatDateTime: formatDateTime,
  formatMachineReadableDateTime: formatMachineReadableDateTime,
  formatDate: formatDate,
  formatTime: formatTime,
  formatWeekdayDate: formatWeekdayDate,
  formatRelativeDateTime: formatRelativeDateTime
});

/**
 * Formats a JS Date object to an absolute date and time inside of a <time /> tag
 */
var DateTime = function DateTime(_ref) {
  var date = _ref.date,
      _ref$format = _ref.format,
      format = _ref$format === void 0 ? 'FULL' : _ref$format,
      className = _ref.className,
      testId = _ref.testId;

  if (typeof date === 'string' || typeof date === 'number') {
    date = new Date(date);
  }

  var formatted = formatDateTime(date, format);
  var machineReadable = formatMachineReadableDateTime(date, format);
  return /*#__PURE__*/React__default.createElement("time", {
    dateTime: machineReadable,
    className: className,
    "data-test-id": testId
  }, formatted);
};

/**
 * Expresses a historical or upcoming date as a relative date/date time
 *
 * Forma 36 usage guidelines: https://f36.contentful.com/guidelines/date-and-time/
 */
var RelativeDate = function RelativeDate(_ref) {
  var date = _ref.date,
      testId = _ref.testId,
      className = _ref.className,
      baseDate = _ref.baseDate;

  if (typeof date === 'string' || typeof date === 'number') {
    date = new Date(date);
  }

  var _useState = useState(formatRelativeDateTime(date, baseDate)),
      _useState2 = _slicedToArray(_useState, 2),
      relativeTime = _useState2[0],
      setRelativeTime = _useState2[1];

  var absoluteTime = formatDateTime(date);
  useEffect(function () {
    if (baseDate) {
      // No need to trigger a re-render if we are doing a static comparison
      return;
    }

    var intervalId = setInterval(function () {
      setRelativeTime(formatRelativeDateTime(date, baseDate));
    }, 1000);
    return function cleanup() {
      clearInterval(intervalId);
    };
  });
  return /*#__PURE__*/React__default.createElement("time", {
    className: className,
    dateTime: date.toISOString(),
    "data-test-id": testId,
    title: absoluteTime
  }, relativeTime);
};

var _excluded$B = ["checked", "className", "disabled", "id", "labelText", "name", "onBlur", "onChange", "onFocus", "required", "testId", "type", "value", "willBlurOnEsc", "indeterminate"];
var styles$u = {
  "ControlledInput": "ControlledInput__ControlledInput___2XK3j",
  "ControlledInput--disabled": "ControlledInput__ControlledInput--disabled___3prPF",
  "RadioButton": "ControlledInput__RadioButton___48lef",
  "RadioButton__ghost": "ControlledInput__RadioButton__ghost___whxKo",
  "Checkbox": "ControlledInput__Checkbox___ra2TY",
  "Checkbox__ghost": "ControlledInput__Checkbox__ghost___1Oqlk",
  "Input__ghost": "ControlledInput__Input__ghost___2bBB9"
};
var ControlledInput = function ControlledInput(_ref) {
  var _cn2;

  var checked = _ref.checked,
      className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      id = _ref.id,
      labelText = _ref.labelText,
      name = _ref.name,
      _onBlur = _ref.onBlur,
      _onChange = _ref.onChange,
      _onFocus = _ref.onFocus,
      _ref$required = _ref.required,
      required = _ref$required === void 0 ? false : _ref$required,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-controlled-input' : _ref$testId,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? 'checkbox' : _ref$type,
      value = _ref.value,
      _ref$willBlurOnEsc = _ref.willBlurOnEsc,
      willBlurOnEsc = _ref$willBlurOnEsc === void 0 ? true : _ref$willBlurOnEsc,
      indeterminate = _ref.indeterminate,
      otherProps = _objectWithoutProperties(_ref, _excluded$B);

  var inputRef = useRef(null);
  var classNames = classnames(styles$u['ControlledInput'], _defineProperty({}, styles$u['ControlledInput--disabled'], disabled));
  var wrapperClassname = classnames((_cn2 = {}, _defineProperty(_cn2, styles$u['RadioButton'], type === 'radio'), _defineProperty(_cn2, styles$u['Checkbox'], type === 'checkbox'), _cn2), className);
  var handleKeyDown = useCallback(function (e) {
    e.persist();

    if (e.nativeEvent.code === 'Escape' && willBlurOnEsc) {
      e.currentTarget.blur();
    }
  }, [willBlurOnEsc]);
  useEffect(function () {
    inputRef.current.indeterminate = indeterminate;
  }, [indeterminate]);
  return /*#__PURE__*/React__default.createElement("div", {
    className: wrapperClassname
  }, /*#__PURE__*/React__default.createElement("input", _extends({
    className: classNames,
    value: value,
    name: name,
    checked: checked,
    type: type,
    ref: inputRef,
    "data-test-id": testId,
    onChange: function onChange(e) {
      if (_onChange) {
        _onChange(e);
      }
    },
    onBlur: function onBlur(e) {
      if (_onBlur) {
        _onBlur(e);
      }
    },
    onFocus: function onFocus(e) {
      if (_onFocus) {
        _onFocus(e);
      }
    },
    "aria-label": labelText,
    id: id,
    required: required,
    disabled: disabled,
    onKeyDown: handleKeyDown
  }, otherProps)), type === 'radio' ?
  /*#__PURE__*/

  /* eslint-disable-next-line jsx-a11y/label-has-associated-control */
  React__default.createElement("label", {
    className: classnames(styles$u['Input__ghost'], styles$u['RadioButton__ghost']),
    htmlFor: id
  }) : /*#__PURE__*/React__default.createElement("label", {
    className: classnames(styles$u['Input__ghost'], styles$u['Checkbox__ghost']),
    htmlFor: id
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: indeterminate ? 'Minus' : 'Done',
    color: disabled ? 'secondary' : 'white',
    size: "medium"
  })));
};

var _excluded$C = ["id", "labelIsLight", "testId", "required", "helpText", "disabled", "labelText", "helpTextProps", "formLabelProps", "className", "checked", "value", "validationMessage", "onChange", "children", "inputType", "inputProps", "name"];
var styles$v = {
  "ControlledInputField": "ControlledInputField__ControlledInputField___2uIG9",
  "ControlledInputField--disabled": "ControlledInputField__ControlledInputField--disabled___HDWt6",
  "ControlledInputField__input": "ControlledInputField__ControlledInputField__input___3OMYB",
  "ControlledInputField__label": "ControlledInputField__ControlledInputField__label___a9J52",
  "ControlledInputField__label--light": "ControlledInputField__ControlledInputField__label--light___2G2AZ"
};
var ControlledInputField = function ControlledInputField(_ref) {
  var id = _ref.id,
      _ref$labelIsLight = _ref.labelIsLight,
      labelIsLight = _ref$labelIsLight === void 0 ? false : _ref$labelIsLight,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-controlled-input-field' : _ref$testId,
      required = _ref.required,
      helpText = _ref.helpText,
      disabled = _ref.disabled,
      labelText = _ref.labelText,
      helpTextProps = _ref.helpTextProps,
      formLabelProps = _ref.formLabelProps,
      className = _ref.className,
      _ref$checked = _ref.checked,
      checked = _ref$checked === void 0 ? false : _ref$checked,
      value = _ref.value,
      validationMessage = _ref.validationMessage,
      onChange = _ref.onChange,
      children = _ref.children,
      _ref$inputType = _ref.inputType,
      inputType = _ref$inputType === void 0 ? 'checkbox' : _ref$inputType,
      inputProps = _ref.inputProps,
      name = _ref.name,
      otherProps = _objectWithoutProperties(_ref, _excluded$C);

  var classNames = classnames(styles$v['ControlledInputField'], className, _defineProperty({}, styles$v['ControlledInputField--disabled'], disabled));
  return /*#__PURE__*/React__default.createElement("div", _extends({
    "data-test-id": testId,
    className: classNames
  }, otherProps), /*#__PURE__*/React__default.createElement(ControlledInput, _extends({
    id: id,
    labelText: labelText,
    type: inputType,
    name: name,
    required: required,
    checked: checked,
    disabled: disabled,
    value: value,
    onChange: onChange,
    className: styles$v.ControlledInputField__input
  }, inputProps)), /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement(FormLabel, _extends({
    className: classnames(styles$v.ControlledInputField__label, _defineProperty({}, styles$v['ControlledInputField__label--light'], labelIsLight)),
    required: required,
    htmlFor: id
  }, formLabelProps), labelText), validationMessage && /*#__PURE__*/React__default.createElement(ValidationMessage, {
    className: styles$v['ControlledInputField__validation-message']
  }, validationMessage), helpText && /*#__PURE__*/React__default.createElement(HelpText, _extends({
    className: styles$v['ControlledInputField__help-text']
  }, helpTextProps), helpText)));
};

var _excluded$D = ["checked", "labelIsLight", "testId"];
var CheckboxField = function CheckboxField(_ref) {
  var _ref$checked = _ref.checked,
      checked = _ref$checked === void 0 ? false : _ref$checked,
      _ref$labelIsLight = _ref.labelIsLight,
      labelIsLight = _ref$labelIsLight === void 0 ? false : _ref$labelIsLight,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-checkbox-field' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$D);

  return /*#__PURE__*/React__default.createElement(ControlledInputField, _extends({
    checked: checked,
    labelIsLight: labelIsLight,
    testId: testId
  }, otherProps, {
    inputType: "checkbox"
  }));
};

var _excluded$E = ["disabled", "required", "testId", "type", "willBlurOnEsc"];

var Checkbox = function Checkbox(_ref) {
  var _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      _ref$required = _ref.required,
      required = _ref$required === void 0 ? false : _ref$required,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-checkbox' : _ref$testId,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? 'checkbox' : _ref$type,
      _ref$willBlurOnEsc = _ref.willBlurOnEsc,
      willBlurOnEsc = _ref$willBlurOnEsc === void 0 ? true : _ref$willBlurOnEsc,
      otherProps = _objectWithoutProperties(_ref, _excluded$E);

  return /*#__PURE__*/React__default.createElement(ControlledInput, _extends({
    disabled: disabled,
    required: required,
    "data-test-id": testId,
    type: type,
    willBlurOnEsc: willBlurOnEsc
  }, otherProps));
};

var _excluded$F = ["className", "color", "customSize", "size", "testId"];
var styles$w = {
  "Spinner": "Spinner__Spinner___32lpa",
  "Spinner--small": "Spinner__Spinner--small___2hyo0",
  "Spinner--large": "Spinner__Spinner--large___3TPiL",
  "Spinner--primary": "Spinner__Spinner--primary___SjakB",
  "Spinner--white": "Spinner__Spinner--white___3Hsq3",
  "circle1--translate": "Spinner__circle1--translate___1u68A",
  "circle1-translate": "Spinner__circle1-translate___3o4as",
  "circle1--scale": "Spinner__circle1--scale___38WqL",
  "circle1-scale": "Spinner__circle1-scale___3REbQ",
  "circle2--translate": "Spinner__circle2--translate___1GBUJ",
  "circle2-translate": "Spinner__circle2-translate___OKsXc",
  "circle2--scale": "Spinner__circle2--scale___3khDl",
  "circle2-scale": "Spinner__circle2-scale___vcBEG",
  "circle3--translate": "Spinner__circle3--translate___2M3jS",
  "circle3-translate": "Spinner__circle3-translate___2xnfV",
  "circle3--scale": "Spinner__circle3--scale___2zFhX",
  "circle3-scale": "Spinner__circle3-scale___2PKsS"
};
function Spinner(_ref) {
  var _cn;

  var className = _ref.className,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'default' : _ref$color,
      customSize = _ref.customSize,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'default' : _ref$size,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-spinner' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$F);

  var classNames = classnames(styles$w.Spinner, className, (_cn = {}, _defineProperty(_cn, styles$w["Spinner--".concat(size)], size), _defineProperty(_cn, styles$w["Spinner--".concat(color)], color), _cn));
  return /*#__PURE__*/React__default.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 60 51",
    className: classNames,
    style: customSize ? {
      height: "".concat(customSize, "px"),
      width: "".concat(customSize, "px")
    } : {},
    "data-test-id": testId
  }, otherProps), /*#__PURE__*/React__default.createElement("title", null, "Loading\u2026"), /*#__PURE__*/React__default.createElement("g", {
    className: styles$w['circle1--translate'],
    transform: "translate(10,33.528168)"
  }, /*#__PURE__*/React__default.createElement("g", {
    className: styles$w['circle1--scale']
  }, /*#__PURE__*/React__default.createElement("circle", {
    id: "circle1",
    r: "6",
    transform: "translate(0,10.471832)"
  }))), /*#__PURE__*/React__default.createElement("g", {
    className: styles$w['circle2--translate'],
    transform: "translate(30,33.528168)"
  }, /*#__PURE__*/React__default.createElement("g", {
    className: styles$w['circle2--scale']
  }, /*#__PURE__*/React__default.createElement("circle", {
    id: "circle2",
    r: "6",
    transform: "translate(0,10.471832)"
  }))), /*#__PURE__*/React__default.createElement("g", {
    className: styles$w['circle3--translate'],
    transform: "translate(50,33.528168)"
  }, /*#__PURE__*/React__default.createElement("g", {
    className: styles$w['circle3--scale']
  }, /*#__PURE__*/React__default.createElement("circle", {
    id: "circle3",
    r: "6",
    transform: "translate(0,10.471832)"
  }))));
}

var _excluded$G = ["buttonType", "children", "className", "disabled", "href", "rel", "target", "icon", "indicateDropdown", "isActive", "isFullWidth", "loading", "onBlur", "onClick", "size", "testId", "type"];
var styles$x = {
  "Button": "Button__Button___1ZfFj",
  "Button--disabled": "Button__Button--disabled___1E20M",
  "Button__icon": "Button__Button__icon___2YX5-",
  "Button__dropdown-icon": "Button__Button__dropdown-icon___2gP3I",
  "Button--full-width": "Button__Button--full-width___3Fmpo",
  "Button--muted": "Button__Button--muted___2Wair",
  "Button--is-active": "Button__Button--is-active___iPvhW",
  "Button--naked": "Button__Button--naked___mB6LS",
  "Button--primary": "Button__Button--primary___JImeO",
  "Button__label": "Button__Button__label___3tcOj",
  "Button--positive": "Button__Button--positive___1t6w1",
  "Button--negative": "Button__Button--negative___22jwE",
  "Button--warning": "Button__Button--warning___2xMa4",
  "Button__inner-wrapper": "Button__Button__inner-wrapper___3qrNC",
  "Button--small": "Button__Button--small___3yyrk",
  "Button--large": "Button__Button--large___1PYrl",
  "Button--spinner-wrapper": "Button__Button--spinner-wrapper___3m7zk",
  "Button--spinner--enter": "Button__Button--spinner--enter___1qgg7",
  "Button--spinner--enter-active": "Button__Button--spinner--enter-active___1IZMh",
  "Button--spinner--exit": "Button__Button--spinner--exit___2RUI-",
  "Button--spinner--exit-active": "Button__Button--spinner--exit-active___3TjZf"
};
var Button = function Button(_ref) {
  var _cn;

  var _ref$buttonType = _ref.buttonType,
      buttonType = _ref$buttonType === void 0 ? 'primary' : _ref$buttonType,
      children = _ref.children,
      className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      href = _ref.href,
      rel = _ref.rel,
      target = _ref.target,
      icon = _ref.icon,
      _ref$indicateDropdown = _ref.indicateDropdown,
      indicateDropdown = _ref$indicateDropdown === void 0 ? false : _ref$indicateDropdown,
      isActive = _ref.isActive,
      _ref$isFullWidth = _ref.isFullWidth,
      isFullWidth = _ref$isFullWidth === void 0 ? false : _ref$isFullWidth,
      _ref$loading = _ref.loading,
      loading = _ref$loading === void 0 ? false : _ref$loading,
      _onBlur = _ref.onBlur,
      _onClick = _ref.onClick,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'medium' : _ref$size,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-button' : _ref$testId,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? href ? undefined : 'button' : _ref$type,
      otherProps = _objectWithoutProperties(_ref, _excluded$G);

  var classNames = classnames(styles$x.Button, className, styles$x["Button--".concat(buttonType)], styles$x["Button--".concat(size)], (_cn = {}, _defineProperty(_cn, styles$x['Button--disabled'], disabled), _defineProperty(_cn, styles$x['Button--full-width'], isFullWidth), _defineProperty(_cn, styles$x['Button--is-active'], isActive), _cn));
  var iconColor = buttonType === 'muted' || buttonType === 'warning' || buttonType === 'naked' ? 'secondary' : 'white';
  var Element = href ? 'a' : 'button';
  return /*#__PURE__*/React__default.createElement(Element, _extends({
    onBlur: function onBlur(e) {
      e.persist();

      if (_onBlur && !disabled) {
        _onBlur(e);
      }
    },
    onClick: function onClick(e) {
      e.persist();

      if (_onClick && !disabled && !loading) {
        _onClick(e);
      }
    },
    "data-test-id": testId,
    className: classNames,
    disabled: disabled,
    href: !disabled ? href : undefined,
    rel: rel,
    target: target,
    type: type
  }, otherProps), /*#__PURE__*/React__default.createElement(TabFocusTrap, {
    className: styles$x['Button__inner-wrapper']
  }, icon && !loading && /*#__PURE__*/React__default.createElement(Icon, {
    className: styles$x.Button__icon,
    size: size === 'small' ? 'tiny' : 'small',
    icon: icon,
    color: iconColor
  }), children && /*#__PURE__*/React__default.createElement("span", {
    className: styles$x.Button__label
  }, children), /*#__PURE__*/React__default.createElement(CSSTransition, {
    appear: true,
    "in": loading,
    timeout: 1000,
    classNames: {
      appear: styles$x['Button--spinner--enter'],
      appearActive: styles$x['Button--spinner--enter-active'],
      exit: styles$x['Button--spinner--exit'],
      exitActive: styles$x['Button--spinner--exit-active']
    },
    mountOnEnter: true,
    unmountOnExit: true
  }, function (state) {
    return state === 'unmounted' ? null : /*#__PURE__*/React__default.createElement("div", {
      className: styles$x['Button--spinner-wrapper']
    }, /*#__PURE__*/React__default.createElement(Spinner, {
      customSize: 12,
      color: buttonType === 'muted' || buttonType === 'warning' || buttonType === 'naked' ? 'default' : 'white'
    }));
  }), indicateDropdown && /*#__PURE__*/React__default.createElement(Icon, {
    className: styles$x['Button__dropdown-icon'],
    icon: "ChevronDown",
    color: iconColor
  })));
};

var _excluded$H = ["className", "children", "testId"];
var styles$y = {
  "EditorToolbar": "EditorToolbar__EditorToolbar___3Sta5"
};
function EditorToolbar(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-editor-toolbar' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$H);

  var classNames = classnames(styles$y['EditorToolbar'], className);
  return /*#__PURE__*/React__default.createElement("div", _extends({
    className: classNames
  }, otherProps, {
    "data-test-id": testId
  }), children);
}

var _excluded$I = ["className", "label", "testId", "icon", "tooltip", "tooltipPlace", "iconButtonProps", "isActive", "disabled", "onClick", "withDropdown"];
var styles$z = {
  "EditorToolbarButton": "EditorToolbarButton__EditorToolbarButton___2t--R",
  "EditorToolbarButton--is-active": "EditorToolbarButton__EditorToolbarButton--is-active___12pD0"
};
function EditorToolbarButton(_ref) {
  var className = _ref.className,
      label = _ref.label,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-editor-toolbar-button' : _ref$testId,
      icon = _ref.icon,
      tooltip = _ref.tooltip,
      tooltipPlace = _ref.tooltipPlace,
      iconButtonProps = _ref.iconButtonProps,
      _ref$isActive = _ref.isActive,
      isActive = _ref$isActive === void 0 ? false : _ref$isActive,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      onClick = _ref.onClick,
      _ref$withDropdown = _ref.withDropdown,
      withDropdown = _ref$withDropdown === void 0 ? false : _ref$withDropdown,
      otherProps = _objectWithoutProperties(_ref, _excluded$I);

  var classNames = classnames(styles$z['EditorToolbarButton'], className, _defineProperty({}, styles$z['EditorToolbarButton--is-active'], isActive));
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Tooltip, {
    content: !disabled ? tooltip : undefined,
    place: tooltipPlace
  }, /*#__PURE__*/React__default.createElement(IconButton, _extends({
    iconProps: {
      icon: icon
    },
    testId: testId,
    buttonType: "secondary",
    label: label,
    className: classNames,
    onClick: !disabled ? onClick : function () {},
    disabled: disabled,
    withDropdown: withDropdown
  }, iconButtonProps, otherProps))));
}

var _excluded$J = ["className", "testId"];
var styles$A = {
  "EditorToolbarDivider": "EditorToolbarDivider__EditorToolbarDivider___22NLC"
};
function EditorToolbarDivider(_ref) {
  var className = _ref.className,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-editor-toolbar-divider' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$J);

  var classNames = classnames(styles$A['EditorToolbarDivider'], className);
  return /*#__PURE__*/React__default.createElement("span", _extends({
    "data-test-id": testId,
    className: classNames
  }, otherProps));
}

var _excluded$K = ["children", "className", "hasError", "id", "isDisabled", "name", "onBlur", "onChange", "onFocus", "required", "testId", "value", "width", "willBlurOnEsc"];
var styles$B = {
  "Select__wrapper": "Select__Select__wrapper___2mbYV",
  "Select": "Select__Select___2Gi9N a11y__focus-border--default___60AXp",
  "Select--disabled": "Select__Select--disabled___156vR",
  "Select--small": "Select__Select--small___2amb5",
  "Select--medium": "Select__Select--medium___1QRqZ",
  "Select--large": "Select__Select--large___1HaJb",
  "Select--full": "Select__Select--full___AENS4",
  "Select--auto": "Select__Select--auto___3Y-B9",
  "Select--negative": "Select__Select--negative___1lj8S",
  "Select__icon": "Select__Select__icon___OBmvS"
};
var Select = function Select(_ref) {
  var _cn;

  var children = _ref.children,
      className = _ref.className,
      _ref$hasError = _ref.hasError,
      hasError = _ref$hasError === void 0 ? false : _ref$hasError,
      id = _ref.id,
      _ref$isDisabled = _ref.isDisabled,
      isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,
      name = _ref.name,
      onBlur = _ref.onBlur,
      onChange = _ref.onChange,
      onFocus = _ref.onFocus,
      _ref$required = _ref.required,
      required = _ref$required === void 0 ? false : _ref$required,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-select' : _ref$testId,
      value = _ref.value,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? 'full' : _ref$width,
      _ref$willBlurOnEsc = _ref.willBlurOnEsc,
      willBlurOnEsc = _ref$willBlurOnEsc === void 0 ? true : _ref$willBlurOnEsc,
      otherProps = _objectWithoutProperties(_ref, _excluded$K);

  var _useState = useState(value),
      _useState2 = _slicedToArray(_useState, 2),
      valueState = _useState2[0],
      setValueState = _useState2[1];

  var handleKeyDown = function handleKeyDown(e) {
    if (e.nativeEvent.code === 'Escape' && willBlurOnEsc) {
      e.currentTarget.blur();
    }
  };

  var handleChange = useCallback(function (e) {
    if (!isDisabled) {
      setValueState(e.target.value);

      if (onChange) {
        onChange(e);
      }
    }
  }, [onChange, isDisabled]);
  useEffect(function () {
    setValueState(value);
  }, [value]);
  var widthClass = "Select--".concat(width);
  var classNames = classnames(styles$B['Select'], (_cn = {}, _defineProperty(_cn, styles$B['Select--disabled'], isDisabled), _defineProperty(_cn, styles$B['Select--negative'], hasError), _cn));
  var wrapperClassNames = classnames(styles$B['Select__wrapper'], styles$B[widthClass], className);
  return /*#__PURE__*/React__default.createElement("div", {
    className: wrapperClassNames
  }, /*#__PURE__*/React__default.createElement("select", _extends({
    id: id,
    required: required,
    name: name,
    "aria-label": name,
    "data-test-id": testId,
    className: classNames,
    value: valueState,
    disabled: isDisabled,
    onFocus: onFocus,
    onChange: handleChange,
    onBlur: onBlur,
    onKeyDown: handleKeyDown
  }, otherProps), children), /*#__PURE__*/React__default.createElement(Icon, {
    className: styles$B['Select__icon'],
    icon: "ChevronDown",
    color: "muted"
  }));
};

var _excluded$L = ["value", "children", "testId"];
var Option = function Option(_ref) {
  var value = _ref.value,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-select-option' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$L);

  return /*#__PURE__*/React__default.createElement("option", _extends({
    value: value,
    "data-test-id": testId
  }, otherProps), children);
};

var _excluded$M = ["children", "className", "formLabelProps", "helpText", "id", "labelText", "name", "onBlur", "onChange", "required", "selectProps", "testId", "textLinkProps", "validationMessage", "value"];

function ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$3(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var styles$C = {
  "SelectField": "SelectField__SelectField___kbQlf",
  "SelectField__label-wrapper": "SelectField__SelectField__label-wrapper___3jGwo",
  "SelectField__label-link": "SelectField__SelectField__label-link___2bZnM",
  "SelectField__validation-message": "SelectField__SelectField__validation-message___1yelf",
  "SelectField__help-text": "SelectField__SelectField__help-text___H0RZB"
};
var SelectField = function SelectField(_ref) {
  var children = _ref.children,
      className = _ref.className,
      formLabelProps = _ref.formLabelProps,
      helpText = _ref.helpText,
      id = _ref.id,
      labelText = _ref.labelText,
      name = _ref.name,
      onBlur = _ref.onBlur,
      onChange = _ref.onChange,
      _ref$required = _ref.required,
      required = _ref$required === void 0 ? false : _ref$required,
      selectProps = _ref.selectProps,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-select-field' : _ref$testId,
      textLinkProps = _ref.textLinkProps,
      validationMessage = _ref.validationMessage,
      value = _ref.value,
      otherProps = _objectWithoutProperties(_ref, _excluded$M);

  var _useState = useState(value),
      _useState2 = _slicedToArray(_useState, 2),
      valueState = _useState2[0],
      setValueState = _useState2[1]; // Store a copy of the value in state.
  // This is used by this component when the `countCharacters`
  // option is on


  var handleOnChange = function handleOnChange(e) {
    e.persist();
    setValueState(e.currentTarget.value);

    if (onChange) {
      onChange(e);
    }
  };

  useEffect(function () {
    setValueState(value);
  }, [value]);
  var classNames = classnames(styles$C['SelectField'], className);
  return /*#__PURE__*/React__default.createElement("div", _extends({
    className: classNames
  }, otherProps, {
    "data-test-id": testId
  }), /*#__PURE__*/React__default.createElement("div", {
    className: styles$C['SelectField__label-wrapper']
  }, /*#__PURE__*/React__default.createElement(FormLabel, _objectSpread$3(_objectSpread$3({}, formLabelProps), {}, {
    htmlFor: id,
    required: required
  }), labelText), textLinkProps && /*#__PURE__*/React__default.createElement(TextLink, _extends({
    className: styles$C['SelectField__label-link']
  }, textLinkProps), textLinkProps.text)), /*#__PURE__*/React__default.createElement(Select, _extends({
    hasError: !!validationMessage,
    name: name,
    id: id,
    onBlur: onBlur,
    onChange: handleOnChange,
    value: valueState,
    required: required
  }, selectProps), children), helpText && /*#__PURE__*/React__default.createElement("div", {
    className: styles$C['SelectField__hints']
  }, helpText && /*#__PURE__*/React__default.createElement(HelpText, {
    className: styles$C['SelectField__help-text']
  }, helpText)), validationMessage && /*#__PURE__*/React__default.createElement(ValidationMessage, {
    className: styles$C['SelectField__validation-message']
  }, validationMessage));
};

var _excluded$N = ["children", "className", "icon", "isActive", "isDisabled", "onToggle", "testId"];
var styles$D = {
  "Toggle": "ToggleButton__Toggle___1gUNN",
  "Toggle--disabled": "ToggleButton__Toggle--disabled___2uZSk",
  "Toggle__button": "ToggleButton__Toggle__button___g0Ntb a11y__focus-outline--default___2hwb1",
  "Toggle--active": "ToggleButton__Toggle--active___cx5OU",
  "Toggle__content-wrapper": "ToggleButton__Toggle__content-wrapper___1VoAt",
  "Toggle__button__icon": "ToggleButton__Toggle__button__icon___2v22X",
  "Toggle__button__inner-wrapper": "ToggleButton__Toggle__button__inner-wrapper___1MGKY",
  "Toggle--square": "ToggleButton__Toggle--square___3nugi",
  "ToggleGroup": "ToggleButton__ToggleGroup___28I3p"
};
var ToggleButton = function ToggleButton(_ref) {
  var _cn;

  var children = _ref.children,
      className = _ref.className,
      icon = _ref.icon,
      _ref$isActive = _ref.isActive,
      isActive = _ref$isActive === void 0 ? false : _ref$isActive,
      _ref$isDisabled = _ref.isDisabled,
      isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,
      onToggle = _ref.onToggle,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-toggle-button' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$N);

  var classNames = classnames(styles$D.Toggle, className, (_cn = {}, _defineProperty(_cn, styles$D['Toggle--active'], isActive), _defineProperty(_cn, styles$D['Toggle--disabled'], isDisabled), _defineProperty(_cn, styles$D['Toggle--square'], !children), _cn));

  var handleToggle = function handleToggle() {
    if (!isDisabled && onToggle) {
      onToggle();
    }
  };

  return /*#__PURE__*/React__default.createElement("div", _extends({
    className: classNames,
    "data-test-id": testId
  }, otherProps), /*#__PURE__*/React__default.createElement("button", {
    type: "button",
    className: styles$D.Toggle__button,
    disabled: isDisabled,
    "data-test-id": "button",
    onClick: handleToggle,
    "aria-pressed": isActive
  }, /*#__PURE__*/React__default.createElement(TabFocusTrap, {
    className: styles$D['Toggle__button__inner-wrapper']
  }, icon && /*#__PURE__*/React__default.createElement(Icon, {
    icon: icon,
    color: "secondary",
    className: styles$D.Toggle__button__icon
  }), children && /*#__PURE__*/React__default.createElement("span", {
    className: styles$D['Toggle__content-wrapper']
  }, children))));
};

ToggleButton.Group = function ToggleButtonGroup(_ref2) {
  var className = _ref2.className,
      _ref2$testId = _ref2.testId,
      testId = _ref2$testId === void 0 ? 'cf-ui-toggle-button-group' : _ref2$testId,
      children = _ref2.children;
  return /*#__PURE__*/React__default.createElement("div", {
    "data-test-id": testId,
    className: classnames(styles$D.ToggleGroup, className)
  }, children);
};

var _excluded$O = ["className", "children", "testId"];
var styles$E = {
  "Typography": "Typography__Typography___1ZUfE"
};
var defaultConfiguration = {
  displayText: {
    spacing: 'l'
  },
  displayTextLarge: {
    spacing: 'xl'
  },
  heading: {
    spacing: 'm'
  },
  paragraph: {
    spacing: 'm'
  },
  sectionHeading: {
    spacing: 'l'
  },
  subheading: {
    spacing: 'm'
  }
};
var TypographyContext = /*#__PURE__*/React__default.createContext({});
function Typography(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-text-container' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$O);

  var classNames = classnames(styles$E.Typography, className);
  return /*#__PURE__*/React__default.createElement(TypographyContext.Provider, {
    value: defaultConfiguration
  }, /*#__PURE__*/React__default.createElement("div", _extends({}, otherProps, {
    className: classNames,
    "data-test-id": testId
  }), children));
}

var _excluded$P = ["className", "children", "testId", "element", "size"];
var styles$F = {
  "DisplayText": "DisplayText__DisplayText___172Lq",
  "DisplayText--default": "DisplayText__DisplayText--default___25iJC",
  "DisplayText--large": "DisplayText__DisplayText--large___2QHQE",
  "DisplayText--huge": "DisplayText__DisplayText--huge___2vcKx"
};
function DisplayText(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-display-text' : _ref$testId,
      _ref$element = _ref.element,
      element = _ref$element === void 0 ? 'h1' : _ref$element,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'default' : _ref$size,
      otherProps = _objectWithoutProperties(_ref, _excluded$P);

  var classNames = classnames(styles$F['DisplayText'], className, _defineProperty({}, styles$F["DisplayText--".concat(size)], size));
  var Element = element; // eslint-disable-line @typescript-eslint/no-non-null-assertion

  return /*#__PURE__*/React__default.createElement(TypographyContext.Consumer, null, function (value) {
    var contextSize = size === 'large' ? value['displayTextLarge'] : value['displayText'];
    return /*#__PURE__*/React__default.createElement(Element, _extends({
      className: classnames(classNames, [contextSize && "f36-margin-bottom--".concat(contextSize.spacing)]),
      "data-test-id": testId
    }, otherProps), children);
  });
}

var _excluded$Q = ["className", "children", "testId", "element"];
var styles$G = {
  "Heading": "Heading__Heading___83D3K"
};
function Heading(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-heading' : _ref$testId,
      _ref$element = _ref.element,
      element = _ref$element === void 0 ? 'h1' : _ref$element,
      otherProps = _objectWithoutProperties(_ref, _excluded$Q);

  var classNames = classnames(styles$G['Heading'], className);
  var Element = element; // eslint-disable-line @typescript-eslint/no-non-null-assertion

  return /*#__PURE__*/React__default.createElement(TypographyContext.Consumer, null, function (value) {
    return /*#__PURE__*/React__default.createElement(Element, _extends({
      className: classnames(classNames, [value['heading'] && "f36-margin-bottom--".concat(value['heading']['spacing'])]),
      "data-test-id": testId
    }, otherProps), children);
  });
}

var _excluded$R = ["className", "children", "testId", "element"];
var styles$H = {
  "Paragraph": "Paragraph__Paragraph___2aO-9"
};
function Paragraph(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-paragraph' : _ref$testId,
      _ref$element = _ref.element,
      element = _ref$element === void 0 ? 'p' : _ref$element,
      otherProps = _objectWithoutProperties(_ref, _excluded$R);

  var classNames = classnames(styles$H['Paragraph'], className);
  var Element = element; // eslint-disable-line @typescript-eslint/no-non-null-assertion

  return /*#__PURE__*/React__default.createElement(TypographyContext.Consumer, null, function (value) {
    return /*#__PURE__*/React__default.createElement(Element, _extends({
      className: classnames(classNames, [value['paragraph'] && "f36-margin-bottom--".concat(value['paragraph']['spacing'])]),
      "data-test-id": testId
    }, otherProps), children);
  });
}

var _excluded$S = ["className", "children", "testId", "element"];
var styles$I = {
  "SectionHeading": "SectionHeading__SectionHeading___39J6j"
};
function SectionHeading(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-section-heading' : _ref$testId,
      _ref$element = _ref.element,
      element = _ref$element === void 0 ? 'h3' : _ref$element,
      otherProps = _objectWithoutProperties(_ref, _excluded$S);

  var classNames = classnames(styles$I['SectionHeading'], className);
  var Element = element; // eslint-disable-line @typescript-eslint/no-non-null-assertion

  return /*#__PURE__*/React__default.createElement(TypographyContext.Consumer, null, function (value) {
    return /*#__PURE__*/React__default.createElement(Element, _extends({
      className: classnames(classNames, [value['sectionHeading'] && "f36-margin-bottom--".concat(value['sectionHeading']['spacing'])]),
      "data-test-id": testId
    }, otherProps), children);
  });
}

var _excluded$T = ["className", "children", "testId", "element"];
var styles$J = {
  "Subheading": "Subheading__Subheading___2mA9j"
};
function Subheading(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-subheading' : _ref$testId,
      _ref$element = _ref.element,
      element = _ref$element === void 0 ? 'h2' : _ref$element,
      otherProps = _objectWithoutProperties(_ref, _excluded$T);

  var classNames = classnames(styles$J['Subheading'], className);
  var Element = element; // eslint-disable-line @typescript-eslint/no-non-null-assertion

  return /*#__PURE__*/React__default.createElement(TypographyContext.Consumer, null, function (value) {
    return /*#__PURE__*/React__default.createElement(Element, _extends({
      className: classnames(classNames, [value['subheading'] && "f36-margin-bottom--".concat(value['subheading']['spacing'])]),
      "data-test-id": testId
    }, otherProps), children);
  });
}

var isBrowser = typeof window !== 'undefined';

var throttle = function throttle() {
  var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 200;
  var fn = arguments.length > 1 ? arguments[1] : undefined;
  var lastCall = 0; // eslint-disable-next-line @typescript-eslint/no-explicit-any

  var throttleExec = function throttleExec() {
    var now = new Date().getTime();

    if (now - lastCall < delay) {
      return;
    }

    lastCall = now;
    return fn.apply(void 0, arguments); // eslint-disable-line
  };

  return throttleExec;
};

var _excluded$U = ["className", "children", "testId", "onOverflowBottom", "onOverflowLeft", "onOverflowRight", "onOverflowTop"];

function _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }
var styles$K = {
  "InViewport": "InViewport__InViewport___2o6g4"
};
var defaultProps$2 = {
  testId: 'cf-ui-in-viewport',
  offset: 0
};
var InViewport = /*#__PURE__*/function (_Component) {
  _inherits(InViewport, _Component);

  var _super = _createSuper$1(InViewport);

  function InViewport() {
    var _this;

    _classCallCheck(this, InViewport);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.tGetDomPosition = null;
    _this.nodeRef = null;
    _this.lastOverflowAt = null;
    _this.tOnOverflowTop = _this.props.onOverflowTop && throttle(100, _this.props.onOverflowTop);
    _this.tOnOverflowBottom = _this.props.onOverflowBottom && throttle(100, _this.props.onOverflowBottom);
    _this.tOnOverflowRight = _this.props.onOverflowRight && throttle(100, _this.props.onOverflowRight);
    _this.tOnOverflowLeft = _this.props.onOverflowLeft && throttle(100, _this.props.onOverflowLeft);

    _this.getDomPosition = function () {
      if (isBrowser && _this.nodeRef) {
        var html = document.documentElement;

        var boundingClientRect = _this.nodeRef.getBoundingClientRect();

        var windowWidth = window.innerWidth || html.clientWidth;
        var windowHeight = window.innerHeight || html.clientHeight;

        _this.handleOverflow(boundingClientRect, windowWidth, windowHeight);
      }
    };

    _this.bindEventListeners = function () {
      _this.tGetDomPosition = throttle(600, _this.getDomPosition);

      if (isBrowser) {
        window.addEventListener('scroll', _this.tGetDomPosition, true);
        window.addEventListener('resize', _this.tGetDomPosition);
      }
    };

    _this.handleOverflow = function (_ref, windowWidth, windowHeight) {
      var top = _ref.top,
          left = _ref.left,
          bottom = _ref.bottom,
          right = _ref.right;
      var offset = _this.props.offset;
      var topThreshold = 0 - offset; // eslint-disable-line @typescript-eslint/no-non-null-assertion

      var leftThreshold = 0 - offset; // eslint-disable-line @typescript-eslint/no-non-null-assertion

      var rightThreshold = windowWidth + offset; // eslint-disable-line @typescript-eslint/no-non-null-assertion

      var bottomThreshold = windowHeight + offset; // eslint-disable-line @typescript-eslint/no-non-null-assertion

      if (top + right + bottom + left !== 0) {
        if (top < topThreshold && _this.lastOverflowAt !== 'bottom') {
          _this.lastOverflowAt = 'top';
          _this.tOnOverflowTop && _this.tOnOverflowTop();
        } else if (left < leftThreshold && _this.lastOverflowAt !== 'right') {
          _this.lastOverflowAt = 'left';
          _this.tOnOverflowLeft && _this.tOnOverflowLeft();
        } else if (bottom > bottomThreshold && _this.lastOverflowAt !== 'top') {
          _this.lastOverflowAt = 'bottom';
          _this.tOnOverflowBottom && _this.tOnOverflowBottom();
        } else if (right > rightThreshold && _this.lastOverflowAt !== 'left') {
          _this.lastOverflowAt = 'right';
          _this.tOnOverflowRight && _this.tOnOverflowRight();
        }
      }
    };

    return _this;
  }

  _createClass(InViewport, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.getDomPosition();
      this.bindEventListeners();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.getDomPosition();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (isBrowser && this.tGetDomPosition) {
        window.removeEventListener('scroll', this.tGetDomPosition, true);
        window.removeEventListener('resize', this.tGetDomPosition);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          className = _this$props.className,
          children = _this$props.children,
          testId = _this$props.testId,
          onOverflowBottom = _this$props.onOverflowBottom,
          onOverflowLeft = _this$props.onOverflowLeft,
          onOverflowRight = _this$props.onOverflowRight,
          onOverflowTop = _this$props.onOverflowTop,
          otherProps = _objectWithoutProperties(_this$props, _excluded$U);

      var classNames = classnames(styles$K['InViewport'], className);
      return /*#__PURE__*/React__default.createElement("div", _extends({
        ref: function ref(_ref2) {
          _this2.nodeRef = _ref2;
        },
        className: classNames,
        "data-test-id": testId
      }, otherProps), children);
    }
  }]);

  return InViewport;
}(Component$1);
InViewport.defaultProps = defaultProps$2;

var tabbable_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = findTabbableDescendants;
/*!
 * Adapted from jQuery UI core
 *
 * http://jqueryui.com
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/ui-core/
 */

var tabbableNode = /input|select|textarea|button|object/;

function hidesContents(element) {
  var zeroSize = element.offsetWidth <= 0 && element.offsetHeight <= 0;

  // If the node is empty, this is good enough
  if (zeroSize && !element.innerHTML) return true;

  // Otherwise we need to check some styles
  var style = window.getComputedStyle(element);
  return zeroSize ? style.getPropertyValue("overflow") !== "visible" ||
  // if 'overflow: visible' set, check if there is actually any overflow
  element.scrollWidth <= 0 && element.scrollHeight <= 0 : style.getPropertyValue("display") == "none";
}

function visible(element) {
  var parentElement = element;
  while (parentElement) {
    if (parentElement === document.body) break;
    if (hidesContents(parentElement)) return false;
    parentElement = parentElement.parentNode;
  }
  return true;
}

function focusable(element, isTabIndexNotNaN) {
  var nodeName = element.nodeName.toLowerCase();
  var res = tabbableNode.test(nodeName) && !element.disabled || (nodeName === "a" ? element.href || isTabIndexNotNaN : isTabIndexNotNaN);
  return res && visible(element);
}

function tabbable(element) {
  var tabIndex = element.getAttribute("tabindex");
  if (tabIndex === null) tabIndex = undefined;
  var isTabIndexNaN = isNaN(tabIndex);
  return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN);
}

function findTabbableDescendants(element) {
  return [].slice.call(element.querySelectorAll("*"), 0).filter(tabbable);
}
module.exports = exports["default"];
});

unwrapExports(tabbable_1);

var focusManager = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handleBlur = handleBlur;
exports.handleFocus = handleFocus;
exports.markForFocusLater = markForFocusLater;
exports.returnFocus = returnFocus;
exports.popWithoutFocus = popWithoutFocus;
exports.setupScopedFocus = setupScopedFocus;
exports.teardownScopedFocus = teardownScopedFocus;



var _tabbable2 = _interopRequireDefault(tabbable_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var focusLaterElements = [];
var modalElement = null;
var needToFocus = false;

function handleBlur() {
  needToFocus = true;
}

function handleFocus() {
  if (needToFocus) {
    needToFocus = false;
    if (!modalElement) {
      return;
    }
    // need to see how jQuery shims document.on('focusin') so we don't need the
    // setTimeout, firefox doesn't support focusin, if it did, we could focus
    // the element outside of a setTimeout. Side-effect of this implementation
    // is that the document.body gets focus, and then we focus our element right
    // after, seems fine.
    setTimeout(function () {
      if (modalElement.contains(document.activeElement)) {
        return;
      }
      var el = (0, _tabbable2.default)(modalElement)[0] || modalElement;
      el.focus();
    }, 0);
  }
}

function markForFocusLater() {
  focusLaterElements.push(document.activeElement);
}

/* eslint-disable no-console */
function returnFocus() {
  var preventScroll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

  var toFocus = null;
  try {
    if (focusLaterElements.length !== 0) {
      toFocus = focusLaterElements.pop();
      toFocus.focus({ preventScroll: preventScroll });
    }
    return;
  } catch (e) {
    console.warn(["You tried to return focus to", toFocus, "but it is not in the DOM anymore"].join(" "));
  }
}
/* eslint-enable no-console */

function popWithoutFocus() {
  focusLaterElements.length > 0 && focusLaterElements.pop();
}

function setupScopedFocus(element) {
  modalElement = element;

  if (window.addEventListener) {
    window.addEventListener("blur", handleBlur, false);
    document.addEventListener("focus", handleFocus, true);
  } else {
    window.attachEvent("onBlur", handleBlur);
    document.attachEvent("onFocus", handleFocus);
  }
}

function teardownScopedFocus() {
  modalElement = null;

  if (window.addEventListener) {
    window.removeEventListener("blur", handleBlur);
    document.removeEventListener("focus", handleFocus);
  } else {
    window.detachEvent("onBlur", handleBlur);
    document.detachEvent("onFocus", handleFocus);
  }
}
});

unwrapExports(focusManager);
var focusManager_1 = focusManager.handleBlur;
var focusManager_2 = focusManager.handleFocus;
var focusManager_3 = focusManager.markForFocusLater;
var focusManager_4 = focusManager.returnFocus;
var focusManager_5 = focusManager.popWithoutFocus;
var focusManager_6 = focusManager.setupScopedFocus;
var focusManager_7 = focusManager.teardownScopedFocus;

var scopeTab_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = scopeTab;



var _tabbable2 = _interopRequireDefault(tabbable_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function scopeTab(node, event) {
  var tabbable = (0, _tabbable2.default)(node);

  if (!tabbable.length) {
    // Do nothing, since there are no elements that can receive focus.
    event.preventDefault();
    return;
  }

  var target = void 0;

  var shiftKey = event.shiftKey;
  var head = tabbable[0];
  var tail = tabbable[tabbable.length - 1];

  // proceed with default browser behavior on tab.
  // Focus on last element on shift + tab.
  if (node === document.activeElement) {
    if (!shiftKey) return;
    target = tail;
  }

  if (tail === document.activeElement && !shiftKey) {
    target = head;
  }

  if (head === document.activeElement && shiftKey) {
    target = tail;
  }

  if (target) {
    event.preventDefault();
    target.focus();
    return;
  }

  // Safari radio issue.
  //
  // Safari does not move the focus to the radio button,
  // so we need to force it to really walk through all elements.
  //
  // This is very error prone, since we are trying to guess
  // if it is a safari browser from the first occurence between
  // chrome or safari.
  //
  // The chrome user agent contains the first ocurrence
  // as the 'chrome/version' and later the 'safari/version'.
  var checkSafari = /(\bChrome\b|\bSafari\b)\//.exec(navigator.userAgent);
  var isSafariDesktop = checkSafari != null && checkSafari[1] != "Chrome" && /\biPod\b|\biPad\b/g.exec(navigator.userAgent) == null;

  // If we are not in safari desktop, let the browser control
  // the focus
  if (!isSafariDesktop) return;

  var x = tabbable.indexOf(document.activeElement);

  if (x > -1) {
    x += shiftKey ? -1 : 1;
  }

  target = tabbable[x];

  // If the tabbable element does not exist,
  // focus head/tail based on shiftKey
  if (typeof target === "undefined") {
    event.preventDefault();
    target = shiftKey ? tail : head;
    target.focus();
    return;
  }

  event.preventDefault();

  target.focus();
}
module.exports = exports["default"];
});

unwrapExports(scopeTab_1);

var exenv = createCommonjsModule(function (module) {
/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/
/* global define */

(function () {

	var canUseDOM = !!(
		typeof window !== 'undefined' &&
		window.document &&
		window.document.createElement
	);

	var ExecutionEnvironment = {

		canUseDOM: canUseDOM,

		canUseWorkers: typeof Worker !== 'undefined',

		canUseEventListeners:
			canUseDOM && !!(window.addEventListener || window.attachEvent),

		canUseViewport: canUseDOM && !!window.screen

	};

	if ( module.exports) {
		module.exports = ExecutionEnvironment;
	} else {
		window.ExecutionEnvironment = ExecutionEnvironment;
	}

}());
});

var safeHTMLElement = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.canUseDOM = undefined;



var _exenv2 = _interopRequireDefault(exenv);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EE = _exenv2.default;

var SafeHTMLElement = EE.canUseDOM ? window.HTMLElement : {};

var canUseDOM = exports.canUseDOM = EE.canUseDOM;

exports.default = SafeHTMLElement;
});

unwrapExports(safeHTMLElement);
var safeHTMLElement_1 = safeHTMLElement.canUseDOM;

var ariaAppHider = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.assertNodeList = assertNodeList;
exports.setElement = setElement;
exports.validateElement = validateElement;
exports.hide = hide;
exports.show = show;
exports.documentNotReadyOrSSRTesting = documentNotReadyOrSSRTesting;
exports.resetForTesting = resetForTesting;



var _warning2 = _interopRequireDefault(warning_1);



function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var globalElement = null;

function assertNodeList(nodeList, selector) {
  if (!nodeList || !nodeList.length) {
    throw new Error("react-modal: No elements were found for selector " + selector + ".");
  }
}

function setElement(element) {
  var useElement = element;
  if (typeof useElement === "string" && safeHTMLElement.canUseDOM) {
    var el = document.querySelectorAll(useElement);
    assertNodeList(el, useElement);
    useElement = "length" in el ? el[0] : el;
  }
  globalElement = useElement || globalElement;
  return globalElement;
}

function validateElement(appElement) {
  if (!appElement && !globalElement) {
    (0, _warning2.default)(false, ["react-modal: App element is not defined.", "Please use `Modal.setAppElement(el)` or set `appElement={el}`.", "This is needed so screen readers don't see main content", "when modal is opened. It is not recommended, but you can opt-out", "by setting `ariaHideApp={false}`."].join(" "));

    return false;
  }

  return true;
}

function hide(appElement) {
  if (validateElement(appElement)) {
    (appElement || globalElement).setAttribute("aria-hidden", "true");
  }
}

function show(appElement) {
  if (validateElement(appElement)) {
    (appElement || globalElement).removeAttribute("aria-hidden");
  }
}

function documentNotReadyOrSSRTesting() {
  globalElement = null;
}

function resetForTesting() {
  globalElement = null;
}
});

unwrapExports(ariaAppHider);
var ariaAppHider_1 = ariaAppHider.assertNodeList;
var ariaAppHider_2 = ariaAppHider.setElement;
var ariaAppHider_3 = ariaAppHider.validateElement;
var ariaAppHider_4 = ariaAppHider.hide;
var ariaAppHider_5 = ariaAppHider.show;
var ariaAppHider_6 = ariaAppHider.documentNotReadyOrSSRTesting;
var ariaAppHider_7 = ariaAppHider.resetForTesting;

var classList = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dumpClassLists = dumpClassLists;
var htmlClassList = {};
var docBodyClassList = {};

function dumpClassLists() {
  if (process.env.NODE_ENV !== "production") {
    var classes = document.getElementsByTagName("html")[0].className;
    var buffer = "Show tracked classes:\n\n";

    buffer += "<html /> (" + classes + "):\n";
    for (var x in htmlClassList) {
      buffer += "  " + x + " " + htmlClassList[x] + "\n";
    }

    classes = document.body.className;

    // eslint-disable-next-line max-len
    buffer += "\n\ndoc.body (" + classes + "):\n";
    for (var _x in docBodyClassList) {
      buffer += "  " + _x + " " + docBodyClassList[_x] + "\n";
    }

    buffer += "\n";

    // eslint-disable-next-line no-console
    console.log(buffer);
  }
}

/**
 * Track the number of reference of a class.
 * @param {object} poll The poll to receive the reference.
 * @param {string} className The class name.
 * @return {string}
 */
var incrementReference = function incrementReference(poll, className) {
  if (!poll[className]) {
    poll[className] = 0;
  }
  poll[className] += 1;
  return className;
};

/**
 * Drop the reference of a class.
 * @param {object} poll The poll to receive the reference.
 * @param {string} className The class name.
 * @return {string}
 */
var decrementReference = function decrementReference(poll, className) {
  if (poll[className]) {
    poll[className] -= 1;
  }
  return className;
};

/**
 * Track a class and add to the given class list.
 * @param {Object} classListRef A class list of an element.
 * @param {Object} poll         The poll to be used.
 * @param {Array}  classes      The list of classes to be tracked.
 */
var trackClass = function trackClass(classListRef, poll, classes) {
  classes.forEach(function (className) {
    incrementReference(poll, className);
    classListRef.add(className);
  });
};

/**
 * Untrack a class and remove from the given class list if the reference
 * reaches 0.
 * @param {Object} classListRef A class list of an element.
 * @param {Object} poll         The poll to be used.
 * @param {Array}  classes      The list of classes to be untracked.
 */
var untrackClass = function untrackClass(classListRef, poll, classes) {
  classes.forEach(function (className) {
    decrementReference(poll, className);
    poll[className] === 0 && classListRef.remove(className);
  });
};

/**
 * Public inferface to add classes to the document.body.
 * @param {string} bodyClass The class string to be added.
 *                           It may contain more then one class
 *                           with ' ' as separator.
 */
var add = exports.add = function add(element, classString) {
  return trackClass(element.classList, element.nodeName.toLowerCase() == "html" ? htmlClassList : docBodyClassList, classString.split(" "));
};

/**
 * Public inferface to remove classes from the document.body.
 * @param {string} bodyClass The class string to be added.
 *                           It may contain more then one class
 *                           with ' ' as separator.
 */
var remove = exports.remove = function remove(element, classString) {
  return untrackClass(element.classList, element.nodeName.toLowerCase() == "html" ? htmlClassList : docBodyClassList, classString.split(" "));
};
});

unwrapExports(classList);
var classList_1 = classList.dumpClassLists;
var classList_2 = classList.add;
var classList_3 = classList.remove;

var portalOpenInstances_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Tracks portals that are open and emits events to subscribers

var PortalOpenInstances = function PortalOpenInstances() {
  var _this = this;

  _classCallCheck(this, PortalOpenInstances);

  this.register = function (openInstance) {
    if (_this.openInstances.indexOf(openInstance) !== -1) {
      if (process.env.NODE_ENV !== "production") {
        // eslint-disable-next-line no-console
        console.warn("React-Modal: Cannot register modal instance that's already open");
      }
      return;
    }
    _this.openInstances.push(openInstance);
    _this.emit("register");
  };

  this.deregister = function (openInstance) {
    var index = _this.openInstances.indexOf(openInstance);
    if (index === -1) {
      if (process.env.NODE_ENV !== "production") {
        // eslint-disable-next-line no-console
        console.warn("React-Modal: Unable to deregister " + openInstance + " as " + "it was never registered");
      }
      return;
    }
    _this.openInstances.splice(index, 1);
    _this.emit("deregister");
  };

  this.subscribe = function (callback) {
    _this.subscribers.push(callback);
  };

  this.emit = function (eventType) {
    _this.subscribers.forEach(function (subscriber) {
      return subscriber(eventType,
      // shallow copy to avoid accidental mutation
      _this.openInstances.slice());
    });
  };

  this.openInstances = [];
  this.subscribers = [];
};

var portalOpenInstances = new PortalOpenInstances();

exports.default = portalOpenInstances;
module.exports = exports["default"];
});

unwrapExports(portalOpenInstances_1);

var bodyTrap_1 = createCommonjsModule(function (module) {



var _portalOpenInstances2 = _interopRequireDefault(portalOpenInstances_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Body focus trap see Issue #742

var before = void 0,
    after = void 0,
    instances = [];

function focusContent() {
  if (instances.length === 0) {
    if (process.env.NODE_ENV !== "production") {
      // eslint-disable-next-line no-console
      console.warn("React-Modal: Open instances > 0 expected");
    }
    return;
  }
  instances[instances.length - 1].focusContent();
}

function bodyTrap(eventType, openInstances) {
  if (!before || !after) {
    before = document.createElement("div");
    before.setAttribute("data-react-modal-body-trap", "");
    before.style.position = "absolute";
    before.style.opacity = "0";
    before.setAttribute("tabindex", "0");
    before.addEventListener("focus", focusContent);
    after = before.cloneNode();
    after.addEventListener("focus", focusContent);
  }

  instances = openInstances;

  if (instances.length > 0) {
    // Add focus trap
    if (document.body.firstChild !== before) {
      document.body.insertBefore(before, document.body.firstChild);
    }
    if (document.body.lastChild !== after) {
      document.body.appendChild(after);
    }
  } else {
    // Remove focus trap
    if (before.parentElement) {
      before.parentElement.removeChild(before);
    }
    if (after.parentElement) {
      after.parentElement.removeChild(after);
    }
  }
}

_portalOpenInstances2.default.subscribe(bodyTrap);
});

unwrapExports(bodyTrap_1);

var ModalPortal_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();





var _propTypes2 = _interopRequireDefault(propTypes);



var focusManager$1 = _interopRequireWildcard(focusManager);



var _scopeTab2 = _interopRequireDefault(scopeTab_1);



var ariaAppHider$1 = _interopRequireWildcard(ariaAppHider);



var classList$1 = _interopRequireWildcard(classList);



var _safeHTMLElement2 = _interopRequireDefault(safeHTMLElement);



var _portalOpenInstances2 = _interopRequireDefault(portalOpenInstances_1);



function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// so that our CSS is statically analyzable
var CLASS_NAMES = {
  overlay: "ReactModal__Overlay",
  content: "ReactModal__Content"
};

var TAB_KEY = 9;
var ESC_KEY = 27;

var ariaHiddenInstances = 0;

var ModalPortal = function (_Component) {
  _inherits(ModalPortal, _Component);

  function ModalPortal(props) {
    _classCallCheck(this, ModalPortal);

    var _this = _possibleConstructorReturn(this, (ModalPortal.__proto__ || Object.getPrototypeOf(ModalPortal)).call(this, props));

    _this.setOverlayRef = function (overlay) {
      _this.overlay = overlay;
      _this.props.overlayRef && _this.props.overlayRef(overlay);
    };

    _this.setContentRef = function (content) {
      _this.content = content;
      _this.props.contentRef && _this.props.contentRef(content);
    };

    _this.afterClose = function () {
      var _this$props = _this.props,
          appElement = _this$props.appElement,
          ariaHideApp = _this$props.ariaHideApp,
          htmlOpenClassName = _this$props.htmlOpenClassName,
          bodyOpenClassName = _this$props.bodyOpenClassName;

      // Remove classes.

      bodyOpenClassName && classList$1.remove(document.body, bodyOpenClassName);

      htmlOpenClassName && classList$1.remove(document.getElementsByTagName("html")[0], htmlOpenClassName);

      // Reset aria-hidden attribute if all modals have been removed
      if (ariaHideApp && ariaHiddenInstances > 0) {
        ariaHiddenInstances -= 1;

        if (ariaHiddenInstances === 0) {
          ariaAppHider$1.show(appElement);
        }
      }

      if (_this.props.shouldFocusAfterRender) {
        if (_this.props.shouldReturnFocusAfterClose) {
          focusManager$1.returnFocus(_this.props.preventScroll);
          focusManager$1.teardownScopedFocus();
        } else {
          focusManager$1.popWithoutFocus();
        }
      }

      if (_this.props.onAfterClose) {
        _this.props.onAfterClose();
      }

      _portalOpenInstances2.default.deregister(_this);
    };

    _this.open = function () {
      _this.beforeOpen();
      if (_this.state.afterOpen && _this.state.beforeClose) {
        clearTimeout(_this.closeTimer);
        _this.setState({ beforeClose: false });
      } else {
        if (_this.props.shouldFocusAfterRender) {
          focusManager$1.setupScopedFocus(_this.node);
          focusManager$1.markForFocusLater();
        }

        _this.setState({ isOpen: true }, function () {
          _this.setState({ afterOpen: true });

          if (_this.props.isOpen && _this.props.onAfterOpen) {
            _this.props.onAfterOpen({
              overlayEl: _this.overlay,
              contentEl: _this.content
            });
          }
        });
      }
    };

    _this.close = function () {
      if (_this.props.closeTimeoutMS > 0) {
        _this.closeWithTimeout();
      } else {
        _this.closeWithoutTimeout();
      }
    };

    _this.focusContent = function () {
      return _this.content && !_this.contentHasFocus() && _this.content.focus({ preventScroll: true });
    };

    _this.closeWithTimeout = function () {
      var closesAt = Date.now() + _this.props.closeTimeoutMS;
      _this.setState({ beforeClose: true, closesAt: closesAt }, function () {
        _this.closeTimer = setTimeout(_this.closeWithoutTimeout, _this.state.closesAt - Date.now());
      });
    };

    _this.closeWithoutTimeout = function () {
      _this.setState({
        beforeClose: false,
        isOpen: false,
        afterOpen: false,
        closesAt: null
      }, _this.afterClose);
    };

    _this.handleKeyDown = function (event) {
      if (event.keyCode === TAB_KEY) {
        (0, _scopeTab2.default)(_this.content, event);
      }

      if (_this.props.shouldCloseOnEsc && event.keyCode === ESC_KEY) {
        event.stopPropagation();
        _this.requestClose(event);
      }
    };

    _this.handleOverlayOnClick = function (event) {
      if (_this.shouldClose === null) {
        _this.shouldClose = true;
      }

      if (_this.shouldClose && _this.props.shouldCloseOnOverlayClick) {
        if (_this.ownerHandlesClose()) {
          _this.requestClose(event);
        } else {
          _this.focusContent();
        }
      }
      _this.shouldClose = null;
    };

    _this.handleContentOnMouseUp = function () {
      _this.shouldClose = false;
    };

    _this.handleOverlayOnMouseDown = function (event) {
      if (!_this.props.shouldCloseOnOverlayClick && event.target == _this.overlay) {
        event.preventDefault();
      }
    };

    _this.handleContentOnClick = function () {
      _this.shouldClose = false;
    };

    _this.handleContentOnMouseDown = function () {
      _this.shouldClose = false;
    };

    _this.requestClose = function (event) {
      return _this.ownerHandlesClose() && _this.props.onRequestClose(event);
    };

    _this.ownerHandlesClose = function () {
      return _this.props.onRequestClose;
    };

    _this.shouldBeClosed = function () {
      return !_this.state.isOpen && !_this.state.beforeClose;
    };

    _this.contentHasFocus = function () {
      return document.activeElement === _this.content || _this.content.contains(document.activeElement);
    };

    _this.buildClassName = function (which, additional) {
      var classNames = (typeof additional === "undefined" ? "undefined" : _typeof(additional)) === "object" ? additional : {
        base: CLASS_NAMES[which],
        afterOpen: CLASS_NAMES[which] + "--after-open",
        beforeClose: CLASS_NAMES[which] + "--before-close"
      };
      var className = classNames.base;
      if (_this.state.afterOpen) {
        className = className + " " + classNames.afterOpen;
      }
      if (_this.state.beforeClose) {
        className = className + " " + classNames.beforeClose;
      }
      return typeof additional === "string" && additional ? className + " " + additional : className;
    };

    _this.attributesFromObject = function (prefix, items) {
      return Object.keys(items).reduce(function (acc, name) {
        acc[prefix + "-" + name] = items[name];
        return acc;
      }, {});
    };

    _this.state = {
      afterOpen: false,
      beforeClose: false
    };

    _this.shouldClose = null;
    _this.moveFromContentToOverlay = null;
    return _this;
  }

  _createClass(ModalPortal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.isOpen) {
        this.open();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (process.env.NODE_ENV !== "production") {
        if (prevProps.bodyOpenClassName !== this.props.bodyOpenClassName) {
          // eslint-disable-next-line no-console
          console.warn('React-Modal: "bodyOpenClassName" prop has been modified. ' + "This may cause unexpected behavior when multiple modals are open.");
        }
        if (prevProps.htmlOpenClassName !== this.props.htmlOpenClassName) {
          // eslint-disable-next-line no-console
          console.warn('React-Modal: "htmlOpenClassName" prop has been modified. ' + "This may cause unexpected behavior when multiple modals are open.");
        }
      }

      if (this.props.isOpen && !prevProps.isOpen) {
        this.open();
      } else if (!this.props.isOpen && prevProps.isOpen) {
        this.close();
      }

      // Focus only needs to be set once when the modal is being opened
      if (this.props.shouldFocusAfterRender && this.state.isOpen && !prevState.isOpen) {
        this.focusContent();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.state.isOpen) {
        this.afterClose();
      }
      clearTimeout(this.closeTimer);
    }
  }, {
    key: "beforeOpen",
    value: function beforeOpen() {
      var _props = this.props,
          appElement = _props.appElement,
          ariaHideApp = _props.ariaHideApp,
          htmlOpenClassName = _props.htmlOpenClassName,
          bodyOpenClassName = _props.bodyOpenClassName;

      // Add classes.

      bodyOpenClassName && classList$1.add(document.body, bodyOpenClassName);

      htmlOpenClassName && classList$1.add(document.getElementsByTagName("html")[0], htmlOpenClassName);

      if (ariaHideApp) {
        ariaHiddenInstances += 1;
        ariaAppHider$1.hide(appElement);
      }

      _portalOpenInstances2.default.register(this);
    }

    // Don't steal focus from inner elements

  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          id = _props2.id,
          className = _props2.className,
          overlayClassName = _props2.overlayClassName,
          defaultStyles = _props2.defaultStyles,
          children = _props2.children;

      var contentStyles = className ? {} : defaultStyles.content;
      var overlayStyles = overlayClassName ? {} : defaultStyles.overlay;

      if (this.shouldBeClosed()) {
        return null;
      }

      var overlayProps = {
        ref: this.setOverlayRef,
        className: this.buildClassName("overlay", overlayClassName),
        style: _extends({}, overlayStyles, this.props.style.overlay),
        onClick: this.handleOverlayOnClick,
        onMouseDown: this.handleOverlayOnMouseDown
      };

      var contentProps = _extends({
        id: id,
        ref: this.setContentRef,
        style: _extends({}, contentStyles, this.props.style.content),
        className: this.buildClassName("content", className),
        tabIndex: "-1",
        onKeyDown: this.handleKeyDown,
        onMouseDown: this.handleContentOnMouseDown,
        onMouseUp: this.handleContentOnMouseUp,
        onClick: this.handleContentOnClick,
        role: this.props.role,
        "aria-label": this.props.contentLabel
      }, this.attributesFromObject("aria", _extends({ modal: true }, this.props.aria)), this.attributesFromObject("data", this.props.data || {}), {
        "data-testid": this.props.testId
      });

      var contentElement = this.props.contentElement(contentProps, children);
      return this.props.overlayElement(overlayProps, contentElement);
    }
  }]);

  return ModalPortal;
}(React__default.Component);

ModalPortal.defaultProps = {
  style: {
    overlay: {},
    content: {}
  },
  defaultStyles: {}
};
ModalPortal.propTypes = {
  isOpen: _propTypes2.default.bool.isRequired,
  defaultStyles: _propTypes2.default.shape({
    content: _propTypes2.default.object,
    overlay: _propTypes2.default.object
  }),
  style: _propTypes2.default.shape({
    content: _propTypes2.default.object,
    overlay: _propTypes2.default.object
  }),
  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
  overlayClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
  bodyOpenClassName: _propTypes2.default.string,
  htmlOpenClassName: _propTypes2.default.string,
  ariaHideApp: _propTypes2.default.bool,
  appElement: _propTypes2.default.instanceOf(_safeHTMLElement2.default),
  onAfterOpen: _propTypes2.default.func,
  onAfterClose: _propTypes2.default.func,
  onRequestClose: _propTypes2.default.func,
  closeTimeoutMS: _propTypes2.default.number,
  shouldFocusAfterRender: _propTypes2.default.bool,
  shouldCloseOnOverlayClick: _propTypes2.default.bool,
  shouldReturnFocusAfterClose: _propTypes2.default.bool,
  preventScroll: _propTypes2.default.bool,
  role: _propTypes2.default.string,
  contentLabel: _propTypes2.default.string,
  aria: _propTypes2.default.object,
  data: _propTypes2.default.object,
  children: _propTypes2.default.node,
  shouldCloseOnEsc: _propTypes2.default.bool,
  overlayRef: _propTypes2.default.func,
  contentRef: _propTypes2.default.func,
  id: _propTypes2.default.string,
  overlayElement: _propTypes2.default.func,
  contentElement: _propTypes2.default.func,
  testId: _propTypes2.default.string
};
exports.default = ModalPortal;
module.exports = exports["default"];
});

unwrapExports(ModalPortal_1);

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function componentWillMount() {
  // Call this.constructor.gDSFP to support sub-classes.
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== undefined) {
    this.setState(state);
  }
}

function componentWillReceiveProps(nextProps) {
  // Call this.constructor.gDSFP to support sub-classes.
  // Use the setState() updater to ensure state isn't stale in certain edge cases.
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== undefined ? state : null;
  }
  // Binding "this" is important for shallow renderer support.
  this.setState(updater.bind(this));
}

function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
      prevProps,
      prevState
    );
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}

// React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

function polyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  }

  if (
    typeof Component.getDerivedStateFromProps !== 'function' &&
    typeof prototype.getSnapshotBeforeUpdate !== 'function'
  ) {
    return Component;
  }

  // If new component APIs are defined, "unsafe" lifecycles won't be called.
  // Error if any of these lifecycles are present,
  // Because they would work differently between older and newer (16.3+) versions of React.
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === 'function') {
    foundWillMountName = 'componentWillMount';
  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
    foundWillMountName = 'UNSAFE_componentWillMount';
  }
  if (typeof prototype.componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'componentWillReceiveProps';
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
  }
  if (typeof prototype.componentWillUpdate === 'function') {
    foundWillUpdateName = 'componentWillUpdate';
  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
  }
  if (
    foundWillMountName !== null ||
    foundWillReceivePropsName !== null ||
    foundWillUpdateName !== null
  ) {
    var componentName = Component.displayName || Component.name;
    var newApiName =
      typeof Component.getDerivedStateFromProps === 'function'
        ? 'getDerivedStateFromProps()'
        : 'getSnapshotBeforeUpdate()';

    throw Error(
      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
        componentName +
        ' uses ' +
        newApiName +
        ' but also contains the following legacy lifecycles:' +
        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
        (foundWillReceivePropsName !== null
          ? '\n  ' + foundWillReceivePropsName
          : '') +
        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
        'https://fb.me/react-async-component-lifecycle-hooks'
    );
  }

  // React <= 16.2 does not support static getDerivedStateFromProps.
  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
  // Newer versions of React will ignore these lifecycles if gDSFP exists.
  if (typeof Component.getDerivedStateFromProps === 'function') {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }

  // React <= 16.2 does not support getSnapshotBeforeUpdate.
  // As a workaround, use cWU to invoke the new lifecycle.
  // Newer versions of React will ignore that lifecycle if gSBU exists.
  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
    if (typeof prototype.componentDidUpdate !== 'function') {
      throw new Error(
        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
      );
    }

    prototype.componentWillUpdate = componentWillUpdate;

    var componentDidUpdate = prototype.componentDidUpdate;

    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
      prevProps,
      prevState,
      maybeSnapshot
    ) {
      // 16.3+ will not execute our will-update method;
      // It will pass a snapshot value to did-update though.
      // Older versions will require our polyfilled will-update value.
      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
      // Because for <= 15.x versions this might be a "prevContext" object.
      // We also can't just check "__reactInternalSnapshot",
      // Because get-snapshot might return a falsy value.
      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
      var snapshot = this.__reactInternalSnapshotFlag
        ? this.__reactInternalSnapshot
        : maybeSnapshot;

      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }

  return Component;
}

var reactLifecyclesCompat_es = /*#__PURE__*/Object.freeze({
  __proto__: null,
  polyfill: polyfill
});

var Modal_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bodyOpenClassName = exports.portalClassName = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();



var _react2 = _interopRequireDefault(React__default);



var _reactDom2 = _interopRequireDefault(ReactDOM);



var _propTypes2 = _interopRequireDefault(propTypes);



var _ModalPortal2 = _interopRequireDefault(ModalPortal_1);



var ariaAppHider$1 = _interopRequireWildcard(ariaAppHider);



var _safeHTMLElement2 = _interopRequireDefault(safeHTMLElement);



function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var portalClassName = exports.portalClassName = "ReactModalPortal";
var bodyOpenClassName = exports.bodyOpenClassName = "ReactModal__Body--open";

var isReact16 = safeHTMLElement.canUseDOM && _reactDom2.default.createPortal !== undefined;

var getCreatePortal = function getCreatePortal() {
  return isReact16 ? _reactDom2.default.createPortal : _reactDom2.default.unstable_renderSubtreeIntoContainer;
};

function getParentElement(parentSelector) {
  return parentSelector();
}

var Modal = function (_Component) {
  _inherits(Modal, _Component);

  function Modal() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Modal);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.removePortal = function () {
      !isReact16 && _reactDom2.default.unmountComponentAtNode(_this.node);
      var parent = getParentElement(_this.props.parentSelector);
      if (parent && parent.contains(_this.node)) {
        parent.removeChild(_this.node);
      } else {
        // eslint-disable-next-line no-console
        console.warn('React-Modal: "parentSelector" prop did not returned any DOM ' + "element. Make sure that the parent element is unmounted to " + "avoid any memory leaks.");
      }
    }, _this.portalRef = function (ref) {
      _this.portal = ref;
    }, _this.renderPortal = function (props) {
      var createPortal = getCreatePortal();
      var portal = createPortal(_this, _react2.default.createElement(_ModalPortal2.default, _extends({ defaultStyles: Modal.defaultStyles }, props)), _this.node);
      _this.portalRef(portal);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Modal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!safeHTMLElement.canUseDOM) return;

      if (!isReact16) {
        this.node = document.createElement("div");
      }
      this.node.className = this.props.portalClassName;

      var parent = getParentElement(this.props.parentSelector);
      parent.appendChild(this.node);

      !isReact16 && this.renderPortal(this.props);
    }
  }, {
    key: "getSnapshotBeforeUpdate",
    value: function getSnapshotBeforeUpdate(prevProps) {
      var prevParent = getParentElement(prevProps.parentSelector);
      var nextParent = getParentElement(this.props.parentSelector);
      return { prevParent: prevParent, nextParent: nextParent };
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, _, snapshot) {
      if (!safeHTMLElement.canUseDOM) return;
      var _props = this.props,
          isOpen = _props.isOpen,
          portalClassName = _props.portalClassName;


      if (prevProps.portalClassName !== portalClassName) {
        this.node.className = portalClassName;
      }

      var prevParent = snapshot.prevParent,
          nextParent = snapshot.nextParent;

      if (nextParent !== prevParent) {
        prevParent.removeChild(this.node);
        nextParent.appendChild(this.node);
      }

      // Stop unnecessary renders if modal is remaining closed
      if (!prevProps.isOpen && !isOpen) return;

      !isReact16 && this.renderPortal(this.props);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (!safeHTMLElement.canUseDOM || !this.node || !this.portal) return;

      var state = this.portal.state;
      var now = Date.now();
      var closesAt = state.isOpen && this.props.closeTimeoutMS && (state.closesAt || now + this.props.closeTimeoutMS);

      if (closesAt) {
        if (!state.beforeClose) {
          this.portal.closeWithTimeout();
        }

        setTimeout(this.removePortal, closesAt - now);
      } else {
        this.removePortal();
      }
    }
  }, {
    key: "render",
    value: function render() {
      if (!safeHTMLElement.canUseDOM || !isReact16) {
        return null;
      }

      if (!this.node && isReact16) {
        this.node = document.createElement("div");
      }

      var createPortal = getCreatePortal();
      return createPortal(_react2.default.createElement(_ModalPortal2.default, _extends({
        ref: this.portalRef,
        defaultStyles: Modal.defaultStyles
      }, this.props)), this.node);
    }
  }], [{
    key: "setAppElement",
    value: function setAppElement(element) {
      ariaAppHider$1.setElement(element);
    }

    /* eslint-disable react/no-unused-prop-types */

    /* eslint-enable react/no-unused-prop-types */

  }]);

  return Modal;
}(React__default.Component);

Modal.propTypes = {
  isOpen: _propTypes2.default.bool.isRequired,
  style: _propTypes2.default.shape({
    content: _propTypes2.default.object,
    overlay: _propTypes2.default.object
  }),
  portalClassName: _propTypes2.default.string,
  bodyOpenClassName: _propTypes2.default.string,
  htmlOpenClassName: _propTypes2.default.string,
  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
    base: _propTypes2.default.string.isRequired,
    afterOpen: _propTypes2.default.string.isRequired,
    beforeClose: _propTypes2.default.string.isRequired
  })]),
  overlayClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
    base: _propTypes2.default.string.isRequired,
    afterOpen: _propTypes2.default.string.isRequired,
    beforeClose: _propTypes2.default.string.isRequired
  })]),
  appElement: _propTypes2.default.instanceOf(_safeHTMLElement2.default),
  onAfterOpen: _propTypes2.default.func,
  onRequestClose: _propTypes2.default.func,
  closeTimeoutMS: _propTypes2.default.number,
  ariaHideApp: _propTypes2.default.bool,
  shouldFocusAfterRender: _propTypes2.default.bool,
  shouldCloseOnOverlayClick: _propTypes2.default.bool,
  shouldReturnFocusAfterClose: _propTypes2.default.bool,
  preventScroll: _propTypes2.default.bool,
  parentSelector: _propTypes2.default.func,
  aria: _propTypes2.default.object,
  data: _propTypes2.default.object,
  role: _propTypes2.default.string,
  contentLabel: _propTypes2.default.string,
  shouldCloseOnEsc: _propTypes2.default.bool,
  overlayRef: _propTypes2.default.func,
  contentRef: _propTypes2.default.func,
  id: _propTypes2.default.string,
  overlayElement: _propTypes2.default.func,
  contentElement: _propTypes2.default.func
};
Modal.defaultProps = {
  isOpen: false,
  portalClassName: portalClassName,
  bodyOpenClassName: bodyOpenClassName,
  role: "dialog",
  ariaHideApp: true,
  closeTimeoutMS: 0,
  shouldFocusAfterRender: true,
  shouldCloseOnEsc: true,
  shouldCloseOnOverlayClick: true,
  shouldReturnFocusAfterClose: true,
  preventScroll: false,
  parentSelector: function parentSelector() {
    return document.body;
  },
  overlayElement: function overlayElement(props, contentEl) {
    return _react2.default.createElement(
      "div",
      props,
      contentEl
    );
  },
  contentElement: function contentElement(props, children) {
    return _react2.default.createElement(
      "div",
      props,
      children
    );
  }
};
Modal.defaultStyles = {
  overlay: {
    position: "fixed",
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "rgba(255, 255, 255, 0.75)"
  },
  content: {
    position: "absolute",
    top: "40px",
    left: "40px",
    right: "40px",
    bottom: "40px",
    border: "1px solid #ccc",
    background: "#fff",
    overflow: "auto",
    WebkitOverflowScrolling: "touch",
    borderRadius: "4px",
    outline: "none",
    padding: "20px"
  }
};


(0, reactLifecyclesCompat_es.polyfill)(Modal);

exports.default = Modal;
});

unwrapExports(Modal_1);
var Modal_2 = Modal_1.bodyOpenClassName;
var Modal_3 = Modal_1.portalClassName;

var lib$1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});



var _Modal2 = _interopRequireDefault(Modal_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _Modal2.default;
module.exports = exports["default"];
});

var ReactModal = unwrapExports(lib$1);

var _excluded$V = ["onClose", "title", "testId", "isNotWrapped", "className"];
var styles$L = {
  "ModalHeader": "ModalHeader__ModalHeader___1yD1S",
  "ModalHeader__title": "ModalHeader__ModalHeader__title___3IuOy",
  "ModalHeader__title--is-not-wrapped": "ModalHeader__ModalHeader__title--is-not-wrapped___39i2J"
};
function ModalHeader(_ref) {
  var onClose = _ref.onClose,
      title = _ref.title,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-modal-header' : _ref$testId,
      isNotWrapped = _ref.isNotWrapped,
      className = _ref.className,
      rest = _objectWithoutProperties(_ref, _excluded$V);

  var titleClassNames = classnames(styles$L.ModalHeader__title, _defineProperty({}, styles$L['ModalHeader__title--is-not-wrapped'], isNotWrapped));
  return /*#__PURE__*/React__default.createElement("div", _extends({}, rest, {
    className: classnames(styles$L.ModalHeader, className),
    "data-test-id": testId
  }), /*#__PURE__*/React__default.createElement("h1", {
    className: titleClassNames
  }, title), onClose && /*#__PURE__*/React__default.createElement(IconButton, {
    iconProps: {
      icon: 'Close',
      size: 'small'
    },
    buttonType: "muted",
    label: "Close",
    onClick: function onClick() {
      return onClose();
    }
  }));
}

var _excluded$W = ["testId", "className", "children"];
var styles$M = {
  "ModalContent": "ModalContent__ModalContent___2mf3h"
};
function ModalContent(_ref) {
  var _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-modal-content' : _ref$testId,
      className = _ref.className,
      children = _ref.children,
      rest = _objectWithoutProperties(_ref, _excluded$W);

  return /*#__PURE__*/React__default.createElement("div", _extends({}, rest, {
    className: classnames(styles$M.ModalContent, className),
    "data-test-id": testId
  }), children);
}

var _excluded$X = ["testId", "position", "className", "children"];
var styles$N = {
  "ModalControls": "ModalControls__ModalControls___2bTQx",
  "ModalControls--right": "ModalControls__ModalControls--right___5842W"
};
function ModalControls(_ref) {
  var _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-modal-controls' : _ref$testId,
      _ref$position = _ref.position,
      position = _ref$position === void 0 ? 'left' : _ref$position,
      className = _ref.className,
      children = _ref.children,
      rest = _objectWithoutProperties(_ref, _excluded$X);

  return /*#__PURE__*/React__default.createElement("div", _extends({}, rest, {
    className: classnames(styles$N.ModalControls, _defineProperty({}, styles$N['ModalControls--right'], position === 'right'), className),
    "data-test-id": testId
  }), children);
}

var _excluded$Y = ["allowHeightOverflow", "position", "shouldCloseOnEscapePress", "shouldCloseOnOverlayClick", "size", "testId", "topOffset"];

function ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$4(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var styles$O = {
  "Modal__portal": "Modal__Modal__portal___1AjJC",
  "Modal__overlay": "Modal__Modal__overlay___3gPyC",
  "Modal__overlay--after-open": "Modal__Modal__overlay--after-open___sRqhJ",
  "Modal__overlay--before-close": "Modal__Modal__overlay--before-close___3hzWL",
  "Modal__overlay--centered": "Modal__Modal__overlay--centered___2kDOU",
  "Modal__wrap": "Modal__Modal__wrap___BjfRz",
  "Modal__wrap--zen": "Modal__Modal__wrap--zen___32JOV",
  "Modal__wrap--after-open": "Modal__Modal__wrap--after-open___1XDbx",
  "Modal": "Modal__Modal___2S_pS",
  "Modal__wrap--before-close": "Modal__Modal__wrap--before-close___1jI3B",
  "Modal--overflow": "Modal__Modal--overflow___2FUtB",
  "Modal--zen": "Modal__Modal--zen___2t2w9"
};
var ModalSizesMapper = {
  medium: '520px',
  small: '400px',
  large: '700px',
  fullWidth: '100vw',
  zen: '100vw'
};
function Modal(_ref) {
  var _cn2, _cn3;

  var allowHeightOverflow = _ref.allowHeightOverflow,
      position = _ref.position,
      shouldCloseOnEscapePress = _ref.shouldCloseOnEscapePress,
      shouldCloseOnOverlayClick = _ref.shouldCloseOnOverlayClick,
      size = _ref.size,
      testId = _ref.testId,
      topOffset = _ref.topOffset,
      otherProps = _objectWithoutProperties(_ref, _excluded$Y);

  var allProps = _objectSpread$4(_objectSpread$4({}, otherProps), {}, {
    allowHeightOverflow: allowHeightOverflow,
    position: position,
    shouldCloseOnEscapePress: shouldCloseOnEscapePress,
    shouldCloseOnOverlayClick: shouldCloseOnOverlayClick,
    size: size,
    testId: testId,
    topOffset: topOffset
  });

  var renderDefault = function renderDefault() {
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, otherProps.title && /*#__PURE__*/React__default.createElement(ModalHeader, _extends({
      title: otherProps.title,
      onClose: otherProps.onClose
    }, otherProps.modalHeaderProps)), /*#__PURE__*/React__default.createElement(ModalContent, otherProps.modalContentProps, otherProps.children));
  };

  return /*#__PURE__*/React__default.createElement(ReactModal, {
    ariaHideApp: false,
    onRequestClose: otherProps.onClose,
    isOpen: otherProps.isShown,
    onAfterOpen: otherProps.onAfterOpen,
    shouldCloseOnEsc: shouldCloseOnEscapePress,
    shouldCloseOnOverlayClick: shouldCloseOnOverlayClick,
    portalClassName: styles$O.Modal__portal,
    className: {
      base: classnames(styles$O.Modal__wrap, _defineProperty({}, styles$O['Modal__wrap--zen'], size === 'zen')),
      afterOpen: styles$O['Modal__wrap--after-open'],
      beforeClose: styles$O['Modal__wrap--before-close']
    },
    style: {
      content: {
        top: position === 'center' ? 0 : topOffset
      }
    },
    overlayClassName: {
      base: classnames((_cn2 = {}, _defineProperty(_cn2, styles$O.Modal__overlay, true), _defineProperty(_cn2, styles$O['Modal__overlay--centered'], position === 'center'), _cn2)),
      afterOpen: styles$O['Modal__overlay--after-open'],
      beforeClose: styles$O['Modal__overlay--before-close']
    },
    htmlOpenClassName: "Modal__html--open",
    bodyOpenClassName: "Modal__body--open",
    closeTimeoutMS: 300
  }, /*#__PURE__*/React__default.createElement("div", {
    "data-test-id": testId,
    style: {
      width: ModalSizesMapper[size] || size
    },
    className: classnames(styles$O.Modal, otherProps.className, (_cn3 = {}, _defineProperty(_cn3, styles$O['Modal--overflow'], allowHeightOverflow), _defineProperty(_cn3, styles$O['Modal--zen'], size === 'zen'), _cn3))
  }, typeof otherProps.children === 'function' ? otherProps.children(allProps) : renderDefault()));
}
Modal.Header = ModalHeader;
Modal.Content = ModalContent;
Modal.Controls = ModalControls; // Use defaultProps instead of default values in the function to allow the
// Storybook to import and use these values

Modal.defaultProps = {
  allowHeightOverflow: false,
  position: 'center',
  shouldCloseOnEscapePress: true,
  shouldCloseOnOverlayClick: true,
  size: 'medium',
  testId: 'cf-ui-modal',
  topOffset: '50px'
};

function ModalConfirm(_ref) {
  var _ref$allowHeightOverf = _ref.allowHeightOverflow,
      allowHeightOverflow = _ref$allowHeightOverf === void 0 ? false : _ref$allowHeightOverf,
      _ref$cancelLabel = _ref.cancelLabel,
      cancelLabel = _ref$cancelLabel === void 0 ? 'Cancel' : _ref$cancelLabel,
      _ref$cancelTestId = _ref.cancelTestId,
      cancelTestId = _ref$cancelTestId === void 0 ? 'cf-ui-modal-confirm-cancel-button' : _ref$cancelTestId,
      children = _ref.children,
      _ref$confirmLabel = _ref.confirmLabel,
      confirmLabel = _ref$confirmLabel === void 0 ? 'Confirm' : _ref$confirmLabel,
      _ref$confirmTestId = _ref.confirmTestId,
      confirmTestId = _ref$confirmTestId === void 0 ? 'cf-ui-modal-confirm-confirm-button' : _ref$confirmTestId,
      _ref$intent = _ref.intent,
      intent = _ref$intent === void 0 ? 'positive' : _ref$intent,
      _ref$isConfirmDisable = _ref.isConfirmDisabled,
      isConfirmDisabled = _ref$isConfirmDisable === void 0 ? false : _ref$isConfirmDisable,
      _ref$isConfirmLoading = _ref.isConfirmLoading,
      isConfirmLoading = _ref$isConfirmLoading === void 0 ? false : _ref$isConfirmLoading,
      isSecondaryDisabled = _ref.isSecondaryDisabled,
      isSecondaryLoading = _ref.isSecondaryLoading,
      isShown = _ref.isShown,
      modalContentProps = _ref.modalContentProps,
      modalControlsProps = _ref.modalControlsProps,
      modalHeaderProps = _ref.modalHeaderProps,
      onCancel = _ref.onCancel,
      onConfirm = _ref.onConfirm,
      onSecondary = _ref.onSecondary,
      secondaryIntent = _ref.secondaryIntent,
      secondaryLabel = _ref.secondaryLabel,
      _ref$secondaryTestId = _ref.secondaryTestId,
      secondaryTestId = _ref$secondaryTestId === void 0 ? 'cf-ui-modal-confirm-secondary-button' : _ref$secondaryTestId,
      _ref$shouldCloseOnEsc = _ref.shouldCloseOnEscapePress,
      shouldCloseOnEscapePress = _ref$shouldCloseOnEsc === void 0 ? true : _ref$shouldCloseOnEsc,
      _ref$shouldCloseOnOve = _ref.shouldCloseOnOverlayClick,
      shouldCloseOnOverlayClick = _ref$shouldCloseOnOve === void 0 ? true : _ref$shouldCloseOnOve,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'medium' : _ref$size,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-modal-confirm' : _ref$testId,
      _ref$title = _ref.title,
      title = _ref$title === void 0 ? 'Are you sure?' : _ref$title;
  var confirmButton = confirmLabel ? /*#__PURE__*/React__default.createElement(Button, {
    testId: confirmTestId,
    disabled: isConfirmDisabled,
    loading: isConfirmLoading,
    buttonType: intent,
    onClick: function onClick() {
      return onConfirm();
    }
  }, confirmLabel) : null;
  var secondaryButton = secondaryLabel ? /*#__PURE__*/React__default.createElement(Button, {
    testId: secondaryTestId,
    disabled: isSecondaryDisabled,
    loading: isSecondaryLoading,
    buttonType: secondaryIntent,
    onClick: function onClick() {
      return onSecondary && onSecondary();
    }
  }, secondaryLabel) : null;
  var cancelButton = cancelLabel ? /*#__PURE__*/React__default.createElement(Button, {
    testId: cancelTestId,
    buttonType: "muted",
    onClick: function onClick() {
      return onCancel();
    }
  }, cancelLabel) : null;
  return /*#__PURE__*/React__default.createElement(Modal, {
    testId: testId,
    isShown: isShown,
    onClose: onCancel,
    size: size,
    shouldCloseOnOverlayClick: shouldCloseOnOverlayClick,
    shouldCloseOnEscapePress: shouldCloseOnEscapePress,
    allowHeightOverflow: allowHeightOverflow
  }, function () {
    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Modal.Header, _extends({
      title: title || ''
    }, modalHeaderProps)), /*#__PURE__*/React__default.createElement(Modal.Content, modalContentProps, children), /*#__PURE__*/React__default.createElement(Modal.Controls, modalControlsProps, (modalControlsProps === null || modalControlsProps === void 0 ? void 0 : modalControlsProps.position) === 'right' ? /*#__PURE__*/React__default.createElement(Fragment$1, null, cancelButton, secondaryButton, confirmButton) : /*#__PURE__*/React__default.createElement(Fragment$1, null, confirmButton, secondaryButton, cancelButton)));
  });
}

var runtime_1 = createCommonjsModule(function (module) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined$1; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined$1) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined$1;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined$1;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined$1;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined$1, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined$1;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined$1;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined$1;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined$1;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined$1;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   module.exports 
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}
});

var regenerator = runtime_1;

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

function ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$5(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
// eslint-disable-next-line @typescript-eslint/no-explicit-any

var getRoot = function getRoot(rootElId) {
  // Reuse the container if we find it
  var rootDom = document.getElementById(rootElId);

  if (rootDom !== null) {
    return rootDom;
  } // Otherwise create it


  rootDom = document.createElement('div');
  rootDom.setAttribute('id', rootElId);
  document.body.appendChild(rootDom);
  return rootDom;
};

var openModalsIds = new Map();

function closeAll() {
  openModalsIds.forEach( /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee(_ref, rootElId) {
      var render, currentConfig, delay, config;
      return regenerator.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              render = _ref.render, currentConfig = _ref.currentConfig, delay = _ref.delay;
              config = _objectSpread$5(_objectSpread$5({}, currentConfig), {}, {
                isShown: false
              });
              render(config);
              _context.next = 5;
              return new Promise(function (resolveDelay) {
                return setTimeout(resolveDelay, delay);
              });

            case 5:
              ReactDOM.unmountComponentAtNode(getRoot(rootElId));
              openModalsIds["delete"](rootElId);

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2) {
      return _ref2.apply(this, arguments);
    };
  }());
} // eslint-disable-next-line @typescript-eslint/no-explicit-any


function open(componentRenderer) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  options = _objectSpread$5({
    delay: 300
  }, options); // Allow components to specify if they wish to reuse the modal container

  var rootElId = "modals-root".concat(options.modalId || Date.now());
  var rootDom = getRoot(rootElId);
  return new Promise(function (resolve) {
    var currentConfig = {
      onClose: onClose,
      isShown: true
    };

    function render(_ref3) {
      var onClose = _ref3.onClose,
          isShown = _ref3.isShown;
      ReactDOM.render(componentRenderer({
        onClose: onClose,
        isShown: isShown
      }), rootDom);
    }

    function onClose(_x3) {
      return _onClose.apply(this, arguments);
    }

    function _onClose() {
      _onClose = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee2(arg) {
        return regenerator.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                currentConfig = _objectSpread$5(_objectSpread$5({}, currentConfig), {}, {
                  isShown: false
                });
                render(currentConfig);
                _context2.next = 4;
                return new Promise(function (resolveDelay) {
                  return setTimeout(resolveDelay, options.delay);
                });

              case 4:
                ReactDOM.unmountComponentAtNode(rootDom);
                rootDom.remove();
                openModalsIds["delete"](rootElId);
                resolve(arg);

              case 8:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));
      return _onClose.apply(this, arguments);
    }

    render(currentConfig);
    openModalsIds.set(rootElId, {
      render: render,
      currentConfig: currentConfig,
      delay: options.delay
    });
  });
}

var ModalLauncher = {
  open: open,
  closeAll: closeAll
};

var _excluded$Z = ["children", "className", "onSubmit", "spacing", "testId"];
var styles$P = {
  "Form": "Form__Form___2zwZf",
  "Form__item": "Form__Form__item___2qOZE",
  "Form__item--default": "Form__Form__item--default___1CHMK",
  "Form__item--condensed": "Form__Form__item--condensed___2iooB"
};
var Form = function Form(_ref) {
  var children = _ref.children,
      className = _ref.className,
      onSubmit = _ref.onSubmit,
      _ref$spacing = _ref.spacing,
      spacing = _ref$spacing === void 0 ? 'default' : _ref$spacing,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-form' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$Z);

  var classNames = classnames(styles$P.Form, className);
  var formItemClassNames = classnames(styles$P.Form__item, styles$P["Form__item--".concat(spacing)]);
  var handleSubmit = useCallback(function (event) {
    event.preventDefault();

    if (onSubmit) {
      onSubmit(event);
    }
  }, [onSubmit]);
  return /*#__PURE__*/React__default.createElement("form", _extends({
    className: classNames,
    "data-test-id": testId,
    onSubmit: handleSubmit
  }, otherProps), Children.map(children, function (child) {
    if (child) {
      return /*#__PURE__*/React__default.createElement("div", {
        className: formItemClassNames
      }, child);
    }

    return null;
  }));
};

var _excluded$_ = ["children", "className", "row", "testId"];
var styles$Q = {
  "FieldGroup": "FieldGroup__FieldGroup___2mLmO",
  "FieldGroup__item": "FieldGroup__FieldGroup__item___2qkC3",
  "FieldGroup--row": "FieldGroup__FieldGroup--row___17yyV"
};
var FieldGroup = function FieldGroup(_ref) {
  var children = _ref.children,
      className = _ref.className,
      _ref$row = _ref.row,
      row = _ref$row === void 0 ? false : _ref$row,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-field-group' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$_);

  var classNames = classnames(styles$Q.FieldGroup, className, _defineProperty({}, styles$Q['FieldGroup--row'], row));
  return /*#__PURE__*/React__default.createElement("div", _extends({}, otherProps, {
    "data-test-id": testId,
    className: classNames
  }), React__default.Children.map(children, function (child) {
    return /*#__PURE__*/React__default.createElement("div", {
      className: styles$Q.FieldGroup__item
    }, child);
  }));
};

var iconName = {
  ArrowDown: 'ArrowDown',
  ArrowDownTrimmed: 'ArrowDownTrimmed',
  ArrowUp: 'ArrowUp',
  ArrowUpTrimmed: 'ArrowUpTrimmed',
  Asset: 'Asset',
  AssetTrimmed: 'AssetTrimmed',
  Calendar: 'Calendar',
  ChatBubble: 'ChatBubble',
  ChatBubbleTrimmed: 'ChatBubbleTrimmed',
  CheckCircle: 'CheckCircle',
  CheckCircleTrimmed: 'CheckCircleTrimmed',
  ChevronDown: 'ChevronDown',
  ChevronDownTrimmed: 'ChevronDownTrimmed',
  ChevronLeft: 'ChevronLeft',
  ChevronLeftTrimmed: 'ChevronLeftTrimmed',
  ChevronRight: 'ChevronRight',
  ChevronRightTrimmed: 'ChevronRightTrimmed',
  ChevronUp: 'ChevronUp',
  ChevronUpTrimmed: 'ChevronUpTrimmed',
  Clock: 'Clock',
  ClockTrimmed: 'ClockTrimmed',
  Close: 'Close',
  CloseTrimmed: 'CloseTrimmed',
  CloudUpload: 'CloudUpload',
  Code: 'Code',
  CodeTrimmed: 'CodeTrimmed',
  Copy: 'Copy',
  CopyTrimmed: 'CopyTrimmed',
  Cycle: 'Cycle',
  CycleTrimmed: 'CycleTrimmed',
  Delete: 'Delete',
  DeleteTrimmed: 'DeleteTrimmed',
  Done: 'Done',
  DoubleArrow: 'DoubleArrow',
  Download: 'Download',
  DownloadTrimmed: 'DownloadTrimmed',
  Drag: 'Drag',
  DragTrimmed: 'DragTrimmed',
  Edit: 'Edit',
  EditTrimmed: 'EditTrimmed',
  EmbeddedEntryBlock: 'EmbeddedEntryBlock',
  EmbeddedEntryBlockTrimmed: 'EmbeddedEntryBlockTrimmed',
  EmbeddedEntryInline: 'EmbeddedEntryInline',
  EmbeddedEntryInlineTrimmed: 'EmbeddedEntryInlineTrimmed',
  Entry: 'Entry',
  EntryTrimmed: 'EntryTrimmed',
  Environment: 'Environment',
  EnvironmentAlias: 'EnvironmentAlias',
  ErrorCircle: 'ErrorCircle',
  ErrorCircleOutline: 'ErrorCircleOutline',
  ErrorCircleTrimmed: 'ErrorCircleTrimmed',
  ExternalLink: 'ExternalLink',
  ExternalLinkTrimmed: 'ExternalLinkTrimmed',
  FaceHappy: 'FaceHappy',
  FaceHappyTrimmed: 'FaceHappyTrimmed',
  Filter: 'Filter',
  FilterTrimmed: 'FilterTrimmed',
  Folder: 'Folder',
  FolderCreate: 'FolderCreate',
  FolderCreateTrimmed: 'FolderCreateTrimmed',
  FolderOpen: 'FolderOpen',
  FolderOpenTrimmed: 'FolderOpenTrimmed',
  FolderTrimmed: 'FolderTrimmed',
  FormatBold: 'FormatBold',
  FormatBoldTrimmed: 'FormatBoldTrimmed',
  FormatItalic: 'FormatItalic',
  FormatItalicTrimmed: 'FormatItalicTrimmed',
  FormatUnderlined: 'FormatUnderlined',
  FormatUnderlinedTrimmed: 'FormatUnderlinedTrimmed',
  Gift: 'Gift',
  Heading: 'Heading',
  HeadingOne: 'HeadingOne',
  HeadingOneTrimmed: 'HeadingOneTrimmed',
  HeadingTrimmed: 'HeadingTrimmed',
  HeadingTwo: 'HeadingTwo',
  HeadingTwoTrimmed: 'HeadingTwoTrimmed',
  HelpCircle: 'HelpCircle',
  HelpCircleInverted: 'HelpCircleInverted',
  HelpCircleTrimmed: 'HelpCircleTrimmed',
  HorizontalRule: 'HorizontalRule',
  HorizontalRuleTrimmed: 'HorizontalRuleTrimmed',
  InfoCircle: 'InfoCircle',
  InfoCircleTrimmed: 'InfoCircleTrimmed',
  Language: 'Language',
  Link: 'Link',
  LinkAlternate: 'LinkAlternate',
  LinkTrimmed: 'LinkTrimmed',
  ListBulleted: 'ListBulleted',
  ListBulletedTrimmed: 'ListBulletedTrimmed',
  ListNumbered: 'ListNumbered',
  ListNumberedTrimmed: 'ListNumberedTrimmed',
  Lock: 'Lock',
  LockTrimmed: 'LockTrimmed',
  Logout: 'Logout',
  LooksOne: 'LooksOne',
  LooksOneTrimmed: 'LooksOneTrimmed',
  LooksTwo: 'LooksTwo',
  LooksTwoTrimmed: 'LooksTwoTrimmed',
  Menu: 'Menu',
  MenuTrimmed: 'MenuTrimmed',
  Minus: 'Minus',
  MoreHorizontal: 'MoreHorizontal',
  MoreHorizontalTrimmed: 'MoreHorizontalTrimmed',
  MoreVertical: 'MoreVertical',
  MoreVerticalTrimmed: 'MoreVerticalTrimmed',
  Person: 'Person',
  Plus: 'Plus',
  PlusCircle: 'PlusCircle',
  PlusCircleTrimmed: 'PlusCircleTrimmed',
  PlusTrimmed: 'PlusTrimmed',
  Preview: 'Preview',
  Puzzle: 'Puzzle',
  Quote: 'Quote',
  QuoteTrimmed: 'QuoteTrimmed',
  Receipt: 'Receipt',
  ReceiptTrimmed: 'ReceiptTrimmed',
  References: 'References',
  Release: 'Release',
  ReleaseTrimmed: 'ReleaseTrimmed',
  Search: 'Search',
  SearchTrimmed: 'SearchTrimmed',
  Settings: 'Settings',
  SettingsTrimmed: 'SettingsTrimmed',
  ShoppingCart: 'ShoppingCart',
  ShoppingCartTrimmed: 'ShoppingCartTrimmed',
  Star: 'Star',
  StarTrimmed: 'StarTrimmed',
  Subscript: 'Subscript',
  SubscriptTrimmed: 'SubscriptTrimmed',
  Superscript: 'Superscript',
  SuperscriptTrimmed: 'SuperscriptTrimmed',
  Tab: 'Tab',
  Table: 'Table',
  Tags: 'Tags',
  Text: 'Text',
  TextTrimmed: 'TextTrimmed',
  ThumbDown: 'ThumbDown',
  ThumbDownTrimmed: 'ThumbDownTrimmed',
  ThumbUp: 'ThumbUp',
  ThumbUpTrimmed: 'ThumbUpTrimmed',
  Users: 'Users',
  UsersTrimmed: 'UsersTrimmed',
  Warning: 'Warning',
  WarningTrimmed: 'WarningTrimmed',
  Workflows: 'Workflows'
};

var styles$R = {
  "Note": "Note__Note___2eSKN",
  "Note__title": "Note__Note__title___2nwpx",
  "Note__content": "Note__Note__content___H1pf-",
  "Note--primary": "Note__Note--primary___-8-7D",
  "Note--negative": "Note__Note--negative___3fkwL",
  "Note--positive": "Note__Note--positive___3Omoh",
  "Note--warning": "Note__Note--warning___3X53I",
  "Note--hasCloseButton": "Note__Note--hasCloseButton___QFi6x",
  "Note__info": "Note__Note__info___2m_-K",
  "Note__icon": "Note__Note__icon___20RqC",
  "Note__dismiss": "Note__Note__dismiss___1BXR6"
};
var Icons = {
  primary: iconName.InfoCircle,
  positive: iconName.CheckCircle,
  negative: iconName.ErrorCircle,
  warning: iconName.Warning
};
function Note(_ref) {
  var _classNames;

  var children = _ref.children,
      className = _ref.className,
      hasCloseButton = _ref.hasCloseButton,
      _ref$noteType = _ref.noteType,
      noteType = _ref$noteType === void 0 ? 'primary' : _ref$noteType,
      onClose = _ref.onClose,
      style = _ref.style,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-note' : _ref$testId,
      title = _ref.title;
  var icon = Icons[noteType]; // eslint-disable-line @typescript-eslint/no-non-null-assertion

  if (!icon) {
    throw new Error("Intent ".concat(noteType, " is not supported in Note component."));
  }

  return /*#__PURE__*/React__default.createElement("div", {
    style: style,
    className: classnames(styles$R.Note, className, (_classNames = {}, _defineProperty(_classNames, styles$R["Note--".concat(noteType)], noteType), _defineProperty(_classNames, styles$R['Note--hasCloseButton'], hasCloseButton), _classNames)),
    "data-test-id": testId
  }, /*#__PURE__*/React__default.createElement("div", {
    className: styles$R.Note__icon
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: icon,
    color: noteType,
    size: title ? 'medium' : 'small'
  })), /*#__PURE__*/React__default.createElement("div", {
    className: styles$R.Note__info
  }, title && /*#__PURE__*/React__default.createElement("div", {
    className: styles$R.Note__title
  }, title), /*#__PURE__*/React__default.createElement("div", {
    className: styles$R.Note__content
  }, children)), hasCloseButton && /*#__PURE__*/React__default.createElement(IconButton, {
    buttonType: "secondary",
    iconProps: {
      icon: 'Close'
    },
    onClick: function onClick() {
      if (onClose) {
        onClose();
      }
    },
    testId: "cf-ui-note-close",
    label: "Dismiss",
    className: styles$R.Note__dismiss
  }));
}

var AnimateHeight_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();



var _react2 = _interopRequireDefault(React__default);



var _propTypes2 = _interopRequireDefault(propTypes);



var _classnames2 = _interopRequireDefault(classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ANIMATION_STATE_CLASSES = {
  animating: 'rah-animating',
  animatingUp: 'rah-animating--up',
  animatingDown: 'rah-animating--down',
  animatingToHeightZero: 'rah-animating--to-height-zero',
  animatingToHeightAuto: 'rah-animating--to-height-auto',
  animatingToHeightSpecific: 'rah-animating--to-height-specific',
  static: 'rah-static',
  staticHeightZero: 'rah-static--height-zero',
  staticHeightAuto: 'rah-static--height-auto',
  staticHeightSpecific: 'rah-static--height-specific'
};

var PROPS_TO_OMIT = ['animateOpacity', 'animationStateClasses', 'applyInlineTransitions', 'children', 'contentClassName', 'delay', 'duration', 'easing', 'height', 'onAnimationEnd', 'onAnimationStart'];

function omit(obj) {
  for (var _len = arguments.length, keys = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    keys[_key - 1] = arguments[_key];
  }

  if (!keys.length) {
    return obj;
  }

  var res = {};
  var objectKeys = Object.keys(obj);

  for (var i = 0; i < objectKeys.length; i++) {
    var key = objectKeys[i];

    if (keys.indexOf(key) === -1) {
      res[key] = obj[key];
    }
  }

  return res;
}

// Start animation helper using nested requestAnimationFrames
function startAnimationHelper(callback) {
  var requestAnimationFrameIDs = [];

  requestAnimationFrameIDs[0] = requestAnimationFrame(function () {
    requestAnimationFrameIDs[1] = requestAnimationFrame(function () {
      callback();
    });
  });

  return requestAnimationFrameIDs;
}

function cancelAnimationFrames(requestAnimationFrameIDs) {
  requestAnimationFrameIDs.forEach(function (id) {
    return cancelAnimationFrame(id);
  });
}

function isNumber(n) {
  return !isNaN(parseFloat(n)) && isFinite(n);
}

function isPercentage(height) {
  // Percentage height
  return typeof height === 'string' && height.search('%') === height.length - 1 && isNumber(height.substr(0, height.length - 1));
}

function runCallback(callback, params) {
  if (callback && typeof callback === 'function') {
    callback(params);
  }
}

var AnimateHeight = function (_React$Component) {
  _inherits(AnimateHeight, _React$Component);

  function AnimateHeight(props) {
    _classCallCheck(this, AnimateHeight);

    var _this = _possibleConstructorReturn(this, (AnimateHeight.__proto__ || Object.getPrototypeOf(AnimateHeight)).call(this, props));

    _this.animationFrameIDs = [];

    var height = 'auto';
    var overflow = 'visible';

    if (isNumber(props.height)) {
      // If value is string "0" make sure we convert it to number 0
      height = props.height < 0 || props.height === '0' ? 0 : props.height;
      overflow = 'hidden';
    } else if (isPercentage(props.height)) {
      // If value is string "0%" make sure we convert it to number 0
      height = props.height === '0%' ? 0 : props.height;
      overflow = 'hidden';
    }

    _this.animationStateClasses = _extends({}, ANIMATION_STATE_CLASSES, props.animationStateClasses);

    var animationStateClasses = _this.getStaticStateClasses(height);

    _this.state = {
      animationStateClasses: animationStateClasses,
      height: height,
      overflow: overflow,
      shouldUseTransitions: false
    };
    return _this;
  }

  _createClass(AnimateHeight, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var height = this.state.height;

      // Hide content if height is 0 (to prevent tabbing into it)
      // Check for contentElement is added cause this would fail in tests (react-test-renderer)
      // Read more here: https://github.com/Stanko/react-animate-height/issues/17

      if (this.contentElement && this.contentElement.style) {
        this.hideContent(height);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps, prevState) {
      var _this2 = this;

      var _props = this.props,
          delay = _props.delay,
          duration = _props.duration,
          height = _props.height,
          onAnimationEnd = _props.onAnimationEnd,
          onAnimationStart = _props.onAnimationStart;

      // Check if 'height' prop has changed

      if (this.contentElement && height !== prevProps.height) {
        var _cx;

        // Remove display: none from the content div
        // if it was hidden to prevent tabbing into it
        this.showContent(prevState.height);

        // Cache content height
        this.contentElement.style.overflow = 'hidden';
        var contentHeight = this.contentElement.offsetHeight;
        this.contentElement.style.overflow = '';

        // set total animation time
        var totalDuration = duration + delay;

        var newHeight = null;
        var timeoutState = {
          height: null, // it will be always set to either 'auto' or specific number
          overflow: 'hidden'
        };
        var isCurrentHeightAuto = prevState.height === 'auto';

        if (isNumber(height)) {
          // If value is string "0" make sure we convert it to number 0
          newHeight = height < 0 || height === '0' ? 0 : height;
          timeoutState.height = newHeight;
        } else if (isPercentage(height)) {
          // If value is string "0%" make sure we convert it to number 0
          newHeight = height === '0%' ? 0 : height;
          timeoutState.height = newHeight;
        } else {
          // If not, animate to content height
          // and then reset to auto
          newHeight = contentHeight; // TODO solve contentHeight = 0
          timeoutState.height = 'auto';
          timeoutState.overflow = null;
        }

        if (isCurrentHeightAuto) {
          // This is the height to be animated to
          timeoutState.height = newHeight;

          // If previous height was 'auto'
          // set starting height explicitly to be able to use transition
          newHeight = contentHeight;
        }

        // Animation classes
        var animationStateClasses = (0, _classnames2.default)((_cx = {}, _defineProperty(_cx, this.animationStateClasses.animating, true), _defineProperty(_cx, this.animationStateClasses.animatingUp, prevProps.height === 'auto' || height < prevProps.height), _defineProperty(_cx, this.animationStateClasses.animatingDown, height === 'auto' || height > prevProps.height), _defineProperty(_cx, this.animationStateClasses.animatingToHeightZero, timeoutState.height === 0), _defineProperty(_cx, this.animationStateClasses.animatingToHeightAuto, timeoutState.height === 'auto'), _defineProperty(_cx, this.animationStateClasses.animatingToHeightSpecific, timeoutState.height > 0), _cx));

        // Animation classes to be put after animation is complete
        var timeoutAnimationStateClasses = this.getStaticStateClasses(timeoutState.height);

        // Set starting height and animating classes
        // We are safe to call set state as it will not trigger infinite loop
        // because of the "height !== prevProps.height" check
        this.setState({ // eslint-disable-line react/no-did-update-set-state
          animationStateClasses: animationStateClasses,
          height: newHeight,
          overflow: 'hidden',
          // When animating from 'auto' we first need to set fixed height
          // that change should be animated
          shouldUseTransitions: !isCurrentHeightAuto
        });

        // Clear timeouts
        clearTimeout(this.timeoutID);
        clearTimeout(this.animationClassesTimeoutID);

        if (isCurrentHeightAuto) {
          // When animating from 'auto' we use a short timeout to start animation
          // after setting fixed height above
          timeoutState.shouldUseTransitions = true;

          cancelAnimationFrames(this.animationFrameIDs);
          this.animationFrameIDs = startAnimationHelper(function () {
            _this2.setState(timeoutState);

            // ANIMATION STARTS, run a callback if it exists
            runCallback(onAnimationStart, { newHeight: timeoutState.height });
          });

          // Set static classes and remove transitions when animation ends
          this.animationClassesTimeoutID = setTimeout(function () {
            _this2.setState({
              animationStateClasses: timeoutAnimationStateClasses,
              shouldUseTransitions: false
            });

            // ANIMATION ENDS
            // Hide content if height is 0 (to prevent tabbing into it)
            _this2.hideContent(timeoutState.height);
            // Run a callback if it exists
            runCallback(onAnimationEnd, { newHeight: timeoutState.height });
          }, totalDuration);
        } else {
          // ANIMATION STARTS, run a callback if it exists
          runCallback(onAnimationStart, { newHeight: newHeight });

          // Set end height, classes and remove transitions when animation is complete
          this.timeoutID = setTimeout(function () {
            timeoutState.animationStateClasses = timeoutAnimationStateClasses;
            timeoutState.shouldUseTransitions = false;

            _this2.setState(timeoutState);

            // ANIMATION ENDS
            // If height is auto, don't hide the content
            // (case when element is empty, therefore height is 0)
            if (height !== 'auto') {
              // Hide content if height is 0 (to prevent tabbing into it)
              _this2.hideContent(newHeight); // TODO solve newHeight = 0
            }
            // Run a callback if it exists
            runCallback(onAnimationEnd, { newHeight: newHeight });
          }, totalDuration);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      cancelAnimationFrames(this.animationFrameIDs);

      clearTimeout(this.timeoutID);
      clearTimeout(this.animationClassesTimeoutID);

      this.timeoutID = null;
      this.animationClassesTimeoutID = null;
      this.animationStateClasses = null;
    }
  }, {
    key: 'showContent',
    value: function showContent(height) {
      if (height === 0) {
        this.contentElement.style.display = '';
      }
    }
  }, {
    key: 'hideContent',
    value: function hideContent(newHeight) {
      if (newHeight === 0) {
        this.contentElement.style.display = 'none';
      }
    }
  }, {
    key: 'getStaticStateClasses',
    value: function getStaticStateClasses(height) {
      var _cx2;

      return (0, _classnames2.default)((_cx2 = {}, _defineProperty(_cx2, this.animationStateClasses.static, true), _defineProperty(_cx2, this.animationStateClasses.staticHeightZero, height === 0), _defineProperty(_cx2, this.animationStateClasses.staticHeightSpecific, height > 0), _defineProperty(_cx2, this.animationStateClasses.staticHeightAuto, height === 'auto'), _cx2));
    }
  }, {
    key: 'render',
    value: function render() {
      var _cx3,
          _this3 = this;

      var _props2 = this.props,
          animateOpacity = _props2.animateOpacity,
          applyInlineTransitions = _props2.applyInlineTransitions,
          children = _props2.children,
          className = _props2.className,
          contentClassName = _props2.contentClassName,
          delay = _props2.delay,
          duration = _props2.duration,
          easing = _props2.easing,
          id = _props2.id,
          style = _props2.style;
      var _state = this.state,
          height = _state.height,
          overflow = _state.overflow,
          animationStateClasses = _state.animationStateClasses,
          shouldUseTransitions = _state.shouldUseTransitions;


      var componentStyle = _extends({}, style, {
        height: height,
        overflow: overflow || style.overflow
      });

      if (shouldUseTransitions && applyInlineTransitions) {
        componentStyle.transition = 'height ' + duration + 'ms ' + easing + ' ' + delay + 'ms';

        // Include transition passed through styles
        if (style.transition) {
          componentStyle.transition = style.transition + ', ' + componentStyle.transition;
        }

        // Add webkit vendor prefix still used by opera, blackberry...
        componentStyle.WebkitTransition = componentStyle.transition;
      }

      var contentStyle = {};

      if (animateOpacity) {
        contentStyle.transition = 'opacity ' + duration + 'ms ' + easing + ' ' + delay + 'ms';
        // Add webkit vendor prefix still used by opera, blackberry...
        contentStyle.WebkitTransition = contentStyle.transition;

        if (height === 0) {
          contentStyle.opacity = 0;
        }
      }

      var componentClasses = (0, _classnames2.default)((_cx3 = {}, _defineProperty(_cx3, animationStateClasses, true), _defineProperty(_cx3, className, className), _cx3));

      // Check if user passed aria-hidden prop
      var hasAriaHiddenProp = typeof this.props['aria-hidden'] !== 'undefined';
      var ariaHidden = hasAriaHiddenProp ? this.props['aria-hidden'] : height === 0;

      return _react2.default.createElement(
        'div',
        _extends({}, omit.apply(undefined, [this.props].concat(PROPS_TO_OMIT)), {
          'aria-hidden': ariaHidden,
          className: componentClasses,
          id: id,
          style: componentStyle
        }),
        _react2.default.createElement(
          'div',
          {
            className: contentClassName,
            style: contentStyle,
            ref: function ref(el) {
              return _this3.contentElement = el;
            }
          },
          children
        )
      );
    }
  }]);

  return AnimateHeight;
}(_react2.default.Component);

var heightPropType = function heightPropType(props, propName, componentName) {
  var value = props[propName];

  if (typeof value === 'number' && value >= 0 || isPercentage(value) || value === 'auto') {
    return null;
  }

  return new TypeError('value "' + value + '" of type "' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)) + '" is invalid type for ' + propName + ' in ' + componentName + '. ' + 'It needs to be a positive number, string "auto" or percentage string (e.g. "15%").');
};

AnimateHeight.propTypes = {
  'aria-hidden': _propTypes2.default.bool,
  animateOpacity: _propTypes2.default.bool,
  animationStateClasses: _propTypes2.default.object,
  applyInlineTransitions: _propTypes2.default.bool,
  children: _propTypes2.default.any.isRequired,
  className: _propTypes2.default.string,
  contentClassName: _propTypes2.default.string,
  delay: _propTypes2.default.number,
  duration: _propTypes2.default.number,
  easing: _propTypes2.default.string,
  height: heightPropType,
  id: _propTypes2.default.string,
  onAnimationEnd: _propTypes2.default.func,
  onAnimationStart: _propTypes2.default.func,
  style: _propTypes2.default.object
};

AnimateHeight.defaultProps = {
  animateOpacity: false,
  animationStateClasses: ANIMATION_STATE_CLASSES,
  applyInlineTransitions: true,
  duration: 250,
  delay: 0,
  easing: 'ease',
  style: {}
};

exports.default = AnimateHeight;
});

var AnimateHeight = unwrapExports(AnimateHeight_1);

var styles$S = {
  "NotificationItem": "NotificationItem__NotificationItem___22iZo",
  "NotificationItem--success": "NotificationItem__NotificationItem--success___1CO7O",
  "NotificationItem--error": "NotificationItem__NotificationItem--error___19wsc",
  "NotificationItem--warning": "NotificationItem__NotificationItem--warning___Bi-Iv",
  "NotificationItem__intent": "NotificationItem__NotificationItem__intent___cC494 helpers__sr-only___3Kv3z",
  "NotificationItem__icon": "NotificationItem__NotificationItem__icon___3gdKj",
  "NotificationItem__content": "NotificationItem__NotificationItem__content___2z-pT",
  "NotificationItem__text": "NotificationItem__NotificationItem__text___1-1Up",
  "NotificationItem__title": "NotificationItem__NotificationItem__title___126c1",
  "NotificationItem__body": "NotificationItem__NotificationItem__body___11cuA",
  "NotificationItem__body--naked": "NotificationItem__NotificationItem__body--naked___2CDGp",
  "NotificationItem__dismiss": "NotificationItem__NotificationItem__dismiss___1Z6Df"
};
function NotificationItem(_ref) {
  var children = _ref.children,
      cta = _ref.cta,
      _ref$hasCloseButton = _ref.hasCloseButton,
      hasCloseButton = _ref$hasCloseButton === void 0 ? true : _ref$hasCloseButton,
      _ref$intent = _ref.intent,
      intent = _ref$intent === void 0 ? 'success' : _ref$intent,
      onClose = _ref.onClose,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-notification' : _ref$testId,
      title = _ref.title;
  var renderTitle = useCallback(function () {
    return /*#__PURE__*/React__default.createElement("h2", {
      className: styles$S.NotificationItem__title
    }, title ? title : children);
  }, [children, title]);
  var renderBody = useCallback(function () {
    var bodyClasses = classnames(styles$S.NotificationItem__body, _defineProperty({}, styles$S["NotificationItem__body--naked"], !title && !cta));
    return /*#__PURE__*/React__default.createElement("p", {
      className: bodyClasses
    }, title && children);
  }, [children, title, cta]);
  var renderCta = useCallback(function () {
    if (cta && cta.label) return /*#__PURE__*/React__default.createElement("div", null, /*#__PURE__*/React__default.createElement(TextLink, cta.textLinkProps, cta.label));
  }, [cta]);
  var renderIcon = useCallback(function () {
    var iconClasses = classnames(styles$S.NotificationItem__icon, _defineProperty({}, styles$S["NotificationItem__icon--".concat(intent)], true));
    var icon;
    var color;

    switch (intent) {
      case 'success':
        icon = 'CheckCircle';
        color = 'positive';
        break;

      case 'warning':
        icon = 'Warning';
        color = 'warning';
        break;

      case 'error':
        icon = 'ErrorCircle';
        color = 'negative';
        break;

      default:
        icon = 'ErrorCircle';
    }

    return /*#__PURE__*/React__default.createElement("div", {
      className: iconClasses,
      "aria-hidden": "true"
    }, /*#__PURE__*/React__default.createElement(Icon, {
      icon: icon,
      color: color
    }));
  }, [intent]);
  var NotificationClassName = classnames(styles$S.NotificationItem, _defineProperty({}, styles$S["NotificationItem--".concat(intent)], intent));
  return /*#__PURE__*/React__default.createElement("div", {
    className: NotificationClassName,
    "data-test-id": testId,
    "data-intent": intent,
    role: "alert",
    "aria-live": intent === 'success' ? 'polite' : 'assertive'
  }, /*#__PURE__*/React__default.createElement("div", {
    className: styles$S.NotificationItem__intent
  }, intent), renderIcon(), /*#__PURE__*/React__default.createElement("div", {
    className: styles$S.NotificationItem__content
  }, /*#__PURE__*/React__default.createElement("div", {
    className: styles$S.NotificationItem__text
  }, renderTitle(), renderBody(), renderCta()), hasCloseButton && /*#__PURE__*/React__default.createElement(IconButton, {
    buttonType: "secondary",
    iconProps: {
      icon: 'Close'
    },
    onClick: function onClick() {
      if (onClose) {
        onClose();
      }
    },
    testId: "cf-ui-notification-close",
    label: "Dismiss",
    className: styles$S.NotificationItem__dismiss
  })));
}

var _excluded$$ = ["duration"];

function _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$2() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }
var defaultProps$3 = {
  isShown: false
};
var NotificationItemContainer = /*#__PURE__*/function (_Component) {
  _inherits(NotificationItemContainer, _Component);

  var _super = _createSuper$2(NotificationItemContainer);

  function NotificationItemContainer() {
    var _this;

    _classCallCheck(this, NotificationItemContainer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.timer = null;
    _this.state = {
      isShown: false
    };

    _this.startTimer = function () {
      if (_this.props.duration) {
        if (_this.props.duration === 0) return;
        _this.timer = window.setTimeout(function () {
          _this.close();
        }, _this.props.duration);
      }
    };

    _this.stopTimer = function () {
      if (_this.props.duration === 0) return;

      if (_this.timer) {
        clearTimeout(_this.timer);
        _this.timer = null;
      }
    };

    _this.close = function () {
      _this.stopTimer();

      _this.setState({
        isShown: false
      });
    };

    _this.handleMouseEnter = function () {
      _this.stopTimer();
    };

    _this.handleMouseLeave = function () {
      _this.startTimer();
    };

    return _this;
  }

  _createClass(NotificationItemContainer, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.startTimer();
      this.setState({
        isShown: true
      });
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.isShown !== this.props.isShown) {
        this.setState({
          isShown: this.props.isShown // eslint-disable-line @typescript-eslint/no-non-null-assertion

        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.stopTimer();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          duration = _this$props.duration,
          rest = _objectWithoutProperties(_this$props, _excluded$$);

      return /*#__PURE__*/React__default.createElement(AnimateHeight, {
        duration: 200,
        height: this.state.isShown ? 'auto' : 0,
        easing: "ease-in-out",
        animateOpacity: true,
        onAnimationEnd: function onAnimationEnd() {
          if (_this2.state.isShown === false) {
            if (_this2.props.onClose) {
              _this2.props.onClose();
            }
          }
        }
      }, /*#__PURE__*/React__default.createElement("div", {
        style: {
          pointerEvents: 'all'
        },
        onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave
      }, /*#__PURE__*/React__default.createElement(NotificationItem, _extends({}, rest, {
        onClose: this.close
      }))));
    }
  }]);

  return NotificationItemContainer;
}(Component$1);
NotificationItemContainer.defaultProps = defaultProps$3;

/**
 * An asyncronous state hook.
 *
 * Think of it as a slight modification of React's `useState` hook, where the
 * state returned is instead a `MutableRefObject` like you know it from the
 * `useRef` hook.
 *
 * @param value
 * @returns A tuple with the `MutableRefObject` and a function to set the state
 */

function useAsyncState(value) {
  var ref = useRef(value);

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      forceUpdate = _useState2[1];

  var setState = function setState(newState) {
    if (!Object.is(ref.current, newState)) {
      ref.current = newState;
      forceUpdate(function (state) {
        return !state;
      });
    }
  };

  return [ref, setState];
}

function ownKeys$6(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$6(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$6(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var styles$T = {
  "NotificationsManager": "NotificationsManager__NotificationsManager___1uvY2",
  "NotificationsManager__container": "NotificationsManager__NotificationsManager__container___3U0e9",
  "NotificationsManager--top": "NotificationsManager__NotificationsManager--top___aRv7j"
};
var uniqueId = 0;

var getUniqueId = function getUniqueId() {
  uniqueId += 1;
  return uniqueId;
};

function NotificationsManager(_ref) {
  var register = _ref.register;

  var _useAsyncState = useAsyncState([]),
      _useAsyncState2 = _slicedToArray(_useAsyncState, 2),
      items = _useAsyncState2[0],
      setItems = _useAsyncState2[1];

  var _useState = useState('bottom'),
      _useState2 = _slicedToArray(_useState, 2),
      position = _useState2[0],
      setPositionState = _useState2[1];

  var _useState3 = useState(20),
      _useState4 = _slicedToArray(_useState3, 2),
      positionOffset = _useState4[0],
      setPositionOffset = _useState4[1];

  var _useState5 = useState(6000),
      _useState6 = _slicedToArray(_useState5, 2),
      duration = _useState6[0],
      setDuration = _useState6[1];

  var setPosition = useCallback(function (position, params) {
    if (position === 'bottom' || position === 'top') {
      var _positionOffset = params && params.offset ? params.offset : 20;

      setPositionState(position);
      setPositionOffset(_positionOffset);
    }
  }, []);
  var close = useCallback(function (id) {
    setItems(items.current.map(function (item) {
      if (item.id !== id) {
        return item;
      }

      return _objectSpread$6(_objectSpread$6({}, item), {}, {
        isShown: false
      });
    }));
  }, [items, setItems]);
  var closeAndDelete = useCallback(function (id) {
    setItems(items.current.filter(function (item) {
      return item.id !== id;
    }));
  }, [items, setItems]);
  var closeAll = useCallback(function () {
    setItems(items.current.map(function (item) {
      return _objectSpread$6(_objectSpread$6({}, item), {}, {
        isShown: false
      });
    }));
  }, [items, setItems]);
  var show = useCallback(function (text, settings) {
    var itemDuration = settings && typeof settings.duration !== 'undefined' // Needed as 0 is falsy but 0 is valid to disable auto-closing a notification
    ? settings.duration : duration;
    var intent = settings && settings.intent ? settings.intent : 'success';
    var canClose = settings && typeof settings.canClose !== 'undefined' ? settings.canClose : true;
    var notificationId = settings && settings.id ? settings.id : getUniqueId();
    var notification = {
      id: notificationId,
      text: text,
      close: function close() {
        return closeAndDelete(notificationId);
      },
      duration: itemDuration,
      canClose: canClose,
      isShown: true,
      intent: intent,
      title: settings && settings.title,
      cta: settings && settings.cta
    };
    var alreadyThere = items.current.find(function (item) {
      return item.id === notification.id;
    });

    if (alreadyThere) {
      return alreadyThere;
    }

    if (position === 'top') {
      setItems([notification].concat(_toConsumableArray(items.current)));
    } else {
      setItems([].concat(_toConsumableArray(items.current), [notification]));
    }

    return notification;
  }, [closeAndDelete, duration, items, position, setItems]);
  register('close', close);
  register('show', show);
  register('closeAll', closeAll);
  register('setPosition', setPosition);
  register('setDuration', setDuration);
  return /*#__PURE__*/React__default.createElement("div", {
    "data-test-id": "cf-notification-container",
    className: classnames(styles$T.NotificationsManager, _defineProperty({}, styles$T["NotificationsManager--top"], position === 'top')),
    style: _defineProperty({}, position, positionOffset)
  }, /*#__PURE__*/React__default.createElement("div", {
    className: styles$T.NotificationsManager__container
  }, items.current.map(function (item) {
    return /*#__PURE__*/React__default.createElement(NotificationItemContainer, {
      intent: item.intent,
      duration: item.duration,
      key: item.id,
      hasCloseButton: item.canClose,
      onClose: item.close,
      isShown: item.isShown,
      title: item.title,
      cta: item.cta
    }, item.text);
  })));
}

function ownKeys$7(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$7(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$7(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$7(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var initiated = false;
var internalAPI = {};

function registerAPI(fnName, fn) {
  internalAPI[fnName] = fn;
}

function createRoot(callback) {
  var container = document.createElement('div');
  document.body.appendChild(container);
  render( /*#__PURE__*/React__default.createElement(NotificationsManager, {
    register: registerAPI
  }), container, callback);
}

function afterInit(fn) {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (!initiated) {
      initiated = true;
      return new Promise(function (resolve) {
        createRoot(function () {
          resolve(fn.apply(void 0, args));
        });
      });
    } else {
      return Promise.resolve(fn.apply(void 0, args));
    }
  };
}

var show = function show(intent) {
  return function (text, settings) {
    if (internalAPI.show) {
      return internalAPI.show(text, _objectSpread$7(_objectSpread$7({}, settings || {}), {}, {
        intent: intent
      }));
    }
  };
};

var Notification = {
  success: afterInit(show('success')),
  error: afterInit(show('error')),
  warning: afterInit(show('warning')),
  close: afterInit(function (id) {
    if (internalAPI.close) {
      return internalAPI.close(id);
    }
  }),
  closeAll: afterInit(function () {
    if (internalAPI.closeAll) {
      return internalAPI.closeAll();
    }
  }),
  setPosition: afterInit(function (position, params) {
    if (internalAPI.setPosition) {
      return internalAPI.setPosition(position, params);
    }
  }),
  setDuration: afterInit(function (duration) {
    if (internalAPI.setDuration) {
      return internalAPI.setDuration(duration);
    }
  })
};

var _excluded$10 = ["disabled", "required", "testId", "type", "willBlurOnEsc"];

var RadioButton = function RadioButton(_ref) {
  var _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      _ref$required = _ref.required,
      required = _ref$required === void 0 ? false : _ref$required,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-radio-button' : _ref$testId,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? 'radio' : _ref$type,
      _ref$willBlurOnEsc = _ref.willBlurOnEsc,
      willBlurOnEsc = _ref$willBlurOnEsc === void 0 ? true : _ref$willBlurOnEsc,
      otherProps = _objectWithoutProperties(_ref, _excluded$10);

  return /*#__PURE__*/React__default.createElement(ControlledInput, _extends({}, otherProps, {
    disabled: disabled,
    required: required,
    "data-test-id": testId,
    type: type,
    willBlurOnEsc: willBlurOnEsc
  }));
};

var _excluded$11 = ["checked", "labelIsLight", "testId"];
var RadioButtonField = function RadioButtonField(_ref) {
  var _ref$checked = _ref.checked,
      checked = _ref$checked === void 0 ? false : _ref$checked,
      _ref$labelIsLight = _ref.labelIsLight,
      labelIsLight = _ref$labelIsLight === void 0 ? false : _ref$labelIsLight,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-radio-button-field' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$11);

  return /*#__PURE__*/React__default.createElement(ControlledInputField, _extends({
    checked: checked,
    labelIsLight: labelIsLight,
    testId: testId
  }, otherProps, {
    inputType: "radio"
  }));
};

var _excluded$12 = ["element", "className", "children", "testId"];
var styles$U = {
  "List": "List__List___1YcFy",
  "List--unordered": "List__List--unordered___3MCEx"
};
function List(_ref) {
  var _ref$element = _ref.element,
      Tag = _ref$element === void 0 ? 'ul' : _ref$element,
      className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-list' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$12);

  var classNames = classnames(styles$U['List'], _defineProperty({}, styles$U['List--unordered'], Tag === 'ul'), className);
  return /*#__PURE__*/React__default.createElement(Tag, _extends({}, otherProps, {
    className: classNames,
    "data-test-id": testId
  }), children);
}

var _excluded$13 = ["className", "children", "testId"];
var styles$V = {
  "ListItem": "ListItem__ListItem___3S9Oc",
  "ListItem--nested-list": "ListItem__ListItem--nested-list___dzAem"
};
function ListItem(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-list-item' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$13);

  var classNames = classnames(styles$V['ListItem'], className, _defineProperty({}, styles$V['ListItem--nested-list'], // eslint-disable-next-line @typescript-eslint/no-explicit-any
  children.type === List));
  return /*#__PURE__*/React__default.createElement("li", _extends({
    className: classNames,
    "data-test-id": testId
  }, otherProps), children);
}

var styles$W = {
  "Tabs": "Tabs__Tabs___3Cp8m",
  "Tab": "Tabs__Tab___1SiYI",
  "Tab__selected": "Tabs__Tab__selected___3erbm",
  "Tab__disabled": "Tabs__Tab__disabled___3H8Zw",
  "Tabs__divider--horizontal": "Tabs__Tabs__divider--horizontal___3Dg4P",
  "Tabs__divider--vertical": "Tabs__Tabs__divider--vertical___2PeiB"
};
function Tab(_ref) {
  var _classNames;

  var children = _ref.children,
      className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      href = _ref.href,
      id = _ref.id,
      onSelect = _ref.onSelect,
      _ref$selected = _ref.selected,
      selected = _ref$selected === void 0 ? false : _ref$selected,
      style = _ref.style,
      _ref$tabIndex = _ref.tabIndex,
      tabIndex = _ref$tabIndex === void 0 ? 0 : _ref$tabIndex,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-tab' : _ref$testId;
  var handleClick = useCallback(function (e) {
    if (onSelect && !disabled) {
      onSelect(id, e);
    }
  }, [disabled, id, onSelect]);
  var handleKeyPress = useCallback(function (e) {
    if (onSelect && e.key === 'Enter') {
      onSelect(id, e);
      e.preventDefault();
    }
  }, [id, onSelect]);
  var elementProps = {
    className: classnames(styles$W.Tab, (_classNames = {}, _defineProperty(_classNames, styles$W['Tab__selected'], selected), _defineProperty(_classNames, styles$W['Tab__disabled'], disabled), _classNames), className),
    onClick: handleClick,
    onKeyPress: handleKeyPress,
    style: style,
    'data-test-id': testId,
    tabIndex: tabIndex
  };

  if (disabled) {
    elementProps['aria-disabled'] = true;
  }

  if (href) {
    elementProps['href'] = href;

    if (selected) {
      elementProps['aria-current'] = 'page';
    }

    return /*#__PURE__*/React__default.createElement("a", elementProps, children);
  } else {
    elementProps['aria-selected'] = selected;
    elementProps['role'] = 'tab';
    elementProps['aria-controls'] = id;
    return /*#__PURE__*/React__default.createElement("div", elementProps, children);
  }
}

var styles$X = {
  "Tabs": "Tabs__Tabs___3Cp8m",
  "Tab": "Tabs__Tab___1SiYI",
  "Tab__selected": "Tabs__Tab__selected___3erbm",
  "Tab__disabled": "Tabs__Tab__disabled___3H8Zw",
  "Tabs__divider--horizontal": "Tabs__Tabs__divider--horizontal___3Dg4P",
  "Tabs__divider--vertical": "Tabs__Tabs__divider--vertical___2PeiB"
}; // @todo: Rename divider props in v4:

function Tabs(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$dividerOrientati = _ref.dividerOrientation,
      dividerOrientation = _ref$dividerOrientati === void 0 ? 'horizontal' : _ref$dividerOrientati,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-tabs' : _ref$testId,
      _ref$role = _ref.role,
      role = _ref$role === void 0 ? 'tablist' : _ref$role,
      _ref$withDivider = _ref.withDivider,
      withDivider = _ref$withDivider === void 0 ? false : _ref$withDivider,
      style = _ref.style;
  var classNames = classnames(styles$X.Tabs, _defineProperty({}, styles$X["Tabs__divider--".concat(dividerOrientation)], withDivider), className);
  var elementProps = {
    'data-test-id': testId,
    className: classNames,
    style: style
  };

  if (role === 'navigation') {
    return /*#__PURE__*/React__default.createElement("nav", _extends({}, elementProps, {
      role: "navigation"
    }), children);
  }

  return /*#__PURE__*/React__default.createElement("div", _extends({}, elementProps, {
    role: "tablist"
  }), children);
}

var _excluded$14 = ["testId", "className", "children", "id"];
function TabPanel(_ref) {
  var _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-tab-panel' : _ref$testId,
      className = _ref.className,
      children = _ref.children,
      id = _ref.id,
      rest = _objectWithoutProperties(_ref, _excluded$14);

  return /*#__PURE__*/React__default.createElement("div", _extends({}, rest, {
    id: id,
    role: "tabpanel",
    "data-test-id": testId,
    className: className
  }), children);
}

var _excluded$15 = ["className", "children", "testId"];
var styles$Y = {
  "EntityList": "EntityList__EntityList___foLpo"
};
var EntityList = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-entity-list' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$15);

  var classNames = classnames(styles$Y.EntityList, className);
  return /*#__PURE__*/React__default.createElement("ul", _extends({
    ref: ref,
    className: classNames,
    "data-test-id": testId
  }, otherProps), children);
});
EntityList.displayName = 'EntityList';

var _excluded$16 = ["className", "testId", "title", "description", "contentType", "entityType", "withThumbnail", "thumbnailUrl", "thumbnailAltText", "status", "dropdownListElements", "withDragHandle", "isDragActive", "isLoading", "onClick", "href", "cardDragHandleProps", "cardDragHandleComponent", "isActionsDisabled"];
var styles$Z = {
  "EntityListItem": "EntityListItem__EntityListItem___29x4C",
  "EntityListItem--drag-active": "EntityListItem__EntityListItem--drag-active___1qF1k",
  "EntityListItem__focus-trap": "EntityListItem__EntityListItem__focus-trap___Hm8Et",
  "EntityListItem__inner": "EntityListItem__EntityListItem__inner___3sE6J a11y__focus-outline--default___2hwb1",
  "EntityListItem__media": "EntityListItem__EntityListItem__media___33gWs",
  "EntityListItem__thumbnail": "EntityListItem__EntityListItem__thumbnail___1fjhs",
  "EntityListItem__content": "EntityListItem__EntityListItem__content___y2dN5 helpers__truncate___3ZEQa",
  "EntityListItem__heading": "EntityListItem__EntityListItem__heading___133Tm",
  "EntityListItem__title": "EntityListItem__EntityListItem__title___5sclg helpers__truncate___3ZEQa",
  "EntityListItem__content-type": "EntityListItem__EntityListItem__content-type___CoCul helpers__truncate___3ZEQa",
  "EntityListItem__description": "EntityListItem__EntityListItem__description___-sYiZ helpers__truncate___3ZEQa",
  "EntityListItem__meta": "EntityListItem__EntityListItem__meta___3xi8M",
  "EntityListItem__status": "EntityListItem__EntityListItem__status___8aOEj",
  "EntityListItem__actions": "EntityListItem__EntityListItem__actions___1BF6s"
};
function EntityListItem(_ref) {
  var _cn;

  var className = _ref.className,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-entity-list-item' : _ref$testId,
      title = _ref.title,
      description = _ref.description,
      contentType = _ref.contentType,
      _ref$entityType = _ref.entityType,
      entityType = _ref$entityType === void 0 ? 'entry' : _ref$entityType,
      _ref$withThumbnail = _ref.withThumbnail,
      withThumbnail = _ref$withThumbnail === void 0 ? true : _ref$withThumbnail,
      thumbnailUrl = _ref.thumbnailUrl,
      thumbnailAltText = _ref.thumbnailAltText,
      status = _ref.status,
      dropdownListElements = _ref.dropdownListElements,
      withDragHandle = _ref.withDragHandle,
      isDragActive = _ref.isDragActive,
      isLoading = _ref.isLoading,
      onClick = _ref.onClick,
      href = _ref.href,
      cardDragHandleProps = _ref.cardDragHandleProps,
      cardDragHandleComponent = _ref.cardDragHandleComponent,
      _ref$isActionsDisable = _ref.isActionsDisabled,
      isActionsDisabled = _ref$isActionsDisable === void 0 ? false : _ref$isActionsDisable,
      otherProps = _objectWithoutProperties(_ref, _excluded$16);

  var renderIcon = useCallback(function () {
    var iconMap = {
      asset: 'Asset',
      entry: 'Entry',
      release: 'Release'
    };
    var icon = entityType ? iconMap[entityType.toLowerCase()] : 'Entry';
    return /*#__PURE__*/React__default.createElement(Icon, {
      icon: icon,
      color: "muted"
    });
  }, [entityType]);
  var renderThumbnail = useCallback(function () {
    return /*#__PURE__*/React__default.createElement("img", {
      src: thumbnailUrl,
      className: styles$Z['EntityListItem__thumbnail'],
      alt: thumbnailAltText
    });
  }, [thumbnailAltText, thumbnailUrl]);
  var renderStatus = useCallback(function (status) {
    var label;
    var type;

    switch (status) {
      case 'archived':
        label = 'archived';
        type = 'negative';
        break;

      case 'changed':
        label = 'changed';
        type = 'primary';
        break;

      case 'published':
        label = 'published';
        type = 'positive';
        break;

      default:
        label = 'draft';
        type = 'warning';
    }

    return /*#__PURE__*/React__default.createElement("div", {
      className: styles$Z['EntityListItem__status']
    }, /*#__PURE__*/React__default.createElement(Tag, {
      tagType: type
    }, label));
  }, []);
  var renderLoadingCard = useCallback(function () {
    return /*#__PURE__*/React__default.createElement("article", {
      className: styles$Z['EntityListItem__inner']
    }, /*#__PURE__*/React__default.createElement(SkeletonContainer, {
      clipId: "f36-entity-list-item-skeleton"
    }, /*#__PURE__*/React__default.createElement(SkeletonImage, {
      height: 46,
      width: 46
    }), /*#__PURE__*/React__default.createElement(SkeletonBodyText, {
      numberOfLines: 2,
      lineHeight: 18,
      offsetLeft: 54
    })));
  }, []);
  var renderCardDragHandle = useCallback(function () {
    if (cardDragHandleComponent) {
      return cardDragHandleComponent;
    } else if (withDragHandle) {
      return /*#__PURE__*/React__default.createElement(CardDragHandle, _extends({
        isDragActive: isDragActive
      }, cardDragHandleProps), "Reorder entry");
    }
  }, [cardDragHandleComponent, cardDragHandleProps, isDragActive, withDragHandle]);
  var classNames = classnames(styles$Z.EntityListItem, className, (_cn = {}, _defineProperty(_cn, styles$Z['EntityListItem--drag-active'], isDragActive), _defineProperty(_cn, styles$Z['EntityListItem--is-interactive'], onClick || href), _cn));
  var Element = onClick ? 'a' : 'article'; // archived assets will not be available on the CDN, resulting in a broken image src

  var isArchived = status === 'archived';
  var asIcon = isArchived || !thumbnailUrl;
  return /*#__PURE__*/React__default.createElement("li", _extends({}, otherProps, {
    className: classNames,
    "data-test-id": testId
  }), renderCardDragHandle(), isLoading ? renderLoadingCard() : /*#__PURE__*/React__default.createElement(Element, {
    className: styles$Z['EntityListItem__inner'],
    onClick: onClick,
    href: href,
    tabIndex: onClick && 0,
    target: onClick && href ? '_blank' : undefined
  }, /*#__PURE__*/React__default.createElement(TabFocusTrap, {
    className: styles$Z['EntityListItem__focus-trap']
  }, withThumbnail && /*#__PURE__*/React__default.createElement("figure", {
    className: styles$Z['EntityListItem__media']
  }, asIcon ? renderIcon() : renderThumbnail()), /*#__PURE__*/React__default.createElement("div", {
    className: styles$Z['EntityListItem__content']
  }, /*#__PURE__*/React__default.createElement("div", {
    className: styles$Z['EntityListItem__heading']
  }, /*#__PURE__*/React__default.createElement("h1", {
    className: styles$Z['EntityListItem__title']
  }, title), contentType && /*#__PURE__*/React__default.createElement("div", {
    className: styles$Z['EntityListItem__content-type']
  }, "(", contentType, ")")), description && /*#__PURE__*/React__default.createElement("p", {
    className: styles$Z['EntityListItem__description']
  }, description)), /*#__PURE__*/React__default.createElement("div", {
    className: styles$Z['EntityListItem__meta']
  }, status && renderStatus(status), dropdownListElements && /*#__PURE__*/React__default.createElement(CardActions, {
    className: styles$Z['EntityListItem__actions'],
    isDisabled: isActionsDisabled,
    iconButtonProps: {
      onClick: function onClick(e) {
        return e.stopPropagation;
      }
    }
  }, dropdownListElements)))));
}

var _excluded$17 = ["className", "children", "testId", "customImageElement", "imageProps", "headingProps", "descriptionProps"];
var styles$_ = {
  "EmptyState": "EmptyState__EmptyState___35Xbk",
  "EmptyState_container": "EmptyState__EmptyState_container___34eoG",
  "EmptyState_illustration": "EmptyState__EmptyState_illustration___3KEC9",
  "EmptyState_element": "EmptyState__EmptyState_element___1cYfd",
  "EmptyState_paragraph": "EmptyState__EmptyState_paragraph___KTUQq"
};
function EmptyState(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-empty-state' : _ref$testId,
      customImageElement = _ref.customImageElement,
      imageProps = _ref.imageProps,
      headingProps = _ref.headingProps,
      descriptionProps = _ref.descriptionProps,
      otherProps = _objectWithoutProperties(_ref, _excluded$17);

  var classNames = classnames(styles$_.EmptyState, className);
  return /*#__PURE__*/React__default.createElement("div", _extends({}, otherProps, {
    className: classNames,
    "data-test-id": testId
  }), /*#__PURE__*/React__default.createElement("div", {
    className: styles$_['EmptyState_container']
  }, /*#__PURE__*/React__default.createElement("div", {
    className: styles$_['EmptyState_element']
  }, customImageElement ? customImageElement : imageProps && /*#__PURE__*/React__default.createElement("img", {
    src: imageProps.url,
    alt: imageProps.description,
    className: classnames(imageProps.className, styles$_['EmptyState_illustration']),
    style: {
      height: imageProps.height,
      width: imageProps.width
    }
  })), /*#__PURE__*/React__default.createElement(Heading, {
    element: headingProps.elementType ? headingProps.elementType : 'h1',
    className: styles$_['EmptyState_element']
  }, headingProps.text), /*#__PURE__*/React__default.createElement(Paragraph, {
    element: descriptionProps.elementType ? descriptionProps.elementType : 'p',
    className: classnames(styles$_['EmptyState_paragraph'], styles$_['EmptyState_element'])
  }, descriptionProps.text), children));
}

var styles$$ = {
  "Switch__wrapper": "Switch__Switch__wrapper___1kkJg",
  "Switch": "Switch__Switch___bJH7R",
  "Switch--small": "Switch__Switch--small___hUOJI",
  "Switch__label": "Switch__Switch__label___2S5bb",
  "Switch__icon--done": "Switch__Switch__icon--done___uauUi",
  "Switch__icon--close": "Switch__Switch__icon--close___2kKlc",
  "Switch__icon": "Switch__Switch__icon___18JVx",
  "Switch--checked": "Switch__Switch--checked___3CVQe",
  "Switch--disabled": "Switch__Switch--disabled___4AE9X",
  "Switch__label--disabled": "Switch__Switch__label--disabled___2C2Sn"
};
var Switch = function Switch(props) {
  var _classNames;

  return /*#__PURE__*/React__default.createElement("div", {
    className: classnames(styles$$['Switch__wrapper'], {}, props.className)
  }, /*#__PURE__*/React__default.createElement("input", {
    type: "checkbox",
    onClick: onToggle,
    onKeyUp: onKeyUp,
    defaultChecked: props.isChecked,
    disabled: props.isDisabled,
    className: classnames(styles$$['Switch'], (_classNames = {}, _defineProperty(_classNames, styles$$['Switch--checked'], props.isChecked), _defineProperty(_classNames, styles$$['Switch--disabled'], props.isDisabled), _defineProperty(_classNames, styles$$['Switch--small'], props.size === 'small'), _classNames)),
    id: props.id
  }), /*#__PURE__*/React__default.createElement("label", {
    className: classnames(styles$$['Switch__label'], _defineProperty({}, styles$$['Switch__label--disabled'], props.isDisabled)),
    htmlFor: props.id
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: "Done",
    color: "white",
    size: "tiny",
    className: classnames(styles$$['Switch__icon'], styles$$['Switch__icon--done'])
  }), props.labelText, /*#__PURE__*/React__default.createElement(Icon, {
    icon: "Close",
    color: "white",
    size: "tiny",
    className: classnames(styles$$['Switch__icon'], styles$$['Switch__icon--close'])
  })));

  function onToggle() {
    if (props.onToggle) {
      props.onToggle(!props.isChecked);
    }
  }

  function onKeyUp(e) {
    if (props.onToggle && e.key === 'Enter') {
      props.onToggle(!props.isChecked);
    }
  }
};

var _excluded$18 = ["children", "className", "position", "testId", "labelText"],
    _excluded2$1 = ["className", "children", "testId"];
var styles$10 = {
  "Workbench": "Workbench__Workbench___THi9K",
  "Workbench__header": "Workbench__Workbench__header___2wo2E",
  "Workbench__header-back": "Workbench__Workbench__header-back___3qZkM",
  "Workbench__header-back-button": "Workbench__Workbench__header-back-button___1G3-G",
  "Workbench__header-icon": "Workbench__Workbench__header-icon___1kJlL",
  "Workbench__header-title": "Workbench__Workbench__header-title___3xp7b",
  "Workbench__header-title__heading": "Workbench__Workbench__header-title__heading___1Pe5h",
  "Workbench__header-description": "Workbench__Workbench__header-description___1LHbc",
  "Workbench__header-description__text": "Workbench__Workbench__header-description__text___2xjBG",
  "Workbench__header-actions": "Workbench__Workbench__header-actions___mJoSR",
  "Workbench__content-wrapper": "Workbench__Workbench__content-wrapper___3yWKi",
  "Workbench__content": "Workbench__Workbench__content___1U8bV",
  "Workbench__content-inner": "Workbench__Workbench__content-inner___36_Hx",
  "Workbench__content-inner--default": "Workbench__Workbench__content-inner--default___2wRXn",
  "Workbench__content-inner--text": "Workbench__Workbench__content-inner--text___7nfTX",
  "Workbench__content-inner--full": "Workbench__Workbench__content-inner--full___3eP1v",
  "Workbench__sidebar": "Workbench__Workbench__sidebar___3i7n0",
  "Workbench__sidebar--left": "Workbench__Workbench__sidebar--left___67OKM",
  "Workbench__sidebar--right": "Workbench__Workbench__sidebar--right___3f4XO"
};
function WorkbenchHeader(_ref) {
  var actions = _ref.actions,
      className = _ref.className,
      description = _ref.description,
      icon = _ref.icon,
      onBack = _ref.onBack,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-workbench-header' : _ref$testId,
      title = _ref.title;
  return /*#__PURE__*/React__default.createElement("header", {
    className: classnames(styles$10['Workbench__header'], className),
    "data-test-id": testId
  }, onBack ? /*#__PURE__*/React__default.createElement("div", {
    className: styles$10['Workbench__header-back']
  }, /*#__PURE__*/React__default.createElement(IconButton, {
    onClick: function onClick() {
      if (typeof onBack === 'function') {
        onBack();
      }
    },
    testId: "workbench-back-btn",
    className: styles$10['Workbench__header-back-button'],
    label: "Back",
    buttonType: "muted",
    iconProps: {
      size: 'large',
      icon: 'ChevronLeft'
    }
  })) : null, icon ? /*#__PURE__*/React__default.createElement("div", {
    className: styles$10['Workbench__header-icon']
  }, icon) : null, title && /*#__PURE__*/React__default.createElement("div", {
    "data-test-id": "workbench-title",
    className: styles$10['Workbench__header-title']
  }, typeof title === 'string' ? /*#__PURE__*/React__default.createElement(Heading, {
    element: "h1",
    className: styles$10['Workbench__header-title__heading']
  }, title) : title), description && /*#__PURE__*/React__default.createElement("div", {
    "data-test-id": "workbench-description",
    className: styles$10['Workbench__header-description']
  }, typeof description === 'string' ? /*#__PURE__*/React__default.createElement("p", {
    className: styles$10['Workbench__header-description__text']
  }, description) : description), actions ? /*#__PURE__*/React__default.createElement("div", {
    className: styles$10['Workbench__header-actions']
  }, actions) : null);
}
WorkbenchHeader.displayName = 'Workbench.Header';
function WorkbenchSidebar(_ref2) {
  var _cn;

  var children = _ref2.children,
      className = _ref2.className,
      position = _ref2.position,
      _ref2$testId = _ref2.testId,
      testId = _ref2$testId === void 0 ? 'cf-ui-workbench-sidebar' : _ref2$testId,
      _ref2$labelText = _ref2.labelText,
      labelText = _ref2$labelText === void 0 ? position === 'right' ? 'Primary sidebar' : 'Secondary sidebar' : _ref2$labelText,
      otherProps = _objectWithoutProperties(_ref2, _excluded$18);

  return /*#__PURE__*/React__default.createElement("aside", _extends({
    "data-test-id": "".concat(testId).concat(position ? "-".concat(position) : ''),
    className: classnames(styles$10['Workbench__sidebar'], (_cn = {}, _defineProperty(_cn, styles$10['Workbench__sidebar--right'], position === 'right'), _defineProperty(_cn, styles$10['Workbench__sidebar--left'], position === 'left'), _cn), className),
    "aria-label": labelText
  }, otherProps), children);
}
function WorkbenchContent(_ref3) {
  var _cn2;

  var children = _ref3.children,
      className = _ref3.className,
      _ref3$testId = _ref3.testId,
      testId = _ref3$testId === void 0 ? 'cf-ui-workbench-content' : _ref3$testId,
      _ref3$type = _ref3.type,
      type = _ref3$type === void 0 ? 'default' : _ref3$type,
      _ref3$labelText = _ref3.labelText,
      labelText = _ref3$labelText === void 0 ? 'Main content' : _ref3$labelText,
      _ref3$id = _ref3.id,
      id = _ref3$id === void 0 ? 'main-content' : _ref3$id;
  return /*#__PURE__*/React__default.createElement("main", {
    className: classnames(styles$10['Workbench__content'], className),
    "data-test-id": testId,
    "aria-label": labelText,
    id: id
  }, /*#__PURE__*/React__default.createElement("div", {
    className: classnames(styles$10['Workbench__content-inner'], (_cn2 = {}, _defineProperty(_cn2, styles$10['Workbench__content-inner--default'], type === 'default'), _defineProperty(_cn2, styles$10['Workbench__content-inner--text'], type === 'text'), _defineProperty(_cn2, styles$10['Workbench__content-inner--full'], type === 'full'), _cn2))
  }, children));
}
function Workbench(_ref4) {
  var className = _ref4.className,
      children = _ref4.children,
      _ref4$testId = _ref4.testId,
      testId = _ref4$testId === void 0 ? 'cf-ui-workbench' : _ref4$testId,
      otherProps = _objectWithoutProperties(_ref4, _excluded2$1);

  var childrenArray = React__default.Children.toArray(children);
  var header = [];
  var other = [];
  childrenArray.forEach( // eslint-disable-next-line
  function (item) {
    if (item && item.type && item.type.displayName === 'Workbench.Header') {
      header.push(item);
    } else {
      other.push(item);
    }
  });
  var classNames = classnames(styles$10.Workbench, className);
  return /*#__PURE__*/React__default.createElement("div", _extends({}, otherProps, {
    className: classNames,
    "data-test-id": testId
  }), header, /*#__PURE__*/React__default.createElement("div", {
    className: styles$10['Workbench__content-wrapper']
  }, other));
}
Workbench.Header = WorkbenchHeader;
Workbench.Content = WorkbenchContent;
Workbench.Sidebar = WorkbenchSidebar;

var KEY_CODE = {
  ENTER: 13,
  ARROW_DOWN: 40,
  ARROW_UP: 38,
  TAB: 9
};

function ownKeys$8(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$8(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$8(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$8(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var styles$11 = {
  "autocompleteDropdown": "Autocomplete__autocompleteDropdown___2Wsf1",
  "autocompleteInput": "Autocomplete__autocompleteInput___1WZ9i",
  "autocompleteInputNegative": "Autocomplete__autocompleteInputNegative___19uHF",
  "inputIconButton": "Autocomplete__inputIconButton___1ZS6d",
  "validationMessage": "Autocomplete__validationMessage___1j781"
};
var TOGGLED_LIST = 'TOGGLED_LIST';
var NAVIGATED_ITEMS = 'NAVIGATED_ITEMS';
var QUERY_CHANGED = 'QUERY_CHANGED';
var ITEM_SELECTED = 'ITEM_SELECTED';
var Direction;

(function (Direction) {
  Direction[Direction["DOWN"] = 1] = "DOWN";
  Direction[Direction["UP"] = -1] = "UP";
})(Direction || (Direction = {}));

var reducer = function reducer(state, action) {
  switch (action.type) {
    case TOGGLED_LIST:
      return _objectSpread$8(_objectSpread$8({}, state), {}, {
        isOpen: action.payload ? action.payload : !state.isOpen,
        highlightedItemIndex: null
      });

    case NAVIGATED_ITEMS:
      return _objectSpread$8(_objectSpread$8({}, state), {}, {
        isOpen: true,
        highlightedItemIndex: action.payload
      });

    case QUERY_CHANGED:
      return _objectSpread$8(_objectSpread$8({}, state), {}, {
        highlightedItemIndex: null,
        isOpen: true,
        query: action.payload
      });

    case ITEM_SELECTED:
      return _objectSpread$8({}, action.payload);

    default:
      return state;
  }
};

var Autocomplete = function Autocomplete(_ref) {
  var _dropdownProps$isOpen;

  var children = _ref.children,
      _ref$items = _ref.items,
      items = _ref$items === void 0 ? [] : _ref$items,
      disabled = _ref.disabled,
      onChange = _ref.onChange,
      onQueryChange = _ref.onQueryChange,
      _ref$placeholder = _ref.placeholder,
      placeholder = _ref$placeholder === void 0 ? 'Search' : _ref$placeholder,
      _ref$selectedItem = _ref.selectedItem,
      selectedItem = _ref$selectedItem === void 0 ? '' : _ref$selectedItem,
      _ref$name = _ref.name,
      name = _ref$name === void 0 ? 'Search' : _ref$name,
      width = _ref.width,
      className = _ref.className,
      maxHeight = _ref.maxHeight,
      isLoading = _ref.isLoading,
      _ref$emptyListMessage = _ref.emptyListMessage,
      emptyListMessage = _ref$emptyListMessage === void 0 ? 'No options' : _ref$emptyListMessage,
      _ref$noMatchesMessage = _ref.noMatchesMessage,
      noMatchesMessage = _ref$noMatchesMessage === void 0 ? 'No matches' : _ref$noMatchesMessage,
      willClearQueryOnClose = _ref.willClearQueryOnClose,
      dropdownProps = _ref.dropdownProps,
      renderToggleElement = _ref.renderToggleElement,
      validationMessage = _ref.validationMessage;
  var listRef = useRef(null);
  var inputRef = useRef(null);
  var initialState = {
    isOpen: (_dropdownProps$isOpen = dropdownProps === null || dropdownProps === void 0 ? void 0 : dropdownProps.isOpen) !== null && _dropdownProps$isOpen !== void 0 ? _dropdownProps$isOpen : false,
    query: '',
    highlightedItemIndex: null
  };

  var _useReducer = useReducer(reducer, initialState),
      _useReducer2 = _slicedToArray(_useReducer, 2),
      _useReducer2$ = _useReducer2[0],
      isOpen = _useReducer2$.isOpen,
      query = _useReducer2$.query,
      highlightedItemIndex = _useReducer2$.highlightedItemIndex,
      dispatch = _useReducer2[1];

  var toggleList = function toggleList(isOpen) {
    dispatch({
      type: TOGGLED_LIST,
      payload: isOpen
    });
  };

  var selectItem = function selectItem(item) {
    dispatch({
      type: ITEM_SELECTED,
      payload: initialState
    });
    onQueryChange('');
    onChange(item);
  };

  var updateQuery = function updateQuery(value) {
    dispatch({
      type: QUERY_CHANGED,
      payload: value
    });
    onQueryChange(value);
  };

  var handleKeyDown = function handleKeyDown(event) {
    var isEnter = event.keyCode === KEY_CODE.ENTER;
    var isTab = event.keyCode === KEY_CODE.TAB || event.keyCode === KEY_CODE.TAB && event.shiftKey;
    var hasUserSelection = highlightedItemIndex !== null;
    var lastIndex = items.length ? items.length - 1 : 0;
    var direction = getNavigationDirection(event);

    if (isEnter) {
      event.preventDefault();
    }

    if (direction) {
      var newIndex = getNewIndex(highlightedItemIndex, direction, lastIndex);

      if (listRef.current) {
        scrollToItem(listRef.current, newIndex);
      }

      dispatch({
        type: NAVIGATED_ITEMS,
        payload: newIndex
      });
    } else if (isEnter && hasUserSelection) {
      var selected = items[highlightedItemIndex];
      selectItem(selected);
    } else if (isTab) {
      toggleList(false);
    }
  };

  var handleInputButtonClick = function handleInputButtonClick() {
    query ? updateQuery('') : toggleList();

    if (inputRef.current) {
      inputRef.current.focus();
    }
  };

  var options = useMemo(function () {
    return children(items).map(function (child, index) {
      return {
        child: child,
        option: items[index]
      };
    });
  }, [children, items]);
  var dropdownClassNames = classnames(styles$11.autocompleteDropdown, className);
  var autocompleteClassNames = classnames(styles$11.autocompleteInput, _defineProperty({}, styles$11.autocompleteInputNegative, validationMessage));

  function renderDefaultToggleElement(toggleProps) {
    return /*#__PURE__*/React__default.createElement("div", {
      className: autocompleteClassNames
    }, /*#__PURE__*/React__default.createElement(TextInput, {
      value: toggleProps.selectedItem || toggleProps.query,
      onChange: function onChange(e) {
        return toggleProps.onChange(e.target.value);
      },
      onFocus: toggleProps.onFocus,
      onKeyDown: toggleProps.onKeyDown,
      disabled: toggleProps.disabled,
      placeholder: toggleProps.placeholder,
      width: toggleProps.width,
      inputRef: toggleProps.inputRef,
      testId: "autocomplete.input",
      type: "search",
      autoComplete: "off",
      "aria-label": toggleProps.name
    }), /*#__PURE__*/React__default.createElement(IconButton, {
      className: styles$11.inputIconButton,
      tabIndex: -1,
      disabled: toggleProps.disabled,
      buttonType: "muted",
      iconProps: {
        icon: toggleProps.query ? 'Close' : 'ChevronDown'
      },
      onClick: toggleProps.onToggle,
      label: toggleProps.query ? 'Clear' : 'Show list'
    }));
  }

  var toggleProps = {
    name: name,
    query: query,
    selectedItem: selectedItem,
    disabled: disabled,
    placeholder: placeholder,
    width: width,
    onChange: updateQuery,
    onFocus: function onFocus() {
      return toggleList(true);
    },
    onKeyDown: handleKeyDown,
    onToggle: handleInputButtonClick,
    inputRef: inputRef
  };
  var nonClosingRefs = [];

  if (dropdownProps && dropdownProps.nonClosingRefs) {
    nonClosingRefs = dropdownProps.nonClosingRefs;
    delete dropdownProps.nonClosingRefs;
  }

  var renderToggleElementFunction = renderToggleElement || renderDefaultToggleElement;
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(Dropdown, _extends({
    nonClosingRefs: [inputRef].concat(_toConsumableArray(nonClosingRefs)),
    className: dropdownClassNames,
    onClose: function onClose() {
      willClearQueryOnClose && updateQuery('');
      dispatch({
        type: TOGGLED_LIST,
        payload: false
      });
    },
    toggleElement: renderToggleElementFunction(toggleProps),
    focusContainerOnOpen: false
  }, dropdownProps, {
    isOpen: isOpen
  }), /*#__PURE__*/React__default.createElement(DropdownList, {
    testId: "autocomplete.dropdown-list",
    maxHeight: maxHeight
  }, /*#__PURE__*/React__default.createElement("div", {
    ref: listRef
  }, !options.length && !isLoading && /*#__PURE__*/React__default.createElement(DropdownListItem, {
    isDisabled: true,
    testId: "autocomplete.empty-list-message"
  }, query ? noMatchesMessage : emptyListMessage), isLoading ? /*#__PURE__*/React__default.createElement(OptionSkeleton, null) : options.map(function (_ref2, index) {
    var child = _ref2.child,
        option = _ref2.option;
    var isActive = index === highlightedItemIndex;
    return /*#__PURE__*/React__default.createElement(DropdownListItem, {
      key: index,
      isActive: isActive,
      "data-selected": isActive // this should be coming from the component library
      ,
      onClick: function onClick() {
        return selectItem(option);
      },
      testId: "autocomplete.dropdown-list-item"
    }, child);
  })))), validationMessage && /*#__PURE__*/React__default.createElement(ValidationMessage, {
    className: styles$11.validationMessage
  }, validationMessage));
};

function OptionSkeleton() {
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(DropdownListItem, null, /*#__PURE__*/React__default.createElement(SkeletonContainer, {
    svgWidth: "200",
    svgHeight: 20
  }, /*#__PURE__*/React__default.createElement(SkeletonBodyText, {
    numberOfLines: 1
  }))), /*#__PURE__*/React__default.createElement(DropdownListItem, null, /*#__PURE__*/React__default.createElement(SkeletonContainer, {
    svgWidth: "100",
    svgHeight: 20
  }, /*#__PURE__*/React__default.createElement(SkeletonBodyText, {
    numberOfLines: 1
  }))), /*#__PURE__*/React__default.createElement(DropdownListItem, null, /*#__PURE__*/React__default.createElement(SkeletonContainer, {
    svgWidth: "150",
    svgHeight: 20
  }, /*#__PURE__*/React__default.createElement(SkeletonBodyText, {
    numberOfLines: 1
  }))));
}

function getNavigationDirection(event) {
  if (event.keyCode === KEY_CODE.ARROW_DOWN) {
    return Direction.DOWN;
  }

  if (event.keyCode === KEY_CODE.ARROW_UP) {
    return Direction.UP;
  }

  return null;
} // Get next navigation index based on current index and navigation direction


function getNewIndex(currentIndex, direction, lastIndex) {
  var isDown = direction === Direction.DOWN;
  var isUp = direction === Direction.UP;
  var hasNoUserSelection = currentIndex === null;
  var isLast = currentIndex === lastIndex;
  var isFirst = currentIndex === 0;

  if (isDown && (hasNoUserSelection || isLast)) {
    return 0;
  }

  if (isUp && (hasNoUserSelection || isFirst)) {
    return lastIndex;
  }

  return currentIndex + direction;
} // Find the DOM node at index and scroll if necessary


function scrollToItem(list, index) {
  if (!list || !list.children.length) {
    return;
  }

  var item = list.children[index];
  item.scrollIntoView({
    block: 'nearest'
  });
}

var _excluded$19 = ["alignContent", "children", "className", "columnGap", "columns", "flow", "inline", "justifyContent", "rowGap", "rows", "style", "testId"];

function ownKeys$9(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$9(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$9(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$9(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var styles$12 = {
  "Grid": "Grid__Grid___2_rpl",
  "Grid__inline": "Grid__Grid__inline___2QOe3"
};
var Grid = function Grid(_ref) {
  var alignContent = _ref.alignContent,
      children = _ref.children,
      className = _ref.className,
      _ref$columnGap = _ref.columnGap,
      columnGap = _ref$columnGap === void 0 ? 'spacingM' : _ref$columnGap,
      _ref$columns = _ref.columns,
      columns = _ref$columns === void 0 ? 'auto' : _ref$columns,
      flow = _ref.flow,
      inline = _ref.inline,
      justifyContent = _ref.justifyContent,
      _ref$rowGap = _ref.rowGap,
      rowGap = _ref$rowGap === void 0 ? 'none' : _ref$rowGap,
      _ref$rows = _ref.rows,
      rows = _ref$rows === void 0 ? 'auto' : _ref$rows,
      style = _ref.style,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-grid' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$19);

  var handleGridTemplate = function handleGridTemplate(value) {
    if (typeof value === 'number') {
      return "repeat(".concat(value, ", minmax(0, 1fr)");
    }

    return value;
  };

  var handleGap = function handleGap(value) {
    if (value === 'none') {
      return 0;
    } else {
      return tokens[value];
    }
  };

  var inlineStyle = _objectSpread$9({
    gridTemplateColumns: handleGridTemplate(columns),
    gridTemplateRows: handleGridTemplate(rows),
    flow: flow,
    justifyContent: justifyContent,
    alignContent: alignContent,
    columnGap: columnGap && handleGap(columnGap),
    rowGap: rowGap && handleGap(rowGap)
  }, style);

  var classNames = classnames(styles$12.Grid, className, _defineProperty({}, styles$12.Grid__inline, inline));
  return /*#__PURE__*/React__default.createElement("div", _extends({}, otherProps, {
    style: inlineStyle,
    className: classNames,
    "data-test-id": testId
  }), children);
};

var _excluded$1a = ["children", "className", "columnStart", "columnEnd", "rowStart", "rowEnd", "area", "order", "htmlTag"];

function ownKeys$a(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$a(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$a(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$a(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var GridItem = function GridItem(props) {
  var children = props.children,
      className = props.className,
      columnStart = props.columnStart,
      columnEnd = props.columnEnd,
      rowStart = props.rowStart,
      rowEnd = props.rowEnd,
      area = props.area,
      order = props.order,
      _props$htmlTag = props.htmlTag,
      Container = _props$htmlTag === void 0 ? 'div' : _props$htmlTag,
      otherProps = _objectWithoutProperties(props, _excluded$1a);

  var calculatedArea = area ? area : [rowStart || 'auto', columnStart || 'auto', rowEnd || 'auto', columnEnd || 'auto'].join(' / ');

  var style = _objectSpread$a({
    gridArea: calculatedArea,
    order: order
  }, props.style);

  return /*#__PURE__*/React__default.createElement(Container, _extends({}, otherProps, {
    className: className,
    style: style
  }), children);
};

var _excluded$1b = ["alignItems", "alignSelf", "children", "className", "flexDirection", "flexGrow", "flexWrap", "fullHeight", "fullWidth", "htmlTag", "inlineFlex", "justifyContent", "justifyItems", "justifySelf", "margin", "marginBottom", "marginLeft", "marginRight", "marginTop", "noShrink", "padding", "paddingBottom", "paddingLeft", "paddingRight", "paddingTop", "style", "testId"];

function ownKeys$b(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$b(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$b(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$b(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var styles$13 = {
  "Flex": "Flex__Flex___Cpju1",
  "Flex__inline": "Flex__Flex__inline___39eAP",
  "Flex__fullWidth": "Flex__Flex__fullWidth___2JBEp",
  "Flex__fullHeight": "Flex__Flex__fullHeight___xgjho",
  "Flex__noShrink": "Flex__Flex__noShrink___2H1Bm"
};

var handleSpacing = function handleSpacing(value) {
  return value === 'none' ? 0 : tokens[value];
};

var Flex = function Flex(_ref) {
  var _cn;

  var alignItems = _ref.alignItems,
      alignSelf = _ref.alignSelf,
      children = _ref.children,
      className = _ref.className,
      flexDirection = _ref.flexDirection,
      flexGrow = _ref.flexGrow,
      flexWrap = _ref.flexWrap,
      fullHeight = _ref.fullHeight,
      fullWidth = _ref.fullWidth,
      _ref$htmlTag = _ref.htmlTag,
      Container = _ref$htmlTag === void 0 ? 'div' : _ref$htmlTag,
      inlineFlex = _ref.inlineFlex,
      justifyContent = _ref.justifyContent,
      justifyItems = _ref.justifyItems,
      justifySelf = _ref.justifySelf,
      margin = _ref.margin,
      marginBottom = _ref.marginBottom,
      marginLeft = _ref.marginLeft,
      marginRight = _ref.marginRight,
      marginTop = _ref.marginTop,
      noShrink = _ref.noShrink,
      padding = _ref.padding,
      paddingBottom = _ref.paddingBottom,
      paddingLeft = _ref.paddingLeft,
      paddingRight = _ref.paddingRight,
      paddingTop = _ref.paddingTop,
      style = _ref.style,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-flex' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$1b);

  var fullMargins = {
    margin: margin && handleSpacing(margin)
  };
  var sidesMargins = {
    marginTop: marginTop && handleSpacing(marginTop),
    marginRight: marginRight && handleSpacing(marginRight),
    marginBottom: marginBottom && handleSpacing(marginBottom),
    marginLeft: marginLeft && handleSpacing(marginLeft)
  };
  var fullPaddings = {
    padding: padding && handleSpacing(padding)
  };
  var sidesPaddings = {
    paddingTop: paddingTop && handleSpacing(paddingTop),
    paddingRight: paddingRight && handleSpacing(paddingRight),
    paddingBottom: paddingBottom && handleSpacing(paddingBottom),
    paddingLeft: paddingLeft && handleSpacing(paddingLeft)
  };
  var marginResult = margin ? fullMargins : sidesMargins;
  var paddingsResult = padding ? fullPaddings : sidesPaddings;
  var inlineStyle = {
    flexDirection: flexDirection,
    justifyContent: justifyContent,
    justifyItems: justifyItems,
    justifySelf: justifySelf,
    alignItems: alignItems,
    alignSelf: alignSelf,
    flexWrap: flexWrap,
    flexGrow: flexGrow
  };
  var classNames = classnames(styles$13.Flex, className, (_cn = {}, _defineProperty(_cn, styles$13.Flex__inline, inlineFlex), _defineProperty(_cn, styles$13.Flex__fullWidth, fullWidth), _defineProperty(_cn, styles$13.Flex__fullHeight, fullHeight), _defineProperty(_cn, styles$13.Flex__noShrink, noShrink), _cn));
  return /*#__PURE__*/React__default.createElement(Container, _extends({}, otherProps, {
    style: _objectSpread$b(_objectSpread$b(_objectSpread$b(_objectSpread$b({}, inlineStyle), marginResult), paddingsResult), style),
    className: classNames,
    "data-test-id": testId
  }), children);
};

var _excluded$1c = ["align", "children", "className", "testId"];
var styles$14 = {
  "Accordion": "Accordion__Accordion___2vsT6",
  "AccordionItem": "Accordion__AccordionItem___11w9U",
  "Accordion--start": "Accordion__Accordion--start___2hNCQ",
  "AccordionHeader": "Accordion__AccordionHeader___3k1Uh",
  "Accordion--end": "Accordion__Accordion--end___1WaCd",
  "AccordionHeader--expanded": "Accordion__AccordionHeader--expanded___Zmyij",
  "AccordionHeader__icon": "Accordion__AccordionHeader__icon___1pUm4"
};
var Accordion = function Accordion(_ref) {
  var _ref$align = _ref.align,
      align = _ref$align === void 0 ? 'end' : _ref$align,
      children = _ref.children,
      className = _ref.className,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-accordion' : _ref$testId,
      otherProps = _objectWithoutProperties(_ref, _excluded$1c);

  var classNames = classnames(styles$14.Accordion, className, _defineProperty({}, styles$14["Accordion--".concat(align)], align));
  return /*#__PURE__*/React__default.createElement("ul", _extends({
    className: classNames,
    "data-test-id": testId
  }, otherProps), children);
};

var styles$15 = {
  "Accordion": "Accordion__Accordion___2vsT6",
  "AccordionItem": "Accordion__AccordionItem___11w9U",
  "Accordion--start": "Accordion__Accordion--start___2hNCQ",
  "AccordionHeader": "Accordion__AccordionHeader___3k1Uh",
  "Accordion--end": "Accordion__Accordion--end___1WaCd",
  "AccordionHeader--expanded": "Accordion__AccordionHeader--expanded___Zmyij",
  "AccordionHeader__icon": "Accordion__AccordionHeader__icon___1pUm4"
};
var AccordionHeader = function AccordionHeader(_ref) {
  var children = _ref.children,
      handleClick = _ref.handleClick,
      _ref$isExpanded = _ref.isExpanded,
      isExpanded = _ref$isExpanded === void 0 ? false : _ref$isExpanded,
      ariaId = _ref.ariaId,
      _ref$element = _ref.element,
      element = _ref$element === void 0 ? 'h2' : _ref$element;
  var classNames = classnames(styles$15.AccordionHeader, _defineProperty({}, styles$15['AccordionHeader--expanded'], isExpanded));
  return /*#__PURE__*/React__default.createElement(Subheading, {
    element: element
  }, /*#__PURE__*/React__default.createElement("button", {
    type: "button",
    "aria-expanded": isExpanded,
    "aria-controls": "accordion-panel--".concat(ariaId),
    id: "accordion--".concat(ariaId),
    className: classNames,
    onClick: handleClick
  }, /*#__PURE__*/React__default.createElement(Icon, {
    icon: "ChevronDownTrimmed",
    color: "secondary",
    className: styles$15.AccordionHeader__icon
  }), children));
};

/**
 * This util was inspired by Reach UI package called auto-id
 * https://github.com/reach/reach-ui/blob/86a046f54d53b6420e392b3fa56dd991d9d4e458/packages/auto-id/src/index.ts
 *
 * What is this hook all about?
 * Sometimes we need unique but sequential IDs.
 * One example is that some Accessibility standards rely on the id of some elements.
 * This hook will make sure that we generate a sequence of IDs when rendering a group of components.
 *
 * Out of scope for this solution
 * This solution will break in server-rendered apps because there will be a mismatch between the server id and the client id.
 * But this solution can be extended to cover that, a good example of how to solve that is ReachUI solution already mentioned on the top.
 */

var initialId = 0;
var useId = function useId() {
  var _useState = useState(initialId),
      _useState2 = _slicedToArray(_useState, 2),
      id = _useState2[0],
      setId = _useState2[1];

  useLayoutEffect(function () {
    setId(++initialId); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  return id;
};

var styles$16 = {
  "AccordionPanel": "AccordionPanel__AccordionPanel___V6i9q",
  "AccordionPanel__content": "AccordionPanel__AccordionPanel__content___2d5Uj"
};
var AccordionPanel = function AccordionPanel(_ref) {
  var children = _ref.children,
      _ref$isExpanded = _ref.isExpanded,
      isExpanded = _ref$isExpanded === void 0 ? false : _ref$isExpanded,
      ariaId = _ref.ariaId;
  var panelEl = useRef(null);

  var getPanelContentHeight = function getPanelContentHeight() {
    var current = panelEl.current;

    if (!current) {
      // to keep the function return type as string only and
      // not overcomplicate things with non-nullable checks
      return '0px';
    }

    return "".concat(current.scrollHeight / parseInt(tokens.fontBaseDefault, 10), "rem"); // converting height pixels into rem
  };

  useLayoutEffect(function () {
    var current = panelEl.current;

    var handleTransitionEnd = function handleTransitionEnd() {
      if (current) {
        current.style.height = 'auto';
      }
    };

    if (current) {
      if (isExpanded) {
        current.addEventListener('transitionend', handleTransitionEnd);
        requestAnimationFrame(function () {
          current.style.height = '0px';
          requestAnimationFrame(function () {
            current.style.height = getPanelContentHeight();
          });
        });
      } else {
        requestAnimationFrame(function () {
          current.style.height = getPanelContentHeight();
          requestAnimationFrame(function () {
            current.style.height = '0px';
          });
        });
      }
    }

    return function () {
      if (current) {
        current.removeEventListener('transitionend', handleTransitionEnd);
      }
    };
  }, [isExpanded]);
  return /*#__PURE__*/React__default.createElement("div", {
    id: "accordion-panel--".concat(ariaId),
    role: "region",
    "aria-labelledby": "accordion--".concat(ariaId),
    "aria-hidden": !isExpanded,
    className: classnames(styles$16.AccordionPanel, _defineProperty({}, styles$16['AccordionPanel--expanded'], isExpanded)),
    ref: panelEl
  }, /*#__PURE__*/React__default.createElement("div", {
    className: classnames(styles$16['AccordionPanel__content'])
  }, children));
};

var styles$17 = {
  "Accordion": "Accordion__Accordion___2vsT6",
  "AccordionItem": "Accordion__AccordionItem___11w9U",
  "Accordion--start": "Accordion__Accordion--start___2hNCQ",
  "AccordionHeader": "Accordion__AccordionHeader___3k1Uh",
  "Accordion--end": "Accordion__Accordion--end___1WaCd",
  "AccordionHeader--expanded": "Accordion__AccordionHeader--expanded___Zmyij",
  "AccordionHeader__icon": "Accordion__AccordionHeader__icon___1pUm4"
};
var AccordionItem = function AccordionItem(_ref) {
  var _ref$title = _ref.title,
      title = _ref$title === void 0 ? 'Accordion Title' : _ref$title,
      _ref$titleElement = _ref.titleElement,
      titleElement = _ref$titleElement === void 0 ? 'h2' : _ref$titleElement,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-accordion-item' : _ref$testId,
      onExpand = _ref.onExpand,
      onCollapse = _ref.onCollapse,
      children = _ref.children;
  var id = useId();

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isExpanded = _useState2[0],
      setIsExpanded = _useState2[1];

  var onClick = function onClick() {
    if (!isExpanded && onExpand) {
      onExpand();
    }

    if (isExpanded && onCollapse) {
      onCollapse();
    }

    setIsExpanded(!isExpanded);
  };

  return /*#__PURE__*/React__default.createElement("li", {
    className: styles$17.AccordionItem,
    "data-test-id": "".concat(testId, "-").concat(id)
  }, /*#__PURE__*/React__default.createElement(AccordionHeader, {
    handleClick: onClick,
    isExpanded: isExpanded,
    element: titleElement,
    ariaId: id
  }, title), /*#__PURE__*/React__default.createElement(AccordionPanel, {
    ariaId: id,
    isExpanded: isExpanded
  }, children));
};

export { Accordion, AccordionHeader, AccordionItem, AccordionPanel, Asset, AssetCard, AssetIcon, Autocomplete, Button, Card, CardActions, CardDragHandle, Checkbox, CheckboxField, ControlledInput, ControlledInputField, CopyButton, DateTime, DisplayText, Dropdown, DropdownList, DropdownListItem, EditorToolbar, EditorToolbarButton, EditorToolbarDivider, EmptyState, EntityList, EntityListItem, EntryCard, FieldGroup, Flex, Form, FormLabel, Grid, GridItem, Heading, HelpText, Icon, IconButton, Illustration, InViewport, InlineEntryCard, List, ListItem, Modal, ModalConfirm, ModalContent, ModalControls, ModalHeader, ModalLauncher, Note, Notification, NotificationItem, NotificationItemContainer, NotificationsManager, Option, Paragraph, Pill, RadioButton, RadioButtonField, RelativeDate, SectionHeading, Select, SelectField, SkeletonBodyText, SkeletonContainer, SkeletonDisplayText, SkeletonImage, SkeletonRow, SkeletonText, Spinner, Subheading, Switch, Tab, TabFocusTrap, TabPanel, Table, TableBody, TableCell, TableHead, TableRow, TableSortingLabel, Tabs, Tag, TextField, TextInput, TextLink, Textarea, ToggleButton, Tooltip, Typography, ValidationMessage, Workbench, WorkbenchContent, WorkbenchHeader, WorkbenchSidebar, dateUtils as datetime, isAssetType, isIllustrationType };
