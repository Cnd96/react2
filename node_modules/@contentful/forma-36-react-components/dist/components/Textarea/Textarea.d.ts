import { FocusEventHandler, ChangeEventHandler, KeyboardEventHandler, RefObject } from 'react';
export interface TextareaProps {
    name?: string;
    id?: string;
    testId?: string;
    placeholder?: string;
    className?: string;
    width?: 'small' | 'medium' | 'large' | 'full';
    maxLength?: number;
    required?: boolean;
    disabled?: boolean;
    value?: string;
    resize?: 'none' | 'both' | 'horizontal' | 'vertical';
    rows?: number;
    error?: boolean;
    onChange?: ChangeEventHandler<HTMLTextAreaElement>;
    onBlur?: FocusEventHandler<HTMLTextAreaElement>;
    onFocus?: FocusEventHandler<HTMLTextAreaElement>;
    onKeyPress?: KeyboardEventHandler<HTMLTextAreaElement>;
    onKeyDown?: KeyboardEventHandler<HTMLTextAreaElement>;
    onKeyUp?: KeyboardEventHandler<HTMLTextAreaElement>;
    willBlurOnEsc?: boolean;
    textareaRef?: RefObject<HTMLTextAreaElement>;
}
export declare const Textarea: ({ className, disabled, error, id, maxLength, name, onBlur, onChange, onKeyDown, placeholder, required, resize, rows, testId, textareaRef, value, width, willBlurOnEsc, ...otherProps }: TextareaProps) => JSX.Element;
