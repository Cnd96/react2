"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Textarea = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _excluded = ["className", "disabled", "error", "id", "maxLength", "name", "onBlur", "onChange", "onKeyDown", "placeholder", "required", "resize", "rows", "testId", "textareaRef", "value", "width", "willBlurOnEsc"];
var styles = {
  "Textarea": "Textarea__Textarea___qcph7",
  "Textarea__textarea": "Textarea__Textarea__textarea___30c64 a11y__focus-border--default___60AXp",
  "Textarea--small": "Textarea__Textarea--small___3duGT",
  "Textarea--medium": "Textarea__Textarea--medium___2ylrR",
  "Textarea--large": "Textarea__Textarea--large___2jIb0",
  "Textarea--full": "Textarea__Textarea--full___1OW4s",
  "Textarea--disabled": "Textarea__Textarea--disabled___2tLQn",
  "Textarea--negative": "Textarea__Textarea--negative___1RyoO",
  "Textarea--resize-none": "Textarea__Textarea--resize-none___3TaC5",
  "Textarea--resize-both": "Textarea__Textarea--resize-both___3n7KA",
  "Textarea--resize-horizontal": "Textarea__Textarea--resize-horizontal___3U9t-",
  "Textarea--resize-vertical": "Textarea__Textarea--resize-vertical___1J6l-"
};

var Textarea = function Textarea(_ref) {
  var _cn;

  var className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      error = _ref.error,
      id = _ref.id,
      maxLength = _ref.maxLength,
      name = _ref.name,
      onBlur = _ref.onBlur,
      onChange = _ref.onChange,
      onKeyDown = _ref.onKeyDown,
      placeholder = _ref.placeholder,
      _ref$required = _ref.required,
      required = _ref$required === void 0 ? false : _ref$required,
      _ref$resize = _ref.resize,
      resize = _ref$resize === void 0 ? 'vertical' : _ref$resize,
      rows = _ref.rows,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-textarea' : _ref$testId,
      textareaRef = _ref.textareaRef,
      value = _ref.value,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? 'full' : _ref$width,
      _ref$willBlurOnEsc = _ref.willBlurOnEsc,
      willBlurOnEsc = _ref$willBlurOnEsc === void 0 ? true : _ref$willBlurOnEsc,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);

  var _useState = (0, _react.useState)(value),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      valueState = _useState2[0],
      setValueState = _useState2[1];

  (0, _react.useEffect)(function () {
    setValueState(value);
  }, [value]);
  var handleKeyDown = (0, _react.useCallback)(function (e) {
    e.persist();

    if (onKeyDown) {
      onKeyDown(e);
    }

    if (e.nativeEvent.code === 'Escape' && willBlurOnEsc) {
      e.currentTarget.blur();
    }
  }, [willBlurOnEsc, onKeyDown]);
  var handleChange = (0, _react.useCallback)(function (e) {
    e.persist();
    setValueState(e.target.value);

    if (onChange) {
      onChange(e);
    }
  }, [onChange]);
  var widthClass = "Textarea--".concat(width);
  var resizeClass = "Textarea--resize-".concat(resize);
  var classNames = (0, _classnames["default"])(styles['Textarea'], className, styles[widthClass], styles[resizeClass], (_cn = {}, (0, _defineProperty2["default"])(_cn, styles['Textarea--disabled'], disabled), (0, _defineProperty2["default"])(_cn, styles['Textarea--negative'], error), _cn));
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: classNames
  }, /*#__PURE__*/_react["default"].createElement("textarea", (0, _extends2["default"])({
    "data-test-id": testId,
    "aria-label": name,
    className: styles['Textarea__textarea'],
    id: id,
    rows: rows,
    onBlur: onBlur,
    disabled: disabled,
    placeholder: placeholder,
    name: name,
    onChange: handleChange,
    maxLength: maxLength,
    value: disabled ? value : valueState,
    onKeyDown: handleKeyDown,
    required: required,
    ref: textareaRef
  }, otherProps)));
};

exports.Textarea = Textarea;