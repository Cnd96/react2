"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AccordionPanel = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _forma36Tokens = _interopRequireDefault(require("@contentful/forma-36-tokens"));

var styles = {
  "AccordionPanel": "AccordionPanel__AccordionPanel___V6i9q",
  "AccordionPanel__content": "AccordionPanel__AccordionPanel__content___2d5Uj"
};

var AccordionPanel = function AccordionPanel(_ref) {
  var children = _ref.children,
      _ref$isExpanded = _ref.isExpanded,
      isExpanded = _ref$isExpanded === void 0 ? false : _ref$isExpanded,
      ariaId = _ref.ariaId;
  var panelEl = (0, _react.useRef)(null);

  var getPanelContentHeight = function getPanelContentHeight() {
    var current = panelEl.current;

    if (!current) {
      // to keep the function return type as string only and
      // not overcomplicate things with non-nullable checks
      return '0px';
    }

    return "".concat(current.scrollHeight / parseInt(_forma36Tokens["default"].fontBaseDefault, 10), "rem"); // converting height pixels into rem
  };

  (0, _react.useLayoutEffect)(function () {
    var current = panelEl.current;

    var handleTransitionEnd = function handleTransitionEnd() {
      if (current) {
        current.style.height = 'auto';
      }
    };

    if (current) {
      if (isExpanded) {
        current.addEventListener('transitionend', handleTransitionEnd);
        requestAnimationFrame(function () {
          current.style.height = '0px';
          requestAnimationFrame(function () {
            current.style.height = getPanelContentHeight();
          });
        });
      } else {
        requestAnimationFrame(function () {
          current.style.height = getPanelContentHeight();
          requestAnimationFrame(function () {
            current.style.height = '0px';
          });
        });
      }
    }

    return function () {
      if (current) {
        current.removeEventListener('transitionend', handleTransitionEnd);
      }
    };
  }, [isExpanded]);
  return /*#__PURE__*/_react["default"].createElement("div", {
    id: "accordion-panel--".concat(ariaId),
    role: "region",
    "aria-labelledby": "accordion--".concat(ariaId),
    "aria-hidden": !isExpanded,
    className: (0, _classnames["default"])(styles.AccordionPanel, (0, _defineProperty2["default"])({}, styles['AccordionPanel--expanded'], isExpanded)),
    ref: panelEl
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _classnames["default"])(styles['AccordionPanel__content'])
  }, children));
};

exports.AccordionPanel = AccordionPanel;