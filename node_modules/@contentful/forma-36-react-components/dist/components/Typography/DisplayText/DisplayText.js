"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DisplayText = DisplayText;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Typography = require("../Typography/Typography");

var _excluded = ["className", "children", "testId", "element", "size"];
var styles = {
  "DisplayText": "DisplayText__DisplayText___172Lq",
  "DisplayText--default": "DisplayText__DisplayText--default___25iJC",
  "DisplayText--large": "DisplayText__DisplayText--large___2QHQE",
  "DisplayText--huge": "DisplayText__DisplayText--huge___2vcKx"
};

function DisplayText(_ref) {
  var className = _ref.className,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-display-text' : _ref$testId,
      _ref$element = _ref.element,
      element = _ref$element === void 0 ? 'h1' : _ref$element,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'default' : _ref$size,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  var classNames = (0, _classnames["default"])(styles['DisplayText'], className, (0, _defineProperty2["default"])({}, styles["DisplayText--".concat(size)], size));
  var Element = element; // eslint-disable-line @typescript-eslint/no-non-null-assertion

  return /*#__PURE__*/_react["default"].createElement(_Typography.TypographyContext.Consumer, null, function (value) {
    var contextSize = size === 'large' ? value['displayTextLarge'] : value['displayText'];
    return /*#__PURE__*/_react["default"].createElement(Element, (0, _extends2["default"])({
      className: (0, _classnames["default"])(classNames, [contextSize && "f36-margin-bottom--".concat(contextSize.spacing)]),
      "data-test-id": testId
    }, otherProps), children);
  });
}