"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Note = Note;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Icon = require("../Icon");

var _constants = require("../Icon/constants");

var _IconButton = require("../IconButton");

var styles = {
  "Note": "Note__Note___2eSKN",
  "Note__title": "Note__Note__title___2nwpx",
  "Note__content": "Note__Note__content___H1pf-",
  "Note--primary": "Note__Note--primary___-8-7D",
  "Note--negative": "Note__Note--negative___3fkwL",
  "Note--positive": "Note__Note--positive___3Omoh",
  "Note--warning": "Note__Note--warning___3X53I",
  "Note--hasCloseButton": "Note__Note--hasCloseButton___QFi6x",
  "Note__info": "Note__Note__info___2m_-K",
  "Note__icon": "Note__Note__icon___20RqC",
  "Note__dismiss": "Note__Note__dismiss___1BXR6"
};
var Icons = {
  primary: _constants.iconName.InfoCircle,
  positive: _constants.iconName.CheckCircle,
  negative: _constants.iconName.ErrorCircle,
  warning: _constants.iconName.Warning
};

function Note(_ref) {
  var _classNames;

  var children = _ref.children,
      className = _ref.className,
      hasCloseButton = _ref.hasCloseButton,
      _ref$noteType = _ref.noteType,
      noteType = _ref$noteType === void 0 ? 'primary' : _ref$noteType,
      onClose = _ref.onClose,
      style = _ref.style,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-note' : _ref$testId,
      title = _ref.title;
  var icon = Icons[noteType]; // eslint-disable-line @typescript-eslint/no-non-null-assertion

  if (!icon) {
    throw new Error("Intent ".concat(noteType, " is not supported in Note component."));
  }

  return /*#__PURE__*/_react["default"].createElement("div", {
    style: style,
    className: (0, _classnames["default"])(styles.Note, className, (_classNames = {}, (0, _defineProperty2["default"])(_classNames, styles["Note--".concat(noteType)], noteType), (0, _defineProperty2["default"])(_classNames, styles['Note--hasCloseButton'], hasCloseButton), _classNames)),
    "data-test-id": testId
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: styles.Note__icon
  }, /*#__PURE__*/_react["default"].createElement(_Icon.Icon, {
    icon: icon,
    color: noteType,
    size: title ? 'medium' : 'small'
  })), /*#__PURE__*/_react["default"].createElement("div", {
    className: styles.Note__info
  }, title && /*#__PURE__*/_react["default"].createElement("div", {
    className: styles.Note__title
  }, title), /*#__PURE__*/_react["default"].createElement("div", {
    className: styles.Note__content
  }, children)), hasCloseButton && /*#__PURE__*/_react["default"].createElement(_IconButton.IconButton, {
    buttonType: "secondary",
    iconProps: {
      icon: 'Close'
    },
    onClick: function onClick() {
      if (onClose) {
        onClose();
      }
    },
    testId: "cf-ui-note-close",
    label: "Dismiss",
    className: styles.Note__dismiss
  }));
}