"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Button = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _reactTransitionGroup = require("react-transition-group");

var _Icon = require("../Icon");

var _TabFocusTrap = require("../TabFocusTrap");

var _Spinner = require("../Spinner");

var _excluded = ["buttonType", "children", "className", "disabled", "href", "rel", "target", "icon", "indicateDropdown", "isActive", "isFullWidth", "loading", "onBlur", "onClick", "size", "testId", "type"];
var styles = {
  "Button": "Button__Button___1ZfFj",
  "Button--disabled": "Button__Button--disabled___1E20M",
  "Button__icon": "Button__Button__icon___2YX5-",
  "Button__dropdown-icon": "Button__Button__dropdown-icon___2gP3I",
  "Button--full-width": "Button__Button--full-width___3Fmpo",
  "Button--muted": "Button__Button--muted___2Wair",
  "Button--is-active": "Button__Button--is-active___iPvhW",
  "Button--naked": "Button__Button--naked___mB6LS",
  "Button--primary": "Button__Button--primary___JImeO",
  "Button__label": "Button__Button__label___3tcOj",
  "Button--positive": "Button__Button--positive___1t6w1",
  "Button--negative": "Button__Button--negative___22jwE",
  "Button--warning": "Button__Button--warning___2xMa4",
  "Button__inner-wrapper": "Button__Button__inner-wrapper___3qrNC",
  "Button--small": "Button__Button--small___3yyrk",
  "Button--large": "Button__Button--large___1PYrl",
  "Button--spinner-wrapper": "Button__Button--spinner-wrapper___3m7zk",
  "Button--spinner--enter": "Button__Button--spinner--enter___1qgg7",
  "Button--spinner--enter-active": "Button__Button--spinner--enter-active___1IZMh",
  "Button--spinner--exit": "Button__Button--spinner--exit___2RUI-",
  "Button--spinner--exit-active": "Button__Button--spinner--exit-active___3TjZf"
};

var Button = function Button(_ref) {
  var _cn;

  var _ref$buttonType = _ref.buttonType,
      buttonType = _ref$buttonType === void 0 ? 'primary' : _ref$buttonType,
      children = _ref.children,
      className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      href = _ref.href,
      rel = _ref.rel,
      target = _ref.target,
      icon = _ref.icon,
      _ref$indicateDropdown = _ref.indicateDropdown,
      indicateDropdown = _ref$indicateDropdown === void 0 ? false : _ref$indicateDropdown,
      isActive = _ref.isActive,
      _ref$isFullWidth = _ref.isFullWidth,
      isFullWidth = _ref$isFullWidth === void 0 ? false : _ref$isFullWidth,
      _ref$loading = _ref.loading,
      loading = _ref$loading === void 0 ? false : _ref$loading,
      _onBlur = _ref.onBlur,
      _onClick = _ref.onClick,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'medium' : _ref$size,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-button' : _ref$testId,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? href ? undefined : 'button' : _ref$type,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  var classNames = (0, _classnames["default"])(styles.Button, className, styles["Button--".concat(buttonType)], styles["Button--".concat(size)], (_cn = {}, (0, _defineProperty2["default"])(_cn, styles['Button--disabled'], disabled), (0, _defineProperty2["default"])(_cn, styles['Button--full-width'], isFullWidth), (0, _defineProperty2["default"])(_cn, styles['Button--is-active'], isActive), _cn));
  var iconColor = buttonType === 'muted' || buttonType === 'warning' || buttonType === 'naked' ? 'secondary' : 'white';
  var Element = href ? 'a' : 'button';
  return /*#__PURE__*/_react["default"].createElement(Element, (0, _extends2["default"])({
    onBlur: function onBlur(e) {
      e.persist();

      if (_onBlur && !disabled) {
        _onBlur(e);
      }
    },
    onClick: function onClick(e) {
      e.persist();

      if (_onClick && !disabled && !loading) {
        _onClick(e);
      }
    },
    "data-test-id": testId,
    className: classNames,
    disabled: disabled,
    href: !disabled ? href : undefined,
    rel: rel,
    target: target,
    type: type
  }, otherProps), /*#__PURE__*/_react["default"].createElement(_TabFocusTrap.TabFocusTrap, {
    className: styles['Button__inner-wrapper']
  }, icon && !loading && /*#__PURE__*/_react["default"].createElement(_Icon.Icon, {
    className: styles.Button__icon,
    size: size === 'small' ? 'tiny' : 'small',
    icon: icon,
    color: iconColor
  }), children && /*#__PURE__*/_react["default"].createElement("span", {
    className: styles.Button__label
  }, children), /*#__PURE__*/_react["default"].createElement(_reactTransitionGroup.CSSTransition, {
    appear: true,
    "in": loading,
    timeout: 1000,
    classNames: {
      appear: styles['Button--spinner--enter'],
      appearActive: styles['Button--spinner--enter-active'],
      exit: styles['Button--spinner--exit'],
      exitActive: styles['Button--spinner--exit-active']
    },
    mountOnEnter: true,
    unmountOnExit: true
  }, function (state) {
    return state === 'unmounted' ? null : /*#__PURE__*/_react["default"].createElement("div", {
      className: styles['Button--spinner-wrapper']
    }, /*#__PURE__*/_react["default"].createElement(_Spinner.Spinner, {
      customSize: 12,
      color: buttonType === 'muted' || buttonType === 'warning' || buttonType === 'naked' ? 'default' : 'white'
    }));
  }), indicateDropdown && /*#__PURE__*/_react["default"].createElement(_Icon.Icon, {
    className: styles['Button__dropdown-icon'],
    icon: "ChevronDown",
    color: iconColor
  })));
};

exports.Button = Button;