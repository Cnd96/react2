import { RefObject, ChangeEventHandler } from 'react';
export declare type TextInputProps = {
    width?: 'small' | 'medium' | 'large' | 'full';
    isReadOnly?: boolean;
    type?: 'text' | 'password' | 'email' | 'number' | 'search' | 'url' | 'date' | 'time';
    name?: string;
    labelText?: string;
    id?: string;
    className?: string;
    withCopyButton?: boolean;
    testId?: string;
    onChange?: ChangeEventHandler<HTMLInputElement>;
    onCopy?: (value: string) => void;
    value?: string;
    inputRef?: RefObject<HTMLInputElement>;
    error?: boolean;
    willBlurOnEsc?: boolean;
} & JSX.IntrinsicElements['input'];
export declare const TextInput: ({ className, disabled, error, id, inputRef, isReadOnly, maxLength, name, labelText, onBlur, onChange, onCopy, onKeyDown, placeholder, required, testId, type, value, width, willBlurOnEsc, withCopyButton, ...otherProps }: TextInputProps) => JSX.Element;
