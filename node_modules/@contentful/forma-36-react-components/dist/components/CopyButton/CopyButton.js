"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CopyButton = CopyButton;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _reactCopyToClipboard = _interopRequireDefault(require("react-copy-to-clipboard"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Icon = require("../Icon");

var _Tooltip = require("../Tooltip");

var _TabFocusTrap = require("../TabFocusTrap");

var _excluded = ["copyValue", "className", "testId", "onCopy", "tooltipPlace", "tooltipText", "tooltipCopiedText"];
var styles = {
  "CopyButton": "CopyButton__CopyButton___OoA5D",
  "CopyButton__button": "CopyButton__CopyButton__button___52Bc0 a11y__focus-outline--default___2hwb1",
  "CopyButton__text": "CopyButton__CopyButton__text___269PQ helpers__sr-only___3Kv3z",
  "CopyButton__TabFocusTrap": "CopyButton__CopyButton__TabFocusTrap___1Q_DQ"
};

function CopyButton(_ref) {
  var copyValue = _ref.copyValue,
      className = _ref.className,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-copy-button' : _ref$testId,
      onCopy = _ref.onCopy,
      tooltipPlace = _ref.tooltipPlace,
      _ref$tooltipText = _ref.tooltipText,
      tooltipText = _ref$tooltipText === void 0 ? /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, "Copy to ", /*#__PURE__*/_react["default"].createElement("br", null), " clipboard") : _ref$tooltipText,
      _ref$tooltipCopiedTex = _ref.tooltipCopiedText,
      tooltipCopiedText = _ref$tooltipCopiedTex === void 0 ? /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, "Copied!") : _ref$tooltipCopiedTex,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      copied = _useState2[0],
      setCopied = _useState2[1];

  var button = (0, _react.useRef)(null);
  var tooltipAnchor = (0, _react.useRef)(null);
  var handleCopy = (0, _react.useCallback)(function (e) {
    if (onCopy) {
      onCopy(e);
    }

    setCopied(true);
    setTimeout(function () {
      setCopied(false);

      if (button.current) {
        button.current.blur();
      }
    }, 1000);
  }, [onCopy]);
  var classNames = (0, _classnames["default"])(styles['CopyButton'], className);
  return /*#__PURE__*/_react["default"].createElement("div", (0, _extends2["default"])({
    ref: tooltipAnchor,
    className: classNames,
    id: "copyButton",
    "data-test-id": testId
  }, otherProps), /*#__PURE__*/_react["default"].createElement(_reactCopyToClipboard["default"], {
    text: copyValue || '',
    onCopy: handleCopy
  }, /*#__PURE__*/_react["default"].createElement(_Tooltip.Tooltip, {
    place: tooltipPlace,
    content: copied ? /*#__PURE__*/_react["default"].createElement("span", null, tooltipCopiedText) : /*#__PURE__*/_react["default"].createElement("span", null, tooltipText)
  }, /*#__PURE__*/_react["default"].createElement("button", {
    type: "button",
    ref: button,
    className: styles['CopyButton__button']
  }, /*#__PURE__*/_react["default"].createElement(_TabFocusTrap.TabFocusTrap, {
    className: styles['CopyButton__TabFocusTrap']
  }, /*#__PURE__*/_react["default"].createElement("span", {
    className: styles['CopyButton__text']
  }, "Copy ", copyValue, " to clipboard"), /*#__PURE__*/_react["default"].createElement(_Icon.Icon, {
    icon: "Copy",
    color: "muted"
  }))))));
}