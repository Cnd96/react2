"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EntityListItem = EntityListItem;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Tag = require("../../Tag");

var _Icon = require("../../Icon");

var _Card = require("../../Card");

var _Skeleton = require("../../Skeleton");

var _TabFocusTrap = require("../../TabFocusTrap");

var _excluded = ["className", "testId", "title", "description", "contentType", "entityType", "withThumbnail", "thumbnailUrl", "thumbnailAltText", "status", "dropdownListElements", "withDragHandle", "isDragActive", "isLoading", "onClick", "href", "cardDragHandleProps", "cardDragHandleComponent", "isActionsDisabled"];
var styles = {
  "EntityListItem": "EntityListItem__EntityListItem___29x4C",
  "EntityListItem--drag-active": "EntityListItem__EntityListItem--drag-active___1qF1k",
  "EntityListItem__focus-trap": "EntityListItem__EntityListItem__focus-trap___Hm8Et",
  "EntityListItem__inner": "EntityListItem__EntityListItem__inner___3sE6J a11y__focus-outline--default___2hwb1",
  "EntityListItem__media": "EntityListItem__EntityListItem__media___33gWs",
  "EntityListItem__thumbnail": "EntityListItem__EntityListItem__thumbnail___1fjhs",
  "EntityListItem__content": "EntityListItem__EntityListItem__content___y2dN5 helpers__truncate___3ZEQa",
  "EntityListItem__heading": "EntityListItem__EntityListItem__heading___133Tm",
  "EntityListItem__title": "EntityListItem__EntityListItem__title___5sclg helpers__truncate___3ZEQa",
  "EntityListItem__content-type": "EntityListItem__EntityListItem__content-type___CoCul helpers__truncate___3ZEQa",
  "EntityListItem__description": "EntityListItem__EntityListItem__description___-sYiZ helpers__truncate___3ZEQa",
  "EntityListItem__meta": "EntityListItem__EntityListItem__meta___3xi8M",
  "EntityListItem__status": "EntityListItem__EntityListItem__status___8aOEj",
  "EntityListItem__actions": "EntityListItem__EntityListItem__actions___1BF6s"
};

function EntityListItem(_ref) {
  var _cn;

  var className = _ref.className,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-entity-list-item' : _ref$testId,
      title = _ref.title,
      description = _ref.description,
      contentType = _ref.contentType,
      _ref$entityType = _ref.entityType,
      entityType = _ref$entityType === void 0 ? 'entry' : _ref$entityType,
      _ref$withThumbnail = _ref.withThumbnail,
      withThumbnail = _ref$withThumbnail === void 0 ? true : _ref$withThumbnail,
      thumbnailUrl = _ref.thumbnailUrl,
      thumbnailAltText = _ref.thumbnailAltText,
      status = _ref.status,
      dropdownListElements = _ref.dropdownListElements,
      withDragHandle = _ref.withDragHandle,
      isDragActive = _ref.isDragActive,
      isLoading = _ref.isLoading,
      onClick = _ref.onClick,
      href = _ref.href,
      cardDragHandleProps = _ref.cardDragHandleProps,
      cardDragHandleComponent = _ref.cardDragHandleComponent,
      _ref$isActionsDisable = _ref.isActionsDisabled,
      isActionsDisabled = _ref$isActionsDisable === void 0 ? false : _ref$isActionsDisable,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  var renderIcon = (0, _react.useCallback)(function () {
    var iconMap = {
      asset: 'Asset',
      entry: 'Entry',
      release: 'Release'
    };
    var icon = entityType ? iconMap[entityType.toLowerCase()] : 'Entry';
    return /*#__PURE__*/_react["default"].createElement(_Icon.Icon, {
      icon: icon,
      color: "muted"
    });
  }, [entityType]);
  var renderThumbnail = (0, _react.useCallback)(function () {
    return /*#__PURE__*/_react["default"].createElement("img", {
      src: thumbnailUrl,
      className: styles['EntityListItem__thumbnail'],
      alt: thumbnailAltText
    });
  }, [thumbnailAltText, thumbnailUrl]);
  var renderStatus = (0, _react.useCallback)(function (status) {
    var label;
    var type;

    switch (status) {
      case 'archived':
        label = 'archived';
        type = 'negative';
        break;

      case 'changed':
        label = 'changed';
        type = 'primary';
        break;

      case 'published':
        label = 'published';
        type = 'positive';
        break;

      default:
        label = 'draft';
        type = 'warning';
    }

    return /*#__PURE__*/_react["default"].createElement("div", {
      className: styles['EntityListItem__status']
    }, /*#__PURE__*/_react["default"].createElement(_Tag.Tag, {
      tagType: type
    }, label));
  }, []);
  var renderLoadingCard = (0, _react.useCallback)(function () {
    return /*#__PURE__*/_react["default"].createElement("article", {
      className: styles['EntityListItem__inner']
    }, /*#__PURE__*/_react["default"].createElement(_Skeleton.SkeletonContainer, {
      clipId: "f36-entity-list-item-skeleton"
    }, /*#__PURE__*/_react["default"].createElement(_Skeleton.SkeletonImage, {
      height: 46,
      width: 46
    }), /*#__PURE__*/_react["default"].createElement(_Skeleton.SkeletonBodyText, {
      numberOfLines: 2,
      lineHeight: 18,
      offsetLeft: 54
    })));
  }, []);
  var renderCardDragHandle = (0, _react.useCallback)(function () {
    if (cardDragHandleComponent) {
      return cardDragHandleComponent;
    } else if (withDragHandle) {
      return /*#__PURE__*/_react["default"].createElement(_Card.CardDragHandle, (0, _extends2["default"])({
        isDragActive: isDragActive
      }, cardDragHandleProps), "Reorder entry");
    }
  }, [cardDragHandleComponent, cardDragHandleProps, isDragActive, withDragHandle]);
  var classNames = (0, _classnames["default"])(styles.EntityListItem, className, (_cn = {}, (0, _defineProperty2["default"])(_cn, styles['EntityListItem--drag-active'], isDragActive), (0, _defineProperty2["default"])(_cn, styles['EntityListItem--is-interactive'], onClick || href), _cn));
  var Element = onClick ? 'a' : 'article'; // archived assets will not be available on the CDN, resulting in a broken image src

  var isArchived = status === 'archived';
  var asIcon = isArchived || !thumbnailUrl;
  return /*#__PURE__*/_react["default"].createElement("li", (0, _extends2["default"])({}, otherProps, {
    className: classNames,
    "data-test-id": testId
  }), renderCardDragHandle(), isLoading ? renderLoadingCard() : /*#__PURE__*/_react["default"].createElement(Element, {
    className: styles['EntityListItem__inner'],
    onClick: onClick,
    href: href,
    tabIndex: onClick && 0,
    target: onClick && href ? '_blank' : undefined
  }, /*#__PURE__*/_react["default"].createElement(_TabFocusTrap.TabFocusTrap, {
    className: styles['EntityListItem__focus-trap']
  }, withThumbnail && /*#__PURE__*/_react["default"].createElement("figure", {
    className: styles['EntityListItem__media']
  }, asIcon ? renderIcon() : renderThumbnail()), /*#__PURE__*/_react["default"].createElement("div", {
    className: styles['EntityListItem__content']
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: styles['EntityListItem__heading']
  }, /*#__PURE__*/_react["default"].createElement("h1", {
    className: styles['EntityListItem__title']
  }, title), contentType && /*#__PURE__*/_react["default"].createElement("div", {
    className: styles['EntityListItem__content-type']
  }, "(", contentType, ")")), description && /*#__PURE__*/_react["default"].createElement("p", {
    className: styles['EntityListItem__description']
  }, description)), /*#__PURE__*/_react["default"].createElement("div", {
    className: styles['EntityListItem__meta']
  }, status && renderStatus(status), dropdownListElements && /*#__PURE__*/_react["default"].createElement(_Card.CardActions, {
    className: styles['EntityListItem__actions'],
    isDisabled: isActionsDisabled,
    iconButtonProps: {
      onClick: function onClick(e) {
        return e.stopPropagation;
      }
    }
  }, dropdownListElements)))));
}