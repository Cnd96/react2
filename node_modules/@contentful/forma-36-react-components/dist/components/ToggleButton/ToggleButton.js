"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToggleButton = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Icon = require("../Icon");

var _TabFocusTrap = require("../TabFocusTrap");

var _excluded = ["children", "className", "icon", "isActive", "isDisabled", "onToggle", "testId"];
var styles = {
  "Toggle": "ToggleButton__Toggle___1gUNN",
  "Toggle--disabled": "ToggleButton__Toggle--disabled___2uZSk",
  "Toggle__button": "ToggleButton__Toggle__button___g0Ntb a11y__focus-outline--default___2hwb1",
  "Toggle--active": "ToggleButton__Toggle--active___cx5OU",
  "Toggle__content-wrapper": "ToggleButton__Toggle__content-wrapper___1VoAt",
  "Toggle__button__icon": "ToggleButton__Toggle__button__icon___2v22X",
  "Toggle__button__inner-wrapper": "ToggleButton__Toggle__button__inner-wrapper___1MGKY",
  "Toggle--square": "ToggleButton__Toggle--square___3nugi",
  "ToggleGroup": "ToggleButton__ToggleGroup___28I3p"
};

var ToggleButton = function ToggleButton(_ref) {
  var _cn;

  var children = _ref.children,
      className = _ref.className,
      icon = _ref.icon,
      _ref$isActive = _ref.isActive,
      isActive = _ref$isActive === void 0 ? false : _ref$isActive,
      _ref$isDisabled = _ref.isDisabled,
      isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,
      onToggle = _ref.onToggle,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-toggle-button' : _ref$testId,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  var classNames = (0, _classnames["default"])(styles.Toggle, className, (_cn = {}, (0, _defineProperty2["default"])(_cn, styles['Toggle--active'], isActive), (0, _defineProperty2["default"])(_cn, styles['Toggle--disabled'], isDisabled), (0, _defineProperty2["default"])(_cn, styles['Toggle--square'], !children), _cn));

  var handleToggle = function handleToggle() {
    if (!isDisabled && onToggle) {
      onToggle();
    }
  };

  return /*#__PURE__*/_react["default"].createElement("div", (0, _extends2["default"])({
    className: classNames,
    "data-test-id": testId
  }, otherProps), /*#__PURE__*/_react["default"].createElement("button", {
    type: "button",
    className: styles.Toggle__button,
    disabled: isDisabled,
    "data-test-id": "button",
    onClick: handleToggle,
    "aria-pressed": isActive
  }, /*#__PURE__*/_react["default"].createElement(_TabFocusTrap.TabFocusTrap, {
    className: styles['Toggle__button__inner-wrapper']
  }, icon && /*#__PURE__*/_react["default"].createElement(_Icon.Icon, {
    icon: icon,
    color: "secondary",
    className: styles.Toggle__button__icon
  }), children && /*#__PURE__*/_react["default"].createElement("span", {
    className: styles['Toggle__content-wrapper']
  }, children))));
};

exports.ToggleButton = ToggleButton;

ToggleButton.Group = function ToggleButtonGroup(_ref2) {
  var className = _ref2.className,
      _ref2$testId = _ref2.testId,
      testId = _ref2$testId === void 0 ? 'cf-ui-toggle-button-group' : _ref2$testId,
      children = _ref2.children;
  return /*#__PURE__*/_react["default"].createElement("div", {
    "data-test-id": testId,
    className: (0, _classnames["default"])(styles.ToggleGroup, className)
  }, children);
};