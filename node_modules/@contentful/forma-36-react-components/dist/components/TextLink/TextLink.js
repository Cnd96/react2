"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextLink = TextLink;
exports.textLinkColor = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Icon = require("../Icon");

var _TabFocusTrap = require("../TabFocusTrap");

var _excluded = ["children", "className", "disabled", "href", "icon", "iconPosition", "linkType", "onClick", "testId", "text"];
var styles = {
  "TextLink": "TextLink__TextLink___1biUr a11y__focus-outline--default___2hwb1",
  "TextLink--primary": "TextLink__TextLink--primary___2Vc9F",
  "TextLink__icon": "TextLink__TextLink__icon___3ggiB",
  "TextLink--positive": "TextLink__TextLink--positive___3X5ph",
  "TextLink--negative": "TextLink__TextLink--negative___3yhMk",
  "TextLink--secondary": "TextLink__TextLink--secondary___WbTVM",
  "TextLink--muted": "TextLink__TextLink--muted___TMxw0",
  "TextLink--white": "TextLink__TextLink--white___nesMH",
  "TextLink--disabled": "TextLink__TextLink--disabled___3vo9n",
  "TextLink__icon-wrapper": "TextLink__TextLink__icon-wrapper___25_tI",
  "TextLink__icon-wrapper--right": "TextLink__TextLink__icon-wrapper--right___3ybuG"
};
var textLinkColor = ['primary', 'positive', 'negative', 'secondary', 'muted', 'white'];
exports.textLinkColor = textLinkColor;

function TextLink(_ref) {
  var _cn;

  var children = _ref.children,
      className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      href = _ref.href,
      icon = _ref.icon,
      _ref$iconPosition = _ref.iconPosition,
      iconPosition = _ref$iconPosition === void 0 ? 'left' : _ref$iconPosition,
      _ref$linkType = _ref.linkType,
      linkType = _ref$linkType === void 0 ? 'primary' : _ref$linkType,
      onClick = _ref.onClick,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-text-link' : _ref$testId,
      text = _ref.text,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  var renderIcon = (0, _react.useCallback)(function (icon, linkType) {
    if (!icon) return undefined;
    return /*#__PURE__*/_react["default"].createElement("span", {
      className: iconPosition === 'right' ? styles['TextLink__icon-wrapper--right'] : styles['TextLink__icon-wrapper']
    }, /*#__PURE__*/_react["default"].createElement(_Icon.Icon, {
      icon: icon,
      color: linkType,
      className: styles.TextLink__icon
    }));
  }, [iconPosition]);
  var classNames = (0, _classnames["default"])(styles.TextLink, className, (_cn = {}, (0, _defineProperty2["default"])(_cn, styles["TextLink--".concat(linkType)], linkType), (0, _defineProperty2["default"])(_cn, styles['TextLink--disabled'], disabled), _cn));

  var content = /*#__PURE__*/_react["default"].createElement(_TabFocusTrap.TabFocusTrap, null, icon && iconPosition === 'left' && renderIcon(icon, linkType) // eslint-disable-line @typescript-eslint/no-non-null-assertion
  , text || children, icon && iconPosition === 'right' && renderIcon(icon, linkType) // eslint-disable-line @typescript-eslint/no-non-null-assertion
  );

  if (href) {
    return /*#__PURE__*/_react["default"].createElement("a", (0, _extends2["default"])({
      className: classNames,
      "data-test-id": testId,
      onClick: disabled ? function (e) {
        e.preventDefault();
      } : onClick,
      href: href
    }, otherProps), content);
  }

  return /*#__PURE__*/_react["default"].createElement("button", (0, _extends2["default"])({
    type: "button",
    className: classNames,
    "data-test-id": testId,
    onClick: !disabled ? onClick : function () {},
    disabled: disabled
  }, otherProps), content);
}