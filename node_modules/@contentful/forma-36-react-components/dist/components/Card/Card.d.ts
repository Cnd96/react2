import React, { ReactNode, MouseEvent, KeyboardEvent } from 'react';
export interface BaseCardProps {
    /**
     * Used to make the decision of either rendering the card as a link tag or as a div tag
     */
    href?: string;
    /**
     * Used with href to define a relationship between a linked resource and the current document
     */
    rel?: string;
    /**
     * Used with href to specify target attribute value
     */
    target?: React.AnchorHTMLAttributes<HTMLAnchorElement>['target'];
    /**
     * Applies selected styles to the element
     */
    selected?: boolean;
    /**
     * An ID used for testing purposes applied as a data attribute (data-test-id)
     */
    testId?: string;
    /**
     * Class names to be appended to the className prop of the component
     */
    className?: string;
    /**
     * Child nodes to be rendered in the component
     */
    children?: ReactNode;
}
export interface CardProps extends BaseCardProps {
    /**
     * The action to be performed when user clicks on the Card
     */
    onClick?: (e: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>) => void;
    /**
     * Applies padding styles of different sizes
     */
    padding?: 'default' | 'large' | 'none';
    /**
     * The title of the entry. It will also be used as aria-label
     */
    title?: string;
    /**
     * Any additional styles that are being applied
     */
    style?: React.CSSProperties;
    /**
     * If the card is selectable and has no title, it will need a aria-label to help screen readers identify it
     */
    ariaLabel?: string;
}
export declare const Card: ({ className, testId, children, href, rel, target, onClick, padding, selected, ariaLabel, ...otherProps }: CardProps) => JSX.Element;
