"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InlineEntryCard = InlineEntryCard;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _reactTransitionGroup = require("react-transition-group");

var _Card = require("../Card");

var _CardActions = require("../CardActions/CardActions");

var _InlineEntryCardSkeleton = require("./InlineEntryCardSkeleton");

var _excluded = ["className", "dropdownListElements", "isSelected", "children", "testId", "isLoading", "status", "href"];
var styles = {
  "InlineEntryCard": "InlineEntryCard__InlineEntryCard___2cGQw",
  "InlineEntryCard__skeleton-wrapper": "InlineEntryCard__InlineEntryCard__skeleton-wrapper___BA5rM",
  "InlineEntryCard__text-wrapper": "InlineEntryCard__InlineEntryCard__text-wrapper___3Sf6P",
  "InlineEntryCard__status-indicator": "InlineEntryCard__InlineEntryCard__status-indicator___1sYHe",
  "InlineEntryCard__status-indicator--published": "InlineEntryCard__InlineEntryCard__status-indicator--published___2iM7W",
  "InlineEntryCard__status-indicator--draft": "InlineEntryCard__InlineEntryCard__status-indicator--draft___8AKK1",
  "InlineEntryCard__status-indicator--archived": "InlineEntryCard__InlineEntryCard__status-indicator--archived___3-aWk",
  "InlineEntryCard__status-indicator--changed": "InlineEntryCard__InlineEntryCard__status-indicator--changed___ArwPC",
  "InlineEntryCard__actions": "InlineEntryCard__InlineEntryCard__actions___3DzZi",
  "InlineEntryCard__spinner--enter": "InlineEntryCard__InlineEntryCard__spinner--enter___jY1EO",
  "InlineEntryCard__spinner--enter-active": "InlineEntryCard__InlineEntryCard__spinner--enter-active___AZomL",
  "InlineEntryCard__spinner--exit": "InlineEntryCard__InlineEntryCard__spinner--exit___29TCK",
  "InlineEntryCard__spinner--exit-active": "InlineEntryCard__InlineEntryCard__spinner--exit-active___31qgq"
};

function InlineEntryCard(_ref) {
  var className = _ref.className,
      dropdownListElements = _ref.dropdownListElements,
      isSelected = _ref.isSelected,
      children = _ref.children,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-inline-entry-card' : _ref$testId,
      isLoading = _ref.isLoading,
      status = _ref.status,
      href = _ref.href,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  var classNames = (0, _classnames["default"])(styles.InlineEntryCard, className);
  var statusIndicatorClassNames = (0, _classnames["default"])(styles['InlineEntryCard__status-indicator'], (0, _defineProperty2["default"])({}, styles["InlineEntryCard__status-indicator--".concat(status)], status && !isLoading));
  return /*#__PURE__*/_react["default"].createElement(_Card.Card, (0, _extends2["default"])({
    selected: isSelected,
    className: classNames,
    href: href
  }, otherProps, {
    "data-test-id": testId
  }), /*#__PURE__*/_react["default"].createElement(_reactTransitionGroup.CSSTransition, {
    timeout: 100,
    "in": isLoading,
    classNames: {
      enter: styles['InlineEntryCard__spinner--enter'],
      enterActive: styles['InlineEntryCard__spinner--enter-active'],
      exit: styles['InlineEntryCard__spinner--exit'],
      exitActive: styles['InlineEntryCard__spinner--exit-active']
    },
    mountOnEnter: true,
    unmountOnExit: true
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: styles['InlineEntryCard__skeleton-wrapper']
  }, /*#__PURE__*/_react["default"].createElement(_InlineEntryCardSkeleton.InlineEntryCardSkeleton, null))), /*#__PURE__*/_react["default"].createElement("div", {
    className: statusIndicatorClassNames
  }), /*#__PURE__*/_react["default"].createElement("span", {
    className: styles['InlineEntryCard__text-wrapper']
  }, isLoading ? 'Loading' : children), dropdownListElements && /*#__PURE__*/_react["default"].createElement(_CardActions.CardActions, {
    className: styles['InlineEntryCard__actions'],
    iconButtonProps: {
      onClick: function onClick(e) {
        return e.stopPropagation;
      }
    }
  }, dropdownListElements));
}