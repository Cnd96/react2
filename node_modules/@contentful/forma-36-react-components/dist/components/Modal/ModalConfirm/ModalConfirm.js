"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModalConfirm = ModalConfirm;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _Modal = require("../Modal");

var _Button = require("../../Button");

function ModalConfirm(_ref) {
  var _ref$allowHeightOverf = _ref.allowHeightOverflow,
      allowHeightOverflow = _ref$allowHeightOverf === void 0 ? false : _ref$allowHeightOverf,
      _ref$cancelLabel = _ref.cancelLabel,
      cancelLabel = _ref$cancelLabel === void 0 ? 'Cancel' : _ref$cancelLabel,
      _ref$cancelTestId = _ref.cancelTestId,
      cancelTestId = _ref$cancelTestId === void 0 ? 'cf-ui-modal-confirm-cancel-button' : _ref$cancelTestId,
      children = _ref.children,
      _ref$confirmLabel = _ref.confirmLabel,
      confirmLabel = _ref$confirmLabel === void 0 ? 'Confirm' : _ref$confirmLabel,
      _ref$confirmTestId = _ref.confirmTestId,
      confirmTestId = _ref$confirmTestId === void 0 ? 'cf-ui-modal-confirm-confirm-button' : _ref$confirmTestId,
      _ref$intent = _ref.intent,
      intent = _ref$intent === void 0 ? 'positive' : _ref$intent,
      _ref$isConfirmDisable = _ref.isConfirmDisabled,
      isConfirmDisabled = _ref$isConfirmDisable === void 0 ? false : _ref$isConfirmDisable,
      _ref$isConfirmLoading = _ref.isConfirmLoading,
      isConfirmLoading = _ref$isConfirmLoading === void 0 ? false : _ref$isConfirmLoading,
      isSecondaryDisabled = _ref.isSecondaryDisabled,
      isSecondaryLoading = _ref.isSecondaryLoading,
      isShown = _ref.isShown,
      modalContentProps = _ref.modalContentProps,
      modalControlsProps = _ref.modalControlsProps,
      modalHeaderProps = _ref.modalHeaderProps,
      onCancel = _ref.onCancel,
      onConfirm = _ref.onConfirm,
      onSecondary = _ref.onSecondary,
      secondaryIntent = _ref.secondaryIntent,
      secondaryLabel = _ref.secondaryLabel,
      _ref$secondaryTestId = _ref.secondaryTestId,
      secondaryTestId = _ref$secondaryTestId === void 0 ? 'cf-ui-modal-confirm-secondary-button' : _ref$secondaryTestId,
      _ref$shouldCloseOnEsc = _ref.shouldCloseOnEscapePress,
      shouldCloseOnEscapePress = _ref$shouldCloseOnEsc === void 0 ? true : _ref$shouldCloseOnEsc,
      _ref$shouldCloseOnOve = _ref.shouldCloseOnOverlayClick,
      shouldCloseOnOverlayClick = _ref$shouldCloseOnOve === void 0 ? true : _ref$shouldCloseOnOve,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 'medium' : _ref$size,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-modal-confirm' : _ref$testId,
      _ref$title = _ref.title,
      title = _ref$title === void 0 ? 'Are you sure?' : _ref$title;
  var confirmButton = confirmLabel ? /*#__PURE__*/_react["default"].createElement(_Button.Button, {
    testId: confirmTestId,
    disabled: isConfirmDisabled,
    loading: isConfirmLoading,
    buttonType: intent,
    onClick: function onClick() {
      return onConfirm();
    }
  }, confirmLabel) : null;
  var secondaryButton = secondaryLabel ? /*#__PURE__*/_react["default"].createElement(_Button.Button, {
    testId: secondaryTestId,
    disabled: isSecondaryDisabled,
    loading: isSecondaryLoading,
    buttonType: secondaryIntent,
    onClick: function onClick() {
      return onSecondary && onSecondary();
    }
  }, secondaryLabel) : null;
  var cancelButton = cancelLabel ? /*#__PURE__*/_react["default"].createElement(_Button.Button, {
    testId: cancelTestId,
    buttonType: "muted",
    onClick: function onClick() {
      return onCancel();
    }
  }, cancelLabel) : null;
  return /*#__PURE__*/_react["default"].createElement(_Modal.Modal, {
    testId: testId,
    isShown: isShown,
    onClose: onCancel,
    size: size,
    shouldCloseOnOverlayClick: shouldCloseOnOverlayClick,
    shouldCloseOnEscapePress: shouldCloseOnEscapePress,
    allowHeightOverflow: allowHeightOverflow
  }, function () {
    return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_Modal.Modal.Header, (0, _extends2["default"])({
      title: title || ''
    }, modalHeaderProps)), /*#__PURE__*/_react["default"].createElement(_Modal.Modal.Content, modalContentProps, children), /*#__PURE__*/_react["default"].createElement(_Modal.Modal.Controls, modalControlsProps, (modalControlsProps === null || modalControlsProps === void 0 ? void 0 : modalControlsProps.position) === 'right' ? /*#__PURE__*/_react["default"].createElement(_react.Fragment, null, cancelButton, secondaryButton, confirmButton) : /*#__PURE__*/_react["default"].createElement(_react.Fragment, null, confirmButton, secondaryButton, cancelButton)));
  });
}