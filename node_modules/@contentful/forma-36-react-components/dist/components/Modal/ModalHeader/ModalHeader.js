"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModalHeader = ModalHeader;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _IconButton = require("../../IconButton");

var _excluded = ["onClose", "title", "testId", "isNotWrapped", "className"];
var styles = {
  "ModalHeader": "ModalHeader__ModalHeader___1yD1S",
  "ModalHeader__title": "ModalHeader__ModalHeader__title___3IuOy",
  "ModalHeader__title--is-not-wrapped": "ModalHeader__ModalHeader__title--is-not-wrapped___39i2J"
};

function ModalHeader(_ref) {
  var onClose = _ref.onClose,
      title = _ref.title,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-modal-header' : _ref$testId,
      isNotWrapped = _ref.isNotWrapped,
      className = _ref.className,
      rest = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  var titleClassNames = (0, _classnames["default"])(styles.ModalHeader__title, (0, _defineProperty2["default"])({}, styles['ModalHeader__title--is-not-wrapped'], isNotWrapped));
  return /*#__PURE__*/_react["default"].createElement("div", (0, _extends2["default"])({}, rest, {
    className: (0, _classnames["default"])(styles.ModalHeader, className),
    "data-test-id": testId
  }), /*#__PURE__*/_react["default"].createElement("h1", {
    className: titleClassNames
  }, title), onClose && /*#__PURE__*/_react["default"].createElement(_IconButton.IconButton, {
    iconProps: {
      icon: 'Close',
      size: 'small'
    },
    buttonType: "muted",
    label: "Close",
    onClick: function onClick() {
      return onClose();
    }
  }));
}