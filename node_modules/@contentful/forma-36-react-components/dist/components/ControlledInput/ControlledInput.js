"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ControlledInput = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Icon = require("../Icon");

var _excluded = ["checked", "className", "disabled", "id", "labelText", "name", "onBlur", "onChange", "onFocus", "required", "testId", "type", "value", "willBlurOnEsc", "indeterminate"];
var styles = {
  "ControlledInput": "ControlledInput__ControlledInput___2XK3j",
  "ControlledInput--disabled": "ControlledInput__ControlledInput--disabled___3prPF",
  "RadioButton": "ControlledInput__RadioButton___48lef",
  "RadioButton__ghost": "ControlledInput__RadioButton__ghost___whxKo",
  "Checkbox": "ControlledInput__Checkbox___ra2TY",
  "Checkbox__ghost": "ControlledInput__Checkbox__ghost___1Oqlk",
  "Input__ghost": "ControlledInput__Input__ghost___2bBB9"
};

var ControlledInput = function ControlledInput(_ref) {
  var _cn2;

  var checked = _ref.checked,
      className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      id = _ref.id,
      labelText = _ref.labelText,
      name = _ref.name,
      _onBlur = _ref.onBlur,
      _onChange = _ref.onChange,
      _onFocus = _ref.onFocus,
      _ref$required = _ref.required,
      required = _ref$required === void 0 ? false : _ref$required,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-controlled-input' : _ref$testId,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? 'checkbox' : _ref$type,
      value = _ref.value,
      _ref$willBlurOnEsc = _ref.willBlurOnEsc,
      willBlurOnEsc = _ref$willBlurOnEsc === void 0 ? true : _ref$willBlurOnEsc,
      indeterminate = _ref.indeterminate,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  var inputRef = (0, _react.useRef)(null);
  var classNames = (0, _classnames["default"])(styles['ControlledInput'], (0, _defineProperty2["default"])({}, styles['ControlledInput--disabled'], disabled));
  var wrapperClassname = (0, _classnames["default"])((_cn2 = {}, (0, _defineProperty2["default"])(_cn2, styles['RadioButton'], type === 'radio'), (0, _defineProperty2["default"])(_cn2, styles['Checkbox'], type === 'checkbox'), _cn2), className);
  var handleKeyDown = (0, _react.useCallback)(function (e) {
    e.persist();

    if (e.nativeEvent.code === 'Escape' && willBlurOnEsc) {
      e.currentTarget.blur();
    }
  }, [willBlurOnEsc]);
  (0, _react.useEffect)(function () {
    inputRef.current.indeterminate = indeterminate;
  }, [indeterminate]);
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: wrapperClassname
  }, /*#__PURE__*/_react["default"].createElement("input", (0, _extends2["default"])({
    className: classNames,
    value: value,
    name: name,
    checked: checked,
    type: type,
    ref: inputRef,
    "data-test-id": testId,
    onChange: function onChange(e) {
      if (_onChange) {
        _onChange(e);
      }
    },
    onBlur: function onBlur(e) {
      if (_onBlur) {
        _onBlur(e);
      }
    },
    onFocus: function onFocus(e) {
      if (_onFocus) {
        _onFocus(e);
      }
    },
    "aria-label": labelText,
    id: id,
    required: required,
    disabled: disabled,
    onKeyDown: handleKeyDown
  }, otherProps)), type === 'radio' ?
  /*#__PURE__*/

  /* eslint-disable-next-line jsx-a11y/label-has-associated-control */
  _react["default"].createElement("label", {
    className: (0, _classnames["default"])(styles['Input__ghost'], styles['RadioButton__ghost']),
    htmlFor: id
  }) : /*#__PURE__*/_react["default"].createElement("label", {
    className: (0, _classnames["default"])(styles['Input__ghost'], styles['Checkbox__ghost']),
    htmlFor: id
  }, /*#__PURE__*/_react["default"].createElement(_Icon.Icon, {
    icon: indeterminate ? 'Minus' : 'Done',
    color: disabled ? 'secondary' : 'white',
    size: "medium"
  })));
};

exports.ControlledInput = ControlledInput;