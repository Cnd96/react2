"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Grid = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _forma36Tokens = _interopRequireDefault(require("@contentful/forma-36-tokens"));

var _classnames = _interopRequireDefault(require("classnames"));

var _excluded = ["alignContent", "children", "className", "columnGap", "columns", "flow", "inline", "justifyContent", "rowGap", "rows", "style", "testId"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var styles = {
  "Grid": "Grid__Grid___2_rpl",
  "Grid__inline": "Grid__Grid__inline___2QOe3"
};

var Grid = function Grid(_ref) {
  var alignContent = _ref.alignContent,
      children = _ref.children,
      className = _ref.className,
      _ref$columnGap = _ref.columnGap,
      columnGap = _ref$columnGap === void 0 ? 'spacingM' : _ref$columnGap,
      _ref$columns = _ref.columns,
      columns = _ref$columns === void 0 ? 'auto' : _ref$columns,
      flow = _ref.flow,
      inline = _ref.inline,
      justifyContent = _ref.justifyContent,
      _ref$rowGap = _ref.rowGap,
      rowGap = _ref$rowGap === void 0 ? 'none' : _ref$rowGap,
      _ref$rows = _ref.rows,
      rows = _ref$rows === void 0 ? 'auto' : _ref$rows,
      style = _ref.style,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-grid' : _ref$testId,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);

  var handleGridTemplate = function handleGridTemplate(value) {
    if (typeof value === 'number') {
      return "repeat(".concat(value, ", minmax(0, 1fr)");
    }

    return value;
  };

  var handleGap = function handleGap(value) {
    if (value === 'none') {
      return 0;
    } else {
      return _forma36Tokens["default"][value];
    }
  };

  var inlineStyle = _objectSpread({
    gridTemplateColumns: handleGridTemplate(columns),
    gridTemplateRows: handleGridTemplate(rows),
    flow: flow,
    justifyContent: justifyContent,
    alignContent: alignContent,
    columnGap: columnGap && handleGap(columnGap),
    rowGap: rowGap && handleGap(rowGap)
  }, style);

  var classNames = (0, _classnames["default"])(styles.Grid, className, (0, _defineProperty2["default"])({}, styles.Grid__inline, inline));
  return /*#__PURE__*/_react["default"].createElement("div", (0, _extends2["default"])({}, otherProps, {
    style: inlineStyle,
    className: classNames,
    "data-test-id": testId
  }), children);
};

exports.Grid = Grid;