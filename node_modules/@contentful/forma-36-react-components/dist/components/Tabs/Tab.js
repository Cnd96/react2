"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tab = Tab;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var styles = {
  "Tabs": "Tabs__Tabs___3Cp8m",
  "Tab": "Tabs__Tab___1SiYI",
  "Tab__selected": "Tabs__Tab__selected___3erbm",
  "Tab__disabled": "Tabs__Tab__disabled___3H8Zw",
  "Tabs__divider--horizontal": "Tabs__Tabs__divider--horizontal___3Dg4P",
  "Tabs__divider--vertical": "Tabs__Tabs__divider--vertical___2PeiB"
};

function Tab(_ref) {
  var _classNames;

  var children = _ref.children,
      className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      href = _ref.href,
      id = _ref.id,
      onSelect = _ref.onSelect,
      _ref$selected = _ref.selected,
      selected = _ref$selected === void 0 ? false : _ref$selected,
      style = _ref.style,
      _ref$tabIndex = _ref.tabIndex,
      tabIndex = _ref$tabIndex === void 0 ? 0 : _ref$tabIndex,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-tab' : _ref$testId;
  var handleClick = (0, _react.useCallback)(function (e) {
    if (onSelect && !disabled) {
      onSelect(id, e);
    }
  }, [disabled, id, onSelect]);
  var handleKeyPress = (0, _react.useCallback)(function (e) {
    if (onSelect && e.key === 'Enter') {
      onSelect(id, e);
      e.preventDefault();
    }
  }, [id, onSelect]);
  var elementProps = {
    className: (0, _classnames["default"])(styles.Tab, (_classNames = {}, (0, _defineProperty2["default"])(_classNames, styles['Tab__selected'], selected), (0, _defineProperty2["default"])(_classNames, styles['Tab__disabled'], disabled), _classNames), className),
    onClick: handleClick,
    onKeyPress: handleKeyPress,
    style: style,
    'data-test-id': testId,
    tabIndex: tabIndex
  };

  if (disabled) {
    elementProps['aria-disabled'] = true;
  }

  if (href) {
    elementProps['href'] = href;

    if (selected) {
      elementProps['aria-current'] = 'page';
    }

    return /*#__PURE__*/_react["default"].createElement("a", elementProps, children);
  } else {
    elementProps['aria-selected'] = selected;
    elementProps['role'] = 'tab';
    elementProps['aria-controls'] = id;
    return /*#__PURE__*/_react["default"].createElement("div", elementProps, children);
  }
}