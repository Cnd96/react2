"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconButton = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Icon = require("../Icon");

var _TabFocusTrap = require("../TabFocusTrap");

var _excluded = ["buttonType", "className", "disabled", "href", "iconProps", "label", "onClick", "testId", "withDropdown", "target", "rel"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var styles = {
  "IconButton": "IconButton__IconButton___1_XeU a11y__focus-outline--default___2hwb1",
  "IconButton__inner": "IconButton__IconButton__inner___3fnmT",
  "IconButton--primary": "IconButton__IconButton--primary___1nYDN",
  "IconButton__icon": "IconButton__IconButton__icon___3yZQN",
  "IconButton--positive": "IconButton__IconButton--positive___HkCX3",
  "IconButton--negative": "IconButton__IconButton--negative___dW81q",
  "IconButton--secondary": "IconButton__IconButton--secondary___3Gc3d",
  "IconButton--muted": "IconButton__IconButton--muted___22_IZ",
  "IconButton--white": "IconButton__IconButton--white___3GUQP",
  "IconButton--disabled": "IconButton__IconButton--disabled___1YhDh",
  "IconButton__label": "IconButton__IconButton__label___1kp5y helpers__sr-only___3Kv3z",
  "IconButton__dropdown": "IconButton__IconButton__dropdown___NoDIS"
};

var IconButton = function IconButton(_ref) {
  var _cn;

  var _ref$buttonType = _ref.buttonType,
      buttonType = _ref$buttonType === void 0 ? 'primary' : _ref$buttonType,
      className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      href = _ref.href,
      iconProps = _ref.iconProps,
      label = _ref.label,
      onClick = _ref.onClick,
      _ref$testId = _ref.testId,
      testId = _ref$testId === void 0 ? 'cf-ui-icon-button' : _ref$testId,
      _ref$withDropdown = _ref.withDropdown,
      withDropdown = _ref$withDropdown === void 0 ? false : _ref$withDropdown,
      target = _ref.target,
      rel = _ref.rel,
      otherProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
  var classNames = (0, _classnames["default"])(styles.IconButton, className, (_cn = {}, (0, _defineProperty2["default"])(_cn, styles['IconButton--disabled'], disabled), (0, _defineProperty2["default"])(_cn, styles["IconButton--".concat(buttonType)], buttonType), _cn));

  var elementProps = _objectSpread({
    className: classNames,
    onClick: !disabled ? onClick : undefined,
    'data-test-id': testId
  }, otherProps);

  var content = /*#__PURE__*/_react["default"].createElement(_TabFocusTrap.TabFocusTrap, {
    className: styles.IconButton__inner
  }, /*#__PURE__*/_react["default"].createElement(_Icon.Icon, (0, _extends2["default"])({}, iconProps, {
    className: (0, _classnames["default"])(styles.IconButton__icon, iconProps.className)
  })), label && /*#__PURE__*/_react["default"].createElement("span", {
    className: styles.IconButton__label
  }, label), withDropdown && /*#__PURE__*/_react["default"].createElement(_Icon.Icon, {
    icon: "ChevronDown",
    color: "secondary",
    className: styles.IconButton__dropdown
  }));

  if (href) {
    if (disabled) {
      return /*#__PURE__*/_react["default"].createElement("a", elementProps, content);
    }

    return /*#__PURE__*/_react["default"].createElement("a", (0, _extends2["default"])({}, elementProps, {
      href: href,
      target: target,
      rel: rel
    }), content);
  }

  return /*#__PURE__*/_react["default"].createElement("button", (0, _extends2["default"])({}, elementProps, {
    type: "button",
    disabled: disabled
  }), content);
};

exports.IconButton = IconButton;