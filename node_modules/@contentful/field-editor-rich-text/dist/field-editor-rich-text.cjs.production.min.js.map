{"version":3,"file":"field-editor-rich-text.cjs.production.min.js","sources":["../src/plugins/List/EditListWrapper.js","../src/constants/Schema.js","../src/plugins/shared/PluginApi.js","../src/plugins/shared/ToolbarIcon.js","../src/plugins/shared/PropTypes.js","../src/plugins/shared/UtilHave.js","../src/plugins/shared/MarkPlugin.js","../src/plugins/shared/MarkDecorator.js","../src/plugins/shared/Util.js","../src/plugins/shared/MarkToggleDecorator.js","../src/plugins/Bold/index.js","../src/plugins/Italic/index.js","../src/plugins/Underlined/index.js","../src/plugins/Code/index.js","../src/plugins/shared/BlockToggleDecorator.js","../src/plugins/Quote/Util.js","../src/plugins/shared/NodeDecorator.js","../src/plugins/Quote/QuotePlugin.js","../src/plugins/Quote/index.js","../../../node_modules/regenerator-runtime/runtime.js","../src/plugins/EmbeddedEntityBlock/FetchingWrappedEntryCard.js","../src/plugins/EmbeddedEntityBlock/FetchingWrappedAssetCard.js","../src/dialogs/HypelinkDialog/HyperlinkDialog.jsx","../src/helpers/getLinkedContentTypeIdsForNodeType.js","../src/helpers/newEntitySelectorConfigFromRichTextField.js","../src/validations/index.js","../src/plugins/Hyperlink/Util.js","../src/plugins/Hyperlink/ToolbarIcon.js","../src/plugins/Hyperlink/styles.js","../src/helpers/browserSupport.js","../src/plugins/Hyperlink/EntityHyperlinkTootip.js","../src/plugins/Hyperlink/truncate.js","../src/plugins/Hyperlink/Hyperlink.js","../src/plugins/Hyperlink/index.js","../src/plugins/shared/ToolbarDropdownListItem.js","../src/plugins/shared/BlockSelectDecorator.js","../src/plugins/Heading/HeadingDropdown.js","../src/plugins/Heading/HeadingDropdownItem.js","../src/plugins/Heading/Paragraph.js","../src/plugins/Heading/index.js","../src/plugins/EmbeddedEntityBlock/Util.js","../src/plugins/EmbeddedEntityBlock/EmbeddedEntityBlock.styles.ts","../src/plugins/EmbeddedEntityBlock/ToolbarIcon.js","../src/plugins/EmbeddedEntityBlock/EmbeddedEntityBlock.js","../src/plugins/EmbeddedEntityBlock/index.js","../src/plugins/EmbeddedEntryInline/Utils.js","../src/plugins/EmbeddedEntryInline/EmbeddedEntryInline.styles.ts","../src/plugins/EmbeddedEntryInline/ToolbarIcon.js","../src/plugins/EmbeddedEntryInline/FetchingWrappedInlineEntryCard.js","../src/plugins/EmbeddedEntryInline/EmbeddedEntryInline.js","../src/plugins/EmbeddedEntryInline/index.js","../src/plugins/List/ToolbarDecorator.js","../src/plugins/List/index.js","../src/plugins/Hr/index.js","../src/plugins/Paste/Paste.js","../src/plugins/Paste/index.js","../src/plugins/PasteHtml/Serializer.js","../src/plugins/CommandPalette/Util.js","../src/plugins/CommandPalette/CommandPaletteService.js","../src/plugins/CommandPalette/CommandPanel/CommandPanelMenu.js","../src/plugins/CommandPalette/CommandPanel/index.js","../src/plugins/CommandPalette/CommandPalette.js","../src/plugins/CommandPalette/CommandMark.js","../src/plugins/CommandPalette/index.js","../src/plugins/index.js","../src/plugins/InsertBeforeFirstVoidBlock/index.js","../src/plugins/InsertBeforeFirstVoidBlock/Util.js","../src/plugins/Paragraph/index.js","../src/plugins/PasteHtml/index.js","../src/plugins/PasteText/index.js","../src/plugins/NewLinePlugin/index.js","../src/plugins/EntryEmbedDropdown/index.js","../src/Toolbar/index.js","../src/Toolbar/StickyToolbarWrapper.js","../src/RichTextEditor.jsx","../src/dialogs/openRichTextDialog.jsx","../src/dialogs/renderRichTextDialog.jsx"],"sourcesContent":["import { BLOCKS } from '@contentful/rich-text-types';\nimport EditList from '@productboard/slate-edit-list';\n\nexport default opt => {\n  const config = {\n    types: [BLOCKS.OL_LIST, BLOCKS.UL_LIST],\n    typeItem: BLOCKS.LIST_ITEM,\n    typeDefault: BLOCKS.PARAGRAPH,\n    ...opt\n  };\n\n  const plugin = EditList(config);\n\n  return plugin;\n};\n","import fromPairs from 'lodash/fromPairs';\nimport {\n  BLOCKS,\n  INLINES,\n  TOP_LEVEL_BLOCKS,\n  VOID_BLOCKS,\n  CONTAINERS\n} from '@contentful/rich-text-types';\n\nimport ListPlugin from '../plugins/List/EditListWrapper';\n\nconst mapVoidTypes = nodeTypes => {\n  return fromPairs(nodeTypes.map(nodeType => [nodeType, { isVoid: true }]));\n};\n\nconst listPlugin = ListPlugin();\n\nexport default {\n  document: {\n    nodes: [\n      {\n        types: TOP_LEVEL_BLOCKS\n      }\n    ]\n  },\n  blocks: {\n    [BLOCKS.PARAGRAPH]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    [BLOCKS.HEADING_1]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    [BLOCKS.HEADING_2]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    [BLOCKS.HEADING_3]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    [BLOCKS.HEADING_4]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    [BLOCKS.HEADING_5]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    [BLOCKS.HEADING_6]: {\n      nodes: [\n        {\n          types: Object.values(INLINES)\n        },\n        {\n          objects: ['text', 'inline']\n        }\n      ]\n    },\n    ...mapVoidTypes(VOID_BLOCKS),\n    // The schema for the lists and list-items is defined in the slate-edit-list plugin.\n    // Due to the bug in slate@0.44.9 we have to stitch the schema manually.\n    // Related bug ticket AUTH-888\n    ...listPlugin.schema.blocks,\n    [BLOCKS.QUOTE]: {\n      nodes: [\n        {\n          match: [CONTAINERS[BLOCKS.QUOTE].map(type => ({ type }))],\n          min: 1\n        }\n      ],\n      normalize: (editor, error) => {\n        if (error.code === 'child_type_invalid') {\n          return editor.unwrapBlockByKey(error.node.key, BLOCKS.QUOTE);\n        }\n      }\n    }\n  },\n  inlines: {\n    [INLINES.HYPERLINK]: {\n      nodes: [\n        {\n          objects: ['text']\n        }\n      ]\n    },\n    [INLINES.ENTRY_HYPERLINK]: {\n      nodes: [\n        {\n          objects: ['text']\n        }\n      ]\n    },\n    [INLINES.ASSET_HYPERLINK]: {\n      nodes: [\n        {\n          objects: ['text']\n        }\n      ]\n    },\n    [INLINES.EMBEDDED_ENTRY]: {\n      isVoid: true\n    }\n  }\n};\n","import PropTypes from 'prop-types';\n\n/**\n * All known origins for Rich Text actions\n * @type {object}\n */\nexport const actionOrigin = {\n  TOOLBAR: 'toolbar-icon',\n  SHORTCUT: 'shortcut',\n  VIEWPORT: 'viewport-interaction',\n  COMMAND_PALETTE: 'command-palette',\n};\n\nconst createActionLogger = (onAction, origin) => (name, data) => {\n  onAction(name, { origin, ...data });\n};\n\n/**\n * Creates an api that is passed to editor and toolbar widgets.\n *\n * @param {object} sdk\n * @param {function } onAction\n * @returns {{ sdk: {object}, logViewportAction: {function}, createActionLogger: {function}, createActionLogger: {function} }}\n */\nexport const createRichTextAPI = ({ sdk, onAction }) => {\n  const richTextAPI = {\n    sdk,\n    logViewportAction: createActionLogger(onAction, actionOrigin.VIEWPORT),\n    logShortcutAction: createActionLogger(onAction, actionOrigin.SHORTCUT),\n    logToolbarAction: createActionLogger(onAction, actionOrigin.TOOLBAR),\n    logCommandPaletteAction: createActionLogger(onAction, actionOrigin.COMMAND_PALETTE),\n  };\n  return richTextAPI;\n};\n\n/**\n * Describes the prop types a Rich Text editor plugin can expect.\n * @type {object}\n */\nexport const EDITOR_PLUGIN_PROP_TYPES = {\n  richTextAPI: PropTypes.shape({\n    sdk: PropTypes.object.isRequired,\n    logViewportAction: PropTypes.func.isRequired,\n    logShortcutAction: PropTypes.func.isRequired,\n    logToolbarAction: PropTypes.func.isRequired,\n  }),\n};\n\n/**\n * Describes the prop types a Rich Text toolbar plugin can expect.\n * @type {object}\n */\nexport const TOOLBAR_PLUGIN_PROP_TYPES = {\n  ...EDITOR_PLUGIN_PROP_TYPES,\n  editor: PropTypes.object.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  isButton: PropTypes.bool,\n  // TODO: Should get rid of this as it's just necessary as a hack to prevent\n  //  crashes before the user manually set the focus to the Slate input.\n  canAutoFocus: PropTypes.bool,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import { Icon } from '@contentful/forma-36-react-components';\nimport { EditorToolbarButton } from '@contentful/forma-36-react-components';\n\nexport default class ToolbarIcon extends Component {\n  static propTypes = {\n    isActive: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    icon: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string,\n  };\n\n  handleClick = (event) => {\n    event.preventDefault();\n    this.props.onToggle(event);\n  };\n\n  render() {\n    const { icon, isActive, disabled, title, type } = this.props;\n\n    return (\n      <EditorToolbarButton\n        icon={icon}\n        tooltip={title}\n        label={title}\n        isActive={isActive}\n        disabled={disabled}\n        data-test-id={`toolbar-toggle-${type}`}\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nexport const MarkPropTypes = {\n  attributes: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n  mark: PropTypes.string.isRequired\n};\n\nexport const NodePropTypes = {\n  attributes: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n  node: PropTypes.shape({\n    type: PropTypes.string.isRequired\n  }).isRequired\n};\n","export const haveMarks = ({ value }, type) => {\n  return value.activeMarks.some(mark => mark.type === type);\n};\n\nexport const haveBlocks = ({ value }, type) => {\n  return value.blocks.some(node => node.type === type);\n};\n\nexport const haveInlines = ({ value }, type) => {\n  return value.inlines.some(inline => inline.type === type);\n};\n\nexport function haveAnyInlines({ value }) {\n  return value.inlines.size > 0;\n}\n\n/**\n * Checks if all inline nodes in the selectin have a certain type.\n * Returns false if there are no inline nodes in the selection.\n *\n * @param {slate.Editor} editor\n * @param {string} type\n * @returns {boolean}\n */\nexport function haveEveryInlineOfType({ value }, type) {\n  if (value.inlines.size > 0) {\n    return value.inlines.every(inline => inline.type === type);\n  }\n\n  return false;\n}\n\nexport const haveTextInSomeBlocks = ({ value }) => {\n  if (value.blocks.size > 0) {\n    return value.blocks.some(block => block.text);\n  }\n};\n","import isHotkey from 'is-hotkey';\nimport markDecorator from './MarkDecorator';\nimport { haveMarks } from './UtilHave';\nimport { css } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\n\nconst styles = {\n  // TODO: Ensure a bold mark on a headline makes the heading appear even\n  //  bolder. Consider to make headings non-bold by default.\n  bold: css({\n    color: 'inherit',\n    fontWeight: tokens.fontWeightDemiBold,\n  }),\n  italic: css({\n    fontStyle: 'italic',\n    lineHeight: 1, // Prevents vertical jitter effect when applying code mark.\n  }),\n  code: css({\n    fontFamily: tokens.fontStackMonospace,\n    fontSize: '.9em', // Can't use `rem` to account for code inside a heading.\n  }),\n};\n\nexport default function ({ type, tagName, hotkey, richTextAPI }) {\n  return {\n    renderMark: (props, _editor, next) => {\n      if (props.mark.type === type) {\n        return markDecorator(tagName, { className: styles[type] })(props);\n      }\n      return next();\n    },\n    onKeyDown(event, editor, next) {\n      if (isHotkey(hotkey, event)) {\n        editor.toggleMark(type);\n\n        const action = haveMarks(editor, type) ? 'mark' : 'unmark';\n        richTextAPI.logShortcutAction(action, { markType: type });\n        return;\n      }\n      return next();\n    },\n  };\n}\n","import React from 'react';\nimport { MarkPropTypes } from './PropTypes';\n\nexport default function(Tag, tagProps = {}) {\n  const CommonMark = ({ attributes, children }) => {\n    return (\n      <Tag {...tagProps} {...attributes}>\n        {children}\n      </Tag>\n    );\n  };\n\n  CommonMark.displayName = `${Tag}-mark`;\n  CommonMark.propTypes = MarkPropTypes;\n\n  return CommonMark;\n}\n","/**\n * Handles setting the focus in the Slate editor (if possible due to Slate restrictions)\n * when clicking on a toolbar acton while the editor got no focus.\n *\n * Ideally we would always focus the editor in his case, but this might result\n * in a Slate crash if the editor hasn't been manually focused by the user at\n * that point.\n */\nexport const toolbarActionHandlerWithSafeAutoFocus = (component, customHandler) => (event) => {\n  event.preventDefault();\n\n  const { editor, canAutoFocus } = component.props;\n\n  if (!editor.value.selection.isFocused) {\n    if (canAutoFocus) {\n      editor.focus();\n    } else {\n      // Note: This is only necessary as Slate in 0.4x in our case crashes when\n      //  working on the document before the user manually focuses. Attempts at\n      //  programmatically setting focus and a proper value.selection were in vain.\n      // TODO: Upgrade Slate or figure out how to editor.setFocus when clicking\n      //  a toolbar icon without the editor crashing when starting to type.\n      return;\n    }\n  }\n  return customHandler(event);\n};\n","import * as React from 'react';\nimport { haveMarks } from './UtilHave';\nimport { toolbarActionHandlerWithSafeAutoFocus } from './Util';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from './PluginApi';\n\nexport default ({ type, title, icon }) => (Mark) => {\n  return class CommonToggleMark extends React.Component {\n    static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n    handleToggle = toolbarActionHandlerWithSafeAutoFocus(this, () => {\n      const {\n        editor,\n        onToggle,\n        richTextAPI: { logToolbarAction },\n      } = this.props;\n      onToggle(editor.toggleMark(type));\n      const action = haveMarks(editor, type) ? 'mark' : 'unmark';\n      logToolbarAction(action, { markType: type });\n    });\n\n    render() {\n      const { editor, disabled } = this.props;\n      return (\n        <Mark\n          type={type}\n          icon={icon}\n          title={title}\n          onToggle={this.handleToggle}\n          isActive={haveMarks(editor, type)}\n          disabled={disabled}\n        />\n      );\n    }\n  };\n};\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\n\nexport const BoldPlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.BOLD,\n    tagName: 'b',\n    hotkey: ['mod+b'],\n    richTextAPI\n  });\n};\n\nclass Bold extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.BOLD,\n  title: 'Bold',\n  icon: 'FormatBold'\n})(Bold);\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\n\nexport const ItalicPlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.ITALIC,\n    tagName: 'em',\n    hotkey: ['mod+i'],\n    richTextAPI\n  });\n};\n\nclass Italic extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.ITALIC,\n  title: 'Italic',\n  icon: 'FormatItalic'\n})(Italic);\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\n\nexport const UnderlinedPlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.UNDERLINE,\n    tagName: 'u',\n    hotkey: ['mod+u'],\n    richTextAPI\n  });\n};\n\nclass Underlined extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.UNDERLINE,\n  title: 'Underline',\n  icon: 'FormatUnderlined'\n})(Underlined);\n","import React, { Component } from 'react';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport markPlugin from '../shared/MarkPlugin';\nimport markToggleDecorator from '../shared/MarkToggleDecorator';\nimport { MARKS } from '@contentful/rich-text-types';\n\nexport const CodePlugin = ({ richTextAPI }) => {\n  return markPlugin({\n    type: MARKS.CODE,\n    tagName: 'code',\n    hotkey: ['mod+/'],\n    richTextAPI\n  });\n};\n\nclass Code extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default markToggleDecorator({\n  type: MARKS.CODE,\n  title: 'Code',\n  icon: 'Code'\n})(Code);\n","import * as React from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { haveBlocks } from './UtilHave';\nimport { toolbarActionHandlerWithSafeAutoFocus } from './Util';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from './PluginApi';\n\n/**\n * Toggles formatting between a given node type and a plain paragraph.\n *\n * @param {slate.Editor} editor\n * @param {stirng} type\n * @returns {boolean} New toggle state after the change.\n */\nexport const toggleChange = (editor, type) => {\n  const isActive = haveBlocks(editor, type);\n  editor.setBlocks(isActive ? BLOCKS.PARAGRAPH : type);\n  return !isActive;\n};\n\nconst isBlockActive = (editor, type) => haveBlocks(editor, type);\n\nexport default ({ type, title, icon, applyChange = toggleChange, isActive = isBlockActive }) => (\n  Block\n) => {\n  return class BlockToggleDecorator extends React.Component {\n    static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n    handleToggle = toolbarActionHandlerWithSafeAutoFocus(this, () => {\n      const {\n        editor,\n        onToggle,\n        richTextAPI: { logToolbarAction },\n      } = this.props;\n      const isActive = applyChange(editor, type);\n      onToggle(editor);\n      const actionName = isActive ? 'insert' : 'remove';\n      logToolbarAction(actionName, { nodeType: type });\n    });\n\n    render() {\n      const { editor, disabled, richTextAPI } = this.props;\n\n      return (\n        <Block\n          type={type}\n          icon={icon}\n          title={title}\n          onToggle={this.handleToggle}\n          isActive={isActive(editor, type)}\n          disabled={disabled}\n          richTextAPI={richTextAPI}\n        />\n      );\n    }\n  };\n};\n","import { BLOCKS } from '@contentful/rich-text-types';\n\nconst getParent = editor => {\n  const range = editor.value.selection;\n\n  if (!range.start.key) {\n    return null;\n  }\n\n  const startBlock = editor.value.document.getClosestBlock(range.start.key);\n\n  return editor.value.document.getParent(startBlock.key);\n};\n\nexport const isSelectionInQuote = editor => {\n  const ancestor = getParent(editor);\n\n  if (!ancestor) {\n    return false;\n  }\n\n  return ancestor.type === BLOCKS.QUOTE;\n};\n\n/**\n * Toggles formatting between block quote and a plain paragraph.\n *\n * @param {slate.Editor} editor\n * @returns {boolean} New toggle state after the change.\n */\nexport const applyChange = editor => {\n  const isActive = isSelectionInQuote(editor);\n  if (isActive) {\n    editor.unwrapBlock(BLOCKS.QUOTE);\n  } else {\n    editor.setBlocks(BLOCKS.PARAGRAPH).wrapBlock(BLOCKS.QUOTE);\n  }\n  return !isActive;\n};\n","import * as React from 'react';\nimport { NodePropTypes } from './PropTypes';\nimport { css } from 'emotion';\nimport camelCase from 'lodash/camelCase';\nimport tokens from '@contentful/forma-36-tokens';\n\nconst headingCss = {\n  fontWeight: tokens.fontWeightMedium,\n  lineHeight: '1.3',\n  margin: `0 0 ${tokens.spacingS}`,\n};\n\nconst styles = {\n  paragraph: css({\n    lineHeight: tokens.lineHeightDefault,\n    marginBottom: '1.5em',\n  }),\n  bold: css({\n    color: 'inherit',\n    fontWeight: tokens.fontWeightDemiBold,\n  }),\n  blockquote: css({\n    margin: '0 0 1.3125rem',\n    borderLeft: `6px solid ${tokens.colorElementLight}`,\n    paddingLeft: '0.875rem',\n    fontStyle: 'normal',\n    '& a': {\n      color: 'inherit',\n    },\n  }),\n  code: css({\n    background: tokens.colorElementLight,\n    padding: '0px',\n    color: tokens.colorTextMid,\n    borderRadius: tokens.borderRadiusSmall,\n  }),\n  textLink: css({\n    fontSize: 'inherit',\n  }),\n  orderedList: css({\n    margin: '0 0 1.25rem 1.25rem',\n    listStyleType: 'decimal',\n    '[data-test-id=\"ordered-list\"]': {\n      listStyleType: 'upper-alpha',\n      '[data-test-id=\"ordered-list\"]': {\n        listStyleType: 'lower-roman',\n        '[data-test-id=\"ordered-list\"]': {\n          listStyleType: 'lower-alpha',\n        },\n      },\n    },\n    '[data-test-id=\"paragraph\"]': {\n      margin: 0,\n      lineHeight: tokens.lineHeightDefault,\n    },\n  }),\n  unorderedList: css({\n    margin: '0 0 1.25rem 1.25rem',\n    listStyleType: 'disc',\n    '[data-test-id=\"unordered-list\"]': {\n      listStyleType: 'circle',\n      '[data-test-id=\"unordered-list\"]': {\n        listStyleType: 'square',\n      },\n    },\n    '[data-test-id=\"paragraph\"]': {\n      margin: 0,\n      lineHeight: tokens.lineHeightDefault,\n    },\n  }),\n  listItem: css({\n    listStyle: 'inherit',\n    margin: 0,\n    '[data-test-id=\"ordered-list\"], [data-test-id=\"unordered-list\"]': {\n      margin: `0 0 0 ${tokens.spacingL}`,\n    },\n  }),\n  heading1: css({\n    ...headingCss,\n    fontSize: '1.875rem',\n  }),\n  heading2: css({\n    ...headingCss,\n    fontSize: '1.5625rem',\n  }),\n  heading3: css({\n    ...headingCss,\n    fontSize: '1.375rem',\n  }),\n  heading4: css({\n    ...headingCss,\n    fontSize: '1.25rem',\n  }),\n  heading5: css({\n    ...headingCss,\n    fontSize: '1.125rem',\n  }),\n  heading6: css({\n    ...headingCss,\n    fontSize: '1rem',\n  }),\n};\n\nexport default function (Tag, tagProps = {}) {\n  const CommonNode = ({ attributes, children, node }) => {\n    return (\n      <Tag\n        className={styles[camelCase(node.type)]}\n        data-test-id={node.type}\n        {...tagProps}\n        {...attributes}>\n        {children}\n      </Tag>\n    );\n  };\n\n  CommonNode.displayName = `${Tag}-node`;\n  CommonNode.propTypes = NodePropTypes;\n\n  return CommonNode;\n}\n","import isHotkey from 'is-hotkey';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { applyChange, isSelectionInQuote } from './Util';\nimport commonNode from '../shared/NodeDecorator';\nimport { haveTextInSomeBlocks } from '../shared/UtilHave';\n\nconst newPlugin = (defaultType, tagName, hotkey) => ({\n  type = defaultType,\n  richTextAPI: { logShortcutAction }\n}) => {\n  return {\n    renderNode: (props, _editor, next) => {\n      if (props.node.type === type) {\n        return commonNode(tagName)(props);\n      }\n      return next();\n    },\n    onKeyDown: (e, editor, next) => {\n      if (isHotkey(hotkey, e)) {\n        const isActive = applyChange(editor);\n        const actionName = isActive ? 'insert' : 'remove';\n        logShortcutAction(actionName, { nodeType: type });\n        return;\n      }\n      if (isHotkey('Backspace', e) && isSelectionInQuote(editor) && !haveTextInSomeBlocks(editor)) {\n        editor.unwrapBlock(BLOCKS.QUOTE).delete();\n        return;\n      }\n      return next();\n    }\n  };\n};\n\nconst QuotePlugin = newPlugin(BLOCKS.QUOTE, 'blockquote', ['mod+shift+1']);\n\nexport default QuotePlugin;\n","import React, { Component } from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport blockToggleDecorator from '../shared/BlockToggleDecorator';\nimport { applyChange, isSelectionInQuote } from './Util';\n\nclass Blockquote extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\n// TODO: Currently it seems this is the only place using `blockToggleDecorator` but we still\n//  have to inject a custom `applyChange`. Seems like we could get rid of blockToggleDecorator.\nexport default blockToggleDecorator({\n  type: BLOCKS.QUOTE,\n  title: 'Blockquote',\n  icon: 'Quote',\n  applyChange,\n  isActive: isSelectionInQuote\n})(Blockquote);\n\nexport { default as QuotePlugin } from './QuotePlugin';\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { EntryCard } from '@contentful/forma-36-react-components';\nimport {\n  useEntities,\n  MissingEntityCard,\n  WrappedEntryCard,\n} from '@contentful/field-editor-reference';\n\nexport function FetchingWrappedEntryCard(props) {\n  const { getOrLoadEntry, loadEntityScheduledActions, entries } = useEntities();\n\n  React.useEffect(() => {\n    getOrLoadEntry(props.entryId);\n  }, [props.entryId]);\n\n  const entry = entries[props.entryId];\n\n  React.useEffect(() => {\n    if (entry) {\n      props.onEntityFetchComplete && props.onEntityFetchComplete();\n    }\n  }, [entry]);\n\n  if (entry === 'failed') {\n    return (\n      <MissingEntityCard\n        entityType=\"Entry\"\n        isDisabled={props.isDisabled}\n        onRemove={props.onRemove}\n      />\n    );\n  }\n\n  if (entry === undefined) {\n    return <EntryCard size=\"default\" loading />;\n  }\n\n  const contentType = props.sdk.space\n    .getCachedContentTypes()\n    .find((contentType) => contentType.sys.id === entry.sys.contentType.sys.id);\n\n  return (\n    <WrappedEntryCard\n      getAsset={props.sdk.space.getAsset}\n      getEntityScheduledActions={loadEntityScheduledActions}\n      entryUrl={props.getEntryUrl && props.getEntryUrl(entry.sys.id)}\n      size=\"default\"\n      isSelected={props.isSelected}\n      isDisabled={props.isDisabled}\n      localeCode={props.locale}\n      defaultLocaleCode={props.sdk.locales.default}\n      contentType={contentType}\n      entry={entry}\n      onEdit={props.onEdit}\n      onRemove={props.onRemove}\n      isClickable={false}\n    />\n  );\n}\n\nFetchingWrappedEntryCard.propTypes = {\n  sdk: PropTypes.object.isRequired,\n  entryId: PropTypes.string.isRequired,\n  locale: PropTypes.string.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onRemove: PropTypes.func,\n  onEdit: PropTypes.func,\n  getEntryUrl: PropTypes.func,\n  onEntityFetchComplete: PropTypes.func,\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { AssetCard } from '@contentful/forma-36-react-components';\nimport {\n  useEntities,\n  MissingEntityCard,\n  WrappedAssetCard,\n} from '@contentful/field-editor-reference';\n\nexport function FetchingWrappedAssetCard(props) {\n  const { getOrLoadAsset, loadEntityScheduledActions, assets } = useEntities();\n\n  React.useEffect(() => {\n    getOrLoadAsset(props.assetId);\n  }, [props.assetId]);\n\n  const asset = assets[props.assetId];\n\n  React.useEffect(() => {\n    if (asset) {\n      props.onEntityFetchComplete && props.onEntityFetchComplete();\n    }\n  }, [asset]);\n\n  if (asset === 'failed') {\n    return (\n      <MissingEntityCard\n        entityType=\"Asset\"\n        isDisabled={props.isDisabled}\n        onRemove={props.onRemove}\n      />\n    );\n  }\n\n  if (asset === undefined) {\n    return <AssetCard size=\"default\" isLoading title=\"\" src=\"\" href=\"\" />;\n  }\n\n  return (\n    <WrappedAssetCard\n      getAsset={props.sdk.space.getAsset}\n      getEntityScheduledActions={loadEntityScheduledActions}\n      getAssetUrl={props.getAssetUrl}\n      size=\"default\"\n      isSelected={props.isSelected}\n      isDisabled={props.isDisabled}\n      localeCode={props.locale}\n      defaultLocaleCode={props.sdk.locales.default}\n      asset={asset}\n      onEdit={props.onEdit}\n      onRemove={props.onRemove}\n      isClickable={false}\n    />\n  );\n}\n\nFetchingWrappedAssetCard.propTypes = {\n  sdk: PropTypes.object.isRequired,\n  locale: PropTypes.string.isRequired,\n  assetId: PropTypes.string.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onRemove: PropTypes.func,\n  onEdit: PropTypes.func,\n  getAssetUrl: PropTypes.func,\n  onEntityFetchComplete: PropTypes.func,\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport PropTypes from 'prop-types';\nimport tokens from '@contentful/forma-36-tokens';\nimport {\n  Modal,\n  TextField,\n  Button,\n  Form,\n  FormLabel,\n  TextLink,\n  SelectField,\n  Option,\n} from '@contentful/forma-36-react-components';\nimport { EntityProvider } from '@contentful/field-editor-reference';\nimport { FetchingWrappedEntryCard } from '../../plugins/EmbeddedEntityBlock/FetchingWrappedEntryCard';\nimport { FetchingWrappedAssetCard } from '../../plugins/EmbeddedEntityBlock/FetchingWrappedAssetCard';\n\nexport const LINK_TYPES = {\n  URI: 'uri',\n  ENTRY: 'Entry',\n  ASSET: 'Asset',\n};\n\nfunction isFeaturingEntitySelector(entitySelectorConfigs = {}) {\n  return !!entitySelectorConfigs.Entry || !!entitySelectorConfigs.Asset;\n}\n\nfunction entityToLink(entity) {\n  const { id, type } = entity.sys;\n  return { sys: { id, type: 'Link', linkType: type } };\n}\n\nexport class HyperlinkDialog extends React.Component {\n  static propTypes = {\n    sdk: PropTypes.object.isRequired,\n    labels: PropTypes.shape({\n      title: PropTypes.string,\n      confirm: PropTypes.string,\n    }),\n    value: PropTypes.shape({\n      text: PropTypes.string,\n      uri: PropTypes.string,\n      target: PropTypes.object,\n      // Will be overwritten accordingly if `uri` or `target.sys.linkType` are set.\n      type: PropTypes.oneOf(['uri', 'Entry', 'Asset']),\n    }),\n    entitySelectorConfigs: PropTypes.object,\n    allowedHyperlinkTypes: PropTypes.arrayOf(\n      PropTypes.oneOf([LINK_TYPES.ENTRY, LINK_TYPES.ASSET, LINK_TYPES.URI])\n    ),\n    hideText: PropTypes.bool,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    labels: {\n      title: 'Insert link',\n      confirm: 'Insert link',\n    },\n    value: {},\n    hideText: false,\n    entitySelectorConfigs: {},\n    allowedHyperlinkTypes: [LINK_TYPES.ENTRY, LINK_TYPES.ASSET, LINK_TYPES.URI],\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { text, type, uri, target } = props.value;\n    const isEntityLink = Boolean(target);\n    const entityLinks = {\n      [LINK_TYPES.ENTRY]: null,\n      [LINK_TYPES.ASSET]: null,\n    };\n    let linkType = type;\n\n    if (isEntityLink) {\n      linkType = target.sys.linkType;\n      entityLinks[linkType] = target;\n    } else if (props.allowedHyperlinkTypes.includes(LINK_TYPES.URI)) {\n      linkType = LINK_TYPES.URI;\n    } else {\n      linkType = props.allowedHyperlinkTypes[0];\n    }\n\n    this.state = { text, uri, entityLinks, type: linkType };\n  }\n\n  setTargetEntity(type, entity) {\n    this.setState((state) => ({\n      entityLinks: {\n        ...state.entityLinks,\n        [type]: entity ? entityToLink(entity) : undefined,\n      },\n    }));\n  }\n\n  getValue() {\n    const { text, type, uri } = this.state;\n    const value = { type };\n    if (text) {\n      value.text = text;\n    }\n    if (type === LINK_TYPES.URI) {\n      value.uri = uri;\n    } else {\n      value.target = this.state.entityLinks[type];\n    }\n    return value;\n  }\n\n  isLinkComplete() {\n    const { text, type, uri, target } = this.getValue();\n    const requiresText = !this.props.hideText;\n    if (requiresText && !text) {\n      return false;\n    }\n    return (type === LINK_TYPES.URI && uri) || target;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onClose(this.getValue());\n  };\n\n  selectEntry = async () => {\n    const { locale, contentTypes } = this.props.entitySelectorConfigs.Entry;\n    const entry = await this.props.sdk.dialogs.selectSingleEntry({ locale, contentTypes });\n    this.setTargetEntity(LINK_TYPES.ENTRY, entry);\n  };\n\n  selectAsset = async () => {\n    const { locale } = this.props.entitySelectorConfigs.Asset;\n    const asset = await this.props.sdk.dialogs.selectSingleAsset({ locale });\n    this.setTargetEntity(LINK_TYPES.ASSET, asset);\n  };\n\n  render() {\n    const { labels } = this.props;\n    return (\n      <EntityProvider sdk={this.props.sdk}>\n        <React.Fragment>\n          <Modal.Content>{this.renderFields()}</Modal.Content>\n          <Modal.Controls>\n            <Button\n              type=\"submit\"\n              buttonType=\"positive\"\n              onClick={this.handleSubmit}\n              disabled={!this.isLinkComplete()}\n              testId=\"confirm-cta\">\n              {labels.confirm}\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={() => this.props.onClose(null)}\n              buttonType=\"muted\"\n              testId=\"cancel-cta\">\n              Cancel\n            </Button>\n          </Modal.Controls>\n        </React.Fragment>\n      </EntityProvider>\n    );\n  }\n\n  renderFields() {\n    const { hideText, allowedHyperlinkTypes, entitySelectorConfigs } = this.props;\n    const { uri, text, type } = this.state;\n    const isUriInputAutoFocused = type === LINK_TYPES.URI && (hideText || !!text);\n\n    return (\n      <Form>\n        {hideText ? null : (\n          <TextField\n            required\n            labelText=\"Link text\"\n            value={text || ''}\n            onChange={(e) => this.setState({ text: e.target.value })}\n            id=\"link-text\"\n            name=\"link-text\"\n            textInputProps={{\n              testId: 'link-text-input',\n              autoFocus: !isUriInputAutoFocused,\n            }}\n          />\n        )}\n        {isFeaturingEntitySelector(entitySelectorConfigs) && (\n          <SelectField\n            labelText=\"Link type\"\n            value={type}\n            onChange={(e) => this.setState({ type: e.target.value })}\n            name=\"link-type\"\n            id=\"link-type\"\n            selectProps={{ testId: 'link-type-select' }}>\n            {/* Show the option if the link type is allowed or the current link is of type that is no longer valid */}\n            {allowedHyperlinkTypes.includes(LINK_TYPES.URI) || type === LINK_TYPES.URI ? (\n              <Option value={LINK_TYPES.URI}>URL</Option>\n            ) : null}\n            {allowedHyperlinkTypes.includes(LINK_TYPES.ENTRY) || type === LINK_TYPES.ENTRY ? (\n              <Option value={LINK_TYPES.ENTRY}>Entry</Option>\n            ) : null}\n            {allowedHyperlinkTypes.includes(LINK_TYPES.ASSET) || type === LINK_TYPES.ASSET ? (\n              <Option value={LINK_TYPES.ASSET}>Asset</Option>\n            ) : null}\n          </SelectField>\n        )}\n        {type === LINK_TYPES.URI ? (\n          <TextField\n            required\n            labelText=\"Link target\"\n            value={uri || ''}\n            textInputProps={{\n              placeholder: 'https://',\n              testId: 'link-uri-input',\n              autoFocus: isUriInputAutoFocused,\n            }}\n            helpText=\"A protocol may be required, e.g. https://\"\n            onChange={(e) => this.setState({ uri: e.target.value })}\n            id=\"link-uri\"\n            name=\"link-uri\"\n          />\n        ) : (\n          this.renderEntityField()\n        )}\n      </Form>\n    );\n  }\n\n  renderEntityField() {\n    const { type, entityLinks } = this.state;\n    const resetEntity = () => this.setTargetEntity(type, null);\n    const entityLink = entityLinks[type];\n    const isEntitySelectorVisible = !entityLink;\n    return (\n      <div>\n        <FormLabel required htmlFor=\"\">\n          Link target\n        </FormLabel>\n        {!isEntitySelectorVisible && (\n          <TextLink className={css({ marginLeft: tokens.spacingS })} onClick={resetEntity}>\n            Remove selection\n          </TextLink>\n        )}\n        {entityLink && (\n          <div>\n            {type === LINK_TYPES.ENTRY && (\n              <FetchingWrappedEntryCard\n                sdk={this.props.sdk}\n                locale={this.props.entitySelectorConfigs.Entry.locale}\n                entryId={entityLink.sys.id}\n                isDisabled\n                isSelected={false}\n              />\n            )}\n            {type == LINK_TYPES.ASSET && (\n              <FetchingWrappedAssetCard\n                sdk={this.props.sdk}\n                locale={this.props.entitySelectorConfigs.Asset.locale}\n                assetId={entityLink.sys.id}\n                isDisabled\n                isSelected={false}\n              />\n            )}\n          </div>\n        )}\n        {/* Keep all entity selectors in the DOM for super fast types switching ux.*/}\n        {isEntitySelectorVisible && this.renderEntitySelector(type, isEntitySelectorVisible)}\n      </div>\n    );\n  }\n\n  renderEntitySelector(type) {\n    return (\n      <div className={css({ marginTop: tokens.spacingS })}>\n        {type === LINK_TYPES.ENTRY && <TextLink onClick={this.selectEntry}>Select entry</TextLink>}\n        {type === LINK_TYPES.ASSET && <TextLink onClick={this.selectAsset}>Select asset</TextLink>}\n      </div>\n    );\n  }\n}\n\nexport const openHyperlinkDialog = (\n  dialogs,\n  { value, showTextInput, allowedHyperlinkTypes, entitySelectorConfigs }\n) => {\n  const isNew = !(value.uri || value.target);\n  const props = {\n    labels: {\n      title: isNew ? 'Insert hyperlink' : 'Edit hyperlink',\n      confirm: isNew ? 'Insert' : 'Update',\n    },\n    value,\n    hideText: !showTextInput,\n    allowedHyperlinkTypes,\n    entitySelectorConfigs,\n  };\n\n  return dialogs.openCurrent({\n    title: props.labels.title,\n    width: 'large',\n    shouldCloseOnEscapePress: true,\n    shouldCloseOnOverlayClick: true,\n    allowHeightOverflow: true,\n    parameters: {\n      type: 'rich-text-hyperlink-dialog',\n      ...props,\n    },\n  });\n};\n","/* eslint-disable you-dont-need-lodash-underscore/find */\nimport flow from 'lodash/flow';\nimport find from 'lodash/find';\nimport get from 'lodash/get';\n\n/**\n * Given a field object and a rich text node type, return a list of valid\n * content type IDs associated with the node type, based on that node type's\n * `linkContentType` validation.\n *\n * If there is no such validation or the validation is empty, return an empty\n * array.\n *\n * The navigation here is explained by the `nodes` validation having signature:\n * { nodes: { [nodeType]: validationObject[] } }\n *\n * We defensively navigate through this object because\n * 1) the field may not have a `validations` array,\n * 2) the `validations` array may be empty,\n * 3) the `validations` array may not have a `nodes` validation,\n * 4) the `nodes` validation may not validate the `nodeType`, and\n * 5) the `nodeType` validations may not have a `linkContentType` validation.\n *\n * Note that passing an empty array will result in all possible content types\n * being whitelisted.\n *\n * @param {object} field\n * @param {string} nodeType\n * @returns {string[]}\n */\nexport default (field, nodeType) =>\n  flow(\n    v => find(v, 'nodes'),\n    v => get(v, ['nodes', nodeType]),\n    v => find(v, 'linkContentType'),\n    v => get(v, 'linkContentType', [])\n  )(field.validations);\n","import getLinkedContentTypeIdsForNodeType from './getLinkedContentTypeIdsForNodeType';\n\n/**\n * Returns a config for the entity selector based on a given rich text field and a\n * rich text node type that the entity should be picked for. Takes the field\n * validations for the given node type into account.\n *\n * @param {object} field\n * @param {string} nodeType\n * @returns {object}\n */\nexport default function newEntitySelectorConfigFromRichTextField(field, nodeType) {\n  return {\n    entityType: getEntityTypeFromRichTextNode(nodeType),\n    locale: field.locale || null, // Will fall back to default locale.\n    contentTypes: getLinkedContentTypeIdsForNodeType(field, nodeType)\n  };\n}\n\nfunction getEntityTypeFromRichTextNode(nodeType) {\n  const words = nodeType.split('-');\n  if (words.indexOf('entry') !== -1) {\n    return 'Entry';\n  }\n  if (words.indexOf('asset') !== -1) {\n    return 'Asset';\n  }\n  throw new Error(`RichText node type \\`${nodeType}\\` has no associated \\`entityType\\``);\n}\n","/* eslint-disable you-dont-need-lodash-underscore/find */\nimport find from 'lodash/find';\nimport flow from 'lodash/flow';\nimport get from 'lodash/get';\nimport { BLOCKS, INLINES, TOP_LEVEL_BLOCKS } from '@contentful/rich-text-types';\n\n// TODO: Move this into separate package (maybe rich-text-types) and share with FE.\nexport const VALIDATIONS = {\n  ENABLED_MARKS: 'enabledMarks',\n  ENABLED_NODE_TYPES: 'enabledNodeTypes'\n};\n\nexport const VALIDATABLE_NODE_TYPES = [\n  ...TOP_LEVEL_BLOCKS.filter(type => type !== BLOCKS.PARAGRAPH),\n  ...Object.values(INLINES)\n];\n\nconst getRichTextValidation = (field, validationType) =>\n  flow(\n    v => find(v, validationType),\n    v => get(v, validationType)\n  )(field.validations);\n\nconst isFormattingOptionEnabled = (field, validationType, nodeTypeOrMark) => {\n  const enabledFormattings = getRichTextValidation(field, validationType);\n\n  if (enabledFormattings === undefined) {\n    return true;\n  }\n\n  return enabledFormattings.includes(nodeTypeOrMark);\n};\n\n/**\n * Checks if nodeType is enabled in the Rich Text Editor Field\n *\n * @param {FieldInfo} field\n * @param {string} nodeType\n * @returns {boolean}\n */\nexport const isNodeTypeEnabled = (field, nodeType) =>\n  isFormattingOptionEnabled(field, VALIDATIONS.ENABLED_NODE_TYPES, nodeType);\n\n/**\n * Checks if mark is enabled in the Rich Text Editor Field\n *\n * @param {FieldInfo} field\n * @param {string} mark\n * @returns {boolean}\n */\nexport const isMarkEnabled = (field, mark) =>\n  isFormattingOptionEnabled(field, VALIDATIONS.ENABLED_MARKS, mark);\n","import { BLOCKS, INLINES } from '@contentful/rich-text-types';\nimport { haveInlines } from '../shared/UtilHave';\nimport { openHyperlinkDialog, LINK_TYPES } from '../../dialogs/HypelinkDialog/HyperlinkDialog';\nimport newEntitySelectorConfigFromRichTextField from '../../helpers/newEntitySelectorConfigFromRichTextField';\nimport { isNodeTypeEnabled } from '../../validations/index';\n\nconst { HYPERLINK, ENTRY_HYPERLINK, ASSET_HYPERLINK } = INLINES;\nconst HYPERLINK_TYPES = [HYPERLINK, ENTRY_HYPERLINK, ASSET_HYPERLINK];\n\nconst nodeToHyperlinkType = {\n  [INLINES.ENTRY_HYPERLINK]: LINK_TYPES.ENTRY,\n  [INLINES.ASSET_HYPERLINK]: LINK_TYPES.ASSET,\n  [INLINES.HYPERLINK]: LINK_TYPES.URI,\n};\n\nfunction getAllowedHyperlinkTypes(field) {\n  const hyperlinkTypes = [INLINES.ENTRY_HYPERLINK, INLINES.ASSET_HYPERLINK, INLINES.HYPERLINK];\n  if (field.type === 'RichText') {\n    return hyperlinkTypes\n      .filter((nodeType) => isNodeTypeEnabled(field, nodeType))\n      .map((nodeType) => nodeToHyperlinkType[nodeType]);\n  }\n\n  return hyperlinkTypes.map((nodeType) => nodeToHyperlinkType[nodeType]);\n}\n\nfunction getEntitySelectorConfigs(field) {\n  const config = {};\n\n  // TODO: Don't pass specific key if CT validation prohibits its type:\n  if (isNodeTypeEnabled(field, INLINES.ENTRY_HYPERLINK)) {\n    config.Entry = newEntitySelectorConfigFromRichTextField(field, 'entry-hyperlink');\n  }\n  if (isNodeTypeEnabled(field, INLINES.ASSET_HYPERLINK)) {\n    config.Asset = newEntitySelectorConfigFromRichTextField(field, 'asset-hyperlink');\n  }\n\n  return config;\n}\n\n/**\n * Returns whether or not the current value selection would allow for a user\n * edit on a hyperlink.\n *\n * @param {slate.Value} value\n * @returns {boolean}\n */\nexport function mayEditLink(value) {\n  return !value.isExpanded && hasHyperlink(value);\n}\n\n/**\n * Returns whether the given value has any hyperlink node.\n *\n * @param {slate.Value} value\n * @returns {boolean}\n */\nexport function hasHyperlink(value) {\n  return HYPERLINK_TYPES.some((type) => haveInlines({ value }, type));\n}\n\n/**\n * Returns whether the given value has any inline node other than hyperlinks.\n *\n * @param {slate.Value} value\n * @returns {boolean}\n */\nexport function hasOnlyHyperlinkInlines(value) {\n  return value.inlines.every((inline) => HYPERLINK_TYPES.includes(inline.type));\n}\n\n/**\n * Allows the user to insert/remove a link depending on whether the current\n * selection has a link or not. If there is no link, a dialog is shown for\n * the user.\n *\n * @param {slate.Editor} editor Will be mutated with the required operations.\n * @param {Object} sdk\n * @param {function} logAction\n * @returns {Promise<void>}\n */\nexport async function toggleLink(editor, sdk, logAction) {\n  if (hasHyperlink(editor.value)) {\n    removeLinks(editor, logAction);\n  } else {\n    await insertLink(editor, sdk, logAction);\n  }\n}\n\nasync function insertLink(change, sdk, logAction) {\n  change.blur(); // Ensures modal input auto-focus will work.\n\n  logAction('openCreateHyperlinkDialog');\n  const showTextInput = !change.value.isExpanded || change.value.fragment.text.trim() === '';\n\n  const result = await openHyperlinkDialog(sdk.dialogs, {\n    showTextInput,\n    value: { text: change.value.fragment.text || '' },\n    allowedHyperlinkTypes: getAllowedHyperlinkTypes(sdk.field),\n    entitySelectorConfigs: getEntitySelectorConfigs(sdk.field),\n  });\n\n  if (!result) {\n    logAction('cancelCreateHyperlinkDialog');\n    change.focus();\n    return;\n  }\n  const { text, type: linkType, uri, target } = result;\n  if (showTextInput) {\n    if (change.isVoid(change.value.blocks.last())) {\n      change.insertBlock(BLOCKS.PARAGRAPH);\n    }\n    change.insertText(text).moveFocusForward(0 - text.length);\n  }\n  const data = target ? { target } : { uri };\n  change.call(wrapLink, linkType, data);\n  const nodeType = linkTypeToNodeType(linkType);\n  logAction('insert', { nodeType, linkType });\n\n  change.focus();\n}\n\nfunction removeLinks(change, logAction) {\n  HYPERLINK_TYPES.forEach((type) => change.unwrapInline(type));\n  change.focus();\n  logAction('unlinkHyperlinks');\n}\n\n/**\n * Allows the user to edit the first selected link of a given Change by showing\n * a dialog and applying the change.\n *\n * @param {slate.Editor} change Will be mutated with the required operations.\n * @param {Object} sdk\n * @param {function} logAction\n * @returns {Promise<void>}\n */\nexport async function editLink(change, sdk, logAction) {\n  const link = change.value.inlines.get(0);\n  if (!link) {\n    throw new Error('Change object contains no link to be edited.');\n  }\n  change.blur(); // Ensures modal input auto-focus will work.\n  logAction('openEditHyperlinkDialog');\n  const { uri: oldUri, target: oldTarget } = link.data.toJSON();\n  const result = await openHyperlinkDialog(sdk.dialogs, {\n    showTextInput: false,\n    value: oldTarget ? { target: oldTarget } : { uri: oldUri },\n    allowedHyperlinkTypes: getAllowedHyperlinkTypes(sdk.field),\n    entitySelectorConfigs: getEntitySelectorConfigs(sdk.field),\n  });\n  if (!result) {\n    logAction('cancelEditHyperlinkDialog');\n    change.focus();\n    return;\n  }\n\n  const { type: linkType, uri, target } = result;\n  const nodeType = linkTypeToNodeType(linkType);\n  const data = target ? { target } : { uri };\n  change.setInlines({ type: nodeType, data });\n  logAction('edit', { nodeType, linkType });\n  change.focus();\n}\n\nfunction wrapLink(change, linkType, data) {\n  change.wrapInline({\n    type: linkTypeToNodeType(linkType),\n    data,\n  });\n  change.moveToEnd();\n}\n\nfunction linkTypeToNodeType(linkType) {\n  switch (linkType) {\n    case 'Entry':\n      return ENTRY_HYPERLINK;\n    case 'Asset':\n      return ASSET_HYPERLINK;\n  }\n  return HYPERLINK;\n}\n","import React, { Component } from 'react';\nimport { INLINES } from '@contentful/rich-text-types';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from '../shared/PluginApi';\nimport { toolbarActionHandlerWithSafeAutoFocus } from '../shared/Util';\nimport { hasHyperlink, toggleLink, hasOnlyHyperlinkInlines } from './Util';\n\nexport default class HyperlinkToolbarIcon extends Component {\n  static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n  handleClick = toolbarActionHandlerWithSafeAutoFocus(this, async () => {\n    const {\n      onToggle,\n      editor,\n      richTextAPI: { sdk, logToolbarAction },\n    } = this.props;\n    await toggleLink(editor, sdk, logToolbarAction);\n    onToggle(editor);\n  });\n\n  render() {\n    const { disabled, editor } = this.props;\n    const isDisabled = disabled || !hasOnlyHyperlinkInlines(editor.value);\n    return (\n      <ToolbarIcon\n        disabled={isDisabled}\n        type={INLINES.HYPERLINK}\n        icon=\"Link\"\n        title=\"Hyperlink\"\n        onToggle={this.handleClick}\n        isActive={hasHyperlink(editor.value)}\n      />\n    );\n  }\n}\n","import { css } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\n\nexport const hyperlinkTooltipStyles = {\n  entityContentType: css({\n    color: tokens.colorTextLightest,\n    marginRight: tokens.spacingXs,\n    '&:after': {\n      content: '\"\"'\n    }\n  }),\n  entityTitle: css({\n    marginRight: tokens.spacingXs\n  }),\n  separator: css({\n    background: tokens.colorTextMid,\n    margin: tokens.spacingXs\n  })\n};\n\nexport default {\n  hyperlinkWrapper: css({\n    display: 'inline',\n    position: 'static',\n    a: {\n      fontSize: 'inherit !important'\n    }\n  }),\n  hyperlink: css({\n    fontSize: 'inherit !important',\n    display: 'inline !important',\n    '&:hover': {\n      fill: tokens.textColorDark\n    },\n    '&:focus': {\n      fill: tokens.textColorDark\n    }\n  }),\n  hyperlinkIEFallback: css({\n    color: '#1683d0',\n    textDecoration: 'underline'\n  }),\n  // TODO: use these styles once we can use the icon\n  hyperlinkIcon: css({\n    position: 'relative',\n    top: '4px',\n    height: '14px',\n    margin: '0 -2px 0 -1px',\n    webkitTransition: 'fill 100ms ease-in-out',\n    transition: 'fill 100ms ease-in-out',\n    '&:hover': {\n      fill: tokens.textColorDark\n    },\n    '&:focus': {\n      fill: tokens.textColorDark\n    }\n  })\n};\n","import { detect as detectBrowser } from 'detect-browser';\n\nconst browser = detectBrowser();\nconst isEdge = !!browser && browser.name === 'ie';\n\n// TODO: Test whether this is still relevant with latest Edge or at least do\n//  so after upgrading Slate.js to see if still relevant at all.\nexport const SUPPORTS_NATIVE_SLATE_HYPERLINKS = !isEdge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hyperlinkTooltipStyles as styles } from './styles';\nimport { Tag } from '@contentful/forma-36-react-components';\nimport { ScheduleTooltipContent } from '@contentful/field-editor-reference';\nimport { entityHelpers } from '@contentful/field-editor-shared';\nimport { truncate } from './truncate';\n\nasync function fetchAllData({ sdk, entityId, entityType, localeCode, defaultLocaleCode }) {\n  let contentType;\n\n  const getEntity = entityType === 'Entry' ? sdk.space.getEntry : sdk.space.getAsset;\n  const entity = await getEntity(entityId);\n  if (entity.sys.contentType) {\n    const contentTypeId = entity.sys.contentType.sys.id;\n    contentType = await sdk.space.getContentType(contentTypeId);\n  }\n\n  const entityTitle =\n    entityType === 'Entry'\n      ? entityHelpers.getEntryTitle({\n          entry: entity,\n          contentType,\n          localeCode,\n          defaultLocaleCode,\n          defaultTitle: 'Untitled'\n        })\n      : entityHelpers.getAssetTitle({\n          asset: entity,\n          localeCode,\n          defaultLocaleCode,\n          defaultTitle: 'Untitled'\n        });\n\n  const entityDescription = entityHelpers.getEntityDescription({\n    entity,\n    contentType,\n    localeCode,\n    defaultLocaleCode\n  });\n\n  const jobs = await sdk.space.getEntityScheduledActions(entityType, entityId);\n\n  const entityStatus = entityHelpers.getEntryStatus(entity.sys);\n\n  return {\n    jobs,\n    entity,\n    entityTitle,\n    entityDescription,\n    entityStatus,\n    contentTypeName: contentType ? contentType.name : ''\n  };\n}\n\n// eslint-disable-next-line react/prop-types\nfunction renderEntityInfo({ entityTitle, entityStatus, contentTypeName }) {\n  const title = truncate(entityTitle, 60) || 'Untitled';\n  return (\n    <div>\n      <span className={styles.entityContentType}>{contentTypeName || 'Asset'}</span>\n      <span className={styles.entityTitle}>{title}</span>\n      <EntityStatusTag statusLabel={entityStatus} />\n    </div>\n  );\n}\n\nfunction EntityStatusTag({ className, statusLabel }) {\n  const tagTypeMap = {\n    published: 'positive',\n    draft: 'warning',\n    archived: 'negative',\n    changed: 'primary'\n  };\n  return (\n    <Tag className={className} tagType={tagTypeMap[statusLabel]}>\n      {statusLabel}\n    </Tag>\n  );\n}\n\nEntityStatusTag.propTypes = {\n  className: PropTypes.string,\n  statusLabel: PropTypes.string.isRequired\n};\n\nexport function EntityHyperlinkTooltip(props) {\n  const { sdk } = props.richTextAPI;\n  const { target } = props;\n\n  const [requestStatus, setRequestStatus] = React.useState({ type: 'loading' });\n\n  React.useEffect(() => {\n    fetchAllData({\n      sdk,\n      entityId: target.sys.id,\n      entityType: target.sys.linkType,\n      localeCode: sdk.field.locale,\n      defaultLocaleCode: sdk.locales.default\n    })\n      .then(entityInfo => {\n        setRequestStatus({ type: 'success', data: entityInfo });\n      })\n      .catch(e => {\n        console.log(e);\n        setRequestStatus({ type: 'error', error: e });\n      });\n  }, []); // eslint-disable-line\n\n  if (requestStatus.type === 'loading') {\n    return `Loading ${target.sys.linkType.toLowerCase()}...`;\n  }\n  let tooltip = '';\n  if (requestStatus.type === 'error') {\n    tooltip = `${target.sys.linkType} missing or inaccessible`;\n  } else {\n    const { jobs, ...entityInfo } = requestStatus.data;\n    tooltip = (\n      <>\n        {renderEntityInfo(entityInfo)}\n        {jobs.length > 0 ? (\n          <>\n            <hr className={styles.separator} />\n            <ScheduleTooltipContent job={jobs[0]} jobsCount={jobs.length} />\n          </>\n        ) : null}\n      </>\n    );\n  }\n  return tooltip;\n}\n","export function truncate(str, length) {\n  if (str && str.length > length) {\n    return (\n      str &&\n      str\n        .substr(0, length + 1) // +1 to look ahead and be replaced below.\n        // Get rid of orphan letters but not one letter words (I, a, 2).\n        // Try to not have “.” as last character to avoid awkward “....”.\n        .replace(/(\\s+\\S(?=\\S)|\\s*)\\.?.$/, '…')\n    );\n  } else {\n    return str;\n  }\n}\n","import React from 'react';\nimport { Tooltip, TextLink } from '@contentful/forma-36-react-components';\nimport PropTypes from 'prop-types';\nimport { cx } from 'emotion';\nimport noop from 'lodash/noop';\nimport isHotKey from 'is-hotkey';\nimport styles from './styles';\nimport { SUPPORTS_NATIVE_SLATE_HYPERLINKS } from '../../helpers/browserSupport';\nimport { EntityHyperlinkTooltip } from './EntityHyperlinkTootip';\n\nexport default class Hyperlink extends React.Component {\n  static propTypes = {\n    attributes: PropTypes.object.isRequired,\n    node: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    editor: PropTypes.object,\n    richTextAPI: PropTypes.object.isRequired,\n    onEdit: PropTypes.func\n  };\n\n  static defaultProps = {\n    onEdit: noop\n  };\n\n  onKeyDown(e) {\n    if (isHotKey('enter', e)) {\n      e.preventDefault();\n      e.stopPropagation(); // Ensure Slate doesn't interpret as new paragraph.\n      this.props.onEdit(e);\n    }\n  }\n\n  render() {\n    const { node } = this.props;\n    const uri = node.data.get('uri');\n    const target = node.data.get('target');\n\n    return (\n      <span\n        {...this.props.attributes}\n        onClick={this.props.onEdit}\n        onKeyDown={e => this.onKeyDown(e)}\n        role=\"button\"\n        tabIndex={0}>\n        {target ? this.renderEntityLink(target) : this.renderLink({ tooltip: uri })}\n      </span>\n      // TODO: Add contentEditable={false} to tooltip to fix text cursor bug\n    );\n  }\n\n  renderLink({ tooltip }) {\n    const { children, node } = this.props;\n    const title = node.data.get('title');\n    const uri = node.data.get('uri');\n    const href = isUrl(uri) ? uri : 'javascript:void(0)';\n    return (\n      <Tooltip\n        content={tooltip}\n        className={styles.tooltipContainer}\n        targetWrapperClassName={styles.hyperlinkWrapper}\n        place=\"bottom\"\n        maxWidth=\"auto\">\n        {SUPPORTS_NATIVE_SLATE_HYPERLINKS ? (\n          <TextLink\n            href={href} // Allows user to open uri link in new tab.\n            rel=\"noopener noreferrer\"\n            title={title}\n            className={styles.hyperlink}>\n            {children}\n          </TextLink>\n        ) : (\n          <span className={cx(styles.hyperlink, styles.hyperlinkIEFallback)}>{children}</span>\n        )}\n      </Tooltip>\n    );\n  }\n\n  renderEntityLink(target) {\n    const tooltip = <EntityHyperlinkTooltip richTextAPI={this.props.richTextAPI} target={target} />;\n    return this.renderLink({ tooltip });\n  }\n}\n\nfunction isUrl(string) {\n  return /^(?:[a-z]+:)?\\/\\//i.test(string) || /^mailto:/i.test(string);\n}\n","import React from 'react';\nimport isHotkey from 'is-hotkey';\nimport { INLINES } from '@contentful/rich-text-types';\nimport ToolbarIcon from './ToolbarIcon';\nimport Hyperlink from './Hyperlink';\nimport { editLink, mayEditLink, toggleLink, hasOnlyHyperlinkInlines } from './Util';\n\nconst { HYPERLINK, ENTRY_HYPERLINK, ASSET_HYPERLINK } = INLINES;\n\nexport default ToolbarIcon;\n\nexport const HyperlinkPlugin = ({ richTextAPI }) => ({\n  renderNode: (props, _editor, next) => {\n    const { sdk, logViewportAction } = richTextAPI;\n    const { node, editor } = props;\n    if (isHyperlink(node.type)) {\n      return (\n        <Hyperlink\n          {...props}\n          richTextAPI={richTextAPI}\n          onEdit={event => {\n            event.preventDefault(); // Don't follow `href`\n\n            editor.moveToRangeOfNode(node).focus();\n            if (mayEditLink(editor.value)) {\n              editLink(editor, sdk, logViewportAction);\n            }\n          }}\n        />\n      );\n    }\n    return next();\n  },\n  onKeyDown: (event, editor, next) => {\n    const { sdk, logShortcutAction } = richTextAPI;\n    const hotkey = ['mod+k'];\n\n    if (isHotkey(hotkey, event) && hasOnlyHyperlinkInlines(editor.value)) {\n      if (mayEditLink(editor.value)) {\n        editLink(editor, sdk, logShortcutAction);\n      } else {\n        toggleLink(editor, sdk, logShortcutAction);\n      }\n      return;\n    }\n\n    return next();\n  },\n  normalizeNode: (node, editor, next) => {\n    if (isHyperlink(node.type) && node.getInlines().size > 0) {\n      return () => {\n        node\n          .getInlines()\n          .forEach(inlineNode => editor.unwrapInlineByKey(inlineNode.key, node.type));\n      };\n    }\n    next();\n  }\n});\n\nfunction isHyperlink(type) {\n  return [HYPERLINK, ENTRY_HYPERLINK, ASSET_HYPERLINK].includes(type);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DropdownListItem } from '@contentful/forma-36-react-components';\nimport { css, cx } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\n\nconst styles = {\n  root: css({\n    button: {\n      span: {\n        fontWeight: tokens.fontWeightDemiBold,\n      },\n    },\n  }),\n  h1: css({\n    button: {\n      span: {\n        fontSize: '1.625rem',\n      },\n    },\n  }),\n  h2: css({\n    button: {\n      span: {\n        fontSize: '1.4375rem',\n      },\n    },\n  }),\n  h3: css({\n    button: {\n      span: {\n        fontSize: '1.25rem',\n      },\n    },\n  }),\n  h4: css({\n    button: {\n      span: {\n        fontSize: '1.125rem',\n      },\n    },\n  }),\n  h5: css({\n    button: {\n      span: {\n        fontSize: '1rem',\n      },\n    },\n  }),\n  h6: css({\n    button: {\n      span: {\n        fontSize: '0.875rem',\n      },\n    },\n  }),\n};\n\n// Necessary because we can't use kebab-case for style identifiers.\nconst getStyleForType = (type) => type.replace('heading-', 'h');\n\nexport default class ToolbarDropdownListItem extends Component {\n  static propTypes = {\n    isActive: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  handleClick = (event) => {\n    /*\n      We're using the mousedown event rather than onclick because onclick will\n      steal the focus.\n    */\n\n    event.preventDefault();\n    this.props.onToggle(event);\n  };\n\n  render() {\n    const { isActive, title, type, children } = this.props;\n    return (\n      <DropdownListItem\n        label={title}\n        isActive={isActive}\n        data-test-id={`toolbar-toggle-${type}`}\n        className={cx(styles.root, styles[getStyleForType(type)])}\n        onClick={this.handleClick}>\n        {children}\n      </DropdownListItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport { haveBlocks } from './UtilHave';\nimport { toolbarActionHandlerWithSafeAutoFocus } from './Util';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from './PluginApi';\n\nexport default ({ type, title, icon, applyChange = (editor, type) => editor.setBlocks(type) }) => (\n  Block\n) => {\n  return class BlockSelectDecorator extends React.Component {\n    static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n    handleSelect = toolbarActionHandlerWithSafeAutoFocus(this, () => {\n      const {\n        editor,\n        onToggle,\n        richTextAPI: { logToolbarAction },\n      } = this.props;\n      applyChange(editor, type);\n      onToggle(editor);\n      logToolbarAction('insert', { nodeType: type });\n    });\n\n    render() {\n      const { editor, disabled } = this.props;\n\n      return (\n        <Block\n          type={type}\n          icon={icon}\n          title={title}\n          onToggle={this.handleSelect}\n          isActive={haveBlocks(editor, type)}\n          disabled={disabled}\n        />\n      );\n    }\n  };\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { Dropdown, DropdownList, Button } from '@contentful/forma-36-react-components';\nimport tokens from '@contentful/forma-36-tokens';\nimport { css } from 'emotion';\n\nconst styles = {\n  root: css({\n    width: '110px',\n\n    [`@media (min-width: ${tokens.contentWidthDefault})`]: {\n      width: '145px',\n    },\n\n    svg: {\n      marginLeft: 'auto',\n    },\n\n    '> span': {\n      padding: '0 2px!important',\n    },\n  }),\n};\n\nexport const blockTitles = {\n  [BLOCKS.HEADING_1]: 'Heading 1',\n  [BLOCKS.HEADING_2]: 'Heading 2',\n  [BLOCKS.HEADING_3]: 'Heading 3',\n  [BLOCKS.HEADING_4]: 'Heading 4',\n  [BLOCKS.HEADING_5]: 'Heading 5',\n  [BLOCKS.HEADING_6]: 'Heading 6',\n  [BLOCKS.PARAGRAPH]: 'Normal Text',\n  [BLOCKS.EMBEDDED_ENTRY]: 'Embedded Entry',\n  [BLOCKS.EMBEDDED_ASSET]: 'Embedded Asset',\n};\n\nclass HeadingDropdown extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    isOpen: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onClose: PropTypes.func,\n    onToggle: PropTypes.func,\n    currentBlockType: PropTypes.string,\n  };\n  getStyleNameForChange = () => {\n    return blockTitles[this.props.currentBlockType] || blockTitles[BLOCKS.PARAGRAPH];\n  };\n\n  render() {\n    const { onToggle, isOpen, onClose, children } = this.props;\n    return (\n      <Dropdown\n        toggleElement={\n          <Button\n            onClick={onToggle}\n            data-test-id=\"toolbar-heading-toggle\"\n            className={styles.root}\n            indicateDropdown\n            buttonType=\"naked\"\n            size=\"small\"\n            disabled={this.props.disabled}>\n            {this.getStyleNameForChange()}\n          </Button>\n        }\n        isOpen={isOpen}\n        onClose={onClose}>\n        <DropdownList className=\"toolbar-heading-dropdown-list\">{children}</DropdownList>\n      </Dropdown>\n    );\n  }\n}\n\nexport default HeadingDropdown;\n","import React, { Component } from 'react';\nimport ToolbarDropdownListItem from '../shared/ToolbarDropdownListItem';\nimport blockSelectDecorator from '../shared/BlockSelectDecorator';\nimport { blockTitles } from './HeadingDropdown';\n\nexport default function newHeadingDropdownItem(nodeType) {\n  const title = blockTitles[nodeType];\n\n  class Heading extends Component {\n    static displayName = title.replace(/\\s/g, '');\n    render() {\n      return (\n        <ToolbarDropdownListItem {...this.props} data-test-id={nodeType}>\n          {title}\n        </ToolbarDropdownListItem>\n      );\n    }\n  }\n\n  return blockSelectDecorator({\n    type: nodeType,\n    title,\n  })(Heading);\n}\n","import React, { Component } from 'react';\nimport ToolbarDropdownListItem from '../shared/ToolbarDropdownListItem';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport blockSelectDecorator from '../shared/BlockSelectDecorator';\nimport { blockTitles } from './HeadingDropdown';\n\nclass Paragraph extends Component {\n  render() {\n    return (\n      <ToolbarDropdownListItem {...this.props}>\n        {blockTitles[BLOCKS.PARAGRAPH]}\n      </ToolbarDropdownListItem>\n    );\n  }\n}\n\nexport default blockSelectDecorator({\n  type: BLOCKS.PARAGRAPH,\n  title: blockTitles[BLOCKS.PARAGRAPH],\n  shouldToggle: false\n})(Paragraph);\n","import isHotkey from 'is-hotkey';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { toggleChange } from '../shared/BlockToggleDecorator';\nimport CommonNode from '../shared/NodeDecorator';\nimport newHeadingDropdownItem from './HeadingDropdownItem';\n\nconst newPlugin = (defaultType, tagName, hotkey) => ({ type = defaultType, richTextAPI }) => ({\n  renderNode: (props, _editor, next) => {\n    if (props.node.type === type) {\n      return CommonNode(tagName, {})(props);\n    }\n    return next();\n  },\n  onKeyDown: (e, editor, next) => {\n    if (isHotkey('enter', e)) {\n      const currentBlock = editor.value.blocks.get(0);\n      if (currentBlock.type === type) {\n        const { value } = editor;\n\n        if (value.selection.start.offset === 0) {\n          const initialRange = value.selection;\n          editor.splitBlock().setBlocksAtRange(initialRange, BLOCKS.PARAGRAPH);\n        } else {\n          editor.splitBlock().setBlocks(BLOCKS.PARAGRAPH);\n        }\n\n        return;\n      }\n    } else if (isHotkey(hotkey, e)) {\n      const isActive = toggleChange(editor, type);\n      const actionName = isActive ? 'insert' : 'remove';\n      richTextAPI.logShortcutAction(actionName, { nodeType: type });\n      return;\n    }\n    return next();\n  },\n});\n\n// TODO: move hotkeys to components\nexport const Heading1Plugin = newPlugin(BLOCKS.HEADING_1, 'h1', ['mod+opt+1']);\nexport const Heading2Plugin = newPlugin(BLOCKS.HEADING_2, 'h2', ['mod+opt+2']);\nexport const Heading3Plugin = newPlugin(BLOCKS.HEADING_3, 'h3', ['mod+opt+3']);\nexport const Heading4Plugin = newPlugin(BLOCKS.HEADING_4, 'h4', ['mod+opt+4']);\nexport const Heading5Plugin = newPlugin(BLOCKS.HEADING_5, 'h5', ['mod+opt+5']);\nexport const Heading6Plugin = newPlugin(BLOCKS.HEADING_6, 'h6', ['mod+opt+6']);\n\nexport const Heading1 = newHeadingDropdownItem(BLOCKS.HEADING_1);\nexport const Heading2 = newHeadingDropdownItem(BLOCKS.HEADING_2);\nexport const Heading3 = newHeadingDropdownItem(BLOCKS.HEADING_3);\nexport const Heading4 = newHeadingDropdownItem(BLOCKS.HEADING_4);\nexport const Heading5 = newHeadingDropdownItem(BLOCKS.HEADING_5);\nexport const Heading6 = newHeadingDropdownItem(BLOCKS.HEADING_6);\nexport { default as Paragraph } from './Paragraph';\nexport { default as HeadingDropdown } from './HeadingDropdown';\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { haveTextInSomeBlocks } from '../shared/UtilHave';\nimport newEntitySelectorConfigFromRichTextField from '../../helpers/newEntitySelectorConfigFromRichTextField';\n\n/**\n * Returns whether given value has a block of the given type.\n * @param {slate.Editor} editor\n * @param {string} type\n * @returns {boolean}\n */\nexport const hasBlockOfType = (editor, type) => {\n  const blocks = editor.value.blocks;\n  return blocks.get(0).type === type;\n};\n\n/**\n * Invokes entity selector modal and inserts block embed.\n * @param {string} nodeType\n * @param {import('@contentful/field-editor-reference/dist/types').FieldExtensionSDK} sdk\n * @param {slate.Editor} editor\n * @param {function} logAction\n */\nexport async function selectEntityAndInsert(nodeType, sdk, editor, logAction) {\n  logAction('openCreateEmbedDialog', { nodeType });\n\n  const { field, dialogs } = sdk;\n  const baseConfig = newEntitySelectorConfigFromRichTextField(field, nodeType);\n  const selectEntity =\n    baseConfig.entityType === 'Asset' ? dialogs.selectSingleAsset : dialogs.selectSingleEntry;\n  const config = { ...baseConfig, withCreate: true };\n  try {\n    const entity = await selectEntity(config);\n    if (!entity) {\n      return;\n    }\n    insertBlock(editor, nodeType, entity);\n    logAction('insert', { nodeType });\n  } catch (error) {\n    if (error) {\n      throw error;\n    } else {\n      logAction('cancelCreateEmbedDialog', { nodeType });\n    }\n  }\n}\n\nexport const createNode = (nodeType, entity) => ({\n  type: nodeType,\n  object: 'block',\n  data: {\n    target: {\n      sys: {\n        id: entity.sys.id,\n        type: 'Link',\n        linkType: entity.sys.type\n      }\n    }\n  }\n});\n\nexport function insertBlock(editor, nodeType, entity, focusNextLine = true) {\n  const linkedEntityBlock = createNode(nodeType, entity);\n  if (editor.value.blocks.size === 0 || haveTextInSomeBlocks(editor)) {\n    editor.insertBlock(linkedEntityBlock);\n  } else {\n    editor.setBlocks(linkedEntityBlock);\n  }\n\n  if (focusNextLine) {\n    editor.insertBlock(BLOCKS.PARAGRAPH).focus();\n  }\n}\n","import { css } from 'emotion';\n\nexport const styles = {\n  icon: css({\n    marginRight: '10px',\n  }),\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DropdownListItem, Button, Flex, Icon } from '@contentful/forma-36-react-components';\n\nimport { selectEntityAndInsert } from './Util';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from '../shared/PluginApi';\nimport { toolbarActionHandlerWithSafeAutoFocus } from '../shared/Util';\nimport { styles } from './EmbeddedEntityBlock.styles';\n\nexport default class EntityLinkToolbarIcon extends Component {\n  static propTypes = {\n    ...TOOLBAR_PLUGIN_PROP_TYPES,\n    isButton: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    isButton: false,\n  };\n\n  handleClick = (e) => {\n    this.props.onCloseEmbedMenu();\n    this.handleAction(e);\n  };\n\n  handleAction = toolbarActionHandlerWithSafeAutoFocus(this, async () => {\n    const {\n      editor,\n      nodeType,\n      richTextAPI: { sdk, logToolbarAction },\n    } = this.props;\n    await selectEntityAndInsert(nodeType, sdk, editor, logToolbarAction);\n    this.props.onToggle(editor);\n  });\n\n  render() {\n    const { nodeType } = this.props;\n    const type = getEntityTypeFromNodeType(nodeType);\n    const baseClass = `rich-text__${nodeType}`;\n    return this.props.isButton ? (\n      <Button\n        disabled={this.props.disabled}\n        className={`${baseClass}-button`}\n        size=\"small\"\n        onClick={this.handleClick}\n        icon={type === 'Asset' ? 'Asset' : 'EmbeddedEntryBlock'}\n        buttonType=\"muted\"\n        testId={`toolbar-toggle-${nodeType}`}>\n        {`Embed ${type.toLowerCase()}`}\n      </Button>\n    ) : (\n      <DropdownListItem\n        isDisabled={this.props.disabled}\n        className={`${baseClass}-list-item`}\n        size=\"small\"\n        onClick={this.handleClick}\n        testId={`toolbar-toggle-${nodeType}`}>\n        <Flex alignItems=\"center\" flexDirection=\"row\">\n          <Icon\n            icon={type === 'Asset' ? 'Asset' : 'EmbeddedEntryBlock'}\n            className={`rich-text__embedded-entry-list-icon ${styles.icon}`}\n            color=\"secondary\"\n          />\n          <span>{type}</span>\n        </Flex>\n      </DropdownListItem>\n    );\n  }\n}\n\n/**\n * Returns the entity type depending on the given node type.\n * @param {string} nodeType\n * @returns {string}\n */\nfunction getEntityTypeFromNodeType(nodeType) {\n  const words = nodeType.toLowerCase().split('-');\n  if (words.includes('entry')) {\n    return 'Entry';\n  }\n  if (words.includes('asset')) {\n    return 'Asset';\n  }\n  throw new Error(`Node type \\`${nodeType}\\` has no associated \\`entityType\\``);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport { FetchingWrappedEntryCard } from './FetchingWrappedEntryCard';\nimport { FetchingWrappedAssetCard } from './FetchingWrappedAssetCard';\n\nconst styles = {\n  root: css({\n    marginBottom: '1.25rem'\n  })\n};\n\nexport default class LinkedEntityBlock extends React.Component {\n  static propTypes = {\n    sdk: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool.isRequired,\n    attributes: PropTypes.object.isRequired,\n    editor: PropTypes.object.isRequired,\n    node: PropTypes.object.isRequired,\n    onEntityFetchComplete: PropTypes.func.isRequired\n  };\n\n  getEntitySys() {\n    const data = this.props.node.data;\n    return {\n      id: data.get('target').sys.id,\n      type: data.get('target').sys.linkType\n    };\n  }\n\n  handleEditClick = () => {\n    const { type, id } = this.getEntitySys();\n    const { navigator } = this.props.sdk;\n    const openEntity = type === 'Asset' ? navigator.openAsset : navigator.openEntry;\n    return openEntity(id, { slideIn: true });\n  };\n\n  handleRemoveClick = () => {\n    const { editor, node } = this.props;\n    editor.moveToRangeOfNode(node);\n    editor.removeNodeByKey(node.key);\n    editor.focus(); // Click on \"x\" might have removed focus.\n  };\n\n  render() {\n    const { sdk, editor, isSelected } = this.props;\n    const isDisabled = editor.props.readOnly || editor.props.actionsDisabled;\n    const { id: entityId, type: entityType } = this.getEntitySys();\n    return (\n      <div {...this.props.attributes} className={styles.root}>\n        {entityType === 'Entry' && (\n          <FetchingWrappedEntryCard\n            sdk={sdk}\n            entryId={entityId}\n            locale={sdk.field.locale}\n            isDisabled={isDisabled}\n            isSelected={isSelected}\n            onRemove={this.handleRemoveClick}\n            onEdit={this.handleEditClick}\n            getEntryUrl={() => {\n              const getEntryUrl = sdk.parameters.instance.getEntryUrl;\n              return typeof getEntryUrl === 'function' ? getEntryUrl(entityId) : '';\n            }}\n            onEntityFetchComplete={this.props.onEntityFetchComplete}\n          />\n        )}\n        {entityType === 'Asset' && (\n          <FetchingWrappedAssetCard\n            sdk={sdk}\n            assetId={entityId}\n            locale={sdk.field.locale}\n            isDisabled={isDisabled}\n            isSelected={isSelected}\n            onRemove={this.handleRemoveClick}\n            onEdit={this.handleEditClick}\n            getAssetUrl={() => {\n              const getAssetUrl = sdk.parameters.instance.getAssetUrl;\n              return typeof getAssetUrl === 'function' ? getAssetUrl(entityId) : '';\n            }}\n            onEntityFetchComplete={this.props.onEntityFetchComplete}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport isHotkey from 'is-hotkey';\n\nimport ToolbarIcon from './ToolbarIcon';\nimport EntityLinkBlock from './EmbeddedEntityBlock';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { hasBlockOfType, selectEntityAndInsert } from './Util';\n\nexport default ToolbarIcon;\n\nexport const EmbeddedEntityBlockPlugin = ({\n  richTextAPI: { sdk, logShortcutAction, logViewportAction },\n  nodeType,\n  hotkey\n}) => {\n  return {\n    renderNode: (props, _editor, next) => {\n      const { node, attributes, key } = props;\n      if (node.type === nodeType) {\n        return (\n          <EntityLinkBlock\n            sdk={sdk}\n            {...props}\n            {...attributes}\n            onEntityFetchComplete={() => {\n              logViewportAction('linkRendered', { key });\n            }}\n          />\n        );\n      }\n      return next();\n    },\n    onKeyDown(e, editor, next) {\n      if (hotkey && isHotkey(hotkey, e)) {\n        selectEntityAndInsert(nodeType, sdk, editor, logShortcutAction);\n        return;\n      }\n      if (isHotkey('enter', e) && hasBlockOfType(editor, nodeType)) {\n        editor.insertBlock(BLOCKS.PARAGRAPH).focus();\n        return;\n      }\n      return next();\n    }\n  };\n};\n\nexport const EmbeddedEntryBlockPlugin = ({ richTextAPI }) => {\n  return EmbeddedEntityBlockPlugin({\n    richTextAPI,\n    nodeType: BLOCKS.EMBEDDED_ENTRY,\n    hotkey: ['mod+shift+e']\n  });\n};\n\nexport const EmbeddedAssetBlockPlugin = ({ richTextAPI }) => {\n  return EmbeddedEntityBlockPlugin({\n    richTextAPI,\n    nodeType: BLOCKS.EMBEDDED_ASSET,\n    hotkey: ['mod+shift+a']\n  });\n};\n","import { INLINES } from '@contentful/rich-text-types';\nimport { haveAnyInlines, haveEveryInlineOfType, haveInlines } from '../shared/UtilHave';\nimport newEntitySelectorConfigFromRichTextField from '../../helpers/newEntitySelectorConfigFromRichTextField';\n\nconst createInlineNode = id => ({\n  type: INLINES.EMBEDDED_ENTRY,\n  object: 'inline',\n  data: {\n    target: {\n      sys: {\n        id,\n        type: 'Link',\n        linkType: 'Entry'\n      }\n    }\n  }\n});\n\nexport const insertInline = (editor, entryId, focusNextLine = true) => {\n  if (haveInlines(editor, INLINES.EMBEDDED_ENTRY)) {\n    editor.setInlines(createInlineNode(entryId));\n  } else {\n    editor.insertInline(createInlineNode(entryId));\n  }\n\n  focusNextLine ? editor.moveToStartOfNextText().focus() : null;\n};\n\nexport const hasOnlyInlineEntryInSelection = editor => {\n  const inlines = editor.value.inlines;\n  const selection = editor.value.selection;\n  if (inlines.size === 1 && selection.start.key === selection.end.key) {\n    return inlines.get(0).type === INLINES.EMBEDDED_ENTRY;\n  }\n};\n\n/**\n * Invokes entity selector modal and inserts inline embed.\n * @param {import('@contentful/field-editor-reference/dist/types').FieldExtensionSDK} sdk\n * @param {slate.Editor} editor\n * @param {function} logAction\n */\nexport const selectEntryAndInsert = async (sdk, editor, logAction) => {\n  const nodeType = INLINES.EMBEDDED_ENTRY;\n  logAction('openCreateEmbedDialog', { nodeType });\n\n  const { field, dialogs } = sdk;\n  const baseConfig = newEntitySelectorConfigFromRichTextField(field, nodeType);\n  const config = { ...baseConfig, withCreate: true };\n  try {\n    const entry = await dialogs.selectSingleEntry(config);\n    if (!entry) {\n      return;\n    }\n    insertInline(editor, entry.sys.id);\n    logAction('insert', { nodeType });\n  } catch (error) {\n    if (error) {\n      throw error;\n    } else {\n      logAction('cancelCreateEmbedDialog', { nodeType });\n    }\n  }\n};\n\nexport const canInsertInline = editor => {\n  return !haveAnyInlines(editor) || haveEveryInlineOfType(editor, INLINES.EMBEDDED_ENTRY);\n};\n","import { css } from 'emotion';\n\nexport const styles = {\n  icon: css({\n    marginRight: '10px',\n  }),\n\n  root: css({\n    margin: '0px 5px',\n    fontSize: 'inherit',\n    span: {\n      webkitUserSelect: 'none',\n      mozUserSelect: 'none',\n      msUserSelect: 'none',\n      userSelect: 'none',\n    },\n  }),\n};\n","import React, { Component } from 'react';\nimport { DropdownListItem, Flex, Icon, Button } from '@contentful/forma-36-react-components';\nimport { INLINES } from '@contentful/rich-text-types';\n\nimport { selectEntryAndInsert, canInsertInline } from './Utils';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from '../shared/PluginApi';\nimport { toolbarActionHandlerWithSafeAutoFocus } from '../shared/Util';\nimport { styles } from './EmbeddedEntryInline.styles';\n\nexport default class EntryLinkToolbarIcon extends Component {\n  static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n  static defaultProps = {\n    isButton: false,\n  };\n\n  handleClick = (e) => {\n    this.props.onCloseEmbedMenu();\n    this.handleAction(e);\n  };\n\n  handleAction = toolbarActionHandlerWithSafeAutoFocus(this, async () => {\n    const {\n      editor,\n      richTextAPI: { sdk, logToolbarAction },\n    } = this.props;\n    await selectEntryAndInsert(sdk, editor, logToolbarAction);\n    this.props.onToggle(editor);\n  });\n\n  render() {\n    return this.props.isButton ? (\n      <Button\n        disabled={this.props.disabled}\n        className={`${INLINES.EMBEDDED_ENTRY}-button`}\n        size=\"small\"\n        onClick={(event) => this.handleClick(event)}\n        icon=\"EmbeddedEntryInline\"\n        buttonType=\"muted\"\n        testId={`toolbar-toggle-${INLINES.EMBEDDED_ENTRY}`}>\n        Embed inline entry\n      </Button>\n    ) : (\n      <DropdownListItem\n        isDisabled={this.props.disabled || !canInsertInline(this.props.editor)}\n        className=\"rich-text__entry-link-block-button\"\n        size=\"small\"\n        icon=\"Entry\"\n        testId={`toolbar-toggle-${INLINES.EMBEDDED_ENTRY}`}\n        onClick={this.handleClick}>\n        <Flex alignItems=\"center\" flexDirection=\"row\">\n          <Icon\n            icon=\"EmbeddedEntryInline\"\n            color=\"secondary\"\n            className={`rich-text__embedded-entry-list-icon ${styles.icon}`}\n          />\n          <span>Inline entry</span>\n        </Flex>\n      </DropdownListItem>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\nimport {\n  InlineEntryCard,\n  DropdownListItem,\n  DropdownList,\n  Icon,\n} from '@contentful/forma-36-react-components';\nimport { entityHelpers } from '@contentful/field-editor-shared';\nimport { useEntities, ScheduledIconWithTooltip } from '@contentful/field-editor-reference';\n\nimport { INLINES } from '@contentful/rich-text-types';\n\nconst { getEntryTitle, getEntryStatus } = entityHelpers;\n\nconst styles = {\n  scheduledIcon: css({\n    verticalAlign: 'text-bottom',\n    marginRight: tokens.spacing2Xs,\n  }),\n};\n\nexport const FetchingWrappedInlineEntryCard = (props) => {\n  const { getOrLoadEntry, loadEntityScheduledActions, entries } = useEntities();\n\n  React.useEffect(() => {\n    getOrLoadEntry(props.entryId);\n  }, [props.entryId]);\n\n  const entry = entries[props.entryId];\n\n  React.useEffect(() => {\n    if (entry) {\n      props.onEntityFetchComplete && props.onEntityFetchComplete();\n    }\n  }, [entry]);\n\n  if (entry === 'failed') {\n    return (\n      <InlineEntryCard testId={INLINES.EMBEDDED_ENTRY} selected={props.isSelected}>\n        Entry missing or inaccessible\n      </InlineEntryCard>\n    );\n  }\n\n  if (entry === undefined) {\n    return <InlineEntryCard loading />;\n  }\n\n  const allContentTypes = props.sdk.space.getCachedContentTypes();\n\n  const contentType = allContentTypes.find(\n    (contentType) => contentType.sys.id === entry.sys.contentType.sys.id\n  );\n  const contentTypeName = contentType ? contentType.name : '';\n\n  const status = getEntryStatus(entry.sys);\n\n  if (status === 'deleted') {\n    return (\n      <InlineEntryCard\n        testId={INLINES.EMBEDDED_ENTRY}\n        onRemove={props.onRemove}\n        selected={props.isSelected}>\n        Entry missing or inaccessible\n      </InlineEntryCard>\n    );\n  }\n\n  const title = getEntryTitle({\n    entry: entry,\n    contentType,\n    localeCode: props.sdk.field.locale,\n    defaultLocaleCode: props.sdk.locales.default,\n    defaultTitle: 'Untitled',\n  });\n\n  return (\n    <InlineEntryCard\n      testId={INLINES.EMBEDDED_ENTRY}\n      selected={props.isSelected}\n      title={`${contentTypeName}: ${title}`}\n      status={status}\n      dropdownListElements={\n        !props.isReadOnly ? (\n          <DropdownList>\n            <DropdownListItem onClick={props.onEdit}>Edit</DropdownListItem>\n            <DropdownListItem onClick={props.onRemove} isDisabled={props.isDisabled}>\n              Remove\n            </DropdownListItem>\n          </DropdownList>\n        ) : null\n      }>\n      <ScheduledIconWithTooltip\n        getEntityScheduledActions={loadEntityScheduledActions}\n        entityType=\"Entry\"\n        entityId={entry.sys.id}>\n        <Icon className={styles.scheduledIcon} icon=\"Clock\" color=\"muted\" testId=\"scheduled-icon\" />\n      </ScheduledIconWithTooltip>\n      {title}\n    </InlineEntryCard>\n  );\n};\n\nFetchingWrappedInlineEntryCard.propTypes = {\n  sdk: PropTypes.object.isRequired,\n  entryId: PropTypes.string.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  isReadOnly: PropTypes.bool.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onEntityFetchComplete: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FetchingWrappedInlineEntryCard } from './FetchingWrappedInlineEntryCard';\nimport { styles } from './EmbeddedEntryInline.styles';\n\nclass EmbeddedEntryInline extends React.Component {\n  static propTypes = {\n    sdk: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool.isRequired,\n    attributes: PropTypes.object.isRequired,\n    editor: PropTypes.object.isRequired,\n    node: PropTypes.object.isRequired,\n    onEntityFetchComplete: PropTypes.func.isRequired,\n  };\n\n  getEntitySys() {\n    const data = this.props.node.data;\n    return {\n      id: data.get('target').sys.id,\n      type: data.get('target').sys.linkType,\n    };\n  }\n\n  handleEditClick = () => {\n    const { id } = this.getEntitySys();\n    return this.props.sdk.navigator.openEntry(id, { slideIn: true });\n  };\n\n  handleRemoveClick = () => {\n    const { editor, node } = this.props;\n    editor.removeNodeByKey(node.key);\n  };\n\n  render() {\n    const { sdk, editor, isSelected } = this.props;\n    const isDisabled = editor.props.readOnly;\n    const isReadOnly = editor.props.actionsDisabled;\n    const { id: entryId } = this.getEntitySys();\n    return (\n      <span {...this.props.attributes} className={styles.root}>\n        <FetchingWrappedInlineEntryCard\n          sdk={sdk}\n          entryId={entryId}\n          isSelected={isSelected}\n          isDisabled={isDisabled}\n          isReadOnly={isReadOnly}\n          onRemove={this.handleRemoveClick}\n          onEdit={this.handleEditClick}\n          onEntityFetchComplete={this.props.onEntityFetchComplete}\n        />\n      </span>\n    );\n  }\n}\n\nexport default EmbeddedEntryInline;\n","import React from 'react';\nimport isHotkey from 'is-hotkey';\nimport { INLINES } from '@contentful/rich-text-types';\nimport ToolbarIcon from './ToolbarIcon';\nimport EmbeddedEntryInline from './EmbeddedEntryInline';\n\nimport { selectEntryAndInsert, hasOnlyInlineEntryInSelection, canInsertInline } from './Utils';\n\nexport default ToolbarIcon;\n\nexport const EmbeddedEntryInlinePlugin = ({\n  richTextAPI: { sdk, logShortcutAction, logViewportAction }\n}) => ({\n  renderNode: (props, _editor, next) => {\n    const { node, attributes, key } = props;\n    if (node.type === INLINES.EMBEDDED_ENTRY) {\n      return (\n        <EmbeddedEntryInline\n          sdk={sdk}\n          {...props}\n          {...attributes}\n          onEntityFetchComplete={() => {\n            logViewportAction('linkRendered', { key });\n          }}\n        />\n      );\n    }\n    return next();\n  },\n  onKeyDown: (event, editor, next) => {\n    const hotkey = ['mod+shift+2'];\n    if (isHotkey(hotkey, event)) {\n      if (canInsertInline(editor)) {\n        selectEntryAndInsert(sdk, editor, logShortcutAction);\n        return;\n      }\n    }\n    if (isHotkey('enter', event)) {\n      if (hasOnlyInlineEntryInSelection(editor)) {\n        event.preventDefault();\n        editor.moveToStartOfNextText();\n        return;\n      }\n    }\n    return next();\n  }\n});\n","import * as React from 'react';\nimport { TOOLBAR_PLUGIN_PROP_TYPES } from '../shared/PluginApi';\nimport { toolbarActionHandlerWithSafeAutoFocus } from '../shared/Util';\nimport EditList from './EditListWrapper';\n\nconst applyChange = (editor, type, logAction) => {\n  const {\n    utils,\n    changes: { unwrapList, wrapInList },\n  } = EditList();\n\n  if (utils.isSelectionInList(editor.value)) {\n    if (utils.getCurrentList(editor.value).type !== type) {\n      const currentList = utils.getCurrentList(editor.value);\n      editor.setNodeByKey(currentList.key, type);\n      logAction('insert', { nodeType: type });\n    } else {\n      unwrapList(editor);\n      logAction('remove', { nodeType: type });\n    }\n  } else {\n    wrapInList(editor, type);\n    logAction('insert', { nodeType: type });\n  }\n\n  return editor.focus();\n};\n\nconst isActive = (editor, type) => {\n  const list = EditList().utils.getCurrentList(editor.value);\n\n  if (list) {\n    return list.type === type;\n  }\n  return false;\n};\n\nexport default ({ type, title, icon }) => (Block) => {\n  return class ToolbarDecorator extends React.Component {\n    static propTypes = TOOLBAR_PLUGIN_PROP_TYPES;\n\n    handleToggle = toolbarActionHandlerWithSafeAutoFocus(this, () => {\n      const {\n        editor,\n        onToggle,\n        richTextAPI: { logToolbarAction },\n      } = this.props;\n      applyChange(editor, type, logToolbarAction);\n      onToggle(editor);\n    });\n\n    render() {\n      const { editor } = this.props;\n      return (\n        <Block\n          type={type}\n          icon={icon}\n          title={title}\n          onToggle={this.handleToggle}\n          isActive={isActive(editor, type)}\n          disabled={this.props.disabled}\n        />\n      );\n    }\n  };\n};\n","import React from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport commonNode from '../shared/NodeDecorator';\nimport listToggleDecorator from './ToolbarDecorator';\nimport EditListWrapper from './EditListWrapper';\n\nexport const ListPlugin = () => {\n  return {\n    ...EditListWrapper(),\n    renderNode: (props, _editor, next) => {\n      if (props.node.type === BLOCKS.UL_LIST) {\n        return commonNode('ul')(props);\n      } else if (props.node.type === BLOCKS.OL_LIST) {\n        return commonNode('ol')(props);\n      } else if (props.node.type === BLOCKS.LIST_ITEM) {\n        return commonNode('li')(props);\n      }\n      return next();\n    }\n  };\n};\n\nexport const UnorderedList = listToggleDecorator({\n  type: BLOCKS.UL_LIST,\n  title: 'UL',\n  icon: 'ListBulleted'\n})(props => <ToolbarIcon {...props} />);\n\nexport const OrderedList = listToggleDecorator({\n  type: BLOCKS.OL_LIST,\n  title: 'OL',\n  icon: 'ListNumbered'\n})(props => <ToolbarIcon {...props} />);\n","import React, { Component } from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport ToolbarIcon from '../shared/ToolbarIcon';\nimport blockSelectDecorator from '../shared/BlockSelectDecorator';\nimport { haveTextInSomeBlocks } from '../shared/UtilHave';\nimport { css, cx } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\n\nconst styles = {\n  hr: css`\n    height: ${tokens.spacingM};\n    background: transparent;\n    position: relative;\n    margin: 0 0 ${tokens.spacingL};\n    &:hover {\n      cursor: pointer;\n    }\n    &::after {\n      content: '';\n      position: absolute;\n      width: 100%;\n      height: 1px;\n      background: ${tokens.colorElementMid};\n      top: 50%;\n    }\n  `,\n  hrSelected: css`\n    &::after {\n      background: ${tokens.colorPrimary};\n      -webkit-box-shadow: 0px 0px 5px ${tokens.colorPrimary};\n      box-shadow: 0px 0px 5px ${tokens.colorPrimary};\n    }\n  `\n};\n\nexport const HrPlugin = () => {\n  return {\n    renderNode: (props, _editor, next) => {\n      if (props.node.type === BLOCKS.HR) {\n        return (\n          <hr\n            className={cx(styles.hr, props.isSelected && styles.hrSelected)}\n            {...props.attributes}\n          />\n        );\n      }\n      return next();\n    }\n  };\n};\n\nclass Hr extends Component {\n  render() {\n    return <ToolbarIcon {...this.props} />;\n  }\n}\n\nexport default blockSelectDecorator({\n  type: BLOCKS.HR,\n  title: 'HR',\n  icon: 'HorizontalRule',\n  applyChange: (editor, type) => {\n    const hr = {\n      type,\n      object: 'block'\n    };\n\n    if (editor.value.blocks.size === 0 || haveTextInSomeBlocks(editor)) {\n      editor.insertBlock(hr);\n    } else {\n      editor.setBlocks(hr);\n    }\n\n    editor.insertBlock(BLOCKS.PARAGRAPH).focus();\n  }\n})(Hr);\n","import * as contentfulSlateJSAdapter from '@contentful/contentful-slatejs-adapter';\nimport { documentToPlainTextString } from '@contentful/rich-text-plain-text-renderer';\nimport schema from '../../constants/Schema';\n\nexport const getCharacterCount = editor => {\n  const document = contentfulSlateJSAdapter.toContentfulDocument({\n    document: editor.value.document.toJSON(),\n    schema\n  });\n  return documentToPlainTextString(document).length;\n};\n","import { getCharacterCount } from './Paste';\n\n/**\n * This plugin tracks the character count before and after a paste event,\n * including the text selected during the event. This creates parity with our\n * tracking for the markdown editor.\n */\nexport const PastePlugin = ({ richTextAPI: { logShortcutAction } }) => ({\n  onPaste(_event, editor, next) {\n    const characterCountSelection = global.getSelection().toString().length;\n    const characterCountBefore = getCharacterCount(editor);\n\n    setTimeout(() => {\n      const characterCountAfter = getCharacterCount(editor);\n      logShortcutAction('paste', {\n        characterCountAfter,\n        characterCountBefore,\n        characterCountSelection\n      });\n    });\n    next();\n    return;\n  }\n});\n","import HtmlSerializer from 'slate-html-serializer';\nimport { BLOCKS, MARKS, INLINES } from '@contentful/rich-text-types';\n\n/**\n * Tags to block types mapping\n */\nconst BLOCK_TAGS = {\n  p: BLOCKS.PARAGRAPH,\n  ul: BLOCKS.UL_LIST,\n  ol: BLOCKS.OL_LIST,\n  blockquote: BLOCKS.QUOTE,\n  hr: BLOCKS.HR,\n  h1: BLOCKS.HEADING_1,\n  h2: BLOCKS.HEADING_2,\n  h3: BLOCKS.HEADING_3,\n  h4: BLOCKS.HEADING_4,\n  h5: BLOCKS.HEADING_5,\n  h6: BLOCKS.HEADING_6\n};\n\n/**\n * tags to marks types mapping\n */\nconst MARK_TAGS = {\n  strong: MARKS.BOLD,\n  b: MARKS.BOLD,\n  em: MARKS.ITALIC,\n  i: MARKS.ITALIC,\n  u: MARKS.UNDERLINE,\n  code: MARKS.CODE\n};\n\nconst isGoogleWrapper = el =>\n  el.tagName.toLowerCase() === 'b' && el.id.startsWith('docs-internal-guid-');\n\nconst isGoogleBold = el => {\n  return el.style.fontWeight === '700';\n};\n\nconst isGoogleItalic = el => {\n  return el.style.fontStyle === 'italic';\n};\n\nconst isGoogleUnderline = el => {\n  return el.style.textDecoration === 'underline';\n};\n\nconst gDocsRules = {\n  deserialize(el, next) {\n    const isFromGoogleDocs = !!el.ownerDocument.querySelector('[id*=docs-internal-guid-]');\n\n    if (!isFromGoogleDocs) {\n      return;\n    }\n    if (isGoogleWrapper(el)) {\n      return next(el.childNodes);\n    }\n\n    /**\n     * Google Docs represent marks with css styles applied to SPAN\n     * instead of html tags.\n     * */\n    if (el.tagName.toLowerCase() === 'span') {\n      const marks = [];\n      if (isGoogleBold(el)) {\n        marks.push(MARKS.BOLD);\n      }\n      if (isGoogleItalic(el)) {\n        marks.push(MARKS.ITALIC);\n      }\n      if (isGoogleUnderline(el)) {\n        marks.push(MARKS.UNDERLINE);\n      }\n\n      const textNode = {\n        object: 'text',\n        leaves: [\n          {\n            object: 'leaf',\n            text: el.textContent,\n            marks: marks.map(type => ({ object: 'mark', type }))\n          }\n        ]\n      };\n\n      return textNode;\n    }\n  }\n};\n\nconst listItems = {\n  deserialize(el, next) {\n    /** list-items in Contentful's schema must have blocks as direct children */\n    if (el.tagName.toLowerCase() === 'li') {\n      let childNodes = next(el.childNodes);\n\n      childNodes = childNodes.map(node => {\n        if (node.object === 'text') {\n          return {\n            object: 'block',\n            type: BLOCKS.PARAGRAPH,\n            nodes: [node]\n          };\n        } else {\n          return node;\n        }\n      });\n\n      return {\n        object: 'block',\n        type: BLOCKS.LIST_ITEM,\n        nodes: childNodes\n      };\n    }\n  }\n};\n\nconst links = {\n  deserialize(el, next) {\n    if (el.tagName.toLowerCase() === 'a') {\n      // we only support links with href,\n      // if href is not defined, we should serialize as text\n      if (el.getAttribute('href')) {\n        return {\n          object: 'inline',\n          type: INLINES.HYPERLINK,\n          nodes: next(el.childNodes),\n          data: {\n            uri: el.getAttribute('href')\n          }\n        };\n      } else {\n        return next(el.childNodes);\n      }\n    }\n  }\n};\n\nconst macOSTrailingBreak = {\n  deserialize(el) {\n    if (el.tagName.toLowerCase() === 'br' && el.classList.contains('Apple-interchange-newline')) {\n      return null;\n    }\n  }\n};\n\nconst marks = {\n  deserialize(el, next) {\n    const mark = MARK_TAGS[el.tagName.toLowerCase()];\n    if (mark) {\n      return {\n        object: 'mark',\n        type: mark,\n        nodes: next(el.childNodes)\n      };\n    }\n  }\n};\n\nconst blocks = {\n  deserialize(el, next) {\n    const block = BLOCK_TAGS[el.tagName.toLowerCase()];\n    if (block) {\n      const childNodes = next(el.childNodes);\n\n      return {\n        object: 'block',\n        type: block,\n        nodes: childNodes.length > 0 ? childNodes : [{ object: 'text' }]\n      };\n    }\n  }\n};\n\nconst RULES = [gDocsRules, listItems, links, macOSTrailingBreak, marks, blocks];\n\nexport const create = () => {\n  return new HtmlSerializer({\n    rules: RULES\n  });\n};\n","const RICH_TEXT_COMMANDS_CONTEXT_MARK_TYPE = 'richTextCommandsContext';\n\n/**\n * @description\n * Returns Command Palette command text or leading slash\n *\n * @param {Slate.Editor} editor\n * @returns {String}\n */\nexport const getCommandText = editor => {\n  // matches the character / literally (case sensitive)\n  if (!editor.value.startText) {\n    return null;\n  }\n  const COMMAND_REGEX = /\\/(\\S*)$/;\n  const startOffset = editor.value.selection.start.offset;\n  const textBefore = editor.value.startText.text.slice(0, startOffset);\n  const result = COMMAND_REGEX.exec(textBefore);\n  return result === null ? null : result[1] || result[0];\n};\n\n/**\n * @description\n * Returns Command Palette Decoration if applicable to current text.\n *\n * @param {Slate.Editor} editor\n * @returns {Slate.Decoration?}\n */\nexport const getDecorationOrDefault = editor => {\n  const value = editor.value;\n  if (!value.startText) {\n    return null;\n  }\n\n  const inputValue = getCommandText(editor);\n\n  const { selection } = value;\n\n  if (inputValue) {\n    const decoration = {\n      anchor: {\n        key: selection.start.key,\n        offset: selection.start.offset - (inputValue.length + 1)\n      },\n      focus: {\n        key: selection.start.key,\n        offset: selection.start.offset\n      },\n      mark: {\n        type: RICH_TEXT_COMMANDS_CONTEXT_MARK_TYPE\n      }\n    };\n    return decoration;\n  }\n  return null;\n};\n\nexport const hasCommandPaletteMarkType = markType => {\n  return markType === RICH_TEXT_COMMANDS_CONTEXT_MARK_TYPE;\n};\n\n/**\n * @description\n * Checks if document has command palette decoration\n *\n * @param {Slate.Editor} editor\n * @returns {Boolean}\n */\nexport const hasCommandPaletteDecoration = editor => {\n  const decorations = editor.value.document.getDecorations(editor);\n\n  if (decorations.isEmpty()) {\n    return false;\n  }\n\n  const commandPaletteDecoration = decorations.find(\n    d => d.mark.type === RICH_TEXT_COMMANDS_CONTEXT_MARK_TYPE\n  );\n  return Boolean(commandPaletteDecoration);\n};\n\nexport const removeCommand = (editor, command, anchorOffset = 1) => {\n  editor.removeTextByKey(\n    editor.value.selection.start.key,\n    editor.value.selection.start.offset - (command.length + anchorOffset),\n    command.length + anchorOffset\n  );\n};\n","import { isNodeTypeEnabled } from '../../validations';\nimport { INLINES, BLOCKS } from '@contentful/rich-text-types';\nimport { entityHelpers } from '@contentful/field-editor-shared';\n\nconst ACTIONS = {\n  EMBED: 'embed',\n  CREATE_EMBED: 'create_embed'\n};\n\nexport async function fetchAssets(sdk, query = '') {\n  const assets = await sdk.space.getAssets({ query });\n  return assets.items.map(asset => ({\n    contentTypeName: 'Asset',\n    displayTitle: asset.fields.title ? asset.fields.title[sdk.field.locale] : 'Untitled',\n    id: asset.sys.id,\n    entry: asset,\n    thumbnail:\n      asset.fields.file &&\n      asset.fields.file[sdk.field.locale] &&\n      `${asset.fields.file[sdk.field.locale].url}?h=30`\n  }));\n}\n\nexport async function fetchEntries(sdk, contentType, query = '') {\n  const entries = await sdk.space.getEntries({\n    content_type: contentType.sys.id,\n    query\n  });\n\n  return Promise.all(\n    entries.items.map(async entry => {\n      const description = entityHelpers.getEntityDescription({\n        contentType,\n        entity: entry,\n        localeCode: sdk.field.locale,\n        defaultLocaleCode: sdk.locales.default\n      });\n      const displayTitle = entityHelpers.getEntryTitle({\n        entry,\n        contentType,\n        localeCode: sdk.field.locale,\n        defaultLocaleCode: sdk.locales.default,\n        defaultTitle: 'Untitled'\n      });\n      return {\n        contentTypeName: contentType.name,\n        displayTitle: displayTitle,\n        id: entry.sys.contentType.sys.id,\n        description,\n        entry\n      };\n    })\n  );\n}\n\n/**\n * @description\n * Checks the field validations if the current content type is valid to be linked/embedded.\n *\n * @param {Object} field\n * @param {Object} contentType\n * @param {String} embedType\n * @returns {Boolean}\n */\nexport const isValidLinkedContentType = (field, contentType, embedType) => {\n  if (field.validations.length === 0) {\n    return true;\n  }\n\n  const nodes = field.validations.filter(val => val.nodes)[0].nodes;\n\n  if (nodes[embedType] === undefined) {\n    return true;\n  }\n\n  return !!nodes[embedType]\n    .filter(typeVal => typeVal.linkContentType)\n    .reduce((pre, cur) => [...pre, cur.linkContentType], [])\n    .reduce((pre, cur) => [...pre, ...cur], [])\n    .find(ct => ct === contentType.sys.id);\n};\n\nexport const isEmbeddingEnabled = field =>\n  isNodeTypeEnabled(field, BLOCKS.EMBEDDED_ASSET) ||\n  isNodeTypeEnabled(field, BLOCKS.EMBEDDED_ENTRY) ||\n  isNodeTypeEnabled(field, INLINES.EMBEDDED_ENTRY);\n\nexport class CommandPaletteActionBuilder {\n  constructor(sdk) {\n    this.sdk = sdk;\n  }\n\n  // TODO: Let's create dedicated functions for assets so we do not have to pass a CT.\n\n  maybeBuildEmbedAction(embedType, contentType, callback) {\n    if (!isNodeTypeEnabled(this.sdk.field, embedType)) {\n      return false;\n    }\n    const isAsset = !contentType;\n    if (!isAsset && !isValidLinkedContentType(this.sdk.field, contentType, embedType)) {\n      return false;\n    }\n\n    return buildAction(embedType, contentType, ACTIONS.EMBED, callback);\n  }\n\n  async maybeBuildCreateAndEmbedAction(embedType, contentType, callback) {\n    if (!isNodeTypeEnabled(this.sdk.field, embedType)) {\n      return false;\n    }\n\n    const isAsset = !contentType;\n    if (!isAsset) {\n      if (!isValidLinkedContentType(this.sdk.field, contentType, embedType)) {\n        return false;\n      }\n\n      const canCreateEntryOfContentType = await this.sdk.access.can('create', {\n        sys: {\n          type: 'Entry',\n          contentType: {\n            sys: contentType.sys\n          }\n        }\n      });\n\n      if (canCreateEntryOfContentType === false) {\n        return false;\n      }\n    } else {\n      const canCreateAssets = await this.sdk.access.can('create', 'Asset');\n      if (canCreateAssets === false) {\n        return false;\n      }\n    }\n\n    return buildAction(embedType, contentType, ACTIONS.CREATE_EMBED, callback);\n  }\n}\n\nfunction buildAction(embedType, contentType, actionType, callback) {\n  const isAsset = !contentType;\n  const isInline = embedType === INLINES.EMBEDDED_ENTRY;\n  const label = `${actionType === ACTIONS.EMBED ? 'Embed' : 'Create and embed'} ${\n    isAsset ? 'Asset' : contentType.name\n  } ${isInline ? ' - Inline' : ''}`;\n\n  const icon = isInline ? 'EmbeddedEntryInline' : 'EmbeddedEntryBlock';\n\n  return {\n    label,\n    group: isAsset ? 'Assets' : contentType.name,\n    callback,\n    icon\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport isHotKey from 'is-hotkey';\nimport cn from 'classnames';\nimport { css } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\nimport {\n  SkeletonContainer,\n  SkeletonBodyText,\n  Spinner,\n  SectionHeading,\n  Icon,\n  IconButton,\n} from '@contentful/forma-36-react-components';\nimport uniqBy from 'lodash/uniqBy';\n\nconst styles = {\n  commandPanel: css({\n    display: 'block',\n    background: tokens.colorWhite,\n    boxShadow: '0 2px 5px rgba(0, 0, 0, 0.1), 0 5px 10px -5px rgba(0, 0, 0, 0.3)',\n    border: `1px solid ${tokens.colorElementDark}`,\n    borderRadius: tokens.borderRadiusMedium,\n    fontFamily: tokens.fontStackPrimary,\n    width: '500px',\n    overflowY: 'auto',\n  }),\n  commandPanelList: css({\n    display: 'block',\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    height: '200px',\n    overflowY: 'auto',\n  }),\n  item: css({\n    fontSize: tokens.fontSizeM,\n    lineHeight: tokens.lineHeightDefault,\n    padding: `${tokens.spacingS} ${tokens.spacingXs}`,\n    borderBottom: `1px solid ${tokens.colorElementMid}`,\n    margin: 0,\n    color: tokens.colorTextDark,\n  }),\n  divider: css({\n    fontWeight: tokens.fontWeightDemiBold,\n    padding: `${tokens.spacingS} ${tokens.spacingXs}`,\n    letterSpacing: tokens.letterSpacingWide,\n    fontSize: tokens.fontSizeS,\n    textTransform: 'uppercase',\n    borderBottom: `1px solid ${tokens.colorElementDark}`,\n    margin: 0,\n    lineHeight: tokens.lineHeightDefault,\n    color: tokens.colorTextDark,\n  }),\n  icon: css({\n    marginRight: 10,\n  }),\n  isSelected: css({\n    background: tokens.colorElementLight,\n  }),\n  skeletonContainer: css({\n    padding: tokens.spacingM,\n    height: 200,\n    margin: 0,\n  }),\n  button: css({\n    textAlign: 'left',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    border: 'none',\n    background: 'transparent',\n    fontSize: tokens.fontSizeM,\n  }),\n  navBar: css({\n    display: 'flex',\n    bottom: 0,\n    background: tokens.colorElementLightest,\n    padding: `${tokens.spacingS} ${tokens.spacingXs}`,\n    width: '100%',\n  }),\n  loader: css({\n    marginLeft: 'auto',\n  }),\n  thumbnail: css({\n    marginRight: 15,\n  }),\n  instruction: css({\n    marginRight: 15,\n    color: tokens.colorTextLight,\n  }),\n  closeButton: css({\n    marginLeft: 'auto',\n  }),\n};\n\nconst itemPropType = PropTypes.shape({\n  label: PropTypes.string,\n  icon: PropTypes.string,\n  thumbnail: PropTypes.string,\n  callback: PropTypes.func,\n});\n\nclass CommandPanelItem extends React.Component {\n  static propTypes = {\n    isSelected: PropTypes.bool,\n    index: PropTypes.number,\n    classNames: PropTypes.string,\n    item: itemPropType,\n  };\n  listItemRef = null;\n\n  componentDidUpdate() {\n    if (this.props.isSelected) {\n      this.listItemRef.scrollIntoView({\n        block: 'nearest',\n        inline: 'start',\n      });\n    }\n  }\n\n  render() {\n    const { index, classNames, item } = this.props;\n\n    return (\n      <li\n        key={index}\n        className={classNames}\n        ref={(ref) => {\n          this.listItemRef = ref;\n        }}>\n        <button type=\"button\" className={styles.button} onClick={item.callback && item.callback}>\n          {item.icon && <Icon className={styles.icon} icon={item.icon} color=\"secondary\" />}\n          {item.thumbnail && <img className={styles.thumbnail} src={item.thumbnail} alt=\"\" />}\n          {item.label}\n        </button>\n      </li>\n    );\n  }\n}\n\nconst Instruction = ({ children }) => <span className={styles.instruction}>{children}</span>;\nInstruction.propTypes = {\n  children: PropTypes.node,\n};\n\nexport class CommandPanel extends React.Component {\n  static propTypes = {\n    items: PropTypes.arrayOf(itemPropType),\n    searchString: PropTypes.string,\n    className: PropTypes.string,\n    testId: PropTypes.string,\n    isLoading: PropTypes.bool,\n    isUpdating: PropTypes.bool,\n    breadcrumb: PropTypes.string,\n    richTextAPI: PropTypes.object,\n    onClose: PropTypes.func,\n  };\n  static defaultProps = {\n    className: undefined,\n    searchString: '',\n    items: [],\n    testId: 'cf-ui-command-panel',\n    isLoading: true,\n    isUpdating: false,\n  };\n\n  state = {\n    selectedKey: 0,\n    items: [],\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const itemsHasUpdated = props.items !== state.originalItems;\n    const searchStringHasUpdated = props.searchString !== state.originalSearchString;\n\n    const items = props.items.filter((item) =>\n      item.label.toLowerCase().includes(props.searchString ? props.searchString.toLowerCase() : '')\n    );\n\n    return {\n      originalItems: props.items,\n      originalSearchString: props.searchString,\n      items,\n      selectedKey: itemsHasUpdated || searchStringHasUpdated ? 0 : state.selectedKey,\n    };\n  }\n\n  componentDidMount() {\n    this.props.richTextAPI.logViewportAction('openRichTextCommandsPalette');\n    document.addEventListener('keydown', this.handleKeyboard, true);\n  }\n\n  componentWillUnmount() {\n    this.props.richTextAPI.logViewportAction('cancelRichTextCommandsPalette');\n    document.removeEventListener('keydown', this.handleKeyboard, true);\n  }\n\n  handleKeyboard = (e) => {\n    if (isHotKey('up', e)) {\n      if (this.state.selectedKey === 0) return;\n      this.setState((state) => ({\n        selectedKey: state.selectedKey - 1,\n      }));\n    }\n\n    if (isHotKey('down', e)) {\n      if (this.state.selectedKey === this.state.items.length - 1) return;\n      this.setState((state) => ({\n        selectedKey: state.selectedKey + 1,\n      }));\n    }\n\n    if (isHotKey('enter', e)) {\n      const selectedItem = this.state.items[this.state.selectedKey];\n      if (selectedItem && selectedItem.callback) selectedItem.callback();\n    }\n  };\n\n  renderGroups() {\n    const groups = uniqBy(\n      this.state.items.map((item) => item.group),\n      (value) => value\n    );\n\n    if (!groups.length) {\n      return <li className={styles.item}>No results</li>;\n    }\n\n    return groups.map((groupName, index) => {\n      return (\n        <React.Fragment key={index}>\n          {groupName && (\n            <li key={groupName} className={styles.divider}>\n              {groupName}\n            </li>\n          )}\n          {this.renderItems(groupName)}\n        </React.Fragment>\n      );\n    });\n  }\n\n  renderItems(groupName) {\n    return this.state.items\n      .filter((item) => item.group === groupName)\n      .map((item) => {\n        const index = this.state.items.indexOf(item);\n        const isSelected = index === this.state.selectedKey;\n\n        const classNames = cn(styles.item, {\n          [styles.isSelected]: isSelected,\n        });\n\n        return (\n          <CommandPanelItem\n            item={item}\n            classNames={classNames}\n            key={index}\n            isSelected={isSelected}\n          />\n        );\n      });\n  }\n\n  renderNavigationBar = () => (\n    <div className={styles.navBar}>\n      <SectionHeading>\n        {this.props.breadcrumb ? `Embed ${this.props.breadcrumb}` : 'Richtext Commands'}\n      </SectionHeading>\n      <IconButton\n        label=\"Close\"\n        className={styles.closeButton}\n        iconProps={{ icon: 'Close' }}\n        buttonType=\"muted\"\n        onClick={this.props.onClose}\n      />\n    </div>\n  );\n\n  renderStatusBar = () => (\n    <div className={styles.navBar}>\n      <span className={styles.instructions}>\n        <Instruction>↑ ↓ to navigate</Instruction>\n        <Instruction>↵ to confirm</Instruction>\n        <Instruction>esc to close</Instruction>\n      </span>\n      {this.props.isUpdating && (\n        <span className={styles.loader}>\n          loading <Spinner size=\"small\" />\n        </span>\n      )}\n    </div>\n  );\n\n  renderSkeleton = () => (\n    <li className={styles.skeletonContainer}>\n      <SkeletonContainer>\n        <SkeletonBodyText numberOfLines={7} />\n      </SkeletonContainer>\n    </li>\n  );\n\n  render() {\n    const { className, testId, isLoading } = this.props;\n\n    const classNames = cn(styles.commandPanel, className);\n\n    return (\n      <div className={classNames}>\n        {this.renderNavigationBar()}\n        <ul className={styles.commandPanelList} data-test-id={testId}>\n          {isLoading ? this.renderSkeleton() : this.renderGroups()}\n        </ul>\n        {this.renderStatusBar()}\n      </div>\n    );\n  }\n}\n\nexport default CommandPanel;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { BLOCKS, INLINES } from '@contentful/rich-text-types';\nimport isHotKey from 'is-hotkey';\nimport throttle from 'lodash/throttle';\nimport flatten from 'lodash/flatten';\nimport { insertBlock } from '../../EmbeddedEntityBlock/Util';\nimport { insertInline } from '../../EmbeddedEntryInline/Utils';\nimport { fetchEntries, fetchAssets, CommandPaletteActionBuilder } from '../CommandPaletteService';\nimport { removeCommand } from '../Util';\nimport CommandPanelMenu from './CommandPanelMenu';\nimport { InViewport } from '@contentful/forma-36-react-components';\nimport tokens from '@contentful/forma-36-tokens';\n\nconst DEFAULT_POSITION = {\n  top: 0,\n  left: 0,\n};\nclass CommandPalette extends React.PureComponent {\n  static propTypes = {\n    editor: PropTypes.object,\n    command: PropTypes.string,\n    richTextAPI: PropTypes.object,\n  };\n\n  state = {\n    anchorPosition: DEFAULT_POSITION,\n    items: [],\n    isLoading: true,\n    panelPosition: 'bottom',\n  };\n\n  paletteDimensions = {\n    height: 300,\n    width: 300,\n  };\n\n  async componentDidMount() {\n    this.isComponentMounted = true;\n    await this.createInitialCommands();\n    this.updatePanelPosition();\n    this.paletteDimensions = {\n      height: this.palette.getBoundingClientRect().height,\n      width: this.palette.getBoundingClientRect().width,\n    };\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n    this.removeEventListeners();\n    this.requestUpdate.cancel();\n  }\n\n  bindEventListeners = () => {\n    document.addEventListener('scroll', this.handleScroll, true);\n    document.addEventListener('keydown', this.handleKeyboard, true);\n    document.addEventListener('click', this.handleOutsideClick, true);\n  };\n\n  removeEventListeners = () => {\n    document.removeEventListener('scroll', this.handleScroll, true);\n    document.removeEventListener('keydown', this.handleKeyboard, true);\n    document.removeEventListener('click', this.handleOutsideClick, true);\n  };\n\n  handleOutsideClick = (event) => {\n    if (!this.palette.contains(event.target)) {\n      this.setState({\n        isClosed: true,\n      });\n    }\n  };\n\n  requestUpdate = throttle(\n    () => {\n      if (this.state.currentCommand) {\n        this.setState({ isUpdating: true });\n        this.createCommands(\n          this.state.currentCommand.contentType,\n          this.state.currentCommand.type,\n          this.props.command\n        );\n      }\n    },\n    1000,\n    { leading: true, trailing: false }\n  );\n\n  componentDidUpdate() {\n    if (this.state.currentCommand && this.state.currentCommand.command !== this.props.command) {\n      this.requestUpdate();\n    } else {\n      this.requestUpdate.cancel();\n    }\n    if (!this.state.isClosed) {\n      this.bindEventListeners();\n    } else {\n      this.removeEventListeners();\n    }\n  }\n\n  createCommand = (label, contentType, entry, type, description, thumbnail) => ({\n    label: `${label}${description ? ` - ${description}` : ''}`,\n    thumbnail,\n    contentType,\n    callback: () => {\n      const { editor, command, richTextAPI } = this.props;\n      const { logCommandPaletteAction } = richTextAPI;\n      removeCommand(editor, command);\n      switch (type) {\n        case INLINES.EMBEDDED_ENTRY:\n          insertInline(editor, entry.sys.id, false);\n          logCommandPaletteAction('insert', {\n            nodeType: INLINES.EMBEDDED_ENTRY,\n          });\n          break;\n        case BLOCKS.EMBEDDED_ASSET:\n          insertBlock(editor, BLOCKS.EMBEDDED_ASSET, entry, false);\n          logCommandPaletteAction('insert', {\n            nodeType: BLOCKS.EMBEDDED_ASSET,\n          });\n          break;\n        default:\n          insertBlock(editor, BLOCKS.EMBEDDED_ENTRY, entry, false);\n          logCommandPaletteAction('insert', {\n            nodeType: BLOCKS.EMBEDDED_ENTRY,\n          });\n          break;\n      }\n    },\n  });\n\n  onCreateAndEmbedEntity = async (contentTypeId, nodeType) => {\n    const { richTextAPI, editor, command } = this.props;\n    const { sdk } = richTextAPI;\n    removeCommand(editor, command);\n    const { createAsset, createEntry } = sdk.space;\n    const isAsset = contentTypeId === null;\n    const createEntity = () => (isAsset ? createAsset({}) : createEntry(contentTypeId, {}));\n    const entity = await createEntity();\n    const { id: entityId, type: entityType } = entity.sys;\n\n    nodeType === INLINES.EMBEDDED_ENTRY\n      ? insertInline(editor, entity.sys.id, false)\n      : insertBlock(editor, nodeType, entity);\n\n    richTextAPI.logCommandPaletteAction('insert', {\n      nodeType,\n    });\n\n    const { navigator } = sdk;\n    const openEntity = entityType === 'Asset' ? navigator.openAsset : navigator.openEntry;\n    return openEntity(entityId, { slideIn: true });\n  };\n\n  createContentTypeActions = async (actionBuilder, contentType) => {\n    const actions = await Promise.all([\n      actionBuilder.maybeBuildEmbedAction(BLOCKS.EMBEDDED_ENTRY, contentType, () => {\n        this.setState({ breadcrumb: contentType.name, isLoading: true });\n        this.createCommands(contentType);\n        this.clearCommand();\n      }),\n      actionBuilder.maybeBuildEmbedAction(INLINES.EMBEDDED_ENTRY, contentType, () => {\n        this.setState({ breadcrumb: contentType.name, isLoading: true });\n        this.createCommands(contentType, INLINES.EMBEDDED_ENTRY);\n        this.clearCommand();\n      }),\n      actionBuilder.maybeBuildCreateAndEmbedAction(BLOCKS.EMBEDDED_ENTRY, contentType, () =>\n        this.onCreateAndEmbedEntity(contentType.sys.id, BLOCKS.EMBEDDED_ENTRY)\n      ),\n      actionBuilder.maybeBuildCreateAndEmbedAction(INLINES.EMBEDDED_ENTRY, contentType, () =>\n        this.onCreateAndEmbedEntity(contentType.sys.id, INLINES.EMBEDDED_ENTRY)\n      ),\n    ]);\n    return actions.filter((action) => action);\n  };\n\n  createAssetActions = async (actionBuilder) => {\n    const actions = await Promise.all([\n      actionBuilder.maybeBuildEmbedAction(BLOCKS.EMBEDDED_ASSET, null, () => {\n        this.setState({ breadcrumb: 'Asset', isLoading: true });\n        this.createCommands(null, BLOCKS.EMBEDDED_ASSET);\n        this.clearCommand();\n      }),\n      actionBuilder.maybeBuildCreateAndEmbedAction(BLOCKS.EMBEDDED_ASSET, null, () =>\n        this.onCreateAndEmbedEntity(null, BLOCKS.EMBEDDED_ASSET)\n      ),\n    ]);\n    return actions.filter((action) => action);\n  };\n\n  handleScroll = (e) => {\n    if (e.target.nodeName !== 'UL') {\n      this.updatePanelPosition();\n    }\n  };\n\n  clearCommand = () => {\n    if (this.props.command !== '/') {\n      removeCommand(this.props.editor, this.props.command, 0);\n    }\n  };\n\n  createCommands = async (contentType, type, command) => {\n    this.setState({ isUpdating: true });\n    const allEntries = !contentType\n      ? await fetchAssets(this.props.richTextAPI.sdk, command)\n      : await fetchEntries(this.props.richTextAPI.sdk, contentType, command);\n\n    if (this.isComponentMounted) {\n      this.setState({\n        currentCommand: {\n          contentType,\n          type,\n          command,\n        },\n        isUpdating: false,\n        isLoading: false,\n        items: allEntries.map((entry) =>\n          this.createCommand(\n            entry.displayTitle,\n            entry.contentTypeName,\n            entry.entry,\n            type,\n            entry.description,\n            entry.thumbnail\n          )\n        ),\n      });\n    }\n  };\n\n  createInitialCommands = async () => {\n    const { sdk } = this.props.richTextAPI;\n\n    const allContentTypes = sdk.space.getCachedContentTypes();\n\n    this.setState({\n      isLoading: false,\n    });\n\n    const actionBuilder = new CommandPaletteActionBuilder(sdk);\n\n    const contentTypeActions = flatten(\n      await Promise.all(\n        allContentTypes.map((ct) => this.createContentTypeActions(actionBuilder, ct))\n      )\n    );\n\n    const assetActions = await this.createAssetActions(actionBuilder);\n\n    this.setState((prevState) => ({\n      items: [...prevState.items, ...contentTypeActions, ...assetActions],\n    }));\n  };\n\n  handleKeyboard = (e) => {\n    const isEscKey = isHotKey('esc', e); // ESC to close menu shouldn't blur editor.\n    if (isEscKey || isHotKey('down', e) || isHotKey('up', e) || isHotKey('enter', e)) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    if (isEscKey || isHotKey('tab', e)) {\n      this.setState({\n        isClosed: true,\n      });\n    }\n  };\n\n  render() {\n    // Todo: Revisit tab index.\n    /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n    /* eslint-disable jsx-a11y/tabindex-no-positive */\n    if (this.state.isClosed) {\n      return null;\n    }\n    const root = window.document.body;\n    return ReactDOM.createPortal(\n      <div\n        tabIndex=\"1\"\n        ref={(ref) => {\n          this.palette = ref;\n        }}\n        style={{\n          position: 'absolute',\n          outline: 'none',\n          minWidth: 200,\n          top: this.state.anchorPosition.top,\n          left: this.state.anchorPosition.left,\n          zIndex: tokens.zIndexDropdown,\n        }}>\n        <InViewport\n          onOverflowBottom={() => {\n            if (this.state.panelPosition !== 'top') {\n              this.setState({ panelPosition: 'top' }, this.updatePanelPosition);\n            }\n          }}\n          onOverflowTop={() => {\n            if (this.state.panelPosition !== 'bottom') {\n              this.setState({ panelPosition: 'bottom' }, this.updatePanelPosition);\n            }\n          }}>\n          <CommandPanelMenu\n            searchString={this.props.command === '/' ? '' : this.props.command}\n            items={this.state.items}\n            isLoading={this.state.isLoading}\n            isUpdating={this.state.isUpdating}\n            onClose={() => {\n              this.setState({\n                isClosed: true,\n              });\n            }}\n            breadcrumb={this.state.breadcrumb}\n            richTextAPI={this.props.richTextAPI}\n          />\n        </InViewport>\n      </div>,\n      root\n    );\n  }\n\n  updatePanelPosition() {\n    const anchorRect = document.getSelection().getRangeAt(0).getBoundingClientRect();\n\n    this.setState((prevState) => ({\n      anchorPosition: {\n        top:\n          prevState.panelPosition === 'bottom'\n            ? anchorRect.bottom\n            : anchorRect.top - this.paletteDimensions.height,\n        left: anchorRect.left,\n      },\n    }));\n  }\n}\n\nexport default CommandPalette;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmbeddingEnabled } from './CommandPaletteService';\nimport { hasCommandPaletteDecoration, getCommandText } from './Util';\nimport CommandPanel from './CommandPanel';\nclass CommandPalette extends React.PureComponent {\n  static propTypes = {\n    editor: PropTypes.object,\n    richTextAPI: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { field } = this.props.richTextAPI.sdk;\n\n    this.state = {\n      embedsEnabled: isEmbeddingEnabled(field)\n    };\n  }\n\n  render() {\n    if (!hasCommandPaletteDecoration(this.props.editor) || !this.state.embedsEnabled) {\n      return null;\n    }\n\n    return (\n      <CommandPanel\n        editor={this.props.editor}\n        richTextAPI={this.props.richTextAPI}\n        command={getCommandText(this.props.editor)}\n      />\n    );\n  }\n}\n\nexport default CommandPalette;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass CommandMark extends React.PureComponent {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    editor: PropTypes.object,\n    attributes: PropTypes.object\n  };\n\n  render() {\n    // Todo: Revisit tab index.\n    /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n    /* eslint-disable jsx-a11y/tabindex-no-positive */\n    const { children, attributes } = this.props;\n    return (\n      <span tabIndex=\"1\" {...attributes} className=\"command-context\">\n        {children}\n      </span>\n    );\n  }\n}\n\nexport default CommandMark;\n","import React from 'react';\n\nimport { getDecorationOrDefault, hasCommandPaletteMarkType } from './Util';\nimport CommandPalette from './CommandPalette';\nimport CommandMark from './CommandMark';\n\nexport const CommandPalettePlugin = ({ richTextAPI }) => ({\n  /* eslint-disable react/display-name */\n  decorateNode: (_node, editor, next) => {\n    const others = next();\n\n    const decoration = getDecorationOrDefault(editor);\n\n    if (decoration) {\n      return [...others, decoration];\n    }\n\n    return [...others];\n  },\n  renderMark: (props, editor, next) => {\n    if (hasCommandPaletteMarkType(props.mark.type)) {\n      return (\n        <CommandMark attributes={props.attributes} editor={editor}>\n          {props.children}\n        </CommandMark>\n      );\n    }\n    return next();\n  },\n  renderEditor: (_props, editor, next) => {\n    const children = next();\n    return (\n      <React.Fragment>\n        {children}\n        <CommandPalette\n          anchor={editor.state.commandMark}\n          value={editor.value}\n          editor={editor}\n          richTextAPI={richTextAPI}\n        />\n      </React.Fragment>\n    );\n  }\n});\n","import { BLOCKS } from '@contentful/rich-text-types';\nimport { BoldPlugin } from './Bold';\nimport { ItalicPlugin } from './Italic';\nimport { UnderlinedPlugin } from './Underlined';\nimport { CodePlugin } from './Code';\nimport { QuotePlugin } from './Quote';\nimport { HyperlinkPlugin } from './Hyperlink';\nimport {\n  Heading1Plugin,\n  Heading2Plugin,\n  Heading3Plugin,\n  Heading4Plugin,\n  Heading5Plugin,\n  Heading6Plugin\n} from './Heading';\n\nimport NewLinePlugin from './NewLinePlugin';\nimport { ParagraphPlugin } from './Paragraph';\n\nimport { EmbeddedAssetBlockPlugin, EmbeddedEntryBlockPlugin } from './EmbeddedEntityBlock';\nimport { EmbeddedEntryInlinePlugin } from './EmbeddedEntryInline';\n\nimport { ListPlugin } from './List';\nimport { HrPlugin } from './Hr';\n\nimport TrailingBlock from '@wikifactory/slate-trailing-block';\nimport { PastePlugin } from './Paste';\nimport { PasteHtmlPlugin } from './PasteHtml';\nimport { PasteTextPlugin } from './PasteText';\n\nimport { CommandPalettePlugin } from './CommandPalette';\nimport { InsertBeforeFirstVoidBlockPlugin } from './InsertBeforeFirstVoidBlock';\n\nimport schema from '../constants/Schema';\n\nexport function buildPlugins(richTextAPI) {\n  return [\n    { schema },\n    InsertBeforeFirstVoidBlockPlugin({ richTextAPI }),\n    BoldPlugin({ richTextAPI }),\n    ItalicPlugin({ richTextAPI }),\n    UnderlinedPlugin({ richTextAPI }),\n    CodePlugin({ richTextAPI }),\n    QuotePlugin({ richTextAPI }),\n    HyperlinkPlugin({ richTextAPI }),\n    Heading1Plugin({ richTextAPI }),\n    Heading2Plugin({ richTextAPI }),\n    Heading3Plugin({ richTextAPI }),\n    Heading4Plugin({ richTextAPI }),\n    Heading5Plugin({ richTextAPI }),\n    Heading6Plugin({ richTextAPI }),\n    ParagraphPlugin(),\n    HrPlugin({ richTextAPI }),\n    EmbeddedEntryInlinePlugin({ richTextAPI }),\n    EmbeddedEntryBlockPlugin({ richTextAPI }),\n    EmbeddedAssetBlockPlugin({ richTextAPI }),\n    ListPlugin({ richTextAPI }),\n    PastePlugin({ richTextAPI }),\n    PasteHtmlPlugin(),\n    PasteTextPlugin(),\n    CommandPalettePlugin({ richTextAPI }),\n    TrailingBlock({ type: BLOCKS.PARAGRAPH }),\n    NewLinePlugin()\n  ];\n}\n","import isHotkey from 'is-hotkey';\nimport { isVoidBlockFirstAndFocused, insertParagraphAndFocusToStartOfDocument } from './Util';\n\n/**\n *  Provides a way to insert content before the first void block in the document.\n */\nexport const InsertBeforeFirstVoidBlockPlugin = () => ({\n  onKeyDown: (event, editor, next) => {\n    if (isHotkey('enter', event) && isVoidBlockFirstAndFocused(editor)) {\n      insertParagraphAndFocusToStartOfDocument(editor);\n      return;\n    }\n\n    return next();\n  }\n});\n","import { BLOCKS } from '@contentful/rich-text-types';\n/**\n * Checks if the first block in the document is void and is focused.\n *\n * @param {Slate.Editor} editor\n * @returns {Boolean}\n */\nexport function isVoidBlockFirstAndFocused(editor) {\n  return (\n    editor.value.document.getBlocks().first() === editor.value.focusBlock &&\n    editor.isVoid(editor.value.focusBlock)\n  );\n}\n\n/**\n * Inserts and focuses an empty paragraph as a first child to the document.\n *\n * @param {Slate.Editor} editor\n * @returns {void}\n */\n\nexport function insertParagraphAndFocusToStartOfDocument(editor) {\n  editor\n    .splitBlock()\n    .moveToStartOfDocument()\n    .setBlocks(BLOCKS.PARAGRAPH)\n    .focus();\n}\n","import isHotkey from 'is-hotkey';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { toggleChange } from '../shared/BlockToggleDecorator';\nimport CommonNode from '../shared/NodeDecorator';\n\nconst plugin = (type, tagName, tagProps, hotkey) => {\n  return {\n    renderNode: (props, _editor, next) => {\n      if (props.node.type === type) {\n        return CommonNode(tagName, tagProps)(props);\n      }\n      return next();\n    },\n    onKeyDown: (e, editor, next) => {\n      if (isHotkey(hotkey, e)) {\n        editor.call(toggleChange, type);\n        return;\n      }\n      return next();\n    }\n  };\n};\n\n// TODO: move hotkeys to components\nexport const ParagraphPlugin = (type = BLOCKS.PARAGRAPH) =>\n  // Can't use <p/> as for e.g. links we need to show a tooltip inside.\n  plugin(type, 'div', {}, ['mod+opt+0']);\n","import { getEventTransfer } from 'slate-react';\nimport { create as createSerializer } from './Serializer';\n\n/**\n * The plugin allows to paste html to the Structured Text Editor\n * by deserializing html content from ClipboardEvent into\n * Slate document.\n */\nexport const PasteHtmlPlugin = () => {\n  const serializer = createSerializer();\n  return {\n    onPaste(event, editor, next) {\n      const transfer = getEventTransfer(event);\n      if (transfer.type != 'html') {\n        next();\n        return;\n      }\n      const { document } = serializer.deserialize(transfer.html);\n\n      editor.insertFragment(document);\n      return;\n    }\n  };\n};\n","import { getEventTransfer } from 'slate-react';\nimport PlainSerializer from 'slate-plain-serializer';\nimport { BLOCKS } from '@contentful/rich-text-types';\n\n/**\n * This plugin changes how pasting text is handled in the Rich text editor by\n * deserializing text content from ClipboardEvent into a Slate document. We\n * use it to handle converting new lines to paragraphs. Without this plugin,\n * lines of text separated by an empty new line will result in extra empty\n * paragraphs.\n */\nexport const PasteTextPlugin = () => {\n  return {\n    onPaste(event, editor, next) {\n      const transfer = getEventTransfer(event);\n      if (transfer.type !== 'text') {\n        next();\n        return;\n      }\n\n      const string = transfer.text;\n\n      const { document } = PlainSerializer.deserialize(string, {\n        defaultBlock: BLOCKS.PARAGRAPH,\n        delimiter: '\\n\\n' // We look for double new lines as a delimiter for paragraphs\n      });\n\n      editor.insertFragment(document);\n      return;\n    }\n  };\n};\n","import isHotkey from 'is-hotkey';\n\nexport default function() {\n  return {\n    onKeyDown(event, editor, next) {\n      if (isHotkey('shift+enter', event)) {\n        editor.insertText('\\n');\n        return;\n      }\n      return next();\n    }\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown, DropdownList, Button } from '@contentful/forma-36-react-components';\n\nclass EntryEmbedDropdown extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    isOpen: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onClose: PropTypes.func,\n    onToggle: PropTypes.func,\n  };\n\n  render() {\n    const { onToggle, isOpen, onClose, children } = this.props;\n    return (\n      <Dropdown\n        className=\"toolbar-entry-dropdown\"\n        position=\"bottom-right\"\n        toggleElement={\n          <Button\n            onClick={onToggle}\n            data-test-id=\"toolbar-entry-dropdown-toggle\"\n            className=\"toolbar-entry-dropdown-toggle\"\n            indicateDropdown\n            buttonType=\"muted\"\n            size=\"small\"\n            icon=\"Plus\"\n            disabled={this.props.disabled}>\n            Embed\n          </Button>\n        }\n        isOpen={isOpen}\n        onClose={onClose}>\n        <DropdownList className=\"toolbar-entry-dropdown-list\">{children}</DropdownList>\n      </Dropdown>\n    );\n  }\n}\n\nexport default EntryEmbedDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { EditorToolbar, EditorToolbarDivider } from '@contentful/forma-36-react-components';\n\nimport Bold from '../plugins/Bold';\nimport Italic from '../plugins/Italic';\nimport Underlined from '../plugins/Underlined';\nimport Code from '../plugins/Code';\nimport Quote from '../plugins/Quote';\nimport {\n  Heading1,\n  Heading2,\n  Heading3,\n  Heading4,\n  Heading5,\n  Heading6,\n  Paragraph,\n  HeadingDropdown,\n} from '../plugins/Heading';\n\nimport Hyperlink from '../plugins/Hyperlink';\nimport { css } from 'emotion';\n\nimport EmbeddedEntryInline from '../plugins/EmbeddedEntryInline';\nimport EmbeddedEntityBlock from '../plugins/EmbeddedEntityBlock';\nimport EntryEmbedDropdown from '../plugins/EntryEmbedDropdown';\n\nimport { UnorderedList, OrderedList } from '../plugins/List';\nimport Hr from '../plugins/Hr';\n\nimport { BLOCKS, MARKS, INLINES } from '@contentful/rich-text-types';\n\nimport { isNodeTypeEnabled, isMarkEnabled } from '../validations';\n\nconst styles = {\n  embedActionsWrapper: css({\n    display: ['-webkit-box', '-ms-flexbox', 'flex'],\n    webkitAlignSelf: 'flex-start',\n    alignSelf: 'flex-start',\n    msFlexItemAlign: 'start',\n    marginLeft: 'auto',\n  }),\n  formattingOptionsWrapper: css({\n    display: ['-webkit-box', '-ms-flexbox', 'flex'],\n    msFlexAlign: 'center',\n    webkitBoxAlign: 'center',\n    alignItems: 'center',\n    msFlexWrap: 'wrap',\n    flexWrap: 'wrap',\n    marginRight: '20px',\n  }),\n};\n\nexport default class Toolbar extends React.Component {\n  static propTypes = {\n    richTextAPI: PropTypes.object.isRequired,\n    isDisabled: PropTypes.bool.isRequired,\n    editor: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  hasMounted = false;\n\n  isReadyToSetFocusProgrammatically = false;\n\n  state = {\n    headingMenuOpen: false,\n    canAccessAssets: false,\n    ...getValidationInfo(this.props.richTextAPI.sdk.field),\n  };\n\n  componentDidMount() {\n    this.hasMounted = true;\n    this.props.richTextAPI.sdk.access.can('read', 'Asset').then((canReadAssets) => {\n      if (this.hasMounted) {\n        // Prevent setting state on unmounted component\n        this.setState({ canAccessAssets: canReadAssets });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.hasMounted = false;\n  }\n\n  onChange = (...args) => {\n    this.setState({ headingMenuOpen: false });\n    this.props.onChange(...args);\n  };\n\n  toggleEmbedDropdown = () =>\n    this.setState((prevState) => ({\n      isEmbedDropdownOpen: !prevState.isEmbedDropdownOpen,\n    }));\n\n  handleEmbedDropdownClose = () =>\n    this.setState({\n      isEmbedDropdownOpen: false,\n    });\n\n  renderEmbeds = (props) => {\n    const field = this.props.richTextAPI.sdk.field;\n\n    const inlineEntryEmbedEnabled = isNodeTypeEnabled(field, INLINES.EMBEDDED_ENTRY);\n    const blockEntryEmbedEnabled = isNodeTypeEnabled(field, BLOCKS.EMBEDDED_ENTRY);\n    const blockAssetEmbedEnabled =\n      this.state.canAccessAssets && isNodeTypeEnabled(field, BLOCKS.EMBEDDED_ASSET);\n\n    const numEnabledEmbeds = [\n      inlineEntryEmbedEnabled,\n      blockEntryEmbedEnabled,\n      blockAssetEmbedEnabled,\n    ].filter(Boolean).length;\n\n    return (\n      <div className={styles.embedActionsWrapper}>\n        {numEnabledEmbeds > 1 ? (\n          <EntryEmbedDropdown\n            onToggle={this.toggleEmbedDropdown}\n            isOpen={this.state.isEmbedDropdownOpen}\n            disabled={props.disabled}\n            onClose={this.handleEmbedDropdownClose}>\n            {blockEntryEmbedEnabled && (\n              <EmbeddedEntityBlock nodeType={BLOCKS.EMBEDDED_ENTRY} {...props} />\n            )}\n            {inlineEntryEmbedEnabled && <EmbeddedEntryInline {...props} />}\n            {blockAssetEmbedEnabled && (\n              <EmbeddedEntityBlock nodeType={BLOCKS.EMBEDDED_ASSET} {...props} />\n            )}\n          </EntryEmbedDropdown>\n        ) : (\n          <React.Fragment>\n            {blockEntryEmbedEnabled && (\n              <EmbeddedEntityBlock nodeType={BLOCKS.EMBEDDED_ENTRY} isButton {...props} />\n            )}\n            {inlineEntryEmbedEnabled && <EmbeddedEntryInline isButton {...props} />}\n            {blockAssetEmbedEnabled && (\n              <EmbeddedEntityBlock nodeType={BLOCKS.EMBEDDED_ASSET} isButton {...props} />\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    );\n  };\n\n  toggleHeadingMenu = (event) => {\n    event.preventDefault();\n    this.setState((prevState) => ({\n      headingMenuOpen: !prevState.headingMenuOpen,\n    }));\n  };\n\n  closeHeadingMenu = () =>\n    this.setState({\n      headingMenuOpen: false,\n    });\n\n  render() {\n    const { editor, isDisabled, richTextAPI } = this.props;\n    if (editor.value.selection.isFocused) {\n      // If the Slate input has ever been focused by the user, we can now also\n      // programmatically use `editor.setFocus()` without undesired side-effects.\n      this.isReadyToSetFocusProgrammatically = true;\n    }\n    const props = {\n      editor,\n      onToggle: this.onChange,\n      onCloseEmbedMenu: this.toggleEmbedDropdown,\n      disabled: isDisabled,\n      richTextAPI,\n      canAutoFocus: this.isReadyToSetFocusProgrammatically,\n    };\n    const { field } = richTextAPI.sdk;\n    const { isAnyHyperlinkEnabled, isAnyListEnabled, isAnyMarkEnabled } = this.state;\n    const currentBlockType = props.editor.value.blocks.getIn([0, 'type']);\n    return (\n      <EditorToolbar data-test-id=\"toolbar\">\n        <div className={styles.formattingOptionsWrapper}>\n          <HeadingDropdown\n            onToggle={this.toggleHeadingMenu}\n            isToggleActive={true}\n            isOpen={this.state.headingMenuOpen}\n            onClose={this.closeHeadingMenu}\n            currentBlockType={currentBlockType}\n            disabled={props.disabled}>\n            <Paragraph {...props} />\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_1) && <Heading1 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_2) && <Heading2 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_3) && <Heading3 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_4) && <Heading4 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_5) && <Heading5 {...props} />}\n            {isNodeTypeEnabled(field, BLOCKS.HEADING_6) && <Heading6 {...props} />}\n          </HeadingDropdown>\n          {isAnyMarkEnabled && <EditorToolbarDivider testId=\"mark-divider\" />}\n          {isMarkEnabled(field, MARKS.BOLD) && <Bold {...props} />}\n          {isMarkEnabled(field, MARKS.ITALIC) && <Italic {...props} />}\n          {isMarkEnabled(field, MARKS.UNDERLINE) && <Underlined {...props} />}\n          {isMarkEnabled(field, MARKS.CODE) && <Code {...props} />}\n          {isAnyHyperlinkEnabled && (\n            <React.Fragment>\n              <EditorToolbarDivider testId=\"hyperlink-divider\" />\n              <Hyperlink {...props} />\n            </React.Fragment>\n          )}\n          {isAnyListEnabled && <EditorToolbarDivider testId=\"list-divider\" />}\n          {isNodeTypeEnabled(field, BLOCKS.UL_LIST) && <UnorderedList {...props} />}\n          {isNodeTypeEnabled(field, BLOCKS.OL_LIST) && <OrderedList {...props} />}\n          {isNodeTypeEnabled(field, BLOCKS.QUOTE) && <Quote {...props} />}\n          {isNodeTypeEnabled(field, BLOCKS.HR) && <Hr {...props} />}\n        </div>\n        {this.renderEmbeds(props)}\n      </EditorToolbar>\n    );\n  }\n}\n\nfunction getValidationInfo(field) {\n  const isAnyMarkEnabled =\n    isMarkEnabled(field, MARKS.BOLD) ||\n    isMarkEnabled(field, MARKS.ITALIC) ||\n    isMarkEnabled(field, MARKS.UNDERLINE) ||\n    isMarkEnabled(field, MARKS.CODE);\n\n  const isAnyHyperlinkEnabled =\n    isNodeTypeEnabled(field, INLINES.HYPERLINK) ||\n    isNodeTypeEnabled(field, INLINES.ASSET_HYPERLINK) ||\n    isNodeTypeEnabled(field, INLINES.ENTRY_HYPERLINK);\n\n  const isAnyListEnabled =\n    isNodeTypeEnabled(field, BLOCKS.UL_LIST) ||\n    isNodeTypeEnabled(field, BLOCKS.OL_LIST) ||\n    isNodeTypeEnabled(field, BLOCKS.QUOTE) ||\n    isNodeTypeEnabled(field, BLOCKS.HR);\n  return {\n    isAnyMarkEnabled,\n    isAnyHyperlinkEnabled,\n    isAnyListEnabled,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\n\nconst styles = {\n  nativeSticky: css`\n    position: -webkit-sticky;\n    position: sticky;\n    top: -1px;\n    z-index: 2;\n  `,\n};\n\nconst StickyToolbarWrapper = ({ isDisabled, children }) => (\n  <div className={isDisabled ? '' : styles.nativeSticky}>{children}</div>\n);\n\nStickyToolbarWrapper.propTypes = {\n  isDisabled: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport default StickyToolbarWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Editor } from 'slate-react';\nimport { Value, Editor as BasicEditor } from 'slate';\nimport noop from 'lodash/noop';\nimport debounce from 'lodash/debounce';\nimport { List, is } from 'immutable';\nimport deepEquals from 'fast-deep-equal';\n\nimport { BLOCKS, EMPTY_DOCUMENT } from '@contentful/rich-text-types';\nimport { toContentfulDocument, toSlatejsDocument } from '@contentful/contentful-slatejs-adapter';\nimport { EntityProvider } from '@contentful/field-editor-reference';\n\nimport schema from './constants/Schema';\nimport { createRichTextAPI } from './plugins/shared/PluginApi';\nimport { buildPlugins } from './plugins';\nimport Toolbar from './Toolbar';\nimport StickyToolbarWrapper from './Toolbar/StickyToolbarWrapper';\nimport { FieldConnector } from '@contentful/field-editor-shared';\nimport { css, cx } from 'emotion';\nimport tokens from '@contentful/forma-36-tokens';\n\nconst STYLE_EDITOR_BORDER = `1px solid ${tokens.colorElementDark}`;\n\nconst styles = {\n  root: css({\n    position: 'relative',\n  }),\n  editor: css({\n    borderRadius: `0 0 ${tokens.borderRadiusMedium} ${tokens.borderRadiusMedium}`,\n    border: STYLE_EDITOR_BORDER,\n    borderTop: 0,\n    padding: '20px',\n    fontSize: tokens.spacingM,\n    minHeight: '400px',\n    background: tokens.colorWhite,\n    outline: 'none',\n    whiteSpace: 'pre-wrap',\n    overflowWrap: 'break-word',\n    webkitUserModify: 'read-write-plaintext-only',\n    a: {\n      span: {\n        cursor: 'not-allowed',\n        '&:hover': {\n          cursor: 'not-allowed',\n        },\n      },\n    },\n  }),\n  hiddenToolbar: css({\n    borderTop: STYLE_EDITOR_BORDER,\n  }),\n  enabled: css({\n    background: tokens.colorWhite,\n    a: {\n      span: {\n        cursor: 'pointer',\n        '&:hover': {\n          cursor: 'pointer',\n        },\n      },\n    },\n  }),\n  disabled: css({\n    background: tokens.colorElementLightest,\n  }),\n};\n\nconst createSlateValue = (contentfulDocument) => {\n  const document = toSlatejsDocument({\n    document: contentfulDocument,\n    schema,\n  });\n  const value = Value.fromJSON({\n    document,\n    schema,\n  });\n  // Normalize document instead of doing this in the Editor instance as this would\n  // trigger unwanted operations that would result in an unwanted version bump.\n  // TODO: This normalization step wouldn't be necessary if we had a perfect\n  // adapter for the version of Slate we are currently using.\n  const editor = new BasicEditor({ readOnly: true, value }, { normalize: true });\n  const normalizedValue = editor.value;\n  return normalizedValue;\n};\n\nconst EMPTY_SLATE_DOCUMENT = createSlateValue(EMPTY_DOCUMENT);\n\nexport class ConnectedRichTextEditor extends React.Component {\n  static propTypes = {\n    minHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    sdk: PropTypes.shape({\n      field: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        locale: PropTypes.string.isRequired,\n      }).isRequired,\n      access: PropTypes.shape({\n        can: PropTypes.func.isRequired,\n      }).isRequired,\n      parameters: PropTypes.shape({\n        instance: PropTypes.shape({\n          getEntryUrl: PropTypes.func,\n          getAssetUrl: PropTypes.func,\n        }).isRequired,\n      }),\n    }).isRequired,\n    value: PropTypes.object,\n    isDisabled: PropTypes.bool,\n    onChange: PropTypes.func,\n    onAction: PropTypes.func,\n    isToolbarHidden: PropTypes.bool,\n    actionsDisabled: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    value: EMPTY_DOCUMENT,\n    onChange: noop,\n    onAction: noop,\n    isDisabled: false,\n    isToolbarHidden: false,\n    actionsDisabled: false,\n  };\n\n  state = {\n    lastOperations: List(),\n    value:\n      this.props.value && this.props.value.nodeType === BLOCKS.DOCUMENT\n        ? createSlateValue(this.props.value)\n        : EMPTY_SLATE_DOCUMENT,\n  };\n\n  editor = React.createRef();\n\n  richTextAPI = createRichTextAPI({\n    sdk: this.props.sdk,\n    onAction: this.props.onAction,\n  });\n\n  slatePlugins = buildPlugins(this.richTextAPI);\n\n  onChange = (editor) => {\n    const { value, operations } = editor;\n    this.setState({\n      value,\n      lastOperations: operations.filter(isRelevantOperation),\n    });\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.isDisabled !== nextProps.isDisabled) {\n      return true;\n    }\n    const isStateValueUpdate = !is(this.state.value, nextState.value);\n    const isPropsValueUpdate = this.props.value !== nextProps.value;\n    return isStateValueUpdate || isPropsValueUpdate;\n  }\n\n  callOnChange = debounce(() => {\n    const doc = toContentfulDocument({\n      document: this.state.value.document.toJSON(),\n      schema,\n    });\n    this.props.onChange(doc);\n  }, 500);\n\n  componentDidUpdate(prevProps) {\n    /* eslint-disable react/no-did-update-set-state */\n    const isIncomingChange = () => !deepEquals(prevProps.value, this.props.value);\n    const isDocumentChanged = !this.state.lastOperations.isEmpty();\n\n    if (!this.props.isDisabled && isDocumentChanged) {\n      this.setState({ lastOperations: List() }, () => this.callOnChange());\n    } else if (isIncomingChange()) {\n      this.setState({\n        value: createSlateValue(this.props.value),\n      });\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  handleKeyDown = (event, editor, next) => {\n    const ESC = 27;\n\n    if (event.keyCode === ESC) {\n      event.currentTarget.blur();\n    }\n\n    return next();\n  };\n\n  render() {\n    const classNames = cx(\n      styles.editor,\n      this.props.minHeight !== undefined ? css({ minHeight: this.props.minHeight }) : undefined,\n      this.props.isDisabled ? styles.disabled : styles.enabled,\n      this.props.isToolbarHidden && styles.hiddenToolbar\n    );\n\n    return (\n      <div className={styles.root} data-test-id=\"rich-text-editor\">\n        {!this.props.isToolbarHidden && (\n          <StickyToolbarWrapper isDisabled={this.props.isDisabled}>\n            <Toolbar\n              editor={this.editor.current || new BasicEditor({ readOnly: true })}\n              onChange={this.onChange}\n              isDisabled={this.props.isDisabled}\n              richTextAPI={this.richTextAPI}\n            />\n          </StickyToolbarWrapper>\n        )}\n\n        <Editor\n          data-test-id=\"editor\"\n          value={this.state.value}\n          ref={this.editor}\n          onChange={this.onChange}\n          onKeyDown={this.handleKeyDown}\n          plugins={this.slatePlugins}\n          readOnly={this.props.isDisabled}\n          className={classNames}\n          actionsDisabled={this.props.actionsDisabled}\n          options={{\n            normalize: false, // No initial normalizaiton as we pass a normalized document.\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n/**\n * Returns whether a given operation is relevant enough to trigger a save.\n *\n * @param {slate.Operation} op\n * @returns {boolean}\n */\nfunction isRelevantOperation(op) {\n  if (op.type === 'set_value') {\n    if (op.properties.data) {\n      // Relevant for undo/redo that can be empty ops that we want to ignore.\n      return false;\n    }\n  } else if (op.type === 'set_selection') {\n    return false;\n  }\n  return true;\n}\n\nexport default function RichTextEditor(props) {\n  /* eslint-disable react/prop-types */\n  const { sdk, isInitiallyDisabled, ...otherProps } = props;\n  return (\n    <EntityProvider sdk={sdk}>\n      <FieldConnector\n        throttle={0}\n        field={sdk.field}\n        isInitiallyDisabled={isInitiallyDisabled}\n        isEmptyValue={(value) => {\n          return !value || deepEquals(value, EMPTY_DOCUMENT);\n        }}\n        isEqualValues={(value1, value2) => {\n          return deepEquals(value1, value2);\n        }}>\n        {({ lastRemoteValue, disabled, setValue, externalReset }) => {\n          return (\n            <ConnectedRichTextEditor\n              {...otherProps}\n              // on external change reset component completely and init with initial value again\n              key={`rich-text-editor-${externalReset}`}\n              value={lastRemoteValue}\n              sdk={sdk}\n              isDisabled={disabled}\n              onChange={(value) => {\n                setValue(value);\n              }}\n            />\n          );\n        }}\n      </FieldConnector>\n    </EntityProvider>\n  );\n}\n\nRichTextEditor.defaultProps = {\n  isInitiallyDisabled: true,\n};\n","import React from 'react';\nimport { ModalDialogLauncher } from '@contentful/field-editor-shared';\nimport { HyperlinkDialog } from './HypelinkDialog/HyperlinkDialog';\n\nexport const openRichTextDialog = (sdk) => (options) => {\n  if (options.parameters && options.parameters.type === 'rich-text-hyperlink-dialog') {\n    return ModalDialogLauncher.openDialog(options, ({ onClose }) => {\n      return <HyperlinkDialog {...options.parameters} onClose={onClose} sdk={sdk} />;\n    });\n  }\n  return Promise.reject();\n};\n","import React from 'react';\nimport { HyperlinkDialog } from './HypelinkDialog/HyperlinkDialog';\n\nexport const renderRichTextDialog = (sdk) => {\n  const parameters = sdk.parameters.invocation;\n  if (parameters.type === 'rich-text-hyperlink-dialog') {\n    sdk.window.startAutoResizer();\n    return <HyperlinkDialog {...sdk.parameters.invocation} onClose={sdk.close} sdk={sdk} />;\n  }\n  return <div />;\n};\n"],"names":["opt","config","types","BLOCKS","OL_LIST","UL_LIST","typeItem","LIST_ITEM","typeDefault","PARAGRAPH","EditList","mapVoidTypes","nodeTypes","fromPairs","map","nodeType","isVoid","listPlugin","ListPlugin","document","nodes","TOP_LEVEL_BLOCKS","blocks","Object","values","INLINES","objects","HEADING_1","HEADING_2","HEADING_3","HEADING_4","HEADING_5","HEADING_6","VOID_BLOCKS","schema","QUOTE","match","CONTAINERS","type","min","normalize","editor","error","code","unwrapBlockByKey","node","key","inlines","HYPERLINK","ENTRY_HYPERLINK","ASSET_HYPERLINK","EMBEDDED_ENTRY","createActionLogger","onAction","origin","name","data","createRichTextAPI","sdk","logViewportAction","logShortcutAction","logToolbarAction","logCommandPaletteAction","TOOLBAR_PLUGIN_PROP_TYPES","richTextAPI","PropTypes","shape","object","isRequired","func","onToggle","disabled","bool","isButton","canAutoFocus","ToolbarIcon","handleClick","event","preventDefault","props","render","this","title","React","EditorToolbarButton","icon","tooltip","label","isActive","onClick","Component","propTypes","string","MarkPropTypes","attributes","children","mark","NodePropTypes","haveMarks","value","activeMarks","some","haveBlocks","haveInlines","inline","haveTextInSomeBlocks","size","block","text","styles","bold","css","color","fontWeight","tokens","fontWeightDemiBold","italic","fontStyle","lineHeight","fontFamily","fontStackMonospace","fontSize","tagName","hotkey","renderMark","_editor","next","Tag","tagProps","CommonMark","displayName","markDecorator","className","onKeyDown","isHotkey","toggleMark","action","markType","toolbarActionHandlerWithSafeAutoFocus","component","customHandler","selection","isFocused","focus","Mark","handleToggle","_this","React.createElement","Bold","markToggleDecorator","MARKS","BOLD","ItalicPlugin","markPlugin","ITALIC","Italic","UnderlinedPlugin","UNDERLINE","Underlined","CodePlugin","CODE","Code","toggleChange","setBlocks","isBlockActive","applyChange","Block","isSelectionInQuote","ancestor","range","start","startBlock","getClosestBlock","getParent","unwrapBlock","wrapBlock","headingCss","fontWeightMedium","margin","spacingS","paragraph","lineHeightDefault","marginBottom","blockquote","borderLeft","colorElementLight","paddingLeft","background","padding","colorTextMid","borderRadius","borderRadiusSmall","textLink","orderedList","listStyleType","unorderedList","listItem","listStyle","spacingL","heading1","heading2","heading3","heading4","heading5","heading6","CommonNode","camelCase","QuotePlugin","defaultType","renderNode","commonNode","e","newPlugin","Blockquote","blockToggleDecorator","runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","FetchingWrappedEntryCard","useEntities","getOrLoadEntry","loadEntityScheduledActions","entries","entryId","onEntityFetchComplete","MissingEntityCard","entityType","isDisabled","onRemove","EntryCard","loading","contentType","space","getCachedContentTypes","find","sys","id","WrappedEntryCard","getAsset","getEntityScheduledActions","entryUrl","getEntryUrl","isSelected","localeCode","locale","defaultLocaleCode","locales","onEdit","isClickable","FetchingWrappedAssetCard","getOrLoadAsset","assets","assetId","asset","AssetCard","isLoading","src","href","WrappedAssetCard","getAssetUrl","entityToLink","entity","linkType","HyperlinkDialog","handleSubmit","onClose","getValue","selectEntry","entitySelectorConfigs","Entry","contentTypes","dialogs","selectSingleEntry","setTargetEntity","selectAsset","Asset","selectSingleAsset","uri","target","isEntityLink","Boolean","entityLinks","allowedHyperlinkTypes","includes","setState","isLinkComplete","hideText","labels","EntityProvider","Fragment","Modal","Content","renderFields","Controls","Button","buttonType","testId","confirm","_this2","isUriInputAutoFocused","Form","TextField","required","labelText","onChange","_this3","textInputProps","autoFocus","isFeaturingEntitySelector","SelectField","selectProps","Option","placeholder","helpText","renderEntityField","entityLink","isEntitySelectorVisible","FormLabel","htmlFor","TextLink","marginLeft","_this4","renderEntitySelector","marginTop","oneOf","arrayOf","defaultProps","openHyperlinkDialog","isNew","showTextInput","openCurrent","width","shouldCloseOnEscapePress","shouldCloseOnOverlayClick","allowHeightOverflow","parameters","field","flow","v","get","validations","newEntitySelectorConfigFromRichTextField","getEntityTypeFromRichTextNode","getLinkedContentTypeIdsForNodeType","words","split","indexOf","isFormattingOptionEnabled","validationType","nodeTypeOrMark","enabledFormattings","getRichTextValidation","isNodeTypeEnabled","isMarkEnabled","HYPERLINK_TYPES","nodeToHyperlinkType","getAllowedHyperlinkTypes","hyperlinkTypes","filter","getEntitySelectorConfigs","mayEditLink","isExpanded","hasHyperlink","hasOnlyHyperlinkInlines","every","toggleLink","logAction","removeLinks","insertLink","change","blur","fragment","trim","last","insertBlock","insertText","moveFocusForward","wrapLink","linkTypeToNodeType","unwrapInline","editLink","link","toJSON","oldUri","oldTarget","setInlines","wrapInline","moveToEnd","HyperlinkToolbarIcon","hyperlinkTooltipStyles","entityContentType","colorTextLightest","marginRight","spacingXs","content","entityTitle","separator","hyperlinkWrapper","display","position","a","hyperlink","fill","textColorDark","hyperlinkIEFallback","textDecoration","hyperlinkIcon","top","height","webkitTransition","transition","browser","detectBrowser","SUPPORTS_NATIVE_SLATE_HYPERLINKS","entityId","getEntity","getEntry","contentTypeId","getContentType","entityHelpers","getEntryTitle","defaultTitle","getAssetTitle","entityDescription","getEntityDescription","jobs","entityStatus","getEntryStatus","contentTypeName","EntityStatusTag","statusLabel","tagType","published","draft","archived","changed","EntityHyperlinkTooltip","useState","requestStatus","setRequestStatus","useEffect","fetchAllData","entityInfo","console","log","toLowerCase","str","substr","replace","ScheduleTooltipContent","job","jobsCount","Hyperlink","isHotKey","stopPropagation","role","tabIndex","renderEntityLink","renderLink","test","Tooltip","tooltipContainer","targetWrapperClassName","place","maxWidth","rel","cx","noop","HyperlinkPlugin","isHyperlink","moveToRangeOfNode","normalizeNode","getInlines","inlineNode","unwrapInlineByKey","root","button","span","h1","h2","h3","h4","h5","h6","getStyleForType","ToolbarDropdownListItem","DropdownListItem","handleSelect","contentWidthDefault","svg","blockTitles","EMBEDDED_ASSET","HeadingDropdown","getStyleNameForChange","currentBlockType","isOpen","Dropdown","toggleElement","indicateDropdown","DropdownList","newHeadingDropdownItem","Heading","blockSelectDecorator","Paragraph","shouldToggle","offset","initialRange","splitBlock","setBlocksAtRange","Heading1Plugin","Heading2Plugin","Heading3Plugin","Heading4Plugin","Heading5Plugin","Heading6Plugin","Heading1","Heading2","Heading3","Heading4","Heading5","Heading6","selectEntityAndInsert","baseConfig","selectEntity","withCreate","focusNextLine","linkedEntityBlock","createNode","EntityLinkToolbarIcon","onCloseEmbedMenu","handleAction","getEntityTypeFromNodeType","baseClass","Flex","alignItems","flexDirection","Icon","LinkedEntityBlock","handleEditClick","getEntitySys","navigator","openAsset","openEntry","slideIn","handleRemoveClick","removeNodeByKey","readOnly","actionsDisabled","instance","EmbeddedEntityBlockPlugin","EntityLinkBlock","hasBlockOfType","createInlineNode","insertInline","moveToStartOfNextText","selectEntryAndInsert","canInsertInline","webkitUserSelect","mozUserSelect","msUserSelect","userSelect","EntryLinkToolbarIcon","scheduledIcon","verticalAlign","spacing2Xs","FetchingWrappedInlineEntryCard","InlineEntryCard","selected","status","dropdownListElements","isReadOnly","ScheduledIconWithTooltip","EmbeddedEntryInline","EmbeddedEntryInlinePlugin","end","hasOnlyInlineEntryInSelection","utils","changes","unwrapList","wrapInList","isSelectionInList","getCurrentList","currentList","setNodeByKey","list","UnorderedList","listToggleDecorator","OrderedList","hr","spacingM","colorElementMid","hrSelected","colorPrimary","Hr","HR","getCharacterCount","contentfulSlateJSAdapter","documentToPlainTextString","PastePlugin","onPaste","_event","characterCountSelection","global","getSelection","characterCountBefore","setTimeout","characterCountAfter","BLOCK_TAGS","p","ul","ol","MARK_TAGS","strong","b","em","u","RULES","deserialize","el","ownerDocument","querySelector","startsWith","isGoogleWrapper","childNodes","marks","style","isGoogleBold","isGoogleItalic","isGoogleUnderline","leaves","textContent","getAttribute","classList","contains","getCommandText","startText","textBefore","exec","removeCommand","command","anchorOffset","removeTextByKey","fetchAssets","query","getAssets","items","displayTitle","fields","thumbnail","file","url","fetchEntries","getEntries","content_type","all","description","isValidLinkedContentType","embedType","val","typeVal","linkContentType","reduce","pre","cur","ct","CommandPaletteActionBuilder","maybeBuildEmbedAction","callback","buildAction","maybeBuildCreateAndEmbedAction","access","can","actionType","isAsset","isInline","group","commandPanel","colorWhite","boxShadow","border","colorElementDark","borderRadiusMedium","fontStackPrimary","overflowY","commandPanelList","item","fontSizeM","borderBottom","colorTextDark","divider","letterSpacing","letterSpacingWide","fontSizeS","textTransform","skeletonContainer","textAlign","whiteSpace","overflow","textOverflow","navBar","bottom","colorElementLightest","loader","instruction","colorTextLight","closeButton","itemPropType","CommandPanelItem","listItemRef","componentDidUpdate","scrollIntoView","index","classNames","ref","alt","number","Instruction","CommandPanel","selectedKey","handleKeyboard","selectedItem","renderNavigationBar","SectionHeading","breadcrumb","IconButton","iconProps","renderStatusBar","instructions","isUpdating","Spinner","renderSkeleton","SkeletonContainer","SkeletonBodyText","numberOfLines","getDerivedStateFromProps","itemsHasUpdated","originalItems","searchStringHasUpdated","searchString","originalSearchString","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","renderGroups","groups","uniqBy","groupName","renderItems","_this5","cn","DEFAULT_POSITION","left","CommandPalette","anchorPosition","panelPosition","paletteDimensions","bindEventListeners","handleScroll","handleOutsideClick","removeEventListeners","palette","isClosed","requestUpdate","throttle","currentCommand","createCommands","leading","trailing","createCommand","onCreateAndEmbedEntity","createAsset","createEntry","createEntity","createContentTypeActions","actionBuilder","clearCommand","createAssetActions","nodeName","updatePanelPosition","allEntries","isComponentMounted","createInitialCommands","allContentTypes","flatten","contentTypeActions","assetActions","prevState","isEscKey","getBoundingClientRect","cancel","window","body","ReactDOM","createPortal","outline","minWidth","zIndex","zIndexDropdown","InViewport","onOverflowBottom","onOverflowTop","CommandPanelMenu","anchorRect","getRangeAt","PureComponent","embedsEnabled","decorations","getDecorations","isEmpty","commandPaletteDecoration","d","hasCommandPaletteDecoration","CommandMark","CommandPalettePlugin","decorateNode","_node","others","decoration","inputValue","anchor","getDecorationOrDefault","renderEditor","_props","commandMark","buildPlugins","getBlocks","first","focusBlock","isVoidBlockFirstAndFocused","moveToStartOfDocument","insertParagraphAndFocusToStartOfDocument","EditListWrapper","serializer","HtmlSerializer","rules","transfer","getEventTransfer","html","insertFragment","PlainSerializer","defaultBlock","delimiter","TrailingBlock","EntryEmbedDropdown","embedActionsWrapper","webkitAlignSelf","alignSelf","msFlexItemAlign","formattingOptionsWrapper","msFlexAlign","webkitBoxAlign","msFlexWrap","flexWrap","Toolbar","hasMounted","isReadyToSetFocusProgrammatically","headingMenuOpen","canAccessAssets","getValidationInfo","toggleEmbedDropdown","isEmbedDropdownOpen","handleEmbedDropdownClose","renderEmbeds","inlineEntryEmbedEnabled","blockEntryEmbedEnabled","blockAssetEmbedEnabled","numEnabledEmbeds","EmbeddedEntityBlock","toggleHeadingMenu","closeHeadingMenu","canReadAssets","isAnyHyperlinkEnabled","isAnyListEnabled","isAnyMarkEnabled","getIn","EditorToolbar","isToggleActive","EditorToolbarDivider","Quote","nativeSticky","StickyToolbarWrapper","STYLE_EDITOR_BORDER","borderTop","minHeight","overflowWrap","webkitUserModify","cursor","hiddenToolbar","enabled","createSlateValue","contentfulDocument","toSlatejsDocument","Value","fromJSON","BasicEditor","EMPTY_SLATE_DOCUMENT","EMPTY_DOCUMENT","ConnectedRichTextEditor","lastOperations","List","DOCUMENT","createRef","slatePlugins","operations","isRelevantOperation","callOnChange","debounce","doc","toContentfulDocument","handleKeyDown","keyCode","currentTarget","shouldComponentUpdate","nextProps","nextState","is","prevProps","isDocumentChanged","deepEquals","isToolbarHidden","current","Editor","plugins","options","op","properties","RichTextEditor","isInitiallyDisabled","otherProps","FieldConnector","isEmptyValue","isEqualValues","value1","value2","setValue","externalReset","lastRemoteValue","oneOfType","ModalDialogLauncher","openDialog","invocation","startAutoResizer","close"],"mappings":"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"}