{"version":3,"file":"field-editor-shared.cjs.production.min.js","sources":["../src/FieldConnector.ts","../src/CharCounter.tsx","../src/ModalDialogLauncher.tsx","../../../node_modules/regenerator-runtime/runtime.js","../src/utils/entityHelpers.ts","../src/utils/constraints.ts","../src/CharValidation.tsx","../src/PredefinedValuesError.tsx"],"sourcesContent":["import React from 'react';\nimport throttle from 'lodash/throttle';\nimport isEqual from 'lodash/isEqual';\nimport { FieldAPI } from '@contentful/app-sdk';\n\ntype Nullable = null | undefined;\n\nexport interface FieldConnectorChildProps<ValueType> {\n  isLocalValueChange: boolean;\n  externalReset: number;\n  lastRemoteValue: ValueType | Nullable;\n  value: ValueType | Nullable;\n  disabled: boolean;\n  errors: Error[];\n  setValue: (value: ValueType | Nullable) => Promise<unknown>;\n}\n\ninterface FieldConnectorState<ValueType> {\n  isLocalValueChange: boolean;\n  externalReset: number;\n  lastSetValue: ValueType | Nullable;\n  lastRemoteValue: ValueType | Nullable;\n  value: ValueType | Nullable;\n  disabled: boolean;\n  errors: Error[];\n}\n\ninterface FieldConnectorProps<ValueType> {\n  field: FieldAPI;\n  isInitiallyDisabled: boolean;\n  children: (state: FieldConnectorChildProps<ValueType>) => React.ReactNode;\n  isEmptyValue: (value: ValueType | null) => boolean;\n  isEqualValues: (value1: ValueType | Nullable, value2: ValueType | Nullable) => boolean;\n  throttle: number;\n}\n\nexport class FieldConnector<ValueType> extends React.Component<\n  FieldConnectorProps<ValueType>,\n  FieldConnectorState<ValueType>\n> {\n  static defaultProps = {\n    children: () => {\n      return null;\n    },\n    // eslint-disable-next-line\n    isEmptyValue: (value: any | Nullable) => {\n      return value === null || value === '';\n    },\n    // eslint-disable-next-line\n    isEqualValues: (value1: any | Nullable, value2: any | Nullable) => {\n      return isEqual(value1, value2);\n    },\n    throttle: 300,\n  };\n\n  constructor(props: FieldConnectorProps<ValueType>) {\n    super(props);\n    const initialValue = props.field.getValue();\n    this.state = {\n      isLocalValueChange: false,\n      externalReset: 0,\n      value: initialValue,\n      lastSetValue: initialValue,\n      lastRemoteValue: initialValue,\n      disabled: props.isInitiallyDisabled,\n      errors: [],\n    };\n  }\n\n  unsubscribeErrors: Function | null = null;\n  unsubscribeDisabled: Function | null = null;\n  unsubscribeValue: Function | null = null;\n\n  setValue = throttle(\n    (value: ValueType | Nullable) => {\n      if (this.props.isEmptyValue(value === undefined ? null : value)) {\n        return new Promise((resolve, reject) => {\n          this.setState(\n            {\n              lastSetValue: undefined,\n            },\n            () => {\n              this.props.field.removeValue().then(resolve).catch(reject);\n            }\n          );\n        });\n      } else {\n        return new Promise((resolve, reject) => {\n          this.setState(\n            {\n              lastSetValue: value,\n            },\n            () => {\n              this.props.field.setValue(value).then(resolve).catch(reject);\n            }\n          );\n        });\n      }\n    },\n    this.props.throttle,\n    { leading: this.props.throttle === 0 }\n  );\n\n  componentDidMount() {\n    const { field } = this.props;\n    this.unsubscribeErrors = field.onSchemaErrorsChanged((errors: Error[]) => {\n      this.setState({\n        errors: errors || [],\n      });\n    });\n    this.unsubscribeDisabled = field.onIsDisabledChanged((disabled: boolean) => {\n      this.setState({\n        disabled,\n      });\n    });\n    this.unsubscribeValue = field.onValueChanged((value: ValueType | Nullable) => {\n      this.setState((currentState) => {\n        const isLocalValueChange = this.props.isEqualValues(value, currentState.lastSetValue);\n        const lastRemoteValue = isLocalValueChange ? currentState.lastRemoteValue : value;\n        const externalReset = currentState.externalReset + (isLocalValueChange ? 0 : 1);\n        return {\n          value,\n          lastSetValue: value,\n          lastRemoteValue,\n          isLocalValueChange,\n          externalReset,\n        };\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (typeof this.unsubscribeErrors === 'function') {\n      this.unsubscribeErrors();\n    }\n    if (typeof this.unsubscribeDisabled === 'function') {\n      this.unsubscribeDisabled();\n    }\n    if (typeof this.unsubscribeValue === 'function') {\n      this.unsubscribeValue();\n    }\n  }\n\n  render() {\n    const childProps = { ...this.state };\n    // `lastSetValue` can be either the `setValue()` value right after it got called\n    // or the current remote value. No use-case for passing this to child.\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    delete childProps.lastSetValue;\n    return this.props.children({\n      ...childProps,\n      // @ts-expect-error\n      setValue: this.setValue,\n    });\n  }\n}\n","import React from 'react';\nimport tokens from '@contentful/forma-36-tokens';\nimport { css, cx } from 'emotion';\n\ninterface CharCounterProps {\n  value?: string;\n  checkConstraint: (n: number) => boolean;\n}\n\nconst styles = {\n  invalid: css({\n    color: tokens.colorRedBase,\n  }),\n};\n\nexport function CharCounter(props: CharCounterProps) {\n  let count = 0;\n  if (props.value) {\n    count = props.value.length;\n  }\n  const valid = count === 0 || props.checkConstraint(count);\n  return (\n    <span\n      data-status-code={valid ? null : 'invalid-size'}\n      className={cx({\n        [styles.invalid]: !valid,\n      })}>\n      {count} characters\n    </span>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-use-before-define */\n\nimport React from 'react';\nimport isNumber from 'lodash/isNumber';\nimport ReactDOM from 'react-dom';\nimport { Modal } from '@contentful/forma-36-react-components';\nimport { OpenCustomWidgetOptions } from '@contentful/app-sdk';\n\nexport function open(componentRenderer: (params: { onClose: Function; isShown: boolean }) => any) {\n  let rootDom: any = null;\n\n  const getRoot = () => {\n    if (rootDom === null) {\n      rootDom = document.createElement('div');\n      rootDom.setAttribute('id', 'field-editor-modal-root');\n      document.body.appendChild(rootDom);\n    }\n    return rootDom;\n  };\n\n  return new Promise((resolve) => {\n    let currentConfig = { onClose, isShown: true };\n\n    function render({ onClose, isShown }: { onClose: Function; isShown: boolean }) {\n      ReactDOM.render(componentRenderer({ onClose, isShown }), getRoot());\n    }\n\n    function onClose(...args: any[]) {\n      currentConfig = {\n        ...currentConfig,\n        isShown: false,\n      };\n      render(currentConfig);\n      resolve(...args);\n      getRoot().remove();\n    }\n\n    render(currentConfig);\n  });\n}\n\nexport function openDialog<T>(\n  options: OpenCustomWidgetOptions,\n  Component: React.SFC<{ onClose: (result: T) => void }>\n) {\n  const key = Date.now();\n  const size = isNumber(options.width) ? `${options.width}px` : options.width;\n  return open(({ isShown, onClose }) => {\n    const onCloseHandler = () => onClose();\n    return (\n      <Modal\n        key={key}\n        shouldCloseOnOverlayClick={options.shouldCloseOnOverlayClick || false}\n        shouldCloseOnEscapePress={options.shouldCloseOnEscapePress || false}\n        allowHeightOverflow={options.allowHeightOverflow || false}\n        position={options.position || 'center'}\n        isShown={isShown}\n        onClose={onCloseHandler}\n        size={size || '700px'}>\n        {() => (\n          <>\n            {options.title && (\n              <Modal.Header testId=\"dialog-title\" title={options.title} onClose={onCloseHandler} />\n            )}\n            <div style={{ minHeight: options.minHeight || 'auto' }}>\n              <Component onClose={onClose as any} />\n            </div>\n          </>\n        )}\n      </Modal>\n    );\n  });\n}\n\nexport default {\n  openDialog,\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import get from 'lodash/get';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\nimport { File, ContentType, Entry, ContentTypeField, EntrySys } from '../typesEntity';\n\nfunction titleOrDefault(title: string | undefined, defaultTitle: string): string {\n  if (!isString(title)) {\n    return defaultTitle;\n  }\n  if (title) {\n    const trimmedTitle = title.trim();\n    if (trimmedTitle.length === 0) {\n      return defaultTitle;\n    }\n    return trimmedTitle;\n  }\n  return defaultTitle;\n}\n\nexport function getFieldValue({\n  /**\n   * Expects an entity fetched with a flag Skip-Transformation: true\n   */\n  entity,\n  fieldId,\n  localeCode,\n  defaultLocaleCode\n}: {\n  entity: {\n    fields: { [key: string]: { [valueKey: string]: string | undefined } };\n  };\n  fieldId: string;\n  localeCode: string;\n  defaultLocaleCode: string;\n}): string | undefined {\n  const values = get(entity, ['fields', fieldId]);\n  if (!isObject(values)) {\n    return;\n  }\n\n  const firstLocaleCode = Object.keys(values)[0];\n\n  return values[localeCode] || values[defaultLocaleCode] || values[firstLocaleCode];\n}\n\nexport function getAssetTitle({\n  asset,\n  localeCode,\n  defaultLocaleCode,\n  defaultTitle\n}: {\n  asset: Entry;\n  localeCode: string;\n  defaultLocaleCode: string;\n  defaultTitle: string;\n}) {\n  const title = getFieldValue({\n    entity: asset,\n    fieldId: 'title',\n    localeCode,\n    defaultLocaleCode\n  });\n  return titleOrDefault(title, defaultTitle);\n}\n\nexport function getEntityDescription({\n  entity,\n  contentType,\n  localeCode,\n  defaultLocaleCode\n}: {\n  entity: Entry;\n  contentType?: ContentType;\n  localeCode: string;\n  defaultLocaleCode: string;\n}): string {\n  if (!contentType) {\n    return '';\n  }\n\n  const isTextField = (field: ContentTypeField) => ['Symbol', 'Text'].includes(field.type);\n  const isDisplayField = (field: ContentTypeField) => field.id === contentType.displayField;\n  const isMaybeSlugField = (field: ContentTypeField) => /\\bslug\\b/.test(field.name);\n  const isDescriptionField = (field: ContentTypeField) =>\n    isTextField(field) && !isDisplayField(field) && !isMaybeSlugField(field);\n\n  const descriptionField = contentType.fields.find(isDescriptionField);\n\n  if (!descriptionField) {\n    return '';\n  }\n\n  return (\n    getFieldValue({ entity, fieldId: descriptionField.id, localeCode, defaultLocaleCode }) || ''\n  );\n}\n\nexport function getEntryTitle({\n  entry,\n  contentType,\n  localeCode,\n  defaultLocaleCode,\n  defaultTitle\n}: {\n  entry: Entry;\n  contentType?: ContentType;\n  localeCode: string;\n  defaultLocaleCode: string;\n  defaultTitle: string;\n}) {\n  let title;\n\n  if (!contentType) {\n    return defaultTitle;\n  }\n\n  const displayField = contentType.displayField;\n  if (!displayField) {\n    return defaultTitle;\n  }\n\n  const displayFieldInfo = contentType.fields.find(field => field.id === displayField);\n\n  if (!displayFieldInfo) {\n    return defaultTitle;\n  }\n\n  // when localization for a field is \"turned off\",\n  // we don't clean up the \"old\" localized data, so it is still in the response.\n  // Therefore, we're checking if displayField is localizable.\n  if (displayFieldInfo.localized) {\n    title = getFieldValue({\n      entity: entry,\n      fieldId: displayField,\n      localeCode,\n      defaultLocaleCode\n    });\n    if (!title) {\n      // Older content types may return id/apiName, but some entry lookup paths do not fetch raw data\n      // In order to still return a title in this case, look for displayField as apiName in content type,\n      // ...but still look for displayField as a field in the entry\n      title = getFieldValue({\n        entity: entry,\n        fieldId: displayFieldInfo.id,\n        localeCode,\n        defaultLocaleCode\n      });\n    }\n  } else {\n    title = getFieldValue({\n      entity: entry,\n      fieldId: displayField,\n      defaultLocaleCode,\n      localeCode: ''\n    });\n    if (!title) {\n      title = getFieldValue({\n        entity: entry,\n        fieldId: displayFieldInfo.id,\n        defaultLocaleCode,\n        localeCode: ''\n      });\n    }\n  }\n\n  return titleOrDefault(title, defaultTitle);\n}\n\nexport function getEntryStatus(sys: EntrySys) {\n  if (!sys || (sys.type !== 'Entry' && sys.type !== 'Asset')) {\n    throw new TypeError('Invalid entity metadata object');\n  }\n  if (sys.deletedVersion) {\n    return 'deleted';\n  } else if (sys.archivedVersion) {\n    return 'archived';\n  } else if (sys.publishedVersion) {\n    if (sys.version > sys.publishedVersion + 1) {\n      return 'changed';\n    } else {\n      return 'published';\n    }\n  } else {\n    return 'draft';\n  }\n}\n\n/**\n * Gets a promise resolving with a localized asset image field representing a\n * given entities file. The promise may resolve with null.\n */\nexport const getEntryImage = async (\n  {\n    entry,\n    contentType,\n    localeCode\n  }: {\n    entry: Entry;\n    contentType?: ContentType;\n    localeCode: string;\n    defaultLocaleCode: string;\n  },\n  getAsset: (assetId: string) => Promise<unknown>\n): Promise<null | File> => {\n  if (!contentType) {\n    return null;\n  }\n\n  const assetLink = contentType.fields.find(\n    field => field.type === 'Link' && field.linkType === 'Asset'\n  );\n\n  if (!assetLink) {\n    return null;\n  }\n\n  const assetId = get(entry.fields, [assetLink.id, localeCode, 'sys', 'id']);\n\n  if (!assetId) {\n    return null;\n  }\n\n  try {\n    const asset = await getAsset(assetId);\n    const file = get(asset, ['fields', 'file', localeCode]);\n    const isImage = Boolean(get(file, ['details', 'image'], false));\n    return isImage ? file : null;\n  } catch (e) {\n    return null;\n  }\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * This module parses field validations as a constraint and checks\n * values against that constraint.\n */\n\nimport isNumber from 'lodash/isNumber';\nimport { ValidationType } from '../types';\n\nexport function fromFieldValidations(\n  validations: Record<string, any>[] = [],\n  fieldType: 'Symbol' | 'Text'\n): ValidationType {\n  const sizeValidation = validations.find(v => 'size' in v);\n  const size = (sizeValidation && sizeValidation.size) || {};\n  const min = size.min;\n  const max = size.max;\n\n  if (isNumber(min) && isNumber(max)) {\n    return {\n      type: 'min-max',\n      min,\n      max\n    };\n  } else if (isNumber(min)) {\n    return {\n      type: 'min',\n      min\n    };\n  } else if (isNumber(max)) {\n    return {\n      type: 'max',\n      max\n    };\n  } else {\n    return {\n      type: 'max',\n      max: fieldType === 'Symbol' ? 256 : 50000\n    };\n  }\n}\n\nexport function makeChecker(constraint: ValidationType) {\n  return function checkConstraint(length: number) {\n    if (constraint.type === 'max') {\n      return length <= constraint.max;\n    } else if (constraint.type === 'min') {\n      return length >= constraint.min;\n    } else {\n      return length >= constraint.min && length <= constraint.max;\n    }\n  };\n}\n","import React from 'react';\nimport { ValidationType } from './types';\n\ninterface CharValidationProps {\n  constraints: ValidationType;\n}\n\nexport function CharValidation(props: CharValidationProps) {\n  const { constraints } = props;\n\n  if (constraints.type === 'max') {\n    return <span>Maximum {constraints.max} characters</span>;\n  } else if (constraints.type === 'min') {\n    return <span>Requires at least {constraints.min} characters</span>;\n  } else {\n    return (\n      <span>\n        Requires between {constraints.min} and {constraints.max} characters\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport { Note } from '@contentful/forma-36-react-components';\n\nexport function PredefinedValuesError() {\n  return (\n    <Note noteType=\"warning\" testId=\"predefined-values-warning\">\n      The widget failed to initialize. You can fix the problem by providing predefined values under\n      the validations tab in the field settings.\n    </Note>\n  );\n}\n"],"names":["FieldConnector","props","throttle","value","_this","isEmptyValue","undefined","Promise","resolve","reject","setState","lastSetValue","field","removeValue","then","setValue","leading","initialValue","getValue","state","isLocalValueChange","externalReset","lastRemoteValue","disabled","isInitiallyDisabled","errors","componentDidMount","this","unsubscribeErrors","onSchemaErrorsChanged","_this2","unsubscribeDisabled","onIsDisabledChanged","unsubscribeValue","onValueChanged","currentState","isEqualValues","componentWillUnmount","render","childProps","children","React","Component","value1","value2","isEqual","styles","css","color","tokens","colorRedBase","open","componentRenderer","rootDom","getRoot","document","createElement","setAttribute","body","appendChild","currentConfig","onClose","isShown","remove","ReactDOM","openDialog","options","key","Date","now","size","isNumber","width","onCloseHandler","Modal","shouldCloseOnOverlayClick","shouldCloseOnEscapePress","allowHeightOverflow","position","title","Header","testId","style","minHeight","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","method","arg","Error","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","titleOrDefault","defaultTitle","isString","trimmedTitle","trim","getFieldValue","localeCode","defaultLocaleCode","get","entity","fieldId","isObject","firstLocaleCode","asset","contentType","descriptionField","fields","find","includes","isTextField","id","displayField","isDisplayField","test","isMaybeSlugField","displayFieldInfo","localized","sys","deletedVersion","archivedVersion","publishedVersion","version","getAsset","assetLink","linkType","assetId","file","isImage","Boolean","validations","fieldType","sizeValidation","v","min","max","constraint","count","valid","checkConstraint","className","cx","constraints","Note","noteType"],"mappings":"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"}