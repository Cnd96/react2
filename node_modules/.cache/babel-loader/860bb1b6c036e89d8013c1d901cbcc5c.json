{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\common\\\\AppYesNo.js\";\nimport { CButton } from \"@coreui/react\";\nimport React from \"react\";\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AppYesNo(props) {\n  let {\n    isOpen,\n    onYes,\n    onNo,\n    header,\n    body,\n    className,\n    size\n  } = props;\n\n  if (!className) {\n    className = '';\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    toggle: onNo,\n    className: className,\n    size: size ? size : null,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: onNo,\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CButton, {\n          color: \"primary\",\n          onClick: onYes,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(CButton, {\n          color: \"secondary\",\n          onClick: onNo,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AppYesNo;\nexport default AppYesNo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppYesNo\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/common/AppYesNo.js"],"names":["CButton","React","Modal","ModalBody","ModalFooter","ModalHeader","AppYesNo","props","isOpen","onYes","onNo","header","body","className","size"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,eAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,EAA0BC,WAA1B,EAAuCC,WAAvC,QAAyD,YAAzD;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,MAAI;AAACC,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA,MAAtB;AAA8BC,IAAAA,IAA9B;AAAoCC,IAAAA,SAApC;AAA+CC,IAAAA;AAA/C,MAAuDP,KAA3D;;AAEA,MAAI,CAACM,SAAL,EAAgB;AACZA,IAAAA,SAAS,GAAG,EAAZ;AACH;;AAED,sBAEI,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEL,MAAf;AAAuB,IAAA,MAAM,EAAEE,IAA/B;AAAqC,IAAA,SAAS,EAAEG,SAAhD;AAA2D,IAAA,IAAI,EAAEC,IAAI,GAAGA,IAAH,GAAU,IAA/E;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEJ,IAArB;AAAA,gBAEQC;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,SAAD;AAAA,gBAEQC;AAFR;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI,QAAC,WAAD;AAAA,6BACI;AAAA,gCACI,QAAC,OAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,UAAA,OAAO,EAAEH,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKK,GALL,eAMI,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,WAAf;AAA2B,UAAA,OAAO,EAAEC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAyBH;;KAjCQJ,Q;AAmCT,eAAeA,QAAf","sourcesContent":["import {CButton} from \"@coreui/react\";\nimport React from \"react\";\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\n\nfunction AppYesNo(props) {\n\n    let {isOpen, onYes, onNo, header, body, className, size} = props;\n\n    if (!className) {\n        className = '';\n    }\n\n    return (\n\n        <Modal isOpen={isOpen} toggle={onNo} className={className} size={size ? size : null}>\n            <ModalHeader toggle={onNo}>\n                {\n                    header\n                }\n            </ModalHeader>\n            <ModalBody>\n                {\n                    body\n                }\n            </ModalBody>\n            <ModalFooter>\n                <>\n                    <CButton\n                        color=\"primary\"\n                        onClick={onYes}\n                    >Yes</CButton>\n                    {' '}\n                    <CButton color=\"secondary\" onClick={onNo}>No</CButton>\n                </>\n            </ModalFooter>\n        </Modal>\n    );\n}\n\nexport default AppYesNo;\n"]},"metadata":{},"sourceType":"module"}