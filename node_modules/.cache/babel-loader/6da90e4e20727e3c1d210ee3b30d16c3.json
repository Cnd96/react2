{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\otherLetters\\\\OtherLettersBase.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { CCol, CRow } from \"@coreui/react\";\nimport OtherLettersSelection from \"./components/OtherLettersSelection\";\nimport withReducer from \"../../../../../../../store/withReducer\";\nimport reducer from \"./store/reducers\";\nimport OtherLetterTemplate from \"./components/OtherLetterTemplate\";\nimport { useDispatch } from \"react-redux\";\nimport { getStorageItem } from \"../../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../../utils/Constants\";\nimport * as Actions from './store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OtherLettersBase = () => {\n  _s();\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    let checkupID = getStorageItem(Constants.STORAGE.CHECKUP_ID);\n    let patientID = getStorageItem(Constants.STORAGE.PATIENT_ID);\n    let hospitalID = Constants.HOSPITAL_ID;\n    let doctorId = Constants.DOCTOR_ID;\n\n    if (checkupID) {\n      let searchObj = {\n        checkupID: checkupID\n      };\n      dispatch(Actions.getCheckupInstructionNoteByCheckupID(searchObj));\n      dispatch(Actions.getPatientDTOByID(patientID));\n      dispatch(Actions.getCheckupDTOByID(checkupID));\n      dispatch(Actions.getHospitalByID(hospitalID));\n      dispatch(Actions.getDoctorByID(doctorId));\n    } else {// dispatch(Actions.onRemoveInstructionData());\n    }\n\n    return () => {\n      dispatch(Actions.clearStore());\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CRow, {\n      children: [/*#__PURE__*/_jsxDEV(CCol, {\n        sm: \"3\",\n        children: /*#__PURE__*/_jsxDEV(OtherLettersSelection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CCol, {\n        sm: \"9\",\n        children: /*#__PURE__*/_jsxDEV(OtherLetterTemplate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CRow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OtherLettersBase, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = OtherLettersBase;\nexport default withReducer('selectOtherLetter', reducer)(OtherLettersBase);\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherLettersBase\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/otherLetters/OtherLettersBase.js"],"names":["React","useEffect","CCol","CRow","OtherLettersSelection","withReducer","reducer","OtherLetterTemplate","useDispatch","getStorageItem","Constants","Actions","OtherLettersBase","dispatch","checkupID","STORAGE","CHECKUP_ID","patientID","PATIENT_ID","hospitalID","HOSPITAL_ID","doctorId","DOCTOR_ID","searchObj","getCheckupInstructionNoteByCheckupID","getPatientDTOByID","getCheckupDTOByID","getHospitalByID","getDoctorByID","clearStore"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,eAAzB;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,cAAR,QAA6B,4CAA7B;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAE3B,MAAIC,QAAQ,GAAGL,WAAW,EAA1B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,SAAS,GAAGL,cAAc,CAACC,SAAS,CAACK,OAAV,CAAkBC,UAAnB,CAA9B;AACA,QAAIC,SAAS,GAAGR,cAAc,CAACC,SAAS,CAACK,OAAV,CAAkBG,UAAnB,CAA9B;AACA,QAAIC,UAAU,GAAGT,SAAS,CAACU,WAA3B;AACA,QAAIC,QAAQ,GAAGX,SAAS,CAACY,SAAzB;;AACA,QAAIR,SAAJ,EAAe;AACX,UAAIS,SAAS,GAAG;AAACT,QAAAA,SAAS,EAAEA;AAAZ,OAAhB;AACAD,MAAAA,QAAQ,CAACF,OAAO,CAACa,oCAAR,CAA6CD,SAA7C,CAAD,CAAR;AACAV,MAAAA,QAAQ,CAACF,OAAO,CAACc,iBAAR,CAA0BR,SAA1B,CAAD,CAAR;AACAJ,MAAAA,QAAQ,CAACF,OAAO,CAACe,iBAAR,CAA0BZ,SAA1B,CAAD,CAAR;AACAD,MAAAA,QAAQ,CAACF,OAAO,CAACgB,eAAR,CAAwBR,UAAxB,CAAD,CAAR;AACAN,MAAAA,QAAQ,CAACF,OAAO,CAACiB,aAAR,CAAsBP,QAAtB,CAAD,CAAR;AACH,KAPD,MAOO,CACH;AACH;;AACD,WAAQ,MAAM;AACVR,MAAAA,QAAQ,CAACF,OAAO,CAACkB,UAAR,EAAD,CAAR;AACH,KAFD;AAGH,GAlBQ,EAkBN,CAAChB,QAAD,CAlBM,CAAT;AAoBA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,+BACI,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,+BACI,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA5CD;;GAAMD,gB;UAEaJ,W;;;KAFbI,gB;AA8CN,eAAeP,WAAW,CAAC,mBAAD,EAAsBC,OAAtB,CAAX,CAA0CM,gBAA1C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {CCol, CRow} from \"@coreui/react\";\nimport OtherLettersSelection from \"./components/OtherLettersSelection\";\nimport withReducer from \"../../../../../../../store/withReducer\";\nimport reducer from \"./store/reducers\";\nimport OtherLetterTemplate from \"./components/OtherLetterTemplate\";\nimport {useDispatch} from \"react-redux\";\nimport {getStorageItem} from \"../../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../../utils/Constants\";\nimport * as Actions from './store/actions'\n\nconst OtherLettersBase = () => {\n\n    let dispatch = useDispatch();\n\n    useEffect(() => {\n        let checkupID = getStorageItem(Constants.STORAGE.CHECKUP_ID);\n        let patientID = getStorageItem(Constants.STORAGE.PATIENT_ID);\n        let hospitalID = Constants.HOSPITAL_ID;\n        let doctorId = Constants.DOCTOR_ID;\n        if (checkupID) {\n            let searchObj = {checkupID: checkupID};\n            dispatch(Actions.getCheckupInstructionNoteByCheckupID(searchObj));\n            dispatch(Actions.getPatientDTOByID(patientID));\n            dispatch(Actions.getCheckupDTOByID(checkupID));\n            dispatch(Actions.getHospitalByID(hospitalID));\n            dispatch(Actions.getDoctorByID(doctorId));\n        } else {\n            // dispatch(Actions.onRemoveInstructionData());\n        }\n        return (() => {\n            dispatch(Actions.clearStore());\n        })\n    }, [dispatch]);\n\n    return (\n        <div>\n            <CRow>\n                <CCol sm=\"3\">\n                    <OtherLettersSelection/>\n                </CCol>\n\n                <CCol sm=\"9\">\n                    <OtherLetterTemplate/>\n                </CCol>\n\n            </CRow>\n            <CRow>\n                {/*<NextPrevButtonGroup setPageIndex={setPageIndex} prevPageIndex={9} saveFunction={saveFunction}*/}\n                {/*                     isValid={true}/>*/}\n\n            </CRow>\n\n        </div>\n    );\n};\n\nexport default withReducer('selectOtherLetter', reducer)(OtherLettersBase);"]},"metadata":{},"sourceType":"module"}