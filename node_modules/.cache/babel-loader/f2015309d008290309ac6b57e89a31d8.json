{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\checkupHistory\\\\CheckupHistory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport withReducer from \"../../../../../../../store/withReducer\";\nimport reducer from \"./store/reducer\";\nimport { useDispatch } from \"react-redux\";\nimport * as Action from \"./store/actions/\";\nimport CheckupHistoryDetails from \"./chartComponents/CheckupHistoryDetails\";\nimport { getStorageItem } from \"../../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../../utils/Constants\";\nimport CheckupHistoryTableBase from \"./tableComponents/CheckupHistoryTableBase\";\nimport { CCol, CRow } from \"@coreui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckupHistory = () => {\n  _s();\n\n  let dispatch = useDispatch();\n  let storagePatientID = getStorageItem(Constants.STORAGE.PATIENT_ID);\n  useEffect(() => {\n    dispatch(Action.getCheckupHistoryNumericValuesOnlyByPatientID({\n      patientID: storagePatientID\n    }));\n    dispatch(Action.getCheckupFullHistoryByPatientID({\n      patientID: storagePatientID\n    }));\n    return () => {\n      dispatch(Action.resetCheckupHistory());\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: [/*#__PURE__*/_jsxDEV(CCol, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Checkup History (Last 4 Checkups)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CCol, {\n        sm: \"12\",\n        children: /*#__PURE__*/_jsxDEV(CheckupHistoryDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CCol, {\n        sm: \"12\",\n        style: {\n          overflowX: 'scroll',\n          height: 'fit-content'\n        },\n        children: /*#__PURE__*/_jsxDEV(CheckupHistoryTableBase, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CheckupHistory, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CheckupHistory;\nexport default withReducer('checkupHistory', reducer)(CheckupHistory);\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckupHistory\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/checkupHistory/CheckupHistory.js"],"names":["React","useEffect","withReducer","reducer","useDispatch","Action","CheckupHistoryDetails","getStorageItem","Constants","CheckupHistoryTableBase","CCol","CRow","CheckupHistory","dispatch","storagePatientID","STORAGE","PATIENT_ID","getCheckupHistoryNumericValuesOnlyByPatientID","patientID","getCheckupFullHistoryByPatientID","resetCheckupHistory","textAlign","overflowX","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,SAAQC,cAAR,QAA6B,4CAA7B;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,eAAzB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAEzB,MAAIC,QAAQ,GAAGT,WAAW,EAA1B;AACA,MAAIU,gBAAgB,GAAGP,cAAc,CAACC,SAAS,CAACO,OAAV,CAAkBC,UAAnB,CAArC;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,QAAQ,CAACR,MAAM,CAACY,6CAAP,CAAqD;AAACC,MAAAA,SAAS,EAAEJ;AAAZ,KAArD,CAAD,CAAR;AACAD,IAAAA,QAAQ,CAACR,MAAM,CAACc,gCAAP,CAAwC;AAACD,MAAAA,SAAS,EAAEJ;AAAZ,KAAxC,CAAD,CAAR;AAEA,WAAQ,MAAM;AACVD,MAAAA,QAAQ,CAACR,MAAM,CAACe,mBAAP,EAAD,CAAR;AACH,KAFD;AAGH,GAPQ,EAON,EAPM,CAAT;AAUA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,IAAT;AAAA,+BACI;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,IAAT;AAAA,+BACI,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,IAAT;AAAc,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE,QAAZ;AAAsBC,UAAAA,MAAM,EAAE;AAA9B,SAArB;AAAA,+BACI,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA/BD;;GAAMX,c;UAEaR,W;;;KAFbQ,c;AAiCN,eAAeV,WAAW,CAAC,gBAAD,EAAmBC,OAAnB,CAAX,CAAuCS,cAAvC,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport withReducer from \"../../../../../../../store/withReducer\";\nimport reducer from \"./store/reducer\";\nimport {useDispatch} from \"react-redux\";\nimport * as Action from \"./store/actions/\";\nimport CheckupHistoryDetails from \"./chartComponents/CheckupHistoryDetails\";\nimport {getStorageItem} from \"../../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../../utils/Constants\";\nimport CheckupHistoryTableBase from \"./tableComponents/CheckupHistoryTableBase\";\nimport {CCol, CRow} from \"@coreui/react\";\n\nconst CheckupHistory = () => {\n\n    let dispatch = useDispatch();\n    let storagePatientID = getStorageItem(Constants.STORAGE.PATIENT_ID);\n\n    useEffect(() => {\n        dispatch(Action.getCheckupHistoryNumericValuesOnlyByPatientID({patientID: storagePatientID}));\n        dispatch(Action.getCheckupFullHistoryByPatientID({patientID: storagePatientID}));\n\n        return (() => {\n            dispatch(Action.resetCheckupHistory());\n        })\n    }, []);\n\n\n    return (\n        <div>\n            <CRow>\n                <CCol sm=\"12\">\n                    <h5 style={{textAlign: 'center'}}>Checkup History (Last 4 Checkups)</h5>\n                </CCol>\n\n                <CCol sm=\"12\">\n                    <CheckupHistoryDetails/>\n                </CCol>\n                <CCol sm=\"12\" style={{overflowX: 'scroll', height: 'fit-content'}}>\n                    <CheckupHistoryTableBase/>\n                </CCol>\n            </CRow>\n        </div>\n    );\n};\n\nexport default withReducer('checkupHistory', reducer)(CheckupHistory);"]},"metadata":{},"sourceType":"module"}