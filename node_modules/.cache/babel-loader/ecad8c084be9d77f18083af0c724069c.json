{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\config\\\\diagnosis\\\\add-edit\\\\DiagnosisAddEditApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { getStorageItem, removeStorageItem } from \"../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../utils/Constants\";\nimport * as Action from \"../store/action\";\nimport DiagnosisAddEditBase from \"./components/DiagnosisAddEditBase\";\nimport withReducer from \"../../../../../store/withReducer\";\nimport reducer from \"../store/reducers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DiagnosisAddEditApp = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let diagnosisID = getStorageItem(Constants.STORAGE.SELECTED_DIAGNOSIS_ID);\n\n    if (diagnosisID) {\n      dispatch(Action.getDiagnosisDTOByID(diagnosisID));\n    }\n\n    return () => {\n      dispatch(Action.reset());\n      removeStorageItem(Constants.STORAGE.SELECTED_DIAGNOSIS_ID);\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DiagnosisAddEditBase, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DiagnosisAddEditApp, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DiagnosisAddEditApp;\nexport default withReducer('diagnosis', reducer)(DiagnosisAddEditApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"DiagnosisAddEditApp\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/diagnosis/add-edit/DiagnosisAddEditApp.js"],"names":["React","useEffect","useDispatch","getStorageItem","removeStorageItem","Constants","Action","DiagnosisAddEditBase","withReducer","reducer","DiagnosisAddEditApp","dispatch","diagnosisID","STORAGE","SELECTED_DIAGNOSIS_ID","getDiagnosisDTOByID","reset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,sCAAhD;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAC9B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIW,WAAW,GAAGT,cAAc,CAACE,SAAS,CAACQ,OAAV,CAAkBC,qBAAnB,CAAhC;;AACA,QAAIF,WAAJ,EAAiB;AACbD,MAAAA,QAAQ,CAACL,MAAM,CAACS,mBAAP,CAA2BH,WAA3B,CAAD,CAAR;AACH;;AAED,WAAO,MAAM;AACTD,MAAAA,QAAQ,CAACL,MAAM,CAACU,KAAP,EAAD,CAAR;AACAZ,MAAAA,iBAAiB,CAACC,SAAS,CAACQ,OAAV,CAAkBC,qBAAnB,CAAjB;AACH,KAHD;AAIH,GAXQ,EAWN,CAACH,QAAD,CAXM,CAAT;AAaA,sBACI;AAAA,2BACI,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArBD;;GAAMD,mB;UACeR,W;;;KADfQ,mB;AAuBN,eAAeF,WAAW,CAAC,WAAD,EAAcC,OAAd,CAAX,CAAkCC,mBAAlC,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {getStorageItem, removeStorageItem} from \"../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../utils/Constants\";\nimport * as Action from \"../store/action\";\nimport DiagnosisAddEditBase from \"./components/DiagnosisAddEditBase\";\nimport withReducer from \"../../../../../store/withReducer\";\nimport reducer from \"../store/reducers\";\n\nconst DiagnosisAddEditApp = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        let diagnosisID = getStorageItem(Constants.STORAGE.SELECTED_DIAGNOSIS_ID);\n        if (diagnosisID) {\n            dispatch(Action.getDiagnosisDTOByID(diagnosisID));\n        }\n\n        return () => {\n            dispatch(Action.reset());\n            removeStorageItem(Constants.STORAGE.SELECTED_DIAGNOSIS_ID);\n        };\n    }, [dispatch]);\n\n    return (\n        <div>\n            <DiagnosisAddEditBase/>\n        </div>\n    );\n};\n\nexport default withReducer('diagnosis', reducer)(DiagnosisAddEditApp);"]},"metadata":{},"sourceType":"module"}