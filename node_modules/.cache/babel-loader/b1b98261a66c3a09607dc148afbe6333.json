{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\createInstructionNote\\\\webCam\\\\components\\\\WebCamImageAddEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Field, Form, Formik } from \"formik\";\nimport { CCol, CFormGroup, CRow } from \"@coreui/react\";\nimport { getInputFieldClassNames } from \"../../../../../../../../../../utils/FormUtils\";\nimport Constants from \"../../../../../../../../../../utils/Constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport withReducer from \"../../../../../../../../../store/withReducer\";\nimport reducer from \"../store/reducers/index\";\nimport customValidator from \"../../../../../../../../../../utils/ValidationUtil\";\nimport * as Actions from \"../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getValidations = () => {\n  return {\n    status: {\n      required: {\n        message: 'Required'\n      }\n    }\n  };\n};\n\nconst initValues = {\n  webCamImageID: '',\n  documentStorageID: '',\n  remark: '',\n  status: Constants.STATUS_CONST.ACT\n};\n\nconst WebCamImageAddEdit = _ref => {\n  _s();\n\n  let {\n    saveFunction\n  } = _ref;\n  const [webCamImage, setWebCamImage] = useState(initValues);\n  const webCamImageData = useSelector(_ref2 => {\n    let {\n      webCamImage\n    } = _ref2;\n    return webCamImage.webCamImageAddEdit;\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let webCamImage = webCamImageData.webCamImage;\n    let initData = {\n      webCamImageID: webCamImage.webCamImageID ? webCamImage.webCamImageID : initValues.webCamImageID,\n      documentStorageID: webCamImage.documentStorageID ? webCamImage.documentStorageID : initValues.documentStorageID,\n      remark: webCamImage.remark ? webCamImage.remark : initValues.remark,\n      status: webCamImage.status ? webCamImage.status : initValues.status\n    };\n    setWebCamImage(initData);\n  }, [dispatch, webCamImageData.webCamImage]);\n\n  const onCustomValidation = values => {\n    let validate = customValidator(values, getValidations());\n    dispatch(Actions.onFormChange({\n      isValid: validate.isValid,\n      values: values\n    }));\n    return validate.errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      enableReinitialize: true,\n      initialValues: webCamImage,\n      onSubmit: (values, _ref3) => {\n        let {\n          setSubmitting\n        } = _ref3;\n        setTimeout(() => {\n          setSubmitting(false);\n        }, 200);\n      },\n      validateOnChange: true,\n      validate: values => {\n        return onCustomValidation(values);\n      },\n      children: _ref4 => {\n        let {\n          errors,\n          touched\n        } = _ref4;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"12\",\n              children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                children: /*#__PURE__*/_jsxDEV(Field, {\n                  rows: \"5\",\n                  cols: \"120\",\n                  name: \"remark\",\n                  placeholder: 'Remark',\n                  className: getInputFieldClassNames(touched.remark, errors.remark),\n                  as: \"textarea\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WebCamImageAddEdit, \"ROlzxCDKefVv8Cx0Za6D8Cuc7zw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = WebCamImageAddEdit;\nexport default withReducer('webCamImage', reducer)(WebCamImageAddEdit);\n\nvar _c;\n\n$RefreshReg$(_c, \"WebCamImageAddEdit\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/createInstructionNote/webCam/components/WebCamImageAddEdit.js"],"names":["React","useEffect","useState","Field","Form","Formik","CCol","CFormGroup","CRow","getInputFieldClassNames","Constants","useDispatch","useSelector","withReducer","reducer","customValidator","Actions","getValidations","status","required","message","initValues","webCamImageID","documentStorageID","remark","STATUS_CONST","ACT","WebCamImageAddEdit","saveFunction","webCamImage","setWebCamImage","webCamImageData","webCamImageAddEdit","dispatch","initData","onCustomValidation","values","validate","onFormChange","isValid","errors","setSubmitting","setTimeout","touched"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Field, Form, Formik} from \"formik\";\nimport {CCol, CFormGroup, CRow} from \"@coreui/react\";\nimport {getInputFieldClassNames} from \"../../../../../../../../../../utils/FormUtils\";\nimport Constants from \"../../../../../../../../../../utils/Constants\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport withReducer from \"../../../../../../../../../store/withReducer\";\nimport reducer from \"../store/reducers/index\";\nimport customValidator from \"../../../../../../../../../../utils/ValidationUtil\";\nimport * as Actions from \"../store/actions\";\n\nconst getValidations = () => {\n    return {\n        status: {\n            required: {message: 'Required'},\n        }\n    };\n};\n\nconst initValues = {\n    webCamImageID: '',\n    documentStorageID: '',\n    remark: '',\n    status: Constants.STATUS_CONST.ACT\n};\n\nconst WebCamImageAddEdit = ({saveFunction}) => {\n\n    const [webCamImage, setWebCamImage] = useState(initValues);\n    const webCamImageData = useSelector(({webCamImage}) => webCamImage.webCamImageAddEdit);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        let webCamImage = webCamImageData.webCamImage;\n        let initData = {\n            webCamImageID: webCamImage.webCamImageID ? webCamImage.webCamImageID : initValues.webCamImageID,\n            documentStorageID: webCamImage.documentStorageID ? webCamImage.documentStorageID : initValues.documentStorageID,\n            remark: webCamImage.remark ? webCamImage.remark : initValues.remark,\n            status: webCamImage.status ? webCamImage.status : initValues.status\n        };\n        setWebCamImage(initData);\n    }, [dispatch, webCamImageData.webCamImage]);\n\n\n    const onCustomValidation = (values) => {\n\n        let validate = customValidator(values, getValidations());\n        dispatch(Actions.onFormChange(\n            {\n                isValid: validate.isValid,\n                values: values\n            }));\n        return validate.errors;\n    };\n\n    return (\n        <div>\n            <Formik\n                enableReinitialize={true}\n                initialValues={webCamImage}\n                onSubmit={(values, {setSubmitting}) => {\n                    setTimeout(() => {\n                        setSubmitting(false)\n                    }, 200)\n                }}\n                validateOnChange={true}\n                validate={(values) => {\n                    return onCustomValidation(values);\n                }}\n            >\n                {({errors, touched}) => {\n                    return (\n                        <Form>\n                            <CRow>\n                                <CCol sm=\"12\">\n                                    <CFormGroup>\n                                        <Field\n                                            rows=\"5\" cols=\"120\"\n                                            name=\"remark\"\n                                            placeholder={'Remark'}\n                                            className={getInputFieldClassNames(touched.remark, errors.remark)}\n                                            as='textarea'\n                                        >\n                                        </Field>\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                        </Form>\n                    );\n                }}\n            </Formik>\n        </div>\n    );\n};\n\nexport default withReducer('webCamImage', reducer)(WebCamImageAddEdit);"]},"metadata":{},"sourceType":"module"}