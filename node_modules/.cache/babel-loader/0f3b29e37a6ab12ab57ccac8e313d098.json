{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\registeredPatient\\\\search\\\\components\\\\PatientResult.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CAlert, CButton, CCard, CCardBody, CCol, CRow, CTooltip } from \"@coreui/react\";\nimport { getCommonStringForGrid, getDateFromDateStr, getGenderFromConstantForGrid } from \"../../../../../../../utils/GridUtil\";\nimport AppPagination from \"../../../../../common/AppPagination\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Actions from '../../store/actions/index';\nimport * as _ from \"lodash\";\nimport { setStorageItem } from \"../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport history from \"../../../../../../../@history\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getFullName = patient => {\n  let {\n    title,\n    firstName,\n    middleName,\n    lastName\n  } = patient;\n  title = _.trim(title);\n  firstName = _.trim(firstName);\n  middleName = _.trim(middleName);\n  lastName = _.trim(lastName);\n  return title.concat(' .').concat(firstName).concat(' ').concat(middleName).concat(' ').concat(lastName);\n};\n\nconst getAddress = patient => {\n  let {\n    addressLine1,\n    addressLine2,\n    addressLine3\n  } = patient;\n  addressLine1 = _.trim(addressLine1);\n  addressLine2 = _.trim(addressLine2);\n  addressLine3 = _.trim(addressLine3);\n  return addressLine1.concat(' ').concat(addressLine2).concat(' ').concat(addressLine3).concat(' ');\n};\n\nconst gotToChekupList = patientID => {\n  setStorageItem(Constants.STORAGE.PATIENT_ID_FOR_DETAIL, patientID);\n  history.push({\n    pathname: Constants.PAGES.registeredPatientDetails\n  });\n};\n\nconst PatientResult = _ref => {\n  _s();\n\n  let {\n    createCheckUp\n  } = _ref;\n  const dispatch = useDispatch();\n  const patientData = useSelector(_ref2 => {\n    let {\n      patientSearch\n    } = _ref2;\n    return patientSearch.patientSearch;\n  });\n  const [pagedPatientData, setPagedPatientData] = useState([]);\n  useEffect(() => {\n    setPagedPatientData(patientData.pagedPatients.pageData);\n  }, [dispatch, patientData.pagedPatients.pageData]);\n\n  const onPageDataChange = data => {\n    dispatch(Actions.setPageInfo(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: /*#__PURE__*/_jsxDEV(CCol, {\n        xs: \"12\",\n        children: /*#__PURE__*/_jsxDEV(CCard, {\n          children: /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: [patientData.pagedPatients.pageData && patientData.pagedPatients.pageData.length == 0 && /*#__PURE__*/_jsxDEV(CAlert, {\n              color: \"warning\",\n              children: \"No patients(s) found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), patientData.pagedPatients.pageData && patientData.pagedPatients.pageData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-striped\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Patient Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Patient ID\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"NIC/Passport\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 76,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Contact No.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Age\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Gender\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"DOB\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 80,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Address\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 81,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Occupation\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Action\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: pagedPatientData && pagedPatientData.map((data, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        className: 'clickable-data-row',\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getFullName(data)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 96,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getCommonStringForGrid(data.patientCode)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 97,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getCommonStringForGrid(data.nicPassport)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 98,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getCommonStringForGrid(data.contactNo)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 99,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getCommonStringForGrid(data.age)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 100,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getGenderFromConstantForGrid(data.gender)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 101,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getDateFromDateStr(data.dateOfBirthStr)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 102,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getAddress(data)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 103,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getCommonStringForGrid(data.email)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 104,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getCommonStringForGrid(data.occupation)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 105,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"w-11-p\",\n                          children: [/*#__PURE__*/_jsxDEV(CTooltip, {\n                            content: 'View History',\n                            placement: 'left-start',\n                            children: /*#__PURE__*/_jsxDEV(CButton, {\n                              type: \"button\",\n                              onClick: e => {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                gotToChekupList(data.patientID);\n                              },\n                              disabled: !data.patientID,\n                              color: \"info\",\n                              className: \" mr-2\",\n                              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"fa fa-eye\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 122,\n                                columnNumber: 73\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 111,\n                              columnNumber: 69\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 107,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(CTooltip, {\n                            content: 'New Appointment',\n                            placement: 'left-start',\n                            children: /*#__PURE__*/_jsxDEV(CButton, {\n                              disabled: !data.patientID,\n                              onClick: e => {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                createCheckUp(data.patientID);\n                              },\n                              color: \"success\",\n                              className: \"\",\n                              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"fa fa-plus\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 140,\n                                columnNumber: 73\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 130,\n                              columnNumber: 69\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 126,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 106,\n                          columnNumber: 61\n                        }, this)]\n                      }, data.patientID, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 57\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CRow, {\n                children: /*#__PURE__*/_jsxDEV(CCol, {\n                  xs: \"12\",\n                  children: /*#__PURE__*/_jsxDEV(AppPagination, {\n                    currentPageNo: patientData.pagedPatients.currentPageNo,\n                    totalNoOfPages: patientData.pagedPatients.totalNoOfPages,\n                    pageLength: patientData.pagedPatients.pageLength,\n                    onPaginationChange: onPageDataChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(PatientResult, \"dY/VkxDteH0Ks0hUVZ7fzQ/n+m8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PatientResult;\nexport default PatientResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientResult\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/registeredPatient/search/components/PatientResult.js"],"names":["React","useEffect","useState","CAlert","CButton","CCard","CCardBody","CCol","CRow","CTooltip","getCommonStringForGrid","getDateFromDateStr","getGenderFromConstantForGrid","AppPagination","useDispatch","useSelector","Actions","_","setStorageItem","Constants","history","getFullName","patient","title","firstName","middleName","lastName","trim","concat","getAddress","addressLine1","addressLine2","addressLine3","gotToChekupList","patientID","STORAGE","PATIENT_ID_FOR_DETAIL","push","pathname","PAGES","registeredPatientDetails","PatientResult","createCheckUp","dispatch","patientData","patientSearch","pagedPatientData","setPagedPatientData","pagedPatients","pageData","onPageDataChange","data","setPageInfo","length","map","index","patientCode","nicPassport","contactNo","age","gender","dateOfBirthStr","email","occupation","e","preventDefault","stopPropagation","currentPageNo","totalNoOfPages","pageLength"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {CAlert, CButton, CCard, CCardBody, CCol, CRow, CTooltip} from \"@coreui/react\";\nimport {\n    getCommonStringForGrid,\n    getDateFromDateStr,\n    getGenderFromConstantForGrid\n} from \"../../../../../../../utils/GridUtil\";\nimport AppPagination from \"../../../../../common/AppPagination\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as Actions from '../../store/actions/index'\nimport * as _ from \"lodash\";\nimport {setStorageItem} from \"../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport history from \"../../../../../../../@history\";\n\nconst getFullName = (patient) => {\n    let {title, firstName, middleName, lastName} = patient;\n    title = _.trim(title);\n    firstName = _.trim(firstName);\n    middleName = _.trim(middleName);\n    lastName = _.trim(lastName);\n    return title.concat(' .').concat(firstName).concat(' ').concat(middleName).concat(' ').concat(lastName);\n};\n\nconst getAddress = (patient) => {\n    let {addressLine1, addressLine2, addressLine3} = patient;\n    addressLine1 = _.trim(addressLine1);\n    addressLine2 = _.trim(addressLine2);\n    addressLine3 = _.trim(addressLine3);\n    return addressLine1.concat(' ').concat(addressLine2).concat(' ').concat(addressLine3).concat(' ');\n};\n\nconst gotToChekupList = (patientID) => {\n    setStorageItem(Constants.STORAGE.PATIENT_ID_FOR_DETAIL, patientID);\n    history.push({\n        pathname: Constants.PAGES.registeredPatientDetails\n    });\n};\n\nconst PatientResult = ({createCheckUp}) => {\n\n    const dispatch = useDispatch();\n    const patientData = useSelector(({patientSearch}) => patientSearch.patientSearch);\n    const [pagedPatientData, setPagedPatientData] = useState([]);\n\n    useEffect(() => {\n        setPagedPatientData(patientData.pagedPatients.pageData);\n    }, [dispatch, patientData.pagedPatients.pageData]);\n\n    const onPageDataChange = (data) => {\n        dispatch(Actions.setPageInfo(data));\n    };\n\n    return (\n        <>\n            <CRow>\n                <CCol xs=\"12\">\n                    <CCard>\n                        <CCardBody>\n                            {\n                                patientData.pagedPatients.pageData && patientData.pagedPatients.pageData.length == 0 &&\n                                <CAlert color=\"warning\">\n                                    No patients(s) found.\n                                </CAlert>\n                            }\n\n                            {\n                                patientData.pagedPatients.pageData && patientData.pagedPatients.pageData.length > 0 &&\n                                <>\n                                    <div className=\"table-responsive\">\n                                        <table className=\"table table-striped\">\n                                            <thead>\n                                            <tr>\n                                                <th>Patient Name</th>\n                                                <th>Patient ID</th>\n                                                <th>NIC/Passport</th>\n                                                <th>Contact No.</th>\n                                                <th>Age</th>\n                                                <th>Gender</th>\n                                                <th>DOB</th>\n                                                <th>Address</th>\n                                                <th>Email</th>\n                                                <th>Occupation</th>\n                                                <th>Action</th>\n                                            </tr>\n                                            </thead>\n                                            <tbody>\n\n                                            {\n                                                pagedPatientData &&\n                                                pagedPatientData.map((data, index) => {\n                                                    return (\n                                                        <tr key={data.patientID}\n                                                            className={'clickable-data-row'}\n                                                        >\n                                                            <td>{getFullName(data)}</td>\n                                                            <td>{getCommonStringForGrid(data.patientCode)}</td>\n                                                            <td>{getCommonStringForGrid(data.nicPassport)}</td>\n                                                            <td>{getCommonStringForGrid(data.contactNo)}</td>\n                                                            <td>{getCommonStringForGrid(data.age)}</td>\n                                                            <td>{getGenderFromConstantForGrid(data.gender)}</td>\n                                                            <td>{getDateFromDateStr(data.dateOfBirthStr)}</td>\n                                                            <td>{getAddress(data)}</td>\n                                                            <td>{getCommonStringForGrid(data.email)}</td>\n                                                            <td>{getCommonStringForGrid(data.occupation)}</td>\n                                                            <td className=\"w-11-p\">\n                                                                <CTooltip\n                                                                    content={'View History'}\n                                                                    placement={'left-start'}\n                                                                >\n                                                                    <CButton\n                                                                        type=\"button\"\n                                                                        onClick={(e) => {\n                                                                            e.preventDefault();\n                                                                            e.stopPropagation();\n                                                                            gotToChekupList(data.patientID);\n                                                                        }}\n                                                                        disabled={!data.patientID}\n                                                                        color=\"info\"\n                                                                        className=\" mr-2\"\n                                                                    >\n                                                                        <i className='fa fa-eye'></i>\n                                                                    </CButton>\n                                                                </CTooltip>\n\n                                                                <CTooltip\n                                                                    content={'New Appointment'}\n                                                                    placement={'left-start'}\n                                                                >\n                                                                    <CButton\n                                                                        disabled={!data.patientID}\n                                                                        onClick={(e) => {\n                                                                            e.preventDefault();\n                                                                            e.stopPropagation();\n                                                                            createCheckUp(data.patientID);\n                                                                        }}\n                                                                        color=\"success\"\n                                                                        className=\"\"\n                                                                    >\n                                                                        <i className='fa fa-plus'></i>\n                                                                    </CButton>\n                                                                </CTooltip>\n                                                            </td>\n                                                        </tr>\n                                                    );\n                                                })\n                                            }\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    <CRow>\n                                        <CCol xs=\"12\">\n                                            <AppPagination\n                                                currentPageNo={patientData.pagedPatients.currentPageNo}\n                                                totalNoOfPages={patientData.pagedPatients.totalNoOfPages}\n                                                pageLength={patientData.pagedPatients.pageLength}\n                                                onPaginationChange={onPageDataChange}\n                                            />\n                                        </CCol>\n                                    </CRow>\n                                </>\n                            }\n                        </CCardBody>\n                    </CCard>\n                </CCol>\n            </CRow>\n        </>\n    );\n};\n\nexport default PatientResult;"]},"metadata":{},"sourceType":"module"}