{"ast":null,"code":"import { ADD_DIAGNOSIS_ID, GET_DIAGNOSIS_LIST, ON_SAVE_CHECKUP_DIAGNOSIS, REMOVE_DIAGNOSIS_ID, SET_CURRENT_SELECTED_IDS } from \"../actions/select.diagnosis.add.edit.action\";\nconst initialState = {\n  diagnosis: [],\n  selectedDiagnosisIDs: [],\n  currentDiagnosisIDs: []\n};\n\nconst diagnosisSelectReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_DIAGNOSIS_LIST:\n      {\n        return { ...state,\n          diagnosis: action.payload\n        };\n      }\n\n    case ADD_DIAGNOSIS_ID:\n      {\n        let selectedIDs = _.cloneDeep(state.selectedDiagnosisIDs);\n\n        const index = selectedIDs.indexOf(action.payload);\n\n        if (index === -1) {\n          return { ...state,\n            selectedDiagnosisIDs: [...selectedIDs, action.payload]\n          };\n        } else {\n          return { ...state\n          };\n        }\n      }\n\n    case REMOVE_DIAGNOSIS_ID:\n      {\n        const index = state.selectedDiagnosisIDs.indexOf(action.payload);\n\n        let selectedIDs = _.cloneDeep(state.selectedDiagnosisIDs);\n\n        if (index > -1) {\n          selectedIDs.splice(index, 1);\n        }\n\n        return { ...state,\n          selectedDiagnosisIDs: [...selectedIDs]\n        };\n      }\n\n    case SET_CURRENT_SELECTED_IDS:\n      {\n        let ids = [...action.payload];\n        return { ...state,\n          selectedDiagnosisIDs: ids,\n          currentDiagnosisIDs: ids\n        };\n      }\n\n    case ON_SAVE_CHECKUP_DIAGNOSIS:\n      {\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default diagnosisSelectReducer;","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/selectDiagnosis/store/reducers/select.diagnosis.add.edit.reducer.js"],"names":["ADD_DIAGNOSIS_ID","GET_DIAGNOSIS_LIST","ON_SAVE_CHECKUP_DIAGNOSIS","REMOVE_DIAGNOSIS_ID","SET_CURRENT_SELECTED_IDS","initialState","diagnosis","selectedDiagnosisIDs","currentDiagnosisIDs","diagnosisSelectReducer","state","action","type","payload","selectedIDs","_","cloneDeep","index","indexOf","splice","ids"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,kBAFJ,EAGIC,yBAHJ,EAIIC,mBAJJ,EAKIC,wBALJ,QAMO,6CANP;AAQA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,oBAAoB,EAAE,EAFL;AAGjBC,EAAAA,mBAAmB,EAAE;AAHJ,CAArB;;AAMA,MAAMC,sBAAsB,GAAG,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AAEnE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,kBAAL;AAAyB;AACrB,eAAO,EACH,GAAGS,KADA;AAEHJ,UAAAA,SAAS,EAAEK,MAAM,CAACE;AAFf,SAAP;AAIH;;AAED,SAAKb,gBAAL;AAAwB;AACpB,YAAIc,WAAW,GAAGC,CAAC,CAACC,SAAF,CAAYN,KAAK,CAACH,oBAAlB,CAAlB;;AACA,cAAMU,KAAK,GAAGH,WAAW,CAACI,OAAZ,CAAoBP,MAAM,CAACE,OAA3B,CAAd;;AACA,YAAII,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,iBAAO,EACH,GAAGP,KADA;AAEHH,YAAAA,oBAAoB,EAAE,CAAC,GAAGO,WAAJ,EAAiBH,MAAM,CAACE,OAAxB;AAFnB,WAAP;AAIH,SALD,MAKO;AACH,iBAAO,EACH,GAAGH;AADA,WAAP;AAGH;AACJ;;AAED,SAAKP,mBAAL;AAA2B;AACvB,cAAMc,KAAK,GAAGP,KAAK,CAACH,oBAAN,CAA2BW,OAA3B,CAAmCP,MAAM,CAACE,OAA1C,CAAd;;AACA,YAAIC,WAAW,GAAGC,CAAC,CAACC,SAAF,CAAYN,KAAK,CAACH,oBAAlB,CAAlB;;AACA,YAAIU,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZH,UAAAA,WAAW,CAACK,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACH;;AACD,eAAO,EACH,GAAGP,KADA;AAEHH,UAAAA,oBAAoB,EAAE,CAAC,GAAGO,WAAJ;AAFnB,SAAP;AAIH;;AAED,SAAKV,wBAAL;AAAgC;AAC5B,YAAIgB,GAAG,GAAG,CAAC,GAAGT,MAAM,CAACE,OAAX,CAAV;AACA,eAAO,EACH,GAAGH,KADA;AAEHH,UAAAA,oBAAoB,EAAEa,GAFnB;AAGHZ,UAAAA,mBAAmB,EAAEY;AAHlB,SAAP;AAKH;;AAED,SAAKlB,yBAAL;AAAiC;AAC7B,eAAO,EACH,GAAGQ;AADA,SAAP;AAGH;;AAED;AACI,aAAOA,KAAP;AAnDR;AAqDH,CAvDD;;AAyDA,eAAeD,sBAAf","sourcesContent":["import {\n    ADD_DIAGNOSIS_ID,\n    GET_DIAGNOSIS_LIST,\n    ON_SAVE_CHECKUP_DIAGNOSIS,\n    REMOVE_DIAGNOSIS_ID,\n    SET_CURRENT_SELECTED_IDS\n} from \"../actions/select.diagnosis.add.edit.action\";\n\nconst initialState = {\n    diagnosis: [],\n    selectedDiagnosisIDs: [],\n    currentDiagnosisIDs: [],\n};\n\nconst diagnosisSelectReducer = function (state = initialState, action) {\n\n    switch (action.type) {\n        case GET_DIAGNOSIS_LIST: {\n            return {\n                ...state,\n                diagnosis: action.payload,\n            }\n        }\n\n        case ADD_DIAGNOSIS_ID : {\n            let selectedIDs = _.cloneDeep(state.selectedDiagnosisIDs);\n            const index = selectedIDs.indexOf(action.payload);\n            if (index === -1) {\n                return {\n                    ...state,\n                    selectedDiagnosisIDs: [...selectedIDs, action.payload]\n                }\n            } else {\n                return {\n                    ...state\n                }\n            }\n        }\n\n        case REMOVE_DIAGNOSIS_ID : {\n            const index = state.selectedDiagnosisIDs.indexOf(action.payload);\n            let selectedIDs = _.cloneDeep(state.selectedDiagnosisIDs);\n            if (index > -1) {\n                selectedIDs.splice(index, 1);\n            }\n            return {\n                ...state,\n                selectedDiagnosisIDs: [...selectedIDs],\n            }\n        }\n\n        case SET_CURRENT_SELECTED_IDS : {\n            let ids = [...action.payload];\n            return {\n                ...state,\n                selectedDiagnosisIDs: ids,\n                currentDiagnosisIDs: ids,\n            }\n        }\n\n        case ON_SAVE_CHECKUP_DIAGNOSIS : {\n            return {\n                ...state\n            }\n        }\n\n        default :\n            return state;\n    }\n};\n\nexport default diagnosisSelectReducer;"]},"metadata":{},"sourceType":"module"}