{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getCommonStringForGrid } from \"../../../../../../../../../utils/GridUtil\";\nimport { CFormGroup, CRow, CCol, CInput } from \"@coreui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Actions from '../store/actions/patient.add.medical.test.results.action';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MedicalTestRecordNew = _ref => {\n  _s();\n\n  let {\n    medicalTestRecord\n  } = _ref;\n  let dispatch = useDispatch();\n  const checkupData = useSelector(_ref2 => {\n    let {\n      checkup\n    } = _ref2;\n    return checkup.checkupAddEdit;\n  });\n  const patientMedicalTestsData = useSelector(_ref3 => {\n    let {\n      patientMedicalTest\n    } = _ref3;\n    return patientMedicalTest.patientMedicalTestAddEdit;\n  });\n  const [formValue, setFormValue] = useState({\n    value: '',\n    measureUnit: ''\n  });\n  const [isEdit, setIsEdit] = useState(false);\n  const [editedRow, setEditedRow] = useState(false);\n\n  const setValue = () => {};\n\n  useEffect(() => {\n    let value = '';\n    let measureUnit = console.log(medicalTestRecord);\n    setValue();\n  }, [checkupData.checkup.medicalTestResults]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(MedicalTestRecordNew, \"R0ECq6EWKTF2ZRQdocPA2e32wz8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MedicalTestRecordNew;\nexport default MedicalTestRecordNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicalTestRecordNew\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/medicalTests/components/MedicalTestRecordNew.js"],"names":["React","useEffect","useState","getCommonStringForGrid","CFormGroup","CRow","CCol","CInput","useDispatch","useSelector","Actions","MedicalTestRecordNew","medicalTestRecord","dispatch","checkupData","checkup","checkupAddEdit","patientMedicalTestsData","patientMedicalTest","patientMedicalTestAddEdit","formValue","setFormValue","value","measureUnit","isEdit","setIsEdit","editedRow","setEditedRow","setValue","console","log","medicalTestResults"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,sBAAR,QAAqC,2CAArC;AACA,SAAQC,UAAR,EAAmBC,IAAnB,EAAyBC,IAAzB,EAAgCC,MAAhC,QAA6C,eAA7C;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,KAAKC,OAAZ,MAAyB,0DAAzB;;;;AAGA,MAAMC,oBAAoB,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAACC,IAAAA;AAAD,GAAwB;AAElD,MAAIC,QAAQ,GAAGL,WAAW,EAA1B;AACA,QAAMM,WAAW,GAAGL,WAAW,CAAC;AAAA,QAAC;AAACM,MAAAA;AAAD,KAAD;AAAA,WAAeA,OAAO,CAACC,cAAvB;AAAA,GAAD,CAA/B;AACA,QAAMC,uBAAuB,GAAGR,WAAW,CAAC;AAAA,QAAC;AAACS,MAAAA;AAAD,KAAD;AAAA,WAA0BA,kBAAkB,CAACC,yBAA7C;AAAA,GAAD,CAA3C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC;AAACoB,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,WAAW,EAAE;AAAzB,GAAD,CAA1C;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,KAAD,CAA1C;;AAIA,QAAM0B,QAAQ,GAAG,MAAM,CACtB,CADD;;AAGA3B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqB,KAAK,GAAG,EAAZ;AACA,QAAIC,WAAW,GACfM,OAAO,CAACC,GAAR,CAAYlB,iBAAZ,CADA;AAEAgB,IAAAA,QAAQ;AACX,GALQ,EAKN,CAACd,WAAW,CAACC,OAAZ,CAAoBgB,kBAArB,CALM,CAAT;AAOA,sBACI,qCADJ;AAIH,CAzBD;;GAAMpB,oB;UAEaH,W,EACKC,W,EACYA,W;;;KAJ9BE,oB;AA2BN,eAAeA,oBAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {getCommonStringForGrid} from \"../../../../../../../../../utils/GridUtil\";\nimport {CFormGroup,CRow ,CCol , CInput} from \"@coreui/react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as Actions from '../store/actions/patient.add.medical.test.results.action'\n\n\nconst MedicalTestRecordNew = ({medicalTestRecord}) => {\n\n    let dispatch = useDispatch();\n    const checkupData = useSelector(({checkup}) => checkup.checkupAddEdit);\n    const patientMedicalTestsData = useSelector(({patientMedicalTest}) => patientMedicalTest.patientMedicalTestAddEdit);\n    const [formValue, setFormValue] = useState({value: '', measureUnit: ''});\n    const [isEdit, setIsEdit] = useState(false);\n    const [editedRow, setEditedRow] = useState(false);\n\n   \n\n    const setValue = () => {\n    };\n\n    useEffect(() => {\n        let value = '';\n        let measureUnit =\n        console.log(medicalTestRecord)\n        setValue();\n    }, [checkupData.checkup.medicalTestResults]);\n\n    return (\n        <>\n        </>\n    );\n};\n\nexport default MedicalTestRecordNew;"]},"metadata":{},"sourceType":"module"}