{"ast":null,"code":"import dataService from \"../../../../../../services/dataService\";\nimport rolesAppEndpoints from './role.app.endpoints';\nexport const GET_ROLE = '[ROLE ADD EDIT] GET_ROLE';\nexport const GET_ALL_PRIVILEGES = '[ROLE ADD EDIT] GET ALL PRIVILEGES';\nexport const ON_ADD_EDIT_FORM_CHANGE = '[ROLE ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_PRIVILEGE_CHANGE = '[ROLE ADD EDIT] ON_PRIVILEGE_CHANGE';\nexport const ON_SAVE_UPDATE = '[ROLE ADD EDIT] ON_SAVE_UPDATE';\nexport const ON_RESET = '[ROLE ADD EDIT] ON_RESET';\nexport function getAllPrivileges() {\n  const request = dataService.get(rolesAppEndpoints.getSystemPrivileges);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_ALL_PRIVILEGES,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function getRole(roleID) {\n  let endpoint = Object.assign({}, rolesAppEndpoints.getRoleUpdateDTO);\n  endpoint.url = endpoint.url + '/' + roleID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_ROLE,\n      payload: response.data.result\n    }));\n  };\n}\nexport function onFormChange(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_ADD_EDIT_FORM_CHANGE,\n      payload: data\n    });\n  };\n}\nexport function onPrivilegeChange(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_PRIVILEGE_CHANGE,\n      payload: data\n    });\n  };\n}\nexport function reset() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET,\n      payload: {}\n    });\n  };\n}\nexport function saveUpdateRole(data) {\n  const request = dataService.post(rolesAppEndpoints.saveOrUpdateRole, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: ON_SAVE_UPDATE,\n        payload: response.data.result\n      });\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/role/store/actions/role.app.add.edit.action.js"],"names":["dataService","rolesAppEndpoints","GET_ROLE","GET_ALL_PRIVILEGES","ON_ADD_EDIT_FORM_CHANGE","ON_PRIVILEGE_CHANGE","ON_SAVE_UPDATE","ON_RESET","getAllPrivileges","request","get","getSystemPrivileges","dispatch","getState","then","response","type","payload","data","result","getRole","roleID","endpoint","Object","assign","getRoleUpdateDTO","url","onFormChange","onPrivilegeChange","reset","saveUpdateRole","post","saveOrUpdateRole"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,wCAAxB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AAEA,OAAO,MAAMC,QAAQ,GAAG,0BAAjB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oCAA3B;AACP,OAAO,MAAMC,uBAAuB,GAAG,yCAAhC;AACP,OAAO,MAAMC,mBAAmB,GAAG,qCAA5B;AACP,OAAO,MAAMC,cAAc,GAAG,gCAAvB;AACP,OAAO,MAAMC,QAAQ,GAAG,0BAAjB;AAEP,OAAO,SAASC,gBAAT,GAA4B;AAE/B,QAAMC,OAAO,GAAGT,WAAW,CAACU,GAAZ,CAAgBT,iBAAiB,CAACU,mBAAlC,CAAhB;AAEA,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BJ,IAAAA,OAAO,CAACK,IAAR,CAAcC,QAAD,IAAc;AACnBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEb,kBADD;AAELc,QAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFlB,OAAD,CAAR;AAIH,KALL;AAOH,GARD;AAUH;AAED,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAE5B,MAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBvB,iBAAiB,CAACwB,gBAApC,CAAf;AACAH,EAAAA,QAAQ,CAACI,GAAT,GAAeJ,QAAQ,CAACI,GAAT,GAAe,GAAf,GAAqBL,MAApC;AAEA,QAAMZ,OAAO,GAAGT,WAAW,CAACU,GAAZ,CAAgBY,QAAhB,CAAhB;AAEA,SAAO,CAACV,QAAD,EAAWC,QAAX,KAAwB;AAC3BJ,IAAAA,OAAO,CAACK,IAAR,CAAcC,QAAD,IACTH,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEd,QADD;AAELe,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFlB,KAAD,CADZ;AAMH,GAPD;AASH;AAED,OAAO,SAASQ,YAAT,CAAsBT,IAAtB,EAA4B;AAC/B,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEZ,uBADD;AAELa,MAAAA,OAAO,EAAEC;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASU,iBAAT,CAA2BV,IAA3B,EAAiC;AACpC,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEX,mBADD;AAELY,MAAAA,OAAO,EAAEC;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASW,KAAT,GAAiB;AACpB,SAAO,CAACjB,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,QADD;AAELU,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASa,cAAT,CAAwBZ,IAAxB,EAA8B;AACjC,QAAMT,OAAO,GAAGT,WAAW,CAAC+B,IAAZ,CAAiB9B,iBAAiB,CAAC+B,gBAAnC,EAAqDd,IAArD,CAAhB;AAEA,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3BJ,IAAAA,OAAO,CAACK,IAAR,CAAcC,QAAD,IAAc;AACnBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEV,cADD;AAELW,QAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFlB,OAAD,CAAR;AAIH,KALL;AAOH,GARD;AASH","sourcesContent":["import dataService from \"../../../../../../services/dataService\";\nimport rolesAppEndpoints from './role.app.endpoints';\n\nexport const GET_ROLE = '[ROLE ADD EDIT] GET_ROLE';\nexport const GET_ALL_PRIVILEGES = '[ROLE ADD EDIT] GET ALL PRIVILEGES';\nexport const ON_ADD_EDIT_FORM_CHANGE = '[ROLE ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_PRIVILEGE_CHANGE = '[ROLE ADD EDIT] ON_PRIVILEGE_CHANGE';\nexport const ON_SAVE_UPDATE = '[ROLE ADD EDIT] ON_SAVE_UPDATE';\nexport const ON_RESET = '[ROLE ADD EDIT] ON_RESET';\n\nexport function getAllPrivileges() {\n\n    const request = dataService.get(rolesAppEndpoints.getSystemPrivileges);\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: GET_ALL_PRIVILEGES,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n\n}\n\nexport function getRole(roleID) {\n\n    let endpoint = Object.assign({}, rolesAppEndpoints.getRoleUpdateDTO);\n    endpoint.url = endpoint.url + '/' + roleID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_ROLE,\n                payload: response.data.result\n            })\n        );\n    };\n\n}\n\nexport function onFormChange(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_ADD_EDIT_FORM_CHANGE,\n            payload: data\n        })\n    };\n}\n\nexport function onPrivilegeChange(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_PRIVILEGE_CHANGE,\n            payload: data\n        })\n    };\n}\n\nexport function reset() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET,\n            payload: {}\n        })\n    };\n}\n\nexport function saveUpdateRole(data) {\n    const request = dataService.post(rolesAppEndpoints.saveOrUpdateRole, data);\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: ON_SAVE_UPDATE,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\n\n"]},"metadata":{},"sourceType":"module"}