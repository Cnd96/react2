{"ast":null,"code":"import dataService from \"../../../../../../../../../../services/dataService\";\nimport webCamImageEndPoints from \"./image.upload.app.end.points\";\nexport const ON_SAVE_IMAGE_UPLOAD = '[IMAGE UPLOAD] ON_SAVE_IMAGE_UPLOAD';\nexport const ON_ADD_EDIT_FORM_CHANGE = '[IMAGE UPLOAD] ON_ADD_EDIT_FORM_CHANGE';\nexport const GET_WEB_CAM_IMAGES = '[IMAGE UPLOAD] GET_WEB_CAM_IMAGES';\nexport const ON_RESET_DATA = '[IMAGE UPLOAD] ON_RESET_DATA';\nexport const ON_REMOVE_WEB_CAM_IMAGE_UPLOAD = '[IMAGE UPLOAD] ON_REMOVE_WEB_CAM_IMAGE_UPLOAD';\nexport function saveOrUpdateWebCamImage(data) {\n  const request = dataService.post(webCamImageEndPoints.saveOrUpdateWebCamImage, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      console.log(response);\n      return dispatch({\n        type: ON_SAVE_IMAGE_UPLOAD,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function getWebCamImages(data) {\n  const request = dataService.post(webCamImageEndPoints.getWebCamImages, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      console.log(response);\n      return dispatch({\n        type: GET_WEB_CAM_IMAGES,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function removeWebCamImage(data) {\n  const request = dataService.post(webCamImageEndPoints.removeWebCamImage, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      console.log(response);\n      return dispatch({\n        type: ON_REMOVE_WEB_CAM_IMAGE_UPLOAD,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function onFormChange(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_ADD_EDIT_FORM_CHANGE,\n      payload: data\n    });\n  };\n}\nexport function onResetData(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET_DATA,\n      payload: data\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/createInstructionNote/webCam/store/actions/image.upload.actions.js"],"names":["dataService","webCamImageEndPoints","ON_SAVE_IMAGE_UPLOAD","ON_ADD_EDIT_FORM_CHANGE","GET_WEB_CAM_IMAGES","ON_RESET_DATA","ON_REMOVE_WEB_CAM_IMAGE_UPLOAD","saveOrUpdateWebCamImage","data","request","post","dispatch","getState","then","response","console","log","type","payload","result","getWebCamImages","removeWebCamImage","onFormChange","onResetData"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,oDAAxB;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AAEA,OAAO,MAAMC,oBAAoB,GAAG,qCAA7B;AACP,OAAO,MAAMC,uBAAuB,GAAG,wCAAhC;AACP,OAAO,MAAMC,kBAAkB,GAAG,mCAA3B;AACP,OAAO,MAAMC,aAAa,GAAG,8BAAtB;AACP,OAAO,MAAMC,8BAA8B,GAAG,+CAAvC;AAGP,OAAO,SAASC,uBAAT,CAAiCC,IAAjC,EAAuC;AAC1C,QAAMC,OAAO,GAAGT,WAAW,CAACU,IAAZ,CAAiBT,oBAAoB,CAACM,uBAAtC,EAA+DC,IAA/D,CAAhB;AAEA,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3B,WAAOH,OAAO,CAACI,IAAR,CAAcC,QAAD,IAAc;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAOH,QAAQ,CAAC;AACZM,QAAAA,IAAI,EAAEf,oBADM;AAEZgB,QAAAA,OAAO,EAAEJ,QAAQ,CAACN,IAAT,CAAcW;AAFX,OAAD,CAAf;AAIH,KANE,CAAP;AAQH,GATD;AAUH;AAED,OAAO,SAASC,eAAT,CAAyBZ,IAAzB,EAA+B;AAClC,QAAMC,OAAO,GAAGT,WAAW,CAACU,IAAZ,CAAiBT,oBAAoB,CAACmB,eAAtC,EAAuDZ,IAAvD,CAAhB;AAEA,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3B,WAAOH,OAAO,CAACI,IAAR,CAAcC,QAAD,IAAc;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAOH,QAAQ,CAAC;AACZM,QAAAA,IAAI,EAAEb,kBADM;AAEZc,QAAAA,OAAO,EAAEJ,QAAQ,CAACN,IAAT,CAAcW;AAFX,OAAD,CAAf;AAIH,KANE,CAAP;AAQH,GATD;AAUH;AAED,OAAO,SAASE,iBAAT,CAA2Bb,IAA3B,EAAiC;AACpC,QAAMC,OAAO,GAAGT,WAAW,CAACU,IAAZ,CAAiBT,oBAAoB,CAACoB,iBAAtC,EAAyDb,IAAzD,CAAhB;AAEA,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3B,WAAOH,OAAO,CAACI,IAAR,CAAcC,QAAD,IAAc;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAOH,QAAQ,CAAC;AACZM,QAAAA,IAAI,EAAEX,8BADM;AAEZY,QAAAA,OAAO,EAAEJ,QAAQ,CAACN,IAAT,CAAcW;AAFX,OAAD,CAAf;AAIH,KANE,CAAP;AAQH,GATD;AAUH;AAED,OAAO,SAASG,YAAT,CAAsBd,IAAtB,EAA4B;AAC/B,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEd,uBADD;AAELe,MAAAA,OAAO,EAAEV;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASe,WAAT,CAAqBf,IAArB,EAA2B;AAC9B,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEZ,aADD;AAELa,MAAAA,OAAO,EAAEV;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH","sourcesContent":["import dataService from \"../../../../../../../../../../services/dataService\";\nimport webCamImageEndPoints from \"./image.upload.app.end.points\";\n\nexport const ON_SAVE_IMAGE_UPLOAD = '[IMAGE UPLOAD] ON_SAVE_IMAGE_UPLOAD';\nexport const ON_ADD_EDIT_FORM_CHANGE = '[IMAGE UPLOAD] ON_ADD_EDIT_FORM_CHANGE';\nexport const GET_WEB_CAM_IMAGES = '[IMAGE UPLOAD] GET_WEB_CAM_IMAGES';\nexport const ON_RESET_DATA = '[IMAGE UPLOAD] ON_RESET_DATA';\nexport const ON_REMOVE_WEB_CAM_IMAGE_UPLOAD = '[IMAGE UPLOAD] ON_REMOVE_WEB_CAM_IMAGE_UPLOAD';\n\n\nexport function saveOrUpdateWebCamImage(data) {\n    const request = dataService.post(webCamImageEndPoints.saveOrUpdateWebCamImage, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                console.log(response);\n                return dispatch({\n                    type: ON_SAVE_IMAGE_UPLOAD,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function getWebCamImages(data) {\n    const request = dataService.post(webCamImageEndPoints.getWebCamImages, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                console.log(response);\n                return dispatch({\n                    type: GET_WEB_CAM_IMAGES,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function removeWebCamImage(data) {\n    const request = dataService.post(webCamImageEndPoints.removeWebCamImage, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                console.log(response);\n                return dispatch({\n                    type: ON_REMOVE_WEB_CAM_IMAGE_UPLOAD,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function onFormChange(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_ADD_EDIT_FORM_CHANGE,\n            payload: data\n        })\n    };\n}\n\nexport function onResetData(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET_DATA,\n            payload: data\n        })\n    };\n}\n\n\n"]},"metadata":{},"sourceType":"module"}