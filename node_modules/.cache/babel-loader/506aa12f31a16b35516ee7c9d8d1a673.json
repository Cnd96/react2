{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\pages\\\\login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { CButton, CCard, CCardBody, CCardGroup, CCol, CContainer, CImg, CInputGroup, CInputGroupPrepend, CInputGroupText, CRow } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport jwtService from '../../../services/auth/jwtService';\nimport history from '../../../../@history';\nimport { getEncryptedPassword } from \"../../../../utils/PasswordHelper\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as userActions from '../../../auth/store/actions';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport customValidator from \"../../../../utils/ValidationUtil\";\nimport logo from '../../../../assets/img/brand/logo.png';\nimport itechro from '../../../../assets/img/brand/itechro.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.getValidations = () => {\n      return {\n        userName: {\n          required: {},\n          maxLength: {\n            value: 50\n          }\n        },\n        password: {\n          required: {},\n          maxLength: {\n            value: 50\n          }\n        }\n      };\n    };\n\n    this.onCustomValidation = values => {\n      let validate = customValidator(values, this.getValidations());\n      return validate.errors;\n    };\n\n    this.onSubmit = data => {\n      const password = getEncryptedPassword(data.password);\n      this.props.submitLogin({\n        userName: data.userName,\n        password: password\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (jwtService.isUserLoggedIn()) {\n      history.push({\n        pathname: '/'\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'login-page',\n      className: \"display-flex flex-column jc-center ai-center\",\n      children: [/*#__PURE__*/_jsxDEV(CContainer, {\n        children: /*#__PURE__*/_jsxDEV(CRow, {\n          className: \"justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(CCol, {\n            md: \"5\",\n            children: /*#__PURE__*/_jsxDEV(CCardGroup, {\n              children: /*#__PURE__*/_jsxDEV(CCard, {\n                className: \"p-4\",\n                children: /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(CImg, {\n                    style: {\n                      position: 'relative',\n                      left: '-5px',\n                      marginBottom: '10px',\n                      width: '75%'\n                    },\n                    src: logo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-muted\",\n                    children: \"Sign In to your account\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                    initialValues: {\n                      userName: '',\n                      password: ''\n                    },\n                    validateOnChange: true,\n                    validate: values => {\n                      return this.onCustomValidation(values);\n                    },\n                    onSubmit: (values, _ref) => {\n                      let {\n                        setSubmitting\n                      } = _ref;\n                      setTimeout(() => {\n                        this.onSubmit(values);\n                        setSubmitting(false);\n                      }, 400);\n                    },\n                    children: _ref2 => {\n                      let {\n                        isSubmitting\n                      } = _ref2;\n                      return /*#__PURE__*/_jsxDEV(Form, {\n                        className: 'w-full flex flex-col justify-center items-center',\n                        children: [/*#__PURE__*/_jsxDEV(CInputGroup, {\n                          className: \"mb-3\",\n                          children: [/*#__PURE__*/_jsxDEV(CInputGroupPrepend, {\n                            children: /*#__PURE__*/_jsxDEV(CInputGroupText, {\n                              children: /*#__PURE__*/_jsxDEV(CIcon, {\n                                name: \"cil-user\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 114,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 113,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 112,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Field, {\n                            type: \"text\",\n                            name: \"userName\",\n                            placeholder: 'User Name',\n                            className: 'form-control'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 118,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 111,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          name: \"userName\",\n                          render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: 'formik-error-message',\n                            children: msg\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 129,\n                            columnNumber: 74\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 127,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(CInputGroup, {\n                          className: \"mb-4\",\n                          children: [/*#__PURE__*/_jsxDEV(CInputGroupPrepend, {\n                            children: /*#__PURE__*/_jsxDEV(CInputGroupText, {\n                              children: /*#__PURE__*/_jsxDEV(CIcon, {\n                                name: \"cil-lock-locked\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 136,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 135,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 134,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Field, {\n                            type: \"password\",\n                            name: \"password\",\n                            className: 'form-control',\n                            autoComplete: \"current-password\",\n                            placeholder: 'Password',\n                            tyle: 'password'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 140,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 133,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          name: \"password\",\n                          render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: 'formik-error-message',\n                            children: msg\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 152,\n                            columnNumber: 74\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 150,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(CRow, {\n                          children: [/*#__PURE__*/_jsxDEV(CCol, {\n                            xs: \"6\",\n                            children: /*#__PURE__*/_jsxDEV(\"button\", {\n                              type: \"submit\",\n                              className: 'px-4 btn btn-primary',\n                              children: \"Login\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 158,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 157,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                            xs: \"6\",\n                            className: \"text-right\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 164,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 156,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 49\n                      }, this);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'powered-by'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    submitLogin: userActions.submitLogin\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/pages/login/Login.js"],"names":["React","Component","CButton","CCard","CCardBody","CCardGroup","CCol","CContainer","CImg","CInputGroup","CInputGroupPrepend","CInputGroupText","CRow","CIcon","jwtService","history","getEncryptedPassword","bindActionCreators","connect","userActions","ErrorMessage","Field","Form","Formik","customValidator","logo","itechro","Login","getValidations","userName","required","maxLength","value","password","onCustomValidation","values","validate","errors","onSubmit","data","props","submitLogin","componentDidMount","isUserLoggedIn","push","pathname","render","position","left","marginBottom","width","setSubmitting","setTimeout","isSubmitting","msg","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardGroup,\n    CCol,\n    CContainer,\n    CImg,\n    CInputGroup,\n    CInputGroupPrepend,\n    CInputGroupText,\n    CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport jwtService from '../../../services/auth/jwtService';\nimport history from '../../../../@history';\nimport {getEncryptedPassword} from \"../../../../utils/PasswordHelper\";\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\nimport * as userActions from '../../../auth/store/actions';\nimport {ErrorMessage, Field, Form, Formik} from 'formik';\nimport customValidator from \"../../../../utils/ValidationUtil\";\nimport logo from '../../../../assets/img/brand/logo.png';\nimport itechro from '../../../../assets/img/brand/itechro.png';\n\nclass Login extends Component {\n\n    componentDidMount() {\n        if (jwtService.isUserLoggedIn()) {\n            history.push({\n                pathname: '/'\n            });\n        }\n    }\n\n    getValidations = () => {\n        return {\n            userName: {\n                required: {},\n                maxLength: {value: 50}\n            },\n\n            password: {\n                required: {},\n                maxLength: {value: 50}\n            },\n        };\n    };\n\n    onCustomValidation = (values) => {\n        let validate = customValidator(values, this.getValidations());\n        return validate.errors;\n    };\n\n    onSubmit = (data) => {\n\n        const password = getEncryptedPassword(data.password);\n\n        this.props.submitLogin({\n            userName: data.userName,\n            password: password\n        });\n    };\n\n\n    render() {\n        return (\n            <div\n                id={'login-page'}\n                className=\"display-flex flex-column jc-center ai-center\">\n                <CContainer>\n                    <CRow className=\"justify-content-center\">\n                        <CCol md=\"5\">\n                            <CCardGroup>\n                                <CCard className=\"p-4\">\n                                    <CCardBody>\n                                        {/*<CForm>*/}\n\n                                        <CImg\n                                            style={{\n                                                position: 'relative',\n                                                left: '-5px',\n                                                marginBottom: '10px',\n                                                width:'75%'\n                                            }}\n                                            src={logo}\n\n                                        />\n\n                                        <p className=\"text-muted\">Sign In to your account</p>\n\n                                        <Formik\n                                            initialValues={{userName: '', password: ''}}\n                                            validateOnChange={true}\n                                            validate={values => {\n                                                return this.onCustomValidation(values);\n                                            }}\n                                            onSubmit={(values, {setSubmitting}) => {\n                                                setTimeout(() => {\n                                                    this.onSubmit(values);\n                                                    setSubmitting(false);\n                                                }, 400);\n                                            }}\n                                        >\n                                            {({isSubmitting}) => (\n                                                <Form\n                                                    className={'w-full flex flex-col justify-center items-center'}>\n\n                                                    <CInputGroup className=\"mb-3\">\n                                                        <CInputGroupPrepend>\n                                                            <CInputGroupText>\n                                                                <CIcon name=\"cil-user\"/>\n                                                            </CInputGroupText>\n                                                        </CInputGroupPrepend>\n\n                                                        <Field\n                                                            type=\"text\"\n                                                            name=\"userName\"\n                                                            placeholder={'User Name'}\n                                                            className={'form-control'}\n                                                        />\n\n                                                    </CInputGroup>\n\n                                                    <ErrorMessage\n                                                        name=\"userName\"\n                                                        render={(msg) => <div\n                                                            className={'formik-error-message'}>{msg}</div>}\n                                                    />\n\n                                                    <CInputGroup className=\"mb-4\">\n                                                        <CInputGroupPrepend>\n                                                            <CInputGroupText>\n                                                                <CIcon name=\"cil-lock-locked\"/>\n                                                            </CInputGroupText>\n                                                        </CInputGroupPrepend>\n\n                                                        <Field\n                                                            type=\"password\"\n                                                            name=\"password\"\n                                                            className={'form-control'}\n                                                            autoComplete=\"current-password\"\n                                                            placeholder={'Password'}\n                                                            tyle={'password'}\n                                                        />\n                                                    </CInputGroup>\n\n                                                    <ErrorMessage\n                                                        name=\"password\"\n                                                        render={(msg) => <div\n                                                            className={'formik-error-message'}>{msg}</div>}\n                                                    />\n\n                                                    <CRow>\n                                                        <CCol xs=\"6\">\n                                                            <button\n                                                                type='submit'\n                                                                className={'px-4 btn btn-primary'}>\n                                                                Login\n                                                            </button>\n                                                        </CCol>\n                                                        <CCol xs=\"6\" className=\"text-right\">\n                                                            {/*<CButton color=\"link\" className=\"px-0\">Forgot*/}\n                                                            {/*    password?</CButton>*/}\n                                                        </CCol>\n                                                    </CRow>\n\n                                                </Form>\n                                            )}\n                                        </Formik>\n\n\n                                        {/*</CForm>*/}\n                                    </CCardBody>\n                                </CCard>\n                            </CCardGroup>\n                        </CCol>\n                    </CRow>\n                </CContainer>\n\n                <span className={'powered-by'}>\n\n                    {/*Powered by*/}\n                    {/*<a href=\"https://itechro.com/\" target=\"_blank\"> <CImg*/}\n                    {/*    src={itechro}*/}\n                    {/*/></a>*/}\n                </span>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n            submitLogin: userActions.submitLogin,\n        },\n        dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}