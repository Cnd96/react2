{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\config\\\\medicine\\\\add-edit\\\\MedicineAddEditApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport MedicineAddEditBase from \"./components/MedicineAddEditBase\";\nimport withReducer from \"../../../../../store/withReducer\";\nimport reducer from \"../store/reducers\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Actions from \"../store/action/index\";\nimport { getStorageItem, removeStorageItem } from \"../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../utils/Constants\";\nimport AsyncMulti from \"./components/test\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MedicineAddEditApp = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = useSelector(_ref => {\n    let {\n      medicine\n    } = _ref;\n    return medicine.medicineAddEdit;\n  });\n  useEffect(() => {\n    let medicineID = getStorageItem(Constants.STORAGE.SELECTED_MEDICINE_ID);\n\n    if (medicineID) {\n      dispatch(Actions.getMedicineDTOByID(medicineID));\n    }\n\n    return () => {\n      dispatch(Actions.reset());\n      removeStorageItem(Constants.STORAGE.SELECTED_MEDICINE_ID);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MedicineAddEditBase, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MedicineAddEditApp, \"8ZSi0OBRHkt2uIn6fVrA7mYaxeA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MedicineAddEditApp;\nexport default withReducer('medicine', reducer)(MedicineAddEditApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicineAddEditApp\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/medicine/add-edit/MedicineAddEditApp.js"],"names":["React","useEffect","MedicineAddEditBase","withReducer","reducer","useDispatch","useSelector","Actions","getStorageItem","removeStorageItem","Constants","AsyncMulti","MedicineAddEditApp","dispatch","data","medicine","medicineAddEdit","medicineID","STORAGE","SELECTED_MEDICINE_ID","getMedicineDTOByID","reset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,sCAAhD;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAE7B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,IAAI,GAAGR,WAAW,CAAC;AAAA,QAAC;AAACS,MAAAA;AAAD,KAAD;AAAA,WAAgBA,QAAQ,CAACC,eAAzB;AAAA,GAAD,CAAxB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,UAAU,GAAGT,cAAc,CAACE,SAAS,CAACQ,OAAV,CAAkBC,oBAAnB,CAA/B;;AACA,QAAIF,UAAJ,EAAgB;AACZJ,MAAAA,QAAQ,CAACN,OAAO,CAACa,kBAAR,CAA2BH,UAA3B,CAAD,CAAR;AACH;;AAED,WAAO,MAAM;AACTJ,MAAAA,QAAQ,CAACN,OAAO,CAACc,KAAR,EAAD,CAAR;AACAZ,MAAAA,iBAAiB,CAACC,SAAS,CAACQ,OAAV,CAAkBC,oBAAnB,CAAjB;AACH,KAHD;AAIH,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAA,2BACI,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAvBD;;GAAMP,kB;UAEeP,W,EACJC,W;;;KAHXM,kB;AAyBN,eAAeT,WAAW,CAAC,UAAD,EAAaC,OAAb,CAAX,CAAiCQ,kBAAjC,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport MedicineAddEditBase from \"./components/MedicineAddEditBase\";\nimport withReducer from \"../../../../../store/withReducer\";\nimport reducer from \"../store/reducers\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as Actions from \"../store/action/index\";\nimport {getStorageItem, removeStorageItem} from \"../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../utils/Constants\";\nimport AsyncMulti from \"./components/test\";\n\nconst MedicineAddEditApp = () => {\n\n    const dispatch = useDispatch();\n    const data = useSelector(({medicine}) => medicine.medicineAddEdit);\n\n    useEffect(() => {\n        let medicineID = getStorageItem(Constants.STORAGE.SELECTED_MEDICINE_ID);\n        if (medicineID) {\n            dispatch(Actions.getMedicineDTOByID(medicineID));\n        }\n\n        return () => {\n            dispatch(Actions.reset());\n            removeStorageItem(Constants.STORAGE.SELECTED_MEDICINE_ID);\n        };\n    }, []);\n\n    return (\n        <div>\n            <MedicineAddEditBase/>\n            {/*<AsyncMulti/>*/}\n        </div>\n    );\n};\n\nexport default withReducer('medicine', reducer)(MedicineAddEditApp);"]},"metadata":{},"sourceType":"module"}