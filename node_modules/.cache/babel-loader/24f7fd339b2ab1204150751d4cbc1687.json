{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\patientComplain\\\\components\\\\addEdit\\\\PatientComplainAddEditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Constants from \"../../../../../../../../../../utils/Constants\";\nimport { Field, Form, Formik } from \"formik\";\nimport { CButton, CCol, CFormGroup, CLabel, CRow, CTooltip } from \"@coreui/react\";\nimport { getConstantValueForSearch, getInputFieldClassNames } from \"../../../../../../../../../../utils/FormUtils\";\nimport NextPrevButtonGroup from \"../../../../../../../../common/NextPrevButtonGroup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Action from \"../../store/actions/index\";\nimport { getStorageItem, setStorageItem } from \"../../../../../../../../../../utils/StorageUtils\";\nimport customValidator from \"../../../../../../../../../../utils/ValidationUtil\";\nimport withReducer from \"../../../../../../../../../store/withReducer\";\nimport reducer from \"../../store/reducer\";\nimport { getPagedDataFromState, trimData } from \"../../../../../../../../../../utils/DataExtractHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getValidations = () => {\n  return {\n    status: {\n      required: {\n        message: 'Required'\n      }\n    },\n    patientComplain: {\n      required: {\n        message: 'Required'\n      }\n    }\n  };\n};\n\nconst initValues = {\n  patientComplainID: '',\n  patientID: '',\n  patientComplain: '',\n  status: Constants.STATUS_CONST.ACT\n};\n\nconst generateSaveObject = data => {\n  let patientComplain = data.patientComplain;\n  let patientID = getStorageItem(Constants.STORAGE.PATIENT_ID);\n  let saveObj = Object.assign({}, { ...patientComplain\n  }, data.formData.values, {\n    status: Constants.STATUS_CONST.ACT\n  }, {\n    patientComplainID: patientComplain.patientComplainID\n  }, {\n    patientID\n  });\n  return trimData(saveObj);\n};\n\nconst PatientComplainAddEditForm = _ref => {\n  _s();\n\n  let {\n    setPageIndex,\n    nextPageIndex,\n    prevPageIndex\n  } = _ref;\n  const dispatch = useDispatch();\n  const data = useSelector(_ref2 => {\n    let {\n      patientComplain\n    } = _ref2;\n    return patientComplain.patientComplainAddEdit;\n  });\n  const searchReducerData = useSelector(_ref3 => {\n    let {\n      patientComplain\n    } = _ref3;\n    return patientComplain.patientComplainSearch;\n  });\n  const [patientComplain, setPatientComplain] = useState(initValues);\n  useEffect(() => {\n    let patientComplain = data.patientComplain;\n    let initData = {\n      patientComplainID: patientComplain.patientComplainID ? patientComplain.patientComplainID : initValues.patientComplainID,\n      patientID: patientComplain.patientID ? patientComplain.patientID : initValues.patientID,\n      patientComplain: patientComplain.patientComplain ? patientComplain.patientComplain : initValues.patientComplain,\n      status: patientComplain.status ? patientComplain.status : initValues.status\n    };\n    setPatientComplain(initData);\n  }, [dispatch, data.patientComplain]);\n  useEffect(() => {\n    let patientComplain = data.patientComplain;\n    let initData = {\n      patientComplainID: patientComplain.patientComplainID ? patientComplain.patientComplainID : initValues.patientComplainID,\n      patientID: patientComplain.patientID ? patientComplain.patientID : initValues.patientID,\n      patientComplain: patientComplain.patientComplain ? patientComplain.patientComplain : initValues.patientComplain,\n      status: patientComplain.status ? patientComplain.status : initValues.status\n    };\n    onCustomValidation(initData);\n  }, [data.patientComplain]);\n  useEffect(() => {\n    return () => {\n      dispatch(Action.onResetForm());\n    };\n  }, []);\n\n  const saveFunction = () => {\n    let saveObject = generateSaveObject(data);\n\n    if (saveObject.patientID) {\n      dispatch(Action.saveOrUpdatePatientComplain(saveObject)).then(response => {\n        setStorageItem(Constants.STORAGE.PATIENT_COMPLAIN_ID, response.payload.patientComplainID);\n        dispatch(Action.onResetForm());\n      });\n    }\n\n    setPageIndex(nextPageIndex);\n  };\n\n  const update = () => {\n    let saveObject = generateSaveObject(data);\n    dispatch(Action.saveOrUpdatePatientComplainWithMessage(saveObject)).then(res => {\n      onSearch();\n    });\n  };\n\n  let onSearch = () => {\n    let pageInfo = searchReducerData.pageInfo;\n    let formData = searchReducerData.searchData;\n    let pageData = getPagedDataFromState(pageInfo);\n    let searchData = { ...pageData,\n      ...formData,\n      patientID: getStorageItem(Constants.STORAGE.PATIENT_ID),\n      status: getConstantValueForSearch(formData.status, Constants.STATUS_CONST.ACT)\n    };\n    dispatch(Action.getPagedPatientComplains(searchData));\n  };\n\n  const reset = () => {\n    dispatch(Action.onResetForm());\n  };\n\n  const onCustomValidation = values => {\n    let validate = customValidator(values, getValidations());\n    dispatch(Action.onFormChange({\n      isValid: validate.isValid,\n      values: values\n    }));\n    return validate.errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NextPrevButtonGroup, {\n      setPageIndex: setPageIndex,\n      prevPageIndex: prevPageIndex,\n      saveFunction: saveFunction,\n      isValid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      enableReinitialize: true,\n      initialValues: patientComplain,\n      onSubmit: (values, _ref4) => {\n        let {\n          setSubmitting\n        } = _ref4;\n        setTimeout(() => {\n          setSubmitting(false);\n        }, 200);\n      },\n      validateOnChange: true,\n      validate: values => {\n        return onCustomValidation(values);\n      },\n      children: _ref5 => {\n        let {\n          errors,\n          touched\n        } = _ref5;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"12\",\n              children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                  htmlFor: \"patientComplain\",\n                  children: [\"Patient Complain\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"margin-left-10\",\n                    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                      children: [data && data.patientComplain && data.patientComplain.patientComplainID && /*#__PURE__*/_jsxDEV(CTooltip, {\n                        content: 'Update Complain',\n                        placement: 'left-start',\n                        children: /*#__PURE__*/_jsxDEV(CButton, {\n                          disabled: !data.formData.isValid,\n                          type: \"button\",\n                          onClick: e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            update();\n                          },\n                          color: \"success\",\n                          className: \" mr-2\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fa fa-floppy-o\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 180,\n                            columnNumber: 59\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 169,\n                          columnNumber: 55\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 51\n                      }, this), /*#__PURE__*/_jsxDEV(CTooltip, {\n                        content: 'Reset',\n                        placement: 'left-start',\n                        children: /*#__PURE__*/_jsxDEV(CButton, {\n                          type: \"button\",\n                          onClick: e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            reset();\n                          },\n                          color: \"warning\",\n                          className: \" mr-2\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fa fa-refresh\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 199,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 53\n                      }, this), data && data.patientComplain && !data.patientComplain.patientComplainID && /*#__PURE__*/_jsxDEV(CTooltip, {\n                        content: 'Save Complain',\n                        placement: 'left-start',\n                        children: /*#__PURE__*/_jsxDEV(CButton, {\n                          disabled: !data.formData.isValid,\n                          type: \"button\",\n                          onClick: e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            update();\n                          },\n                          color: \"info\",\n                          className: \" mr-2\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fa fa-floppy-o\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 220,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  rows: \"5\",\n                  cols: \"120\",\n                  name: \"patientComplain\",\n                  placeholder: 'Complain',\n                  className: getInputFieldClassNames(touched.indication, errors.indication),\n                  as: \"textarea\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PatientComplainAddEditForm, \"w6aRV5fDENLZjtQbGPIPyZB9qms=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PatientComplainAddEditForm;\nexport default withReducer('patientComplain', reducer)(PatientComplainAddEditForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientComplainAddEditForm\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/patientComplain/components/addEdit/PatientComplainAddEditForm.js"],"names":["React","useEffect","useState","Constants","Field","Form","Formik","CButton","CCol","CFormGroup","CLabel","CRow","CTooltip","getConstantValueForSearch","getInputFieldClassNames","NextPrevButtonGroup","useDispatch","useSelector","Action","getStorageItem","setStorageItem","customValidator","withReducer","reducer","getPagedDataFromState","trimData","getValidations","status","required","message","patientComplain","initValues","patientComplainID","patientID","STATUS_CONST","ACT","generateSaveObject","data","STORAGE","PATIENT_ID","saveObj","Object","assign","formData","values","PatientComplainAddEditForm","setPageIndex","nextPageIndex","prevPageIndex","dispatch","patientComplainAddEdit","searchReducerData","patientComplainSearch","setPatientComplain","initData","onCustomValidation","onResetForm","saveFunction","saveObject","saveOrUpdatePatientComplain","then","response","PATIENT_COMPLAIN_ID","payload","update","saveOrUpdatePatientComplainWithMessage","res","onSearch","pageInfo","searchData","pageData","getPagedPatientComplains","reset","validate","onFormChange","isValid","errors","setSubmitting","setTimeout","touched","e","preventDefault","stopPropagation","indication"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Constants from \"../../../../../../../../../../utils/Constants\";\nimport {Field, Form, Formik} from \"formik\";\nimport {CButton, CCol, CFormGroup, CLabel, CRow, CTooltip} from \"@coreui/react\";\nimport {getConstantValueForSearch, getInputFieldClassNames} from \"../../../../../../../../../../utils/FormUtils\";\nimport NextPrevButtonGroup from \"../../../../../../../../common/NextPrevButtonGroup\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as Action from \"../../store/actions/index\";\nimport {getStorageItem, setStorageItem} from \"../../../../../../../../../../utils/StorageUtils\";\nimport customValidator from \"../../../../../../../../../../utils/ValidationUtil\";\nimport withReducer from \"../../../../../../../../../store/withReducer\";\nimport reducer from \"../../store/reducer\";\nimport {getPagedDataFromState, trimData} from \"../../../../../../../../../../utils/DataExtractHelper\";\n\nconst getValidations = () => {\n    return {\n        status: {\n            required: {message: 'Required'},\n        },\n        patientComplain: {\n            required: {message: 'Required'},\n        }\n    };\n};\n\nconst initValues = {\n    patientComplainID: '',\n    patientID: '',\n    patientComplain: '',\n    status: Constants.STATUS_CONST.ACT\n};\n\nconst generateSaveObject = (data) => {\n    let patientComplain = data.patientComplain;\n    let patientID = getStorageItem(Constants.STORAGE.PATIENT_ID);\n    let saveObj = Object.assign({},\n        {...patientComplain},\n        data.formData.values,\n        {status: Constants.STATUS_CONST.ACT},\n        {patientComplainID: patientComplain.patientComplainID},\n        {patientID});\n\n    return trimData(saveObj);\n};\n\nconst PatientComplainAddEditForm = ({setPageIndex, nextPageIndex, prevPageIndex}) => {\n    const dispatch = useDispatch();\n    const data = useSelector(({patientComplain}) => patientComplain.patientComplainAddEdit);\n    const searchReducerData = useSelector(({patientComplain}) => patientComplain.patientComplainSearch);\n    const [patientComplain, setPatientComplain] = useState(initValues);\n\n    useEffect(() => {\n        let patientComplain = data.patientComplain;\n        let initData = {\n            patientComplainID: patientComplain.patientComplainID ? patientComplain.patientComplainID : initValues.patientComplainID,\n            patientID: patientComplain.patientID ? patientComplain.patientID : initValues.patientID,\n            patientComplain: patientComplain.patientComplain ? patientComplain.patientComplain : initValues.patientComplain,\n            status: patientComplain.status ? patientComplain.status : initValues.status\n        };\n        setPatientComplain(initData);\n    }, [dispatch, data.patientComplain]);\n\n    useEffect(() => {\n        let patientComplain = data.patientComplain;\n        let initData = {\n            patientComplainID: patientComplain.patientComplainID ? patientComplain.patientComplainID : initValues.patientComplainID,\n            patientID: patientComplain.patientID ? patientComplain.patientID : initValues.patientID,\n            patientComplain: patientComplain.patientComplain ? patientComplain.patientComplain : initValues.patientComplain,\n            status: patientComplain.status ? patientComplain.status : initValues.status\n        };\n        onCustomValidation(initData);\n    }, [data.patientComplain]);\n\n    useEffect(() => {\n        return (\n            () => {\n                dispatch(Action.onResetForm())\n            }\n        );\n    }, []);\n\n\n    const saveFunction = () => {\n        let saveObject = generateSaveObject(data);\n        if (saveObject.patientID) {\n            dispatch(Action.saveOrUpdatePatientComplain(saveObject)).then(response => {\n                setStorageItem(Constants.STORAGE.PATIENT_COMPLAIN_ID, response.payload.patientComplainID);\n                dispatch(Action.onResetForm())\n            })\n        }\n        setPageIndex(nextPageIndex);\n\n    };\n\n    const update = () => {\n        let saveObject = generateSaveObject(data);\n        dispatch(Action.saveOrUpdatePatientComplainWithMessage(saveObject)).then(res => {\n            onSearch();\n        });\n    };\n\n    let onSearch = () => {\n        let pageInfo = searchReducerData.pageInfo;\n        let formData = searchReducerData.searchData;\n        let pageData = getPagedDataFromState(pageInfo);\n        let searchData = {\n            ...pageData,\n            ...formData,\n            patientID: getStorageItem(Constants.STORAGE.PATIENT_ID),\n            status: getConstantValueForSearch(formData.status, Constants.STATUS_CONST.ACT)\n        };\n        dispatch(Action.getPagedPatientComplains(searchData));\n    };\n\n    const reset = () => {\n        dispatch(Action.onResetForm())\n    };\n\n    const onCustomValidation = (values) => {\n\n        let validate = customValidator(values, getValidations());\n        dispatch(Action.onFormChange(\n            {\n                isValid: validate.isValid,\n                values: values\n            }));\n        return validate.errors;\n    };\n\n    return (\n        <>\n            <NextPrevButtonGroup\n                setPageIndex={setPageIndex}\n                prevPageIndex={prevPageIndex}\n                saveFunction={saveFunction}\n                isValid={true}/>\n\n            <Formik\n                enableReinitialize={true}\n                initialValues={patientComplain}\n                onSubmit={(values, {setSubmitting}) => {\n                    setTimeout(() => {\n                        setSubmitting(false)\n                    }, 200)\n                }}\n                validateOnChange={true}\n                validate={(values) => {\n                    return onCustomValidation(values);\n                }}\n            >\n                {({errors, touched}) => {\n                    return (\n                        <Form>\n                            <CRow>\n                                <CCol sm=\"12\">\n                                    <CFormGroup>\n                                        <CLabel\n                                            htmlFor=\"patientComplain\"\n                                        >\n                                            Patient Complain\n                                            <span className=\"margin-left-10\">\n                                                <React.Fragment>\n                                              {\n                                                  data && data.patientComplain && data.patientComplain.patientComplainID &&\n                                                  <CTooltip\n                                                      content={'Update Complain'}\n                                                      placement={'left-start'}\n                                                  >\n                                                      <CButton\n                                                          disabled={!data.formData.isValid}\n                                                          type=\"button\"\n                                                          onClick={(e) => {\n                                                              e.preventDefault();\n                                                              e.stopPropagation();\n                                                              update()\n                                                          }}\n                                                          color=\"success\"\n                                                          className=\" mr-2\"\n                                                      >\n                                                          <i className='fa fa-floppy-o'></i>\n                                                      </CButton>\n                                                  </CTooltip>\n                                              }\n\n                                                    <CTooltip\n                                                        content={'Reset'}\n                                                        placement={'left-start'}\n                                                    >\n                                                        <CButton\n                                                            type=\"button\"\n                                                            onClick={(e) => {\n                                                                e.preventDefault();\n                                                                e.stopPropagation();\n                                                                reset()\n                                                            }}\n                                                            color=\"warning\"\n                                                            className=\" mr-2\"\n                                                        >\n                                                            <i className='fa fa-refresh'></i>\n                                                        </CButton>\n                                                    </CTooltip>\n\n                                                    {\n                                                        data && data.patientComplain && !data.patientComplain.patientComplainID &&\n                                                        <CTooltip\n                                                            content={'Save Complain'}\n                                                            placement={'left-start'}\n                                                        >\n                                                            <CButton\n                                                                disabled={!data.formData.isValid}\n                                                                type=\"button\"\n                                                                onClick={(e) => {\n                                                                    e.preventDefault();\n                                                                    e.stopPropagation();\n                                                                    update()\n                                                                }}\n                                                                color=\"info\"\n                                                                className=\" mr-2\"\n                                                            >\n                                                                <i className='fa fa-floppy-o'></i>\n                                                            </CButton>\n                                                        </CTooltip>\n                                                    }\n                                                </React.Fragment>\n                                            </span>\n                                        </CLabel>\n                                        <Field\n                                            rows=\"5\" cols=\"120\"\n                                            name=\"patientComplain\"\n                                            placeholder={'Complain'}\n                                            className={getInputFieldClassNames(touched.indication, errors.indication)}\n                                            as='textarea'\n                                        >\n                                        </Field>\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                        </Form>\n                    );\n                }}\n            </Formik>\n        </>\n    );\n};\n\n\nexport default withReducer('patientComplain', reducer)(PatientComplainAddEditForm);\n"]},"metadata":{},"sourceType":"module"}