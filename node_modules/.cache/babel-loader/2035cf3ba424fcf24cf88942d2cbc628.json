{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\selectFamilyHistory\\\\components\\\\Problem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CustomCheckBox from \"../../../../../../../common/CustomCheckBox\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Action from \"../store/actions/family.type.add.edit.action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Problem = _ref => {\n  _s();\n\n  let {\n    medicalDisease,\n    familyTypeID\n  } = _ref;\n  const dispatch = useDispatch();\n  const familyTypeData = useSelector(_ref2 => {\n    let {\n      familyType\n    } = _ref2;\n    return familyType.familyTypeAddEdit;\n  });\n  const [index, setIndex] = useState(1);\n  useEffect(() => {\n    let idArray = familyTypeData.selectedMedicalDiseasesMap[familyTypeID] ? familyTypeData.selectedMedicalDiseasesMap[familyTypeID] : [];\n    let index = idArray.findIndex(id => {\n      return id == medicalDisease.medicalDiseaseID;\n    });\n    setIndex(index);\n  }, [dispatch, familyTypeData.selectedMedicalDiseasesMap]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'privilege-checkbox',\n    children: /*#__PURE__*/_jsxDEV(CustomCheckBox, {\n      id: `${medicalDisease.medicalDiseaseID}${familyTypeID}`,\n      name: `${medicalDisease.medicalDiseaseID}${familyTypeID}`,\n      value: medicalDisease,\n      label: medicalDisease.diseaseName,\n      checked: index !== -1,\n      onCheckChange: (e, data) => {\n        let checked = e.target.checked;\n\n        if (checked) {\n          dispatch(Action.onAddMedicalDiseaseID({\n            medicalDiseaseID: medicalDisease.medicalDiseaseID,\n            familyTypeID: familyTypeID\n          }));\n        } else {\n          dispatch(Action.onRemoveMedicalDiseaseID({\n            medicalDiseaseID: medicalDisease.medicalDiseaseID,\n            familyTypeID: familyTypeID\n          }));\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Problem, \"z0Jn+jtsgu0bxPn0iwgDabxN1lE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Problem;\nexport default Problem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/selectFamilyHistory/components/Problem.js"],"names":["React","useEffect","useState","CustomCheckBox","useDispatch","useSelector","Action","Problem","medicalDisease","familyTypeID","dispatch","familyTypeData","familyType","familyTypeAddEdit","index","setIndex","idArray","selectedMedicalDiseasesMap","findIndex","id","medicalDiseaseID","diseaseName","e","data","checked","target","onAddMedicalDiseaseID","onRemoveMedicalDiseaseID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,KAAKC,MAAZ,MAAwB,8CAAxB;;;AAEA,MAAMC,OAAO,GAAG,QAAoC;AAAA;;AAAA,MAAnC;AAACC,IAAAA,cAAD;AAAiBC,IAAAA;AAAjB,GAAmC;AAEhD,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,cAAc,GAAGN,WAAW,CAAC;AAAA,QAAC;AAACO,MAAAA;AAAD,KAAD;AAAA,WAAkBA,UAAU,CAACC,iBAA7B;AAAA,GAAD,CAAlC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,OAAO,GAAGL,cAAc,CAACM,0BAAf,CAA0CR,YAA1C,IAA0DE,cAAc,CAACM,0BAAf,CAA0CR,YAA1C,CAA1D,GAAoH,EAAlI;AACA,QAAIK,KAAK,GAAGE,OAAO,CAACE,SAAR,CAAmBC,EAAD,IAAQ;AAClC,aAAOA,EAAE,IAAIX,cAAc,CAACY,gBAA5B;AACH,KAFW,CAAZ;AAGAL,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GANQ,EAMN,CAACJ,QAAD,EAAWC,cAAc,CAACM,0BAA1B,CANM,CAAT;AAQA,sBAEI;AAAK,IAAA,SAAS,EAAE,oBAAhB;AAAA,2BACI,QAAC,cAAD;AACI,MAAA,EAAE,EAAG,GAAET,cAAc,CAACY,gBAAiB,GAAEX,YAAa,EAD1D;AAEI,MAAA,IAAI,EAAG,GAAED,cAAc,CAACY,gBAAiB,GAAEX,YAAa,EAF5D;AAGI,MAAA,KAAK,EAAED,cAHX;AAII,MAAA,KAAK,EAAEA,cAAc,CAACa,WAJ1B;AAKI,MAAA,OAAO,EAAEP,KAAK,KAAK,CAAC,CALxB;AAMI,MAAA,aAAa,EAAE,CAACQ,CAAD,EAAIC,IAAJ,KAAa;AACxB,YAAIC,OAAO,GAAGF,CAAC,CAACG,MAAF,CAASD,OAAvB;;AACA,YAAIA,OAAJ,EAAa;AACTd,UAAAA,QAAQ,CAACJ,MAAM,CAACoB,qBAAP,CAA6B;AAClCN,YAAAA,gBAAgB,EAAEZ,cAAc,CAACY,gBADC;AAElCX,YAAAA,YAAY,EAAEA;AAFoB,WAA7B,CAAD,CAAR;AAIH,SALD,MAKO;AACHC,UAAAA,QAAQ,CAACJ,MAAM,CAACqB,wBAAP,CAAgC;AACrCP,YAAAA,gBAAgB,EAAEZ,cAAc,CAACY,gBADI;AAErCX,YAAAA,YAAY,EAAEA;AAFuB,WAAhC,CAAD,CAAR;AAIH;AACJ;AAnBL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AA0BH,CAxCD;;GAAMF,O;UAEeH,W,EACMC,W;;;KAHrBE,O;AAyCN,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport CustomCheckBox from \"../../../../../../../common/CustomCheckBox\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as Action from \"../store/actions/family.type.add.edit.action\";\n\nconst Problem = ({medicalDisease, familyTypeID}) => {\n\n    const dispatch = useDispatch();\n    const familyTypeData = useSelector(({familyType}) => familyType.familyTypeAddEdit);\n    const [index, setIndex] = useState(1);\n\n    useEffect(() => {\n        let idArray = familyTypeData.selectedMedicalDiseasesMap[familyTypeID] ? familyTypeData.selectedMedicalDiseasesMap[familyTypeID] : [];\n        let index = idArray.findIndex((id) => {\n            return id == medicalDisease.medicalDiseaseID\n        });\n        setIndex(index);\n    }, [dispatch, familyTypeData.selectedMedicalDiseasesMap]);\n\n    return (\n\n        <div className={'privilege-checkbox'}>\n            <CustomCheckBox\n                id={`${medicalDisease.medicalDiseaseID}${familyTypeID}`}\n                name={`${medicalDisease.medicalDiseaseID}${familyTypeID}`}\n                value={medicalDisease}\n                label={medicalDisease.diseaseName}\n                checked={index !== -1}\n                onCheckChange={(e, data) => {\n                    let checked = e.target.checked;\n                    if (checked) {\n                        dispatch(Action.onAddMedicalDiseaseID({\n                            medicalDiseaseID: medicalDisease.medicalDiseaseID,\n                            familyTypeID: familyTypeID\n                        }));\n                    } else {\n                        dispatch(Action.onRemoveMedicalDiseaseID({\n                            medicalDiseaseID: medicalDisease.medicalDiseaseID,\n                            familyTypeID: familyTypeID\n                        }));\n                    }\n                }}\n            />\n        </div>\n    );\n};\nexport default Problem;"]},"metadata":{},"sourceType":"module"}