{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\containers\\\\TheSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CCreateElement, CSidebar, CSidebarBrand, CSidebarMinimizer, CSidebarNav, CSidebarNavDivider, CSidebarNavDropdown, CSidebarNavItem, CSidebarNavTitle } from '@coreui/react'; // sidebar nav config\n\nimport navigation from '../config/_nav';\nimport * as Actions from \"../store/actions/notebook\";\nimport Constants from \"../../utils/Constants\";\nimport { hasAnyUserPrivilege } from \"../../utils/PrivilegeUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TheSidebar = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const show = useSelector(state => state.notebook.settings.sidebarShow);\n  const minimize = useSelector(state => state.notebook.settings.minimize);\n\n  const getFilteredNavigation = () => {\n    let filtered = [];\n    navigation.forEach(n => {\n      let hasAnyPrivilege = hasAnyUserPrivilege(n.privileges);\n\n      if (hasAnyPrivilege) {\n        filtered.push(n);\n      }\n    });\n    return filtered;\n  };\n\n  return /*#__PURE__*/_jsxDEV(CSidebar, {\n    minimize: minimize,\n    show: show,\n    onShowChange: val => {\n      console.log(\"Tha Value\", val);\n      dispatch(Actions.setShowSidebar(val));\n    },\n    children: [/*#__PURE__*/_jsxDEV(CSidebarBrand, {\n      className: \"d-md-down-none\",\n      to: Constants.PAGES.adminDashboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CSidebarNav, {\n      children: /*#__PURE__*/_jsxDEV(CCreateElement, {\n        items: getFilteredNavigation(),\n        components: {\n          CSidebarNavDivider,\n          CSidebarNavDropdown,\n          CSidebarNavItem,\n          CSidebarNavTitle\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CSidebarMinimizer, {\n      className: \"c-d-md-down-none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TheSidebar, \"gL9JdItwqSoNnpwWvjFZWDJzEkI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = TheSidebar;\nexport default _c2 = /*#__PURE__*/React.memo(TheSidebar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TheSidebar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/containers/TheSidebar.js"],"names":["React","useDispatch","useSelector","CCreateElement","CSidebar","CSidebarBrand","CSidebarMinimizer","CSidebarNav","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","navigation","Actions","Constants","hasAnyUserPrivilege","TheSidebar","dispatch","show","state","notebook","settings","sidebarShow","minimize","getFilteredNavigation","filtered","forEach","n","hasAnyPrivilege","privileges","push","val","console","log","setShowSidebar","PAGES","adminDashboard","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SACIC,cADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,iBAJJ,EAKIC,WALJ,EAMIC,kBANJ,EAOIC,mBAPJ,EAQIC,eARJ,EASIC,gBATJ,QAUO,eAVP,C,CAWA;;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAAQC,mBAAR,QAAkC,4BAAlC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,IAAI,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,QAAf,CAAwBC,WAAlC,CAAxB;AACA,QAAMC,QAAQ,GAAGrB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,QAAf,CAAwBE,QAAlC,CAA5B;;AACA,QAAMC,qBAAqB,GAAG,MAAM;AAChC,QAAIC,QAAQ,GAAG,EAAf;AAEAb,IAAAA,UAAU,CAACc,OAAX,CAAoBC,CAAD,IAAO;AACtB,UAAIC,eAAe,GAAGb,mBAAmB,CAACY,CAAC,CAACE,UAAH,CAAzC;;AACA,UAAID,eAAJ,EAAqB;AACjBH,QAAAA,QAAQ,CAACK,IAAT,CAAcH,CAAd;AACH;AACJ,KALD;AAMA,WAAOF,QAAP;AACH,GAVD;;AAYA,sBACI,QAAC,QAAD;AACI,IAAA,QAAQ,EAAEF,QADd;AAEI,IAAA,IAAI,EAAEL,IAFV;AAGI,IAAA,YAAY,EAAGa,GAAD,IAAS;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB;AACAd,MAAAA,QAAQ,CAACJ,OAAO,CAACqB,cAAR,CAAuBH,GAAvB,CAAD,CAAR;AACH,KANL;AAAA,4BAQI,QAAC,aAAD;AAAe,MAAA,SAAS,EAAC,gBAAzB;AAA0C,MAAA,EAAE,EAAEjB,SAAS,CAACqB,KAAV,CAAgBC;AAA9D;AAAA;AAAA;AAAA;AAAA,YARJ,eAsBI,QAAC,WAAD;AAAA,6BAEI,QAAC,cAAD;AACI,QAAA,KAAK,EAAEZ,qBAAqB,EADhC;AAEI,QAAA,UAAU,EAAE;AACRhB,UAAAA,kBADQ;AAERC,UAAAA,mBAFQ;AAGRC,UAAAA,eAHQ;AAIRC,UAAAA;AAJQ;AAFhB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAtBJ,eAkCI,QAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CAtDD;;GAAMK,U;UACef,W,EACJC,W,EACIA,W;;;KAHfc,U;AAwDN,kCAAehB,KAAK,CAACqC,IAAN,CAAWrB,UAAX,CAAf","sourcesContent":["import React from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {\n    CCreateElement,\n    CSidebar,\n    CSidebarBrand,\n    CSidebarMinimizer,\n    CSidebarNav,\n    CSidebarNavDivider,\n    CSidebarNavDropdown,\n    CSidebarNavItem,\n    CSidebarNavTitle,\n} from '@coreui/react'\n// sidebar nav config\nimport navigation from '../config/_nav'\nimport * as Actions from \"../store/actions/notebook\";\nimport Constants from \"../../utils/Constants\";\nimport {hasAnyUserPrivilege} from \"../../utils/PrivilegeUtils\";\n\nconst TheSidebar = () => {\n    const dispatch = useDispatch();\n    const show = useSelector(state => state.notebook.settings.sidebarShow);\n    const minimize = useSelector(state => state.notebook.settings.minimize);\n    const getFilteredNavigation = () => {\n        let filtered = [];\n\n        navigation.forEach((n) => {\n            let hasAnyPrivilege = hasAnyUserPrivilege(n.privileges);\n            if (hasAnyPrivilege) {\n                filtered.push(n);\n            }\n        });\n        return filtered;\n    };\n\n    return (\n        <CSidebar\n            minimize={minimize}\n            show={show}\n            onShowChange={(val) => {\n                console.log(\"Tha Value\", val);\n                dispatch(Actions.setShowSidebar(val));\n            }}\n        >\n            <CSidebarBrand className=\"d-md-down-none\" to={Constants.PAGES.adminDashboard}>\n\n                {/*<CImg*/}\n                {/*    className=\"c-sidebar-brand-full\"*/}\n                {/*    src={defaultLogo}*/}\n                {/*    style={{'margin': '5px', height: '45px', width: 'auto'}}*/}\n                {/*/>*/}\n\n                {/*<CImg*/}\n                {/*    className=\"c-sidebar-brand-minimized\"*/}\n                {/*    src={defaultLogoSmall}*/}\n\n                {/*/>*/}\n            </CSidebarBrand>\n            <CSidebarNav>\n\n                <CCreateElement\n                    items={getFilteredNavigation()}\n                    components={{\n                        CSidebarNavDivider,\n                        CSidebarNavDropdown,\n                        CSidebarNavItem,\n                        CSidebarNavTitle\n                    }}\n                />\n            </CSidebarNav>\n            <CSidebarMinimizer className=\"c-d-md-down-none\"/>\n        </CSidebar>\n    )\n};\n\nexport default React.memo(TheSidebar)\n"]},"metadata":{},"sourceType":"module"}