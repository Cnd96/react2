{"ast":null,"code":"import patientSummeryAppEndpoints from \"./patient.summery.endpoints\";\nimport dataService from \"../../../../../../../../../services/dataService\";\nexport const GET_PATIENT_SOCIAL_HABITS = '[PATIENT SUMMERY REPORT] GET_PATIENT_SOCIAL_HABITS';\nexport const GET_PATIENT_FAMILY_DISEASES = '[PATIENT SUMMERY REPORT] GET_PATIENT_FAMILY_DISEASES';\nexport const GET_CHECKUP_MEDICAL_TEST_RESULTS = '[PATIENT SUMMERY REPORT] GET_CHECKUP_MEDICAL_TEST_RESULTS';\nexport const GET_CHECKUP_DIAGNOSIS_LIST = '[PATIENT SUMMERY REPORT] GET_CHECKUP_DIAGNOSIS_LIST';\nexport const GET_CHECKUP_DIET_NOTE = '[PATIENT SUMMERY REPORT] GET_CHECKUP_DIET_NOTE';\nexport const GET_CHECKUP_FITNESS_NOTE = '[PATIENT SUMMERY REPORT] GET_CHECKUP_FITNESS_NOTE';\nexport const GET_CHECKUP_FOLLOW_UP = '[PATIENT SUMMERY REPORT] GET_CHECKUP_FOLLOW_UP';\nexport const GET_CHECKUP_FIT_TO_WORK = '[PATIENT SUMMERY REPORT] GET_CHECKUP_FIT_TO_WORK';\nexport const GET_CHECKUP_INSTRUCTION_NOTE = '[PATIENT SUMMERY REPORT] GET_CHECKUP_INSTRUCTION_NOTE';\nexport const GET_CHECKUP_DIETARY_HABITS = '[PATIENT SUMMERY REPORT] GET_CHECKUP_DIETARY_HABITS';\nexport const GET_CHECKUP_PHYSICAL_ACTIVITIES = '[PATIENT SUMMERY REPORT] GET_CHECKUP_PHYSICAL_ACTIVITIES';\nexport const GET_PATIENT = '[PATIENT SUMMERY REPORT] GET_PATIENT';\nexport const GET_CHECKUP = '[PATIENT SUMMERY REPORT] GET_CHECKUP';\nexport const GET_CSV_FILE_URL = '[PATIENT SUMMERY REPORT] GET_CSV_FILE_URL';\nexport const DOWNLOAD_CSV_FILE = '[PATIENT SUMMERY REPORT] DOWNLOAD_CSV_FILE';\nexport function getPatientDTOByID(patientID) {\n  let endpoint = Object.assign({}, patientSummeryAppEndpoints.getPatientDTOByID);\n  endpoint.url = endpoint.url + '/' + patientID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_PATIENT,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getCheckupDTOByID(checkupID) {\n  let endpoint = Object.assign({}, patientSummeryAppEndpoints.getCheckupDTOByID);\n  endpoint.url = endpoint.url + '/' + checkupID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_CHECKUP,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getPatientSocialHabits(data) {\n  const request = dataService.post(patientSummeryAppEndpoints.getPatientSocialHabits, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: GET_PATIENT_SOCIAL_HABITS,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function getPatientFamilyDiseasesList(data) {\n  const request = dataService.post(patientSummeryAppEndpoints.getPatientFamilyDiseasesList, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: GET_PATIENT_FAMILY_DISEASES,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function getDietaryHabitsList(data) {\n  const request = dataService.post(patientSummeryAppEndpoints.getDietaryHabitsList, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: GET_CHECKUP_DIETARY_HABITS,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function getPhysicalActivitiesList(data) {\n  const request = dataService.post(patientSummeryAppEndpoints.getPhysicalActivitiesList, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: GET_CHECKUP_PHYSICAL_ACTIVITIES,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function getCheckupMedicalTestResultsList(data) {\n  const request = dataService.post(patientSummeryAppEndpoints.getCheckupMedicalTestResultsList, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: GET_CHECKUP_MEDICAL_TEST_RESULTS,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function getCheckupDiagnosisList(data) {\n  const request = dataService.post(patientSummeryAppEndpoints.getCheckupDiagnosisList, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: GET_CHECKUP_DIAGNOSIS_LIST,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function getCheckupDietNoteDTOByID(dietNoteID) {\n  let endpoint = Object.assign({}, patientSummeryAppEndpoints.getDietNoteDTOByID);\n  endpoint.url = endpoint.url + '/' + dietNoteID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_CHECKUP_DIET_NOTE,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getCheckupDietNoteByCheckupID(data) {\n  const request = dataService.post(patientSummeryAppEndpoints.getCheckupDietNoteByCheckupID, data);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_CHECKUP_DIET_NOTE,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getCheckupFitnessNoteDTOByID(fitnessNoteID) {\n  let endpoint = Object.assign({}, patientSummeryAppEndpoints.getFitnessNoteDTOByID);\n  endpoint.url = endpoint.url + '/' + fitnessNoteID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_CHECKUP_FITNESS_NOTE,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getCheckupFitnessNoteByCheckupID(data) {\n  const request = dataService.post(patientSummeryAppEndpoints.getCheckupFitnessNoteByCheckupID, data);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_CHECKUP_FITNESS_NOTE,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getCheckupInstructionNoteByCheckupID(data) {\n  const request = dataService.post(patientSummeryAppEndpoints.getCheckupInstructionNote, data);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_CHECKUP_INSTRUCTION_NOTE,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getCheckupFollowUp(data) {\n  const request = dataService.post(patientSummeryAppEndpoints.getCheckupFollowup, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: GET_CHECKUP_FOLLOW_UP,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function getCheckupFitToWork(data) {\n  const request = dataService.post(patientSummeryAppEndpoints.getCheckupFitToWork, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: GET_CHECKUP_FIT_TO_WORK,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function getCheckUpsDetailCSVReport(searchRQ) {\n  const request = dataService.post(patientSummeryAppEndpoints.getCheckUpsDetailCSVReport, searchRQ);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: GET_CSV_FILE_URL,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function downloadCheckUpsByDateDetailCSVReport(fileName) {\n  let endpoint = Object.assign({}, patientSummeryAppEndpoints.downloadCheckUpsByDateDetailCSVReport);\n  endpoint.url = endpoint.url + '/' + fileName;\n  const request = dataService.get(endpoint);\n  request.then(response => {\n    console.log(response.data.result);\n    let blob = new Blob([response.data.result], {\n      type: 'text/csv'\n    });\n    let url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = fileName;\n    a.target = '_blank';\n    a.click();\n  });\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: DOWNLOAD_CSV_FILE,\n      payload: response.data.result\n    }));\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/patientSummery/store/actions/patient.summery.action.js"],"names":["patientSummeryAppEndpoints","dataService","GET_PATIENT_SOCIAL_HABITS","GET_PATIENT_FAMILY_DISEASES","GET_CHECKUP_MEDICAL_TEST_RESULTS","GET_CHECKUP_DIAGNOSIS_LIST","GET_CHECKUP_DIET_NOTE","GET_CHECKUP_FITNESS_NOTE","GET_CHECKUP_FOLLOW_UP","GET_CHECKUP_FIT_TO_WORK","GET_CHECKUP_INSTRUCTION_NOTE","GET_CHECKUP_DIETARY_HABITS","GET_CHECKUP_PHYSICAL_ACTIVITIES","GET_PATIENT","GET_CHECKUP","GET_CSV_FILE_URL","DOWNLOAD_CSV_FILE","getPatientDTOByID","patientID","endpoint","Object","assign","url","request","get","dispatch","getState","then","response","type","payload","data","result","getCheckupDTOByID","checkupID","getPatientSocialHabits","post","getPatientFamilyDiseasesList","getDietaryHabitsList","getPhysicalActivitiesList","getCheckupMedicalTestResultsList","getCheckupDiagnosisList","getCheckupDietNoteDTOByID","dietNoteID","getDietNoteDTOByID","getCheckupDietNoteByCheckupID","getCheckupFitnessNoteDTOByID","fitnessNoteID","getFitnessNoteDTOByID","getCheckupFitnessNoteByCheckupID","getCheckupInstructionNoteByCheckupID","getCheckupInstructionNote","getCheckupFollowUp","getCheckupFollowup","getCheckupFitToWork","getCheckUpsDetailCSVReport","searchRQ","downloadCheckUpsByDateDetailCSVReport","fileName","console","log","blob","Blob","window","URL","createObjectURL","a","document","createElement","href","download","target","click"],"mappings":"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","sourcesContent":["import patientSummeryAppEndpoints from \"./patient.summery.endpoints\";\nimport dataService from \"../../../../../../../../../services/dataService\";\n\nexport const GET_PATIENT_SOCIAL_HABITS = '[PATIENT SUMMERY REPORT] GET_PATIENT_SOCIAL_HABITS';\nexport const GET_PATIENT_FAMILY_DISEASES = '[PATIENT SUMMERY REPORT] GET_PATIENT_FAMILY_DISEASES';\nexport const GET_CHECKUP_MEDICAL_TEST_RESULTS = '[PATIENT SUMMERY REPORT] GET_CHECKUP_MEDICAL_TEST_RESULTS';\nexport const GET_CHECKUP_DIAGNOSIS_LIST = '[PATIENT SUMMERY REPORT] GET_CHECKUP_DIAGNOSIS_LIST';\nexport const GET_CHECKUP_DIET_NOTE = '[PATIENT SUMMERY REPORT] GET_CHECKUP_DIET_NOTE';\nexport const GET_CHECKUP_FITNESS_NOTE = '[PATIENT SUMMERY REPORT] GET_CHECKUP_FITNESS_NOTE';\nexport const GET_CHECKUP_FOLLOW_UP = '[PATIENT SUMMERY REPORT] GET_CHECKUP_FOLLOW_UP';\nexport const GET_CHECKUP_FIT_TO_WORK = '[PATIENT SUMMERY REPORT] GET_CHECKUP_FIT_TO_WORK';\nexport const GET_CHECKUP_INSTRUCTION_NOTE = '[PATIENT SUMMERY REPORT] GET_CHECKUP_INSTRUCTION_NOTE';\nexport const GET_CHECKUP_DIETARY_HABITS = '[PATIENT SUMMERY REPORT] GET_CHECKUP_DIETARY_HABITS';\nexport const GET_CHECKUP_PHYSICAL_ACTIVITIES = '[PATIENT SUMMERY REPORT] GET_CHECKUP_PHYSICAL_ACTIVITIES';\nexport const GET_PATIENT = '[PATIENT SUMMERY REPORT] GET_PATIENT';\nexport const GET_CHECKUP = '[PATIENT SUMMERY REPORT] GET_CHECKUP';\nexport const GET_CSV_FILE_URL = '[PATIENT SUMMERY REPORT] GET_CSV_FILE_URL';\nexport const DOWNLOAD_CSV_FILE = '[PATIENT SUMMERY REPORT] DOWNLOAD_CSV_FILE';\n\nexport function getPatientDTOByID(patientID) {\n\n    let endpoint = Object.assign({}, patientSummeryAppEndpoints.getPatientDTOByID);\n    endpoint.url = endpoint.url + '/' + patientID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_PATIENT,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function getCheckupDTOByID(checkupID) {\n\n    let endpoint = Object.assign({}, patientSummeryAppEndpoints.getCheckupDTOByID);\n    endpoint.url = endpoint.url + '/' + checkupID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_CHECKUP,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function getPatientSocialHabits(data) {\n\n    const request = dataService.post(patientSummeryAppEndpoints.getPatientSocialHabits, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: GET_PATIENT_SOCIAL_HABITS,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\n\nexport function getPatientFamilyDiseasesList(data) {\n\n    const request = dataService.post(patientSummeryAppEndpoints.getPatientFamilyDiseasesList, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: GET_PATIENT_FAMILY_DISEASES,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function getDietaryHabitsList(data) {\n\n    const request = dataService.post(patientSummeryAppEndpoints.getDietaryHabitsList, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: GET_CHECKUP_DIETARY_HABITS,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\n\nexport function getPhysicalActivitiesList(data) {\n\n    const request = dataService.post(patientSummeryAppEndpoints.getPhysicalActivitiesList, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: GET_CHECKUP_PHYSICAL_ACTIVITIES,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function getCheckupMedicalTestResultsList(data) {\n\n    const request = dataService.post(patientSummeryAppEndpoints.getCheckupMedicalTestResultsList, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: GET_CHECKUP_MEDICAL_TEST_RESULTS,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function getCheckupDiagnosisList(data) {\n\n    const request = dataService.post(patientSummeryAppEndpoints.getCheckupDiagnosisList, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: GET_CHECKUP_DIAGNOSIS_LIST,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function getCheckupDietNoteDTOByID(dietNoteID) {\n\n    let endpoint = Object.assign({}, patientSummeryAppEndpoints.getDietNoteDTOByID);\n    endpoint.url = endpoint.url + '/' + dietNoteID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_CHECKUP_DIET_NOTE,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function getCheckupDietNoteByCheckupID(data) {\n\n    const request = dataService.post(patientSummeryAppEndpoints.getCheckupDietNoteByCheckupID, data);\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_CHECKUP_DIET_NOTE,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function getCheckupFitnessNoteDTOByID(fitnessNoteID) {\n\n    let endpoint = Object.assign({}, patientSummeryAppEndpoints.getFitnessNoteDTOByID);\n    endpoint.url = endpoint.url + '/' + fitnessNoteID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_CHECKUP_FITNESS_NOTE,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function getCheckupFitnessNoteByCheckupID(data) {\n\n    const request = dataService.post(patientSummeryAppEndpoints.getCheckupFitnessNoteByCheckupID, data);\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_CHECKUP_FITNESS_NOTE,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function getCheckupInstructionNoteByCheckupID(data) {\n\n    const request = dataService.post(patientSummeryAppEndpoints.getCheckupInstructionNote, data);\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_CHECKUP_INSTRUCTION_NOTE,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function getCheckupFollowUp(data) {\n\n    const request = dataService.post(patientSummeryAppEndpoints.getCheckupFollowup, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: GET_CHECKUP_FOLLOW_UP,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\n\nexport function getCheckupFitToWork(data) {\n\n    const request = dataService.post(patientSummeryAppEndpoints.getCheckupFitToWork, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: GET_CHECKUP_FIT_TO_WORK,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\n\nexport function getCheckUpsDetailCSVReport(searchRQ) {\n    const request = dataService.post(patientSummeryAppEndpoints.getCheckUpsDetailCSVReport, searchRQ);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: GET_CSV_FILE_URL,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function downloadCheckUpsByDateDetailCSVReport(fileName) {\n\n    let endpoint = Object.assign({}, patientSummeryAppEndpoints.downloadCheckUpsByDateDetailCSVReport);\n    endpoint.url = endpoint.url + '/' + fileName;\n\n    const request = dataService.get(endpoint);\n\n    request.then((response) => {\n            console.log(response.data.result);\n            let blob = new Blob([response.data.result], {type: 'text/csv'});\n            let url = window.URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url;\n            a.download = fileName;\n            a.target = '_blank';\n            a.click();\n        }\n    );\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: DOWNLOAD_CSV_FILE,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}