{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\containers\\\\TheHeaderDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CButton, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle, CImg } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport defaultLogo from '../../assets/img/avatars/10.png';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Actions from '../auth/store/actions';\nimport AppModal from \"../views/common/AppModal\";\nimport PasswordResetForm from \"../views/common/PasswordResetForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TheHeaderDropdown = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userData = useSelector(state => state.notebook.login.user);\n  let userName = '';\n\n  if (userData) {\n    userName = userData.user.title + '. ' + userData.user.firstName + ' ' + userData.user.lastName;\n  }\n\n  const [showPwResetModal, setShowPwResetModal] = useState(false);\n  const [passwordDetails, setPasswordDetails] = useState({});\n\n  let onToggle = () => {\n    setShowPwResetModal(!showPwResetModal);\n  };\n\n  let onPasswordReset = () => {\n    dispatch(Actions.changeAdminPassword(passwordDetails.values));\n    onToggle();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CDropdown, {\n      inNav: true,\n      className: \"c-header-nav-items mx-2\",\n      direction: \"down\",\n      children: [/*#__PURE__*/_jsxDEV(CDropdownToggle, {\n        className: \"c-header-nav-link\",\n        caret: false,\n        children: [userName, \" \", ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"c-avatar\",\n          children: /*#__PURE__*/_jsxDEV(CImg, {\n            src: defaultLogo,\n            className: \"c-avatar-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CDropdownMenu, {\n        className: \"pt-0\",\n        placement: \"bottom-end\",\n        children: [/*#__PURE__*/_jsxDEV(CDropdownItem, {\n          onClick: () => {\n            onToggle();\n          },\n          children: [/*#__PURE__*/_jsxDEV(CIcon, {\n            name: \"cil-lock-locked\",\n            className: \"mfe-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), \"Change Password\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CDropdownItem, {\n          onClick: async () => {\n            Actions.expireUserCache();\n            dispatch(Actions.userLogOut());\n          },\n          children: [/*#__PURE__*/_jsxDEV(CIcon, {\n            name: \"cil-account-logout\",\n            className: \"mfe-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), \"Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppModal, {\n      isOpen: showPwResetModal,\n      header: 'Reset Password',\n      onToggle: onToggle,\n      body: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(PasswordResetForm, {\n          onFormChange: setPasswordDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false),\n      footer: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CButton, {\n          color: \"primary\",\n          disabled: !passwordDetails.isValid,\n          onClick: onPasswordReset,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), ' ', /*#__PURE__*/_jsxDEV(CButton, {\n          color: \"secondary\",\n          onClick: onToggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TheHeaderDropdown, \"xrgqPHiZ/nQNmkrmVPBP9S9KEZk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TheHeaderDropdown;\nexport default TheHeaderDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"TheHeaderDropdown\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/containers/TheHeaderDropdown.js"],"names":["React","useState","CButton","CDropdown","CDropdownItem","CDropdownMenu","CDropdownToggle","CImg","CIcon","defaultLogo","useDispatch","useSelector","Actions","AppModal","PasswordResetForm","TheHeaderDropdown","dispatch","userData","state","notebook","login","user","userName","title","firstName","lastName","showPwResetModal","setShowPwResetModal","passwordDetails","setPasswordDetails","onToggle","onPasswordReset","changeAdminPassword","values","expireUserCache","userLogOut","isValid"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {CButton, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle, CImg} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport defaultLogo from '../../assets/img/avatars/10.png';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as Actions from '../auth/store/actions';\nimport AppModal from \"../views/common/AppModal\";\nimport PasswordResetForm from \"../views/common/PasswordResetForm\";\n\nconst TheHeaderDropdown = () => {\n\n    const dispatch = useDispatch();\n    const userData = useSelector(state => state.notebook.login.user);\n    let userName = '';\n    if (userData) {\n        userName = userData.user.title + '. ' + userData.user.firstName + ' ' + userData.user.lastName;\n    }\n\n    const [showPwResetModal, setShowPwResetModal] = useState(false);\n    const [passwordDetails, setPasswordDetails] = useState({});\n\n    let onToggle = () => {\n        setShowPwResetModal(!showPwResetModal);\n    };\n\n    let onPasswordReset = () => {\n        dispatch(Actions.changeAdminPassword(passwordDetails.values));\n        onToggle();\n    };\n\n    return (\n        <>\n            <CDropdown\n                inNav\n                className=\"c-header-nav-items mx-2\"\n                direction=\"down\"\n            >\n                <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n                    {userName} {' '}\n                    <div className=\"c-avatar\">\n                        <CImg\n                            src={defaultLogo}\n                            className=\"c-avatar-img\"\n                        />\n                    </div>\n                </CDropdownToggle>\n                <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n                    <CDropdownItem\n                        onClick={() => {\n                            onToggle();\n                        }}\n                    >\n                        <CIcon name=\"cil-lock-locked\" className=\"mfe-2\"/>\n                        Change Password\n                    </CDropdownItem>\n\n                    <CDropdownItem onClick={async () => {\n                        Actions.expireUserCache();\n                        dispatch(Actions.userLogOut());\n                    }}>\n                        <CIcon name=\"cil-account-logout\" className=\"mfe-2\"/>\n                        Logout\n                    </CDropdownItem>\n\n                </CDropdownMenu>\n            </CDropdown>\n\n\n            <AppModal\n                isOpen={showPwResetModal}\n                header={'Reset Password'}\n                onToggle={onToggle}\n                body={\n                    <>\n                        <PasswordResetForm\n                            onFormChange={setPasswordDetails}\n                        />\n                    </>\n                }\n                footer={\n                    <>\n                        <CButton\n                            color=\"primary\"\n                            disabled={!passwordDetails.isValid}\n                            onClick={onPasswordReset}\n                        >Confirm</CButton>\n                        {' '}\n                        <CButton color=\"secondary\" onClick={onToggle}>Cancel</CButton>\n                    </>\n                }\n            />\n        </>\n    )\n};\n\nexport default TheHeaderDropdown\n"]},"metadata":{},"sourceType":"module"}