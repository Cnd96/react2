{"ast":null,"code":"import dataService from \"../../../../../../../../../services/dataService\";\nimport selectPrescriptionTemplateAppEndpoints from \"./select.prescription.template.app.endpoints\";\nexport const GET_PRESCRIPTION_TEMPLATE_LIST = '[SELECT PRESCRIPTION TEMPLATE] GET_PRESCRIPTION_TEMPLATE_LIST';\nexport const GET_MEDICINE_VALUE_LIST = '[SELECT PRESCRIPTION TEMPLATE] GET MEDICINE VALUE LIST';\nexport const ON_SELECT_PRESCRIPTION = '[SELECT PRESCRIPTION TEMPLATE] ON SELECT PRESCRIPTION';\nexport const ON_RESET_PRESCRIPTION = '[SELECT PRESCRIPTION TEMPLATE] ON RESET PRESCRIPTION';\nexport const GET_PRESCRIPTION_TEMPLATE = '[SELECT PRESCRIPTION TEMPLATE]  GET_PRESCRIPTION_TEMPLATE';\nexport const GET_PRESCRIPTION = '[SELECT PRESCRIPTION TEMPLATE]  GET_PRESCRIPTION';\nexport const GET_DOES_LIST = '[SELECT PRESCRIPTION TEMPLATE] GET DOES LIST';\nexport const GET_MEAL_TIME_LIST = '[SELECT PRESCRIPTION TEMPLATE] GET MEAL TIME LIST';\nexport const GET_FREQUENT_LIST = '[SELECT PRESCRIPTION TEMPLATE] GET FREQUENT LIST';\nexport const ON_CHECKUP_SAVE_PRESCRIPTION = '[SELECT PRESCRIPTION TEMPLATE] ON_CHECKUP_SAVE_PRESCRIPTION';\nexport const ADD_TEMPLATE_MEDICINE = '[SELECT PRESCRIPTION TEMPLATE] ADD TEMPLATE MEDICINE';\nexport const TOGGLE_STATE = '[SELECT PRESCRIPTION TEMPLATE] TOGGLE_STATE';\nexport function getPrescriptionTemplateList() {\n  let endpoint = Object.assign({}, selectPrescriptionTemplateAppEndpoints.getPrescriptionTemplateList);\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_PRESCRIPTION_TEMPLATE_LIST,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getMedicineValueList(data) {\n  const request = dataService.post(selectPrescriptionTemplateAppEndpoints.getMedicineListOptions, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_MEDICINE_VALUE_LIST,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function onSelectPrescription(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_SELECT_PRESCRIPTION,\n      payload: data\n    });\n  };\n}\nexport function onResetPrescription() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET_PRESCRIPTION\n    });\n  };\n}\nexport function getPrescriptionTemplateByID(categoryID) {\n  let endpoint = Object.assign({}, selectPrescriptionTemplateAppEndpoints.getPrescriptionTemplateByID);\n  endpoint.url = endpoint.url + '/' + categoryID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_PRESCRIPTION_TEMPLATE,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getPrescriptionByID(prescriptionID) {\n  let endpoint = Object.assign({}, selectPrescriptionTemplateAppEndpoints.getPrescriptionByID);\n  endpoint.url = endpoint.url + '/' + prescriptionID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_PRESCRIPTION,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getDoseList(data) {\n  const request = dataService.post(selectPrescriptionTemplateAppEndpoints.getDoseListOptions, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_DOES_LIST,\n        payload: {\n          [data.medicineID]: response.data.result\n        }\n      });\n    });\n  };\n}\nexport function getMealTimeList(data) {\n  const request = dataService.post(selectPrescriptionTemplateAppEndpoints.getMealTimeListOptions, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_MEAL_TIME_LIST,\n        payload: {\n          [data.medicineID]: response.data.result\n        }\n      });\n    });\n  };\n}\nexport function getFrequentList(data) {\n  const request = dataService.post(selectPrescriptionTemplateAppEndpoints.getFrequentListOptions, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_FREQUENT_LIST,\n        payload: {\n          [data.medicineID]: response.data.result\n        }\n      });\n    });\n  };\n}\nexport function addTemplateMedicine(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_TEMPLATE_MEDICINE,\n      payload: data\n    });\n  };\n}\nexport function toggleState(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: TOGGLE_STATE,\n      payload: data\n    });\n  };\n}\nexport function saveOrUpdateCheckupWithPrescription(data) {\n  const request = dataService.post(selectPrescriptionTemplateAppEndpoints.saveOrUpdateCheckupWithPrescription, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: ON_CHECKUP_SAVE_PRESCRIPTION,\n        payload: response.data.result\n      });\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/selectPrescription/store/actions/select.prescription.actions.js"],"names":["dataService","selectPrescriptionTemplateAppEndpoints","GET_PRESCRIPTION_TEMPLATE_LIST","GET_MEDICINE_VALUE_LIST","ON_SELECT_PRESCRIPTION","ON_RESET_PRESCRIPTION","GET_PRESCRIPTION_TEMPLATE","GET_PRESCRIPTION","GET_DOES_LIST","GET_MEAL_TIME_LIST","GET_FREQUENT_LIST","ON_CHECKUP_SAVE_PRESCRIPTION","ADD_TEMPLATE_MEDICINE","TOGGLE_STATE","getPrescriptionTemplateList","endpoint","Object","assign","request","get","dispatch","getState","then","response","type","payload","data","result","getMedicineValueList","post","getMedicineListOptions","onSelectPrescription","onResetPrescription","getPrescriptionTemplateByID","categoryID","url","getPrescriptionByID","prescriptionID","getDoseList","getDoseListOptions","medicineID","getMealTimeList","getMealTimeListOptions","getFrequentList","getFrequentListOptions","addTemplateMedicine","toggleState","saveOrUpdateCheckupWithPrescription"],"mappings":"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","sourcesContent":["import dataService from \"../../../../../../../../../services/dataService\";\nimport selectPrescriptionTemplateAppEndpoints from \"./select.prescription.template.app.endpoints\";\n\nexport const GET_PRESCRIPTION_TEMPLATE_LIST = '[SELECT PRESCRIPTION TEMPLATE] GET_PRESCRIPTION_TEMPLATE_LIST';\nexport const GET_MEDICINE_VALUE_LIST = '[SELECT PRESCRIPTION TEMPLATE] GET MEDICINE VALUE LIST';\nexport const ON_SELECT_PRESCRIPTION = '[SELECT PRESCRIPTION TEMPLATE] ON SELECT PRESCRIPTION';\nexport const ON_RESET_PRESCRIPTION = '[SELECT PRESCRIPTION TEMPLATE] ON RESET PRESCRIPTION';\nexport const GET_PRESCRIPTION_TEMPLATE = '[SELECT PRESCRIPTION TEMPLATE]  GET_PRESCRIPTION_TEMPLATE';\nexport const GET_PRESCRIPTION = '[SELECT PRESCRIPTION TEMPLATE]  GET_PRESCRIPTION';\nexport const GET_DOES_LIST = '[SELECT PRESCRIPTION TEMPLATE] GET DOES LIST';\nexport const GET_MEAL_TIME_LIST = '[SELECT PRESCRIPTION TEMPLATE] GET MEAL TIME LIST';\nexport const GET_FREQUENT_LIST = '[SELECT PRESCRIPTION TEMPLATE] GET FREQUENT LIST';\nexport const ON_CHECKUP_SAVE_PRESCRIPTION = '[SELECT PRESCRIPTION TEMPLATE] ON_CHECKUP_SAVE_PRESCRIPTION';\nexport const ADD_TEMPLATE_MEDICINE = '[SELECT PRESCRIPTION TEMPLATE] ADD TEMPLATE MEDICINE';\nexport const TOGGLE_STATE = '[SELECT PRESCRIPTION TEMPLATE] TOGGLE_STATE';\n\n\nexport function getPrescriptionTemplateList() {\n    let endpoint = Object.assign({}, selectPrescriptionTemplateAppEndpoints.getPrescriptionTemplateList);\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_PRESCRIPTION_TEMPLATE_LIST,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function getMedicineValueList(data) {\n    const request = dataService.post(selectPrescriptionTemplateAppEndpoints.getMedicineListOptions, data);\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: GET_MEDICINE_VALUE_LIST,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\n\nexport function onSelectPrescription(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_SELECT_PRESCRIPTION,\n            payload: data\n        })\n    };\n}\n\nexport function onResetPrescription() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET_PRESCRIPTION,\n        })\n    };\n}\n\nexport function getPrescriptionTemplateByID(categoryID) {\n\n    let endpoint = Object.assign({}, selectPrescriptionTemplateAppEndpoints.getPrescriptionTemplateByID);\n    endpoint.url = endpoint.url + '/' + categoryID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_PRESCRIPTION_TEMPLATE,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function getPrescriptionByID(prescriptionID) {\n\n    let endpoint = Object.assign({}, selectPrescriptionTemplateAppEndpoints.getPrescriptionByID);\n    endpoint.url = endpoint.url + '/' + prescriptionID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_PRESCRIPTION,\n                payload: response.data.result\n            })\n        );\n    };\n\n}\n\nexport function getDoseList(data) {\n    const request = dataService.post(selectPrescriptionTemplateAppEndpoints.getDoseListOptions, data);\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: GET_DOES_LIST,\n                    payload: {[data.medicineID]: response.data.result}\n                });\n            }\n        );\n    };\n}\n\nexport function getMealTimeList(data) {\n    const request = dataService.post(selectPrescriptionTemplateAppEndpoints.getMealTimeListOptions, data);\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: GET_MEAL_TIME_LIST,\n                    payload: {[data.medicineID]: response.data.result}\n                });\n            }\n        );\n    };\n}\n\nexport function getFrequentList(data) {\n    const request = dataService.post(selectPrescriptionTemplateAppEndpoints.getFrequentListOptions, data);\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: GET_FREQUENT_LIST,\n                    payload: {[data.medicineID]: response.data.result}\n                });\n            }\n        );\n    };\n}\n\nexport function addTemplateMedicine(data) {\n\n    return (dispatch, getState) => {\n        dispatch({\n            type: ADD_TEMPLATE_MEDICINE,\n            payload: data\n        })\n    };\n}\n\nexport function toggleState(data) {\n\n    return (dispatch, getState) => {\n        dispatch({\n            type: TOGGLE_STATE,\n            payload: data\n        })\n    };\n}\n\nexport function saveOrUpdateCheckupWithPrescription(data) {\n    const request = dataService.post(selectPrescriptionTemplateAppEndpoints.saveOrUpdateCheckupWithPrescription, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: ON_CHECKUP_SAVE_PRESCRIPTION,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}