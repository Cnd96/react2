{"ast":null,"code":"import medicalDiseaseAppEndpoints from \"./medical.disease.app.endpoints\";\nimport dataService from \"../../../../../../services/dataService\";\nexport const ON_ADD_EDIT_FORM_CHANGE = '[MEDICAL DISEASE ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_SAVE_UPDATE = '[MEDICAL DISEASE ADD EDIT] ON_SAVE_UPDATE';\nexport const ON_RESET = '[MEDICAL DISEASE ADD EDIT] ON_RESET';\nexport const GET_MEDICAL_DISEASE = '[MEDICAL DISEASE ADD EDIT] GET_MEDICAL_DISEASE';\nexport function onFormChange(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_ADD_EDIT_FORM_CHANGE,\n      payload: data\n    });\n  };\n}\nexport function saveOrUpdateMedicalDisease(data) {\n  const request = dataService.post(medicalDiseaseAppEndpoints.saveOrUpdateMedicalDisease, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: ON_SAVE_UPDATE,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function reset() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET,\n      payload: {}\n    });\n  };\n}\nexport function getMedicalDiseaseDTOByID(medicalDiseaseID) {\n  let endpoint = Object.assign({}, medicalDiseaseAppEndpoints.getMedicalDiseaseDTOByID);\n  endpoint.url = endpoint.url + '/' + medicalDiseaseID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_MEDICAL_DISEASE,\n      payload: response.data.result\n    }));\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/medicalDiseases/store/action/medical.disease.app.add.edit.action.js"],"names":["medicalDiseaseAppEndpoints","dataService","ON_ADD_EDIT_FORM_CHANGE","ON_SAVE_UPDATE","ON_RESET","GET_MEDICAL_DISEASE","onFormChange","data","dispatch","getState","type","payload","saveOrUpdateMedicalDisease","request","post","then","response","result","reset","getMedicalDiseaseDTOByID","medicalDiseaseID","endpoint","Object","assign","url","get"],"mappings":"AAAA,OAAOA,0BAAP,MAAuC,iCAAvC;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AAEA,OAAO,MAAMC,uBAAuB,GAAG,oDAAhC;AACP,OAAO,MAAMC,cAAc,GAAG,2CAAvB;AACP,OAAO,MAAMC,QAAQ,GAAG,qCAAjB;AACP,OAAO,MAAMC,mBAAmB,GAAG,gDAA5B;AAGP,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC/B,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,uBADD;AAELS,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASK,0BAAT,CAAoCL,IAApC,EAA0C;AAC7C,QAAMM,OAAO,GAAGZ,WAAW,CAACa,IAAZ,CAAiBd,0BAA0B,CAACY,0BAA5C,EAAwEL,IAAxE,CAAhB;AAEA,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BI,IAAAA,OAAO,CAACE,IAAR,CAAcC,QAAD,IAAc;AACnBR,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEP,cADD;AAELQ,QAAAA,OAAO,EAAEK,QAAQ,CAACT,IAAT,CAAcU;AAFlB,OAAD,CAAR;AAIH,KALL;AAOH,GARD;AASH;AAED,OAAO,SAASC,KAAT,GAAiB;AACpB,SAAO,CAACV,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,QADD;AAELO,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASQ,wBAAT,CAAkCC,gBAAlC,EAAoD;AAEvD,MAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBvB,0BAA0B,CAACmB,wBAA7C,CAAf;AACAE,EAAAA,QAAQ,CAACG,GAAT,GAAeH,QAAQ,CAACG,GAAT,GAAe,GAAf,GAAqBJ,gBAApC;AAEA,QAAMP,OAAO,GAAGZ,WAAW,CAACwB,GAAZ,CAAgBJ,QAAhB,CAAhB;AAEA,SAAO,CAACb,QAAD,EAAWC,QAAX,KAAwB;AAC3BI,IAAAA,OAAO,CAACE,IAAR,CAAcC,QAAD,IACTR,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,mBADD;AAELM,MAAAA,OAAO,EAAEK,QAAQ,CAACT,IAAT,CAAcU;AAFlB,KAAD,CADZ;AAMH,GAPD;AASH","sourcesContent":["import medicalDiseaseAppEndpoints from \"./medical.disease.app.endpoints\";\nimport dataService from \"../../../../../../services/dataService\";\n\nexport const ON_ADD_EDIT_FORM_CHANGE = '[MEDICAL DISEASE ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_SAVE_UPDATE = '[MEDICAL DISEASE ADD EDIT] ON_SAVE_UPDATE';\nexport const ON_RESET = '[MEDICAL DISEASE ADD EDIT] ON_RESET';\nexport const GET_MEDICAL_DISEASE = '[MEDICAL DISEASE ADD EDIT] GET_MEDICAL_DISEASE';\n\n\nexport function onFormChange(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_ADD_EDIT_FORM_CHANGE,\n            payload: data\n        })\n    };\n}\n\nexport function saveOrUpdateMedicalDisease(data) {\n    const request = dataService.post(medicalDiseaseAppEndpoints.saveOrUpdateMedicalDisease, data);\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: ON_SAVE_UPDATE,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function reset() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET,\n            payload: {}\n        })\n    };\n}\n\nexport function getMedicalDiseaseDTOByID(medicalDiseaseID) {\n\n    let endpoint = Object.assign({}, medicalDiseaseAppEndpoints.getMedicalDiseaseDTOByID);\n    endpoint.url = endpoint.url + '/' + medicalDiseaseID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_MEDICAL_DISEASE,\n                payload: response.data.result\n            })\n        );\n    };\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}