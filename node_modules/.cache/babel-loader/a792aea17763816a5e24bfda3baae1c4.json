{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\createCheckUp\\\\CreateCheckUpBase.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport withReducer from \"../../../../../../../store/withReducer\";\nimport reducer from \"./store/reducer\";\nimport CreateCheckupForm from \"./components/CreateCheckupForm\";\nimport { useDispatch } from \"react-redux\";\nimport { getStorageItem } from \"../../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../../utils/Constants\";\nimport * as Action from \"./store/action\";\nimport * as CheckupActions from \"./store/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateCheckUpBase = _ref => {\n  _s();\n\n  let {\n    setPageIndex,\n    nextPageIndex,\n    prevPageIndex\n  } = _ref;\n  let dispatch = useDispatch();\n  useEffect(() => {\n    let checkupID = getStorageItem(Constants.STORAGE.CHECKUP_ID);\n\n    if (checkupID) {\n      dispatch(Action.getCheckupDTOByID(checkupID));\n    } else {\n      dispatch(CheckupActions.resetCheckupData());\n    }\n\n    return () => {\n      dispatch(Action.reset());\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CreateCheckupForm, {\n      setPageIndex: setPageIndex,\n      nextPageIndex: nextPageIndex,\n      prevPageIndex: prevPageIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateCheckUpBase, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateCheckUpBase;\nexport default withReducer('checkup', reducer)(CreateCheckUpBase);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCheckUpBase\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/createCheckUp/CreateCheckUpBase.js"],"names":["React","useEffect","withReducer","reducer","CreateCheckupForm","useDispatch","getStorageItem","Constants","Action","CheckupActions","CreateCheckUpBase","setPageIndex","nextPageIndex","prevPageIndex","dispatch","checkupID","STORAGE","CHECKUP_ID","getCheckupDTOByID","resetCheckupData","reset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,cAAR,QAA6B,4CAA7B;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,gBAAxB;AACA,OAAO,KAAKC,cAAZ,MAAgC,gBAAhC;;;;AAEA,MAAMC,iBAAiB,GAAG,QAAkD;AAAA;;AAAA,MAAjD;AAACC,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,GAAiD;AAExE,MAAIC,QAAQ,GAAGT,WAAW,EAA1B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,SAAS,GAAGT,cAAc,CAACC,SAAS,CAACS,OAAV,CAAkBC,UAAnB,CAA9B;;AACA,QAAIF,SAAJ,EAAe;AACXD,MAAAA,QAAQ,CAACN,MAAM,CAACU,iBAAP,CAAyBH,SAAzB,CAAD,CAAR;AACH,KAFD,MAEO;AACHD,MAAAA,QAAQ,CAACL,cAAc,CAACU,gBAAf,EAAD,CAAR;AACH;;AACD,WAAQ,MAAM;AACVL,MAAAA,QAAQ,CAACN,MAAM,CAACY,KAAP,EAAD,CAAR;AACH,KAFD;AAGH,GAVQ,EAUN,EAVM,CAAT;AAYA,sBAAQ;AAAA,2BACA,QAAC,iBAAD;AAAmB,MAAA,YAAY,EAAET,YAAjC;AAA+C,MAAA,aAAa,EAAEC,aAA9D;AAA6E,MAAA,aAAa,EAAEC;AAA5F;AAAA;AAAA;AAAA;AAAA;AADA,mBAAR;AAIH,CApBD;;GAAMH,iB;UAEaL,W;;;KAFbK,iB;AAsBN,eAAeR,WAAW,CAAC,SAAD,EAAYC,OAAZ,CAAX,CAAgCO,iBAAhC,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport withReducer from \"../../../../../../../store/withReducer\";\nimport reducer from \"./store/reducer\";\nimport CreateCheckupForm from \"./components/CreateCheckupForm\";\nimport {useDispatch} from \"react-redux\";\nimport {getStorageItem} from \"../../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../../utils/Constants\";\nimport * as Action from \"./store/action\";\nimport * as CheckupActions from \"./store/action\";\n\nconst CreateCheckUpBase = ({setPageIndex, nextPageIndex, prevPageIndex}) => {\n\n    let dispatch = useDispatch();\n\n    useEffect(() => {\n        let checkupID = getStorageItem(Constants.STORAGE.CHECKUP_ID);\n        if (checkupID) {\n            dispatch(Action.getCheckupDTOByID(checkupID))\n        } else {\n            dispatch(CheckupActions.resetCheckupData());\n        }\n        return (() => {\n            dispatch(Action.reset());\n        })\n    }, []);\n\n    return (<>\n            <CreateCheckupForm setPageIndex={setPageIndex} nextPageIndex={nextPageIndex} prevPageIndex={prevPageIndex}/>\n        </>\n    );\n};\n\nexport default withReducer('checkup', reducer)(CreateCheckUpBase);"]},"metadata":{},"sourceType":"module"}