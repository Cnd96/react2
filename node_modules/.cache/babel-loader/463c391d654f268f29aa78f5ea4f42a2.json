{"ast":null,"code":"import dataService from \"../../../../../../../../../services/dataService\";\nimport selectAllergyHistoryAppEndpoints from \"./allergy.app.end.points\";\nexport const ON_ADD_EDIT_FORM_CHANGE = '[ALLERGY HISTORY ] ON_ADD_EDIT_FORM_CHANGE';\nexport const GET_ALLERGY_HISTORY = '[ALLERGY HISTORY] GET_ALLERGY_HISTORY';\nexport const ON_SAVE_ALLERGY_HISTORY = '[ALLERGY HISTORY] ON_SAVE_ALLERGY_HISTORY';\nexport const ON_RESET_FORM = '[ALLERGY HISTORY] ON_RESET_FORM';\nexport const ON_SET_ALLERGY_HISTORY_FORM = '[ALLERGY HISTORY] ON_SET_ALLERGY_HISTORY_FORM';\nexport const ON_RESET_ALLERGY_HISTORY = '[ALLERGY HISTORY] ON_RESET_ALLERGY_HISTORY';\nexport function getAllergyHistoryByID(patientComplainID) {\n  let endpoint = Object.assign({}, selectAllergyHistoryAppEndpoints.getAllergyHistoryByID);\n  endpoint.url = endpoint.url + '/' + patientComplainID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_ALLERGY_HISTORY,\n      payload: response.data.result\n    }));\n  };\n}\nexport function saveOrUpdateAllergyHistory(data) {\n  const request = dataService.post(selectAllergyHistoryAppEndpoints.saveOrUpdateAllergyHistory, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: ON_SAVE_ALLERGY_HISTORY,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function saveOrUpdateAllergyHistoryWithMessage(data) {\n  const request = dataService.post(selectAllergyHistoryAppEndpoints.saveOrUpdateAllergyHistoryWithMessage, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: ON_SAVE_ALLERGY_HISTORY,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function onFormChange(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_ADD_EDIT_FORM_CHANGE,\n      payload: data\n    });\n  };\n}\nexport function onResetForm() {\n  return (dispatch, getState) => {\n    return dispatch({\n      type: ON_RESET_FORM,\n      payload: {}\n    });\n  };\n}\nexport function onResetPatrintComplain() {\n  return (dispatch, getState) => {\n    return dispatch({\n      type: ON_RESET_ALLERGY_HISTORY,\n      payload: {}\n    });\n  };\n}\nexport function onSetAllergyHistoryToForm(data) {\n  return (dispatch, getState) => {\n    return dispatch({\n      type: ON_SET_ALLERGY_HISTORY_FORM,\n      payload: data\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/allergyHistory/store/actions/allergy.history.add.edit.action.js"],"names":["dataService","selectAllergyHistoryAppEndpoints","ON_ADD_EDIT_FORM_CHANGE","GET_ALLERGY_HISTORY","ON_SAVE_ALLERGY_HISTORY","ON_RESET_FORM","ON_SET_ALLERGY_HISTORY_FORM","ON_RESET_ALLERGY_HISTORY","getAllergyHistoryByID","patientComplainID","endpoint","Object","assign","url","request","get","dispatch","getState","then","response","type","payload","data","result","saveOrUpdateAllergyHistory","post","saveOrUpdateAllergyHistoryWithMessage","onFormChange","onResetForm","onResetPatrintComplain","onSetAllergyHistoryToForm"],"mappings":"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","sourcesContent":["import dataService from \"../../../../../../../../../services/dataService\";\nimport selectAllergyHistoryAppEndpoints from \"./allergy.app.end.points\";\n\nexport const ON_ADD_EDIT_FORM_CHANGE = '[ALLERGY HISTORY ] ON_ADD_EDIT_FORM_CHANGE';\nexport const GET_ALLERGY_HISTORY = '[ALLERGY HISTORY] GET_ALLERGY_HISTORY';\nexport const ON_SAVE_ALLERGY_HISTORY = '[ALLERGY HISTORY] ON_SAVE_ALLERGY_HISTORY';\nexport const ON_RESET_FORM = '[ALLERGY HISTORY] ON_RESET_FORM';\nexport const ON_SET_ALLERGY_HISTORY_FORM = '[ALLERGY HISTORY] ON_SET_ALLERGY_HISTORY_FORM';\nexport const ON_RESET_ALLERGY_HISTORY = '[ALLERGY HISTORY] ON_RESET_ALLERGY_HISTORY';\n\n\nexport function getAllergyHistoryByID(patientComplainID) {\n    let endpoint = Object.assign({}, selectAllergyHistoryAppEndpoints.getAllergyHistoryByID);\n    endpoint.url = endpoint.url + '/' + patientComplainID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_ALLERGY_HISTORY,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\n\nexport function saveOrUpdateAllergyHistory(data) {\n    const request = dataService.post(selectAllergyHistoryAppEndpoints.saveOrUpdateAllergyHistory, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: ON_SAVE_ALLERGY_HISTORY,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function saveOrUpdateAllergyHistoryWithMessage(data) {\n    const request = dataService.post(selectAllergyHistoryAppEndpoints.saveOrUpdateAllergyHistoryWithMessage, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: ON_SAVE_ALLERGY_HISTORY,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\n\nexport function onFormChange(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_ADD_EDIT_FORM_CHANGE,\n            payload: data\n        })\n    };\n}\n\n\nexport function onResetForm() {\n    return (dispatch, getState) => {\n        return dispatch({\n            type: ON_RESET_FORM,\n            payload: {}\n        })\n    };\n}\n\n\nexport function onResetPatrintComplain() {\n\n    return (dispatch, getState) => {\n        return dispatch({\n            type: ON_RESET_ALLERGY_HISTORY,\n            payload: {}\n        })\n    };\n}\n\nexport function onSetAllergyHistoryToForm(data) {\n\n    return (dispatch, getState) => {\n        return dispatch({\n            type: ON_SET_ALLERGY_HISTORY_FORM,\n            payload: data\n        })\n    };\n}\n\n"]},"metadata":{},"sourceType":"module"}