{"ast":null,"code":"import dataService from \"../../../../../../services/dataService\";\nimport diagnosisAppEndpoints from \"./diagnosis.app.endpoints\";\nexport const ON_ADD_EDIT_FORM_CHANGE = '[DIAGNOSIS ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_SAVE_UPDATE = '[DIAGNOSIS ADD EDIT] ON_SAVE_UPDATE';\nexport const GET_DIAGNOSIS = '[DIAGNOSIS ADD EDIT] GET_DIAGNOSIS';\nexport const ON_RESET = '[DIAGNOSIS ADD EDIT] ON_RESET';\nexport function onFormChange(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_ADD_EDIT_FORM_CHANGE,\n      payload: data\n    });\n  };\n}\nexport function saveOrUpdateDiagnosis(data) {\n  const request = dataService.post(diagnosisAppEndpoints.saveOrUpdateDiagnosis, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: ON_SAVE_UPDATE,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function reset() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET,\n      payload: {}\n    });\n  };\n}\nexport function getDiagnosisDTOByID(diagnosisID) {\n  let endpoint = Object.assign({}, diagnosisAppEndpoints.getDiagnosisDTOByID);\n  endpoint.url = endpoint.url + '/' + diagnosisID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_DIAGNOSIS,\n      payload: response.data.result\n    }));\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/diagnosis/store/action/diagnosis.add.edit.action.js"],"names":["dataService","diagnosisAppEndpoints","ON_ADD_EDIT_FORM_CHANGE","ON_SAVE_UPDATE","GET_DIAGNOSIS","ON_RESET","onFormChange","data","dispatch","getState","type","payload","saveOrUpdateDiagnosis","request","post","then","response","result","reset","getDiagnosisDTOByID","diagnosisID","endpoint","Object","assign","url","get"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,wCAAxB;AACA,OAAOC,qBAAP,MAAkC,2BAAlC;AAEA,OAAO,MAAMC,uBAAuB,GAAG,8CAAhC;AACP,OAAO,MAAMC,cAAc,GAAG,qCAAvB;AACP,OAAO,MAAMC,aAAa,GAAG,oCAAtB;AACP,OAAO,MAAMC,QAAQ,GAAG,+BAAjB;AAEP,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC/B,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,uBADD;AAELS,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAGD,OAAO,SAASK,qBAAT,CAA+BL,IAA/B,EAAqC;AACxC,QAAMM,OAAO,GAAGb,WAAW,CAACc,IAAZ,CAAiBb,qBAAqB,CAACW,qBAAvC,EAA8DL,IAA9D,CAAhB;AAEA,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BI,IAAAA,OAAO,CAACE,IAAR,CAAcC,QAAD,IAAc;AACnBR,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEP,cADD;AAELQ,QAAAA,OAAO,EAAEK,QAAQ,CAACT,IAAT,CAAcU;AAFlB,OAAD,CAAR;AAIH,KALL;AAOH,GARD;AASH;AAED,OAAO,SAASC,KAAT,GAAiB;AACpB,SAAO,CAACV,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,QADD;AAELM,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASQ,mBAAT,CAA6BC,WAA7B,EAA0C;AAE7C,MAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBtB,qBAAqB,CAACkB,mBAAxC,CAAf;AACAE,EAAAA,QAAQ,CAACG,GAAT,GAAeH,QAAQ,CAACG,GAAT,GAAe,GAAf,GAAqBJ,WAApC;AAEA,QAAMP,OAAO,GAAGb,WAAW,CAACyB,GAAZ,CAAgBJ,QAAhB,CAAhB;AAEA,SAAO,CAACb,QAAD,EAAWC,QAAX,KAAwB;AAC3BI,IAAAA,OAAO,CAACE,IAAR,CAAcC,QAAD,IACTR,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAEK,QAAQ,CAACT,IAAT,CAAcU;AAFlB,KAAD,CADZ;AAMH,GAPD;AASH","sourcesContent":["import dataService from \"../../../../../../services/dataService\";\nimport diagnosisAppEndpoints from \"./diagnosis.app.endpoints\";\n\nexport const ON_ADD_EDIT_FORM_CHANGE = '[DIAGNOSIS ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_SAVE_UPDATE = '[DIAGNOSIS ADD EDIT] ON_SAVE_UPDATE';\nexport const GET_DIAGNOSIS = '[DIAGNOSIS ADD EDIT] GET_DIAGNOSIS';\nexport const ON_RESET = '[DIAGNOSIS ADD EDIT] ON_RESET';\n\nexport function onFormChange(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_ADD_EDIT_FORM_CHANGE,\n            payload: data\n        })\n    };\n}\n\n\nexport function saveOrUpdateDiagnosis(data) {\n    const request = dataService.post(diagnosisAppEndpoints.saveOrUpdateDiagnosis, data);\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: ON_SAVE_UPDATE,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function reset() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET,\n            payload: {}\n        })\n    };\n}\n\nexport function getDiagnosisDTOByID(diagnosisID) {\n\n    let endpoint = Object.assign({}, diagnosisAppEndpoints.getDiagnosisDTOByID);\n    endpoint.url = endpoint.url + '/' + diagnosisID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_DIAGNOSIS,\n                payload: response.data.result\n            })\n        );\n    };\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}