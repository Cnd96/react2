{"ast":null,"code":"import * as _ from 'lodash';\nimport Constants from \"./Constants\";\nexport const getPagedData = data => {\n  return {\n    currentPageNo: data.currentPageNo,\n    noOfRecords: data.noOfRecords,\n    pageLength: data.pageLength,\n    startPosition: data.startPosition,\n    totalNoOfPages: data.totalNoOfPages,\n    totalNoOfRecords: data.totalNoOfRecords\n  };\n};\nexport const getPagedDataFromState = data => {\n  return {\n    page: data.page,\n    rows: data.rows\n  };\n};\nexport const trimData = formValues => {\n  _.keys(formValues).forEach(key => {\n    if (_.isString(formValues[key])) {\n      formValues[key] = formValues[key].trim();\n    }\n  });\n\n  return formValues;\n};\nexport const getUserEligibleByCompany = (dataArray, fieldName) => {\n  let eligibleCompanyIDs = Constants.LOGGED_IN_USER.companies;\n  return dataArray.filter(item => {\n    return _.indexOf(eligibleCompanyIDs, item[fieldName]) != -1;\n  });\n};\nexport const replaceNullsForFormik = data => {\n  _.keys(data).forEach(key => {\n    if (!data[key] && typeof data[key] == 'object') {\n      data[key] = '';\n    }\n  });\n\n  return data;\n};","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/utils/DataExtractHelper.js"],"names":["_","Constants","getPagedData","data","currentPageNo","noOfRecords","pageLength","startPosition","totalNoOfPages","totalNoOfRecords","getPagedDataFromState","page","rows","trimData","formValues","keys","forEach","key","isString","trim","getUserEligibleByCompany","dataArray","fieldName","eligibleCompanyIDs","LOGGED_IN_USER","companies","filter","item","indexOf","replaceNullsForFormik"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAClC,SAAO;AACHC,IAAAA,aAAa,EAAED,IAAI,CAACC,aADjB;AAEHC,IAAAA,WAAW,EAAEF,IAAI,CAACE,WAFf;AAGHC,IAAAA,UAAU,EAAEH,IAAI,CAACG,UAHd;AAIHC,IAAAA,aAAa,EAAEJ,IAAI,CAACI,aAJjB;AAKHC,IAAAA,cAAc,EAAEL,IAAI,CAACK,cALlB;AAMHC,IAAAA,gBAAgB,EAAEN,IAAI,CAACM;AANpB,GAAP;AAQH,CATM;AAWP,OAAO,MAAMC,qBAAqB,GAAIP,IAAD,IAAU;AAC3C,SAAO;AACHQ,IAAAA,IAAI,EAAER,IAAI,CAACQ,IADR;AAEHC,IAAAA,IAAI,EAAET,IAAI,CAACS;AAFR,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,QAAQ,GAAIC,UAAD,IAAgB;AACpCd,EAAAA,CAAC,CAACe,IAAF,CAAOD,UAAP,EAAmBE,OAAnB,CAA2BC,GAAG,IAAI;AAC9B,QAAIjB,CAAC,CAACkB,QAAF,CAAWJ,UAAU,CAACG,GAAD,CAArB,CAAJ,EAAiC;AAC7BH,MAAAA,UAAU,CAACG,GAAD,CAAV,GAAkBH,UAAU,CAACG,GAAD,CAAV,CAAgBE,IAAhB,EAAlB;AACH;AACJ,GAJD;;AAMA,SAAOL,UAAP;AACH,CARM;AAUP,OAAO,MAAMM,wBAAwB,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC9D,MAAIC,kBAAkB,GAAGtB,SAAS,CAACuB,cAAV,CAAyBC,SAAlD;AACA,SAAOJ,SAAS,CAACK,MAAV,CAAkBC,IAAD,IAAU;AAC9B,WAAO3B,CAAC,CAAC4B,OAAF,CAAUL,kBAAV,EAA8BI,IAAI,CAACL,SAAD,CAAlC,KAAkD,CAAC,CAA1D;AACH,GAFM,CAAP;AAGH,CALM;AAOP,OAAO,MAAMO,qBAAqB,GAAI1B,IAAD,IAAU;AAC3CH,EAAAA,CAAC,CAACe,IAAF,CAAOZ,IAAP,EAAaa,OAAb,CAAsBC,GAAD,IAAS;AAE1B,QAAI,CAACd,IAAI,CAACc,GAAD,CAAL,IAAc,OAAOd,IAAI,CAACc,GAAD,CAAX,IAAoB,QAAtC,EAAgD;AAC5Cd,MAAAA,IAAI,CAACc,GAAD,CAAJ,GAAY,EAAZ;AACH;AACJ,GALD;;AAOA,SAAOd,IAAP;AACH,CATM","sourcesContent":["import * as _ from 'lodash';\nimport Constants from \"./Constants\";\n\nexport const getPagedData = (data) => {\n    return {\n        currentPageNo: data.currentPageNo,\n        noOfRecords: data.noOfRecords,\n        pageLength: data.pageLength,\n        startPosition: data.startPosition,\n        totalNoOfPages: data.totalNoOfPages,\n        totalNoOfRecords: data.totalNoOfRecords,\n    }\n};\n\nexport const getPagedDataFromState = (data) => {\n    return {\n        page: data.page,\n        rows: data.rows\n    }\n};\n\nexport const trimData = (formValues) => {\n    _.keys(formValues).forEach(key => {\n        if (_.isString(formValues[key])) {\n            formValues[key] = formValues[key].trim();\n        }\n    });\n\n    return formValues;\n};\n\nexport const getUserEligibleByCompany = (dataArray, fieldName) => {\n    let eligibleCompanyIDs = Constants.LOGGED_IN_USER.companies;\n    return dataArray.filter((item) => {\n        return _.indexOf(eligibleCompanyIDs, item[fieldName]) != -1;\n    });\n};\n\nexport const replaceNullsForFormik = (data) => {\n    _.keys(data).forEach((key) => {\n\n        if (!data[key] && typeof data[key] == 'object') {\n            data[key] = '';\n        }\n    });\n\n    return data;\n};\n"]},"metadata":{},"sourceType":"module"}