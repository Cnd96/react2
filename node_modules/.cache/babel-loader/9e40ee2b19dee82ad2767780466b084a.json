{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\config\\\\user\\\\search\\\\components\\\\UserResult.js\";\nimport React, { Component } from \"react\";\nimport * as Actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport { setStorageItem } from \"../../../../../../../utils/StorageUtils\";\nimport history from '../../../../../../../@history';\nimport { CAlert, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport { getActInaFromConstantForGrid, getCommonStringForGrid } from \"../../../../../../../utils/GridUtil\";\nimport AppPagination from \"../../../../../common/AppPagination\";\nimport * as _ from \"lodash\";\nimport { hasUserPrivilege } from \"../../../../../../../utils/PrivilegeUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getFullName = data => {\n  let title = _.trim(data.title);\n\n  let firstName = _.trim(data.firstName);\n\n  let lastName = _.trim(data.lastName);\n\n  return title.concat(' .').concat(firstName).concat(' ').concat(lastName);\n};\n\nclass RolesResult extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageDataChange = data => {\n      this.props.setPageInfo(data);\n    };\n\n    this.gotToAddEdit = userID => {\n      if (hasUserPrivilege(Constants.PRIVILEGE_CODES.HEALTH_TRACKER_SETTINGS_USER_ADD_EDIT)) {\n        setStorageItem(Constants.STORAGE.SELECTED_USER_ID, userID);\n        history.push({\n          pathname: Constants.PAGES.userAddEdit\n        });\n      }\n    };\n  }\n\n  render() {\n    let {\n      pagedUsers\n    } = this.props;\n    pagedUsers = pagedUsers ? pagedUsers : {};\n    const hasData = pagedUsers.pageData && pagedUsers.pageData.length > 0;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          xs: \"12\",\n          children: /*#__PURE__*/_jsxDEV(CCard, {\n            children: /*#__PURE__*/_jsxDEV(CCardBody, {\n              children: [!hasData && /*#__PURE__*/_jsxDEV(CAlert, {\n                color: \"warning\",\n                children: \"No user(s) found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this), hasData && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"table table-striped\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"User Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 65,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 66,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Email\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 67,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Contact No\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 68,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Status\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 69,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 64,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: pagedUsers.pageData.map(data => {\n                        return /*#__PURE__*/_jsxDEV(\"tr\", {\n                          className: 'clickable-data-row',\n                          onClick: e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            this.gotToAddEdit(data.userID);\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getCommonStringForGrid(data.userName)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 85,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getCommonStringForGrid(getFullName(data))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 86,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getCommonStringForGrid(data.email)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 87,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getCommonStringForGrid(data.contactNo)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 88,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getActInaFromConstantForGrid(data.status)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 89,\n                            columnNumber: 65\n                          }, this)]\n                        }, data.userID, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 77,\n                          columnNumber: 61\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(CRow, {\n                  children: /*#__PURE__*/_jsxDEV(CCol, {\n                    xs: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(AppPagination, {\n                      currentPageNo: pagedUsers.currentPageNo,\n                      totalNoOfPages: pagedUsers.totalNoOfPages,\n                      pageLength: pagedUsers.pageLength,\n                      onPaginationChange: this.onPageDataChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setPageInfo: Actions.setPageInfo\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  let {\n    users\n  } = _ref;\n  return {\n    pagedUsers: users.userSearch.pagedUsers\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesResult);","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/user/search/components/UserResult.js"],"names":["React","Component","Actions","connect","bindActionCreators","Constants","setStorageItem","history","CAlert","CCard","CCardBody","CCol","CRow","getActInaFromConstantForGrid","getCommonStringForGrid","AppPagination","_","hasUserPrivilege","getFullName","data","title","trim","firstName","lastName","concat","RolesResult","onPageDataChange","props","setPageInfo","gotToAddEdit","userID","PRIVILEGE_CODES","HEALTH_TRACKER_SETTINGS_USER_ADD_EDIT","STORAGE","SELECTED_USER_ID","push","pathname","PAGES","userAddEdit","render","pagedUsers","hasData","pageData","length","map","e","preventDefault","stopPropagation","userName","email","contactNo","status","currentPageNo","totalNoOfPages","pageLength","mapDispatchToProps","dispatch","mapStateToProps","users","userSearch"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport * as Actions from \"../../store/actions\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport {setStorageItem} from \"../../../../../../../utils/StorageUtils\";\nimport history from '../../../../../../../@history';\nimport {CAlert, CCard, CCardBody, CCol, CRow} from \"@coreui/react\";\nimport {getActInaFromConstantForGrid, getCommonStringForGrid} from \"../../../../../../../utils/GridUtil\";\nimport AppPagination from \"../../../../../common/AppPagination\";\nimport * as _ from \"lodash\";\nimport {hasUserPrivilege} from \"../../../../../../../utils/PrivilegeUtils\";\n\nconst getFullName = (data) => {\n    let title = _.trim(data.title);\n    let firstName = _.trim(data.firstName);\n    let lastName = _.trim(data.lastName);\n    return title.concat(' .').concat(firstName).concat(' ').concat(lastName);\n};\n\n\nclass RolesResult extends Component {\n\n    onPageDataChange = (data) => {\n        this.props.setPageInfo(data);\n    };\n\n    gotToAddEdit = (userID) => {\n\n        if(hasUserPrivilege(Constants.PRIVILEGE_CODES.HEALTH_TRACKER_SETTINGS_USER_ADD_EDIT)){\n            setStorageItem(Constants.STORAGE.SELECTED_USER_ID, userID);\n            history.push({\n                pathname: Constants.PAGES.userAddEdit\n            });\n        }\n\n    };\n\n    render() {\n\n        let {pagedUsers} = this.props;\n        pagedUsers = pagedUsers ? pagedUsers : {};\n        const hasData = pagedUsers.pageData && pagedUsers.pageData.length > 0;\n\n        return (\n            <>\n                <CRow>\n                    <CCol xs=\"12\">\n                        <CCard>\n                            <CCardBody>\n                                {\n                                    !hasData &&\n                                    <CAlert color=\"warning\">\n                                        No user(s) found.\n                                    </CAlert>\n                                }\n\n                                {\n                                    hasData &&\n                                    <>\n                                        <div className=\"table-responsive\">\n                                            <table className=\"table table-striped\">\n                                                <thead>\n                                                <tr>\n                                                    <th>User Name</th>\n                                                    <th>Name</th>\n                                                    <th>Email</th>\n                                                    <th>Contact No</th>\n                                                    <th>Status</th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n\n                                                {\n                                                    pagedUsers.pageData.map((data) => {\n                                                        return (\n                                                            <tr key={data.userID}\n                                                                className={'clickable-data-row'}\n                                                                onClick={(e) => {\n                                                                    e.preventDefault();\n                                                                    e.stopPropagation();\n                                                                    this.gotToAddEdit(data.userID);\n                                                                }}\n                                                            >\n                                                                <td>{getCommonStringForGrid(data.userName)}</td>\n                                                                <td>{getCommonStringForGrid(getFullName(data))}</td>\n                                                                <td>{getCommonStringForGrid(data.email)}</td>\n                                                                <td>{getCommonStringForGrid(data.contactNo)}</td>\n                                                                <td>\n                                                                    {\n                                                                        getActInaFromConstantForGrid(data.status)\n                                                                    }\n                                                                </td>\n                                                            </tr>\n                                                        );\n                                                    })\n                                                }\n                                                </tbody>\n                                            </table>\n                                        </div>\n\n                                        <CRow>\n                                            <CCol xs=\"12\">\n                                                <AppPagination\n                                                    currentPageNo={pagedUsers.currentPageNo}\n                                                    totalNoOfPages={pagedUsers.totalNoOfPages}\n                                                    pageLength={pagedUsers.pageLength}\n                                                    onPaginationChange={this.onPageDataChange}\n                                                />\n                                            </CCol>\n                                        </CRow>\n                                    </>\n                                }\n                            </CCardBody>\n                        </CCard>\n                    </CCol>\n                </CRow>\n            </>\n\n\n        );\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n            setPageInfo: Actions.setPageInfo,\n        },\n        dispatch);\n}\n\nfunction mapStateToProps({users}) {\n    return {\n        pagedUsers: users.userSearch.pagedUsers\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RolesResult);\n\n"]},"metadata":{},"sourceType":"module"}