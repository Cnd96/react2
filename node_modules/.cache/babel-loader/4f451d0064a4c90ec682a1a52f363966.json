{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\selectDietaryHabits\\\\components\\\\DietaryHabit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CustomCheckBox from \"../../../../../../../common/CustomCheckBox\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Action from '../store/action/select.dietary.habit.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DietaryHabit = _ref => {\n  _s();\n\n  let {\n    dietaryHabit\n  } = _ref;\n  const dispatch = useDispatch();\n  const dietaryHabits = useSelector(_ref2 => {\n    let {\n      selectDietaryHabit\n    } = _ref2;\n    return selectDietaryHabit.selectDietaryHabit;\n  });\n  const [index, setIndex] = useState();\n  useEffect(() => {\n    let index = dietaryHabits.currentIDs.findIndex(id => {\n      return id == dietaryHabit.dietaryHabitID;\n    });\n\n    if (index !== -1) {\n      dispatch(Action.onSelectOption(dietaryHabit));\n    }\n\n    setIndex(index);\n  }, []);\n  useEffect(() => {\n    let index = dietaryHabits.currentIDs.findIndex(id => {\n      return id == dietaryHabit.dietaryHabitID;\n    });\n    setIndex(index);\n  }, [dietaryHabits.currentIDs, dietaryHabits]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'privilege-checkbox',\n    children: /*#__PURE__*/_jsxDEV(CustomCheckBox, {\n      id: dietaryHabit.dietaryHabitID,\n      name: dietaryHabit.dietaryHabitID,\n      value: dietaryHabit,\n      checked: index !== -1,\n      label: dietaryHabit.dietaryHabit,\n      onCheckChange: (e, value) => {\n        dispatch(Action.onSelectOption(value));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DietaryHabit, \"dROMD0Oifo/Yf/CiAp+D24dkSl4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DietaryHabit;\nexport default DietaryHabit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DietaryHabit\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/selectDietaryHabits/components/DietaryHabit.js"],"names":["React","useEffect","useState","CustomCheckBox","useDispatch","useSelector","Action","DietaryHabit","dietaryHabit","dispatch","dietaryHabits","selectDietaryHabit","index","setIndex","currentIDs","findIndex","id","dietaryHabitID","onSelectOption","e","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,KAAKC,MAAZ,MAAwB,8CAAxB;;;AAEA,MAAMC,YAAY,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAACC,IAAAA;AAAD,GAAmB;AAErC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,aAAa,GAAGL,WAAW,CAAC;AAAA,QAAC;AAACM,MAAAA;AAAD,KAAD;AAAA,WAA0BA,kBAAkB,CAACA,kBAA7C;AAAA,GAAD,CAAjC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,KAAK,GAAGF,aAAa,CAACI,UAAd,CAAyBC,SAAzB,CAAoCC,EAAD,IAAQ;AACnD,aAAOA,EAAE,IAAIR,YAAY,CAACS,cAA1B;AACH,KAFW,CAAZ;;AAGA,QAAIL,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdH,MAAAA,QAAQ,CAACH,MAAM,CAACY,cAAP,CAAsBV,YAAtB,CAAD,CAAR;AACH;;AACDK,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GARQ,EAQN,EARM,CAAT;AAUAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,KAAK,GAAGF,aAAa,CAACI,UAAd,CAAyBC,SAAzB,CAAoCC,EAAD,IAAQ;AACnD,aAAOA,EAAE,IAAIR,YAAY,CAACS,cAA1B;AACH,KAFW,CAAZ;AAGAJ,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GALQ,EAKN,CAACF,aAAa,CAACI,UAAf,EAA2BJ,aAA3B,CALM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAE,oBAAhB;AAAA,2BACI,QAAC,cAAD;AACI,MAAA,EAAE,EAAEF,YAAY,CAACS,cADrB;AAEI,MAAA,IAAI,EAAET,YAAY,CAACS,cAFvB;AAGI,MAAA,KAAK,EAAET,YAHX;AAII,MAAA,OAAO,EAAEI,KAAK,KAAK,CAAC,CAJxB;AAKI,MAAA,KAAK,EAAEJ,YAAY,CAACA,YALxB;AAMI,MAAA,aAAa,EAAE,CAACW,CAAD,EAAIC,KAAJ,KAAc;AACzBX,QAAAA,QAAQ,CAACH,MAAM,CAACY,cAAP,CAAsBE,KAAtB,CAAD,CAAR;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CArCD;;GAAMb,Y;UAEeH,W,EACKC,W;;;KAHpBE,Y;AAuCN,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport CustomCheckBox from \"../../../../../../../common/CustomCheckBox\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as Action from '../store/action/select.dietary.habit.actions'\n\nconst DietaryHabit = ({dietaryHabit}) => {\n\n    const dispatch = useDispatch();\n    const dietaryHabits = useSelector(({selectDietaryHabit}) => selectDietaryHabit.selectDietaryHabit);\n    const [index, setIndex] = useState();\n\n    useEffect(() => {\n        let index = dietaryHabits.currentIDs.findIndex((id) => {\n            return id == dietaryHabit.dietaryHabitID\n        });\n        if (index !== -1) {\n            dispatch(Action.onSelectOption(dietaryHabit));\n        }\n        setIndex(index);\n    }, []);\n\n    useEffect(() => {\n        let index = dietaryHabits.currentIDs.findIndex((id) => {\n            return id == dietaryHabit.dietaryHabitID\n        });\n        setIndex(index);\n    }, [dietaryHabits.currentIDs, dietaryHabits]);\n\n    return (\n        <div className={'privilege-checkbox'}>\n            <CustomCheckBox\n                id={dietaryHabit.dietaryHabitID}\n                name={dietaryHabit.dietaryHabitID}\n                value={dietaryHabit}\n                checked={index !== -1}\n                label={dietaryHabit.dietaryHabit}\n                onCheckChange={(e, value) => {\n                    dispatch(Action.onSelectOption(value));\n                }}\n            />\n        </div>\n    );\n};\n\nexport default DietaryHabit;"]},"metadata":{},"sourceType":"module"}