{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\config\\\\followUps\\\\search\\\\components\\\\FollowUpResult.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CAlert, CCard, CCardHeader } from \"@coreui/react\";\nimport { setStorageItem } from \"../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport history from \"../../../../../../../@history\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport FollowUp from \"./FollowUp\";\nimport * as Action from '../../store/action/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst gotToAddEdit = followUpID => {\n  setStorageItem(Constants.STORAGE.SELECTED_FOLLOW_UP_ID, followUpID);\n  history.push({\n    pathname: Constants.PAGES.followUpsAddEdit\n  });\n};\n\nconst getItemStyle = (isDragging, draggableStyle) => ({ ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({});\n\nconst FollowUpResult = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [followUps, setFollowUps] = useState([]);\n  const data = useSelector(_ref => {\n    let {\n      followUp\n    } = _ref;\n    return followUp.followUpSearch;\n  });\n  const [updatedIndexes, setUpdatedIndexes] = useState([]);\n  useEffect(() => {\n    setFollowUps(data.followUpList);\n  }, [dispatch, data.followUpList]);\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(followUps, result.source.index, result.destination.index);\n\n    if (result.destination.index !== result.source.index) {\n      let reOrderedFollowups = [];\n      items.map((followUp, index) => {\n        let obj = Object.assign(followUp, {\n          displayOrder: index + 1\n        });\n        reOrderedFollowups.push(obj);\n      });\n      let followUpListUpdateRQ = {\n        followUpDTOList: reOrderedFollowups\n      };\n      dispatch(Action.saveReOrderedList(followUpListUpdateRQ));\n      setFollowUps(items);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CCard, {\n      children: /*#__PURE__*/_jsxDEV(CCardHeader, {\n        children: [data.followUpList && data.followUpList.length == 0 && /*#__PURE__*/_jsxDEV(CAlert, {\n          color: \"warning\",\n          children: \"No Follow Ups(s) found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), followUps.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  fontSize: '15px',\n                  backgroundColor: '#EBEDEF'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Move Order\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Follow Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n              onDragEnd: onDragEnd,\n              children: /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: \"droppable\",\n                children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"tbody\", { ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  style: getListStyle(snapshot.isDraggingOver),\n                  children: [followUps.map((data, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: data.followUpID.toString(),\n                    index: index,\n                    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      onClick: e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        gotToAddEdit(data.followUpID);\n                      },\n                      className: 'clickable-data-row',\n                      children: /*#__PURE__*/_jsxDEV(FollowUp, {\n                        data: data,\n                        gotToAddEdit: gotToAddEdit,\n                        updatedIndexes: updatedIndexes\n                      }, data.followUpID, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 119,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 57\n                    }, this)\n                  }, data.followUpID, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 49\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FollowUpResult, \"CmjWJ3WQPVINn/TqyTHUh29otQ4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FollowUpResult;\nexport default FollowUpResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowUpResult\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/followUps/search/components/FollowUpResult.js"],"names":["React","useEffect","useState","useDispatch","useSelector","CAlert","CCard","CCardHeader","setStorageItem","Constants","history","DragDropContext","Draggable","Droppable","FollowUp","Action","gotToAddEdit","followUpID","STORAGE","SELECTED_FOLLOW_UP_ID","push","pathname","PAGES","followUpsAddEdit","getItemStyle","isDragging","draggableStyle","getListStyle","isDraggingOver","FollowUpResult","dispatch","followUps","setFollowUps","data","followUp","followUpSearch","updatedIndexes","setUpdatedIndexes","followUpList","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","onDragEnd","destination","items","source","index","reOrderedFollowups","map","obj","Object","assign","displayOrder","followUpListUpdateRQ","followUpDTOList","saveReOrderedList","length","fontSize","backgroundColor","provided","snapshot","droppableProps","innerRef","toString","draggableProps","dragHandleProps","e","preventDefault","stopPropagation","placeholder"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CAlert, CCard, CCardHeader} from \"@coreui/react\";\nimport {setStorageItem} from \"../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport history from \"../../../../../../../@history\";\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\nimport FollowUp from \"./FollowUp\";\nimport * as Action from '../../store/action/'\n\n\nconst gotToAddEdit = (followUpID) => {\n    setStorageItem(Constants.STORAGE.SELECTED_FOLLOW_UP_ID, followUpID);\n    history.push({\n        pathname: Constants.PAGES.followUpsAddEdit\n    });\n};\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({});\n\n\nconst FollowUpResult = () => {\n\n    const dispatch = useDispatch();\n    const [followUps, setFollowUps] = useState([]);\n    const data = useSelector(({followUp}) => followUp.followUpSearch);\n    const [updatedIndexes, setUpdatedIndexes] = useState([]);\n\n    useEffect(() => {\n        setFollowUps(data.followUpList);\n    }, [dispatch, data.followUpList]);\n\n    const reorder = (list, startIndex, endIndex) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    };\n\n\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n        const items = reorder(\n            followUps,\n            result.source.index,\n            result.destination.index\n        );\n\n        if (result.destination.index !== result.source.index) {\n            let reOrderedFollowups = [];\n            items.map((followUp, index) => {\n                let obj = Object.assign(followUp, {displayOrder: (index + 1)});\n                reOrderedFollowups.push(obj);\n            });\n            let followUpListUpdateRQ = {\n                followUpDTOList: reOrderedFollowups\n            };\n\n            dispatch(Action.saveReOrderedList(followUpListUpdateRQ));\n            setFollowUps(items);\n        }\n    };\n\n    return (\n        <div>\n            <CCard>\n                <CCardHeader>\n                    {\n                        data.followUpList && data.followUpList.length == 0 &&\n                        <CAlert color=\"warning\">\n                            No Follow Ups(s) found.\n                        </CAlert>\n                    }\n                    {\n                        followUps.length > 0\n                        &&\n                        <>\n\n                            <table className=\"table table-striped\">\n                                <thead>\n                                <tr style={{fontSize: '15px', backgroundColor: '#EBEDEF'}}>\n                                    <th>Move Order</th>\n                                    <th>Follow Up</th>\n                                    <th>Status</th>\n                                </tr>\n                                </thead>\n\n                                <DragDropContext onDragEnd={onDragEnd}>\n                                    <Droppable droppableId=\"droppable\">\n                                        {(provided, snapshot) => (\n                                            <tbody\n                                                {...provided.droppableProps}\n                                                ref={provided.innerRef}\n                                                style={getListStyle(snapshot.isDraggingOver)}\n                                            >\n                                            {followUps.map((data, index) => (\n                                                <Draggable key={data.followUpID}\n                                                           draggableId={data.followUpID.toString()} index={index}>\n                                                    {(provided, snapshot) => (\n                                                        <tr\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            onClick={(e) => {\n                                                                e.preventDefault();\n                                                                e.stopPropagation();\n                                                                gotToAddEdit(data.followUpID);\n                                                            }}\n                                                            className={'clickable-data-row'}\n                                                        >\n\n                                                            <FollowUp\n                                                                key={data.followUpID}\n                                                                data={data}\n                                                                gotToAddEdit={gotToAddEdit}\n                                                                updatedIndexes={updatedIndexes}\n                                                            />\n                                                        </tr>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n                                            </tbody>\n                                        )}\n                                    </Droppable>\n                                </DragDropContext>\n                            </table>\n                        </>\n                    }\n                </CCardHeader>\n            </CCard>\n        </div>\n    );\n};\n\nexport default FollowUpResult;"]},"metadata":{},"sourceType":"module"}