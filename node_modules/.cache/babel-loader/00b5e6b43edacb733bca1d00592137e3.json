{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\headerComponents\\\\StepperHeader.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CButton, CImg, CTooltip } from \"@coreui/react\";\nimport { useSelector } from \"react-redux\";\nimport icon from '../../../../../../../assets/img/medical-record (1).png';\nimport icon3 from \"../../../../../../../assets/img/icons/3.png\";\nimport icon5 from \"../../../../../../../assets/img/icons/5.png\";\nimport icon10 from \"../../../../../../../assets/img/icons/10.png\";\nimport icon11 from \"../../../../../../../assets/img/icons/11.png\";\nimport icon12 from \"../../../../../../../assets/img/icons/12.png\";\nimport icon13 from \"../../../../../../../assets/img/icons/13.png\";\nimport icon14 from \"../../../../../../../assets/img/icons/14.png\";\nimport icon17 from \"../../../../../../../assets/img/icons/17.png\";\nimport icon19 from \"../../../../../../../assets/img/icons/19.png\";\nimport icon20 from \"../../../../../../../assets/img/icons/20.png\";\nimport icon22 from \"../../../../../../../assets/img/icons/22.png\";\nimport icon23 from \"../../../../../../../assets/img/icons/23.png\";\nimport icon24 from \"../../../../../../../assets/img/icons/24.png\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validator = (patientData, checkupData) => {\n  return patientData && patientData.patient.patientID && checkupData && checkupData.checkup.checkupID;\n};\n\nconst StepperHeader = _ref => {\n  _s();\n\n  let {\n    pageIndex,\n    setPageIndex\n  } = _ref;\n  const patientData = useSelector(_ref2 => {\n    let {\n      patient\n    } = _ref2;\n    return patient ? patient.patientAddEdit : null;\n  });\n  const checkupData = useSelector(_ref3 => {\n    let {\n      checkup\n    } = _ref3;\n    return checkup ? checkup.checkupAddEdit : null;\n  });\n  const actionKeyMap = [{\n    index: Constants.PAGE_INDEXES.RegisterPatientBase,\n    id: 'create',\n    toolTip: 'Generate Patient Details',\n    icon: icon11,\n    action: () => {\n      setPageIndex(Constants.PAGE_INDEXES.RegisterPatientBase);\n    }\n  }, {\n    index: Constants.PAGE_INDEXES.PatientComplainBase,\n    id: 'patientComplain',\n    toolTip: 'Patient Complain',\n    icon: icon23,\n    action: () => {\n      if (patientData.patient.patientID) {\n        setPageIndex(Constants.PAGE_INDEXES.PatientComplainBase);\n      }\n    }\n  }, {\n    index: Constants.PAGE_INDEXES.SelectFamilyHistory,\n    id: 'family',\n    toolTip: 'Family History',\n    icon: icon5,\n    action: () => {\n      if (patientData.patient.patientID) {\n        setPageIndex(Constants.PAGE_INDEXES.SelectFamilyHistory);\n      }\n    }\n  }, {\n    index: Constants.PAGE_INDEXES.SelectSocialHabits,\n    id: 'habits',\n    toolTip: 'Social Habits',\n    icon: icon3,\n    action: () => {\n      if (patientData.patient.patientID) {\n        setPageIndex(Constants.PAGE_INDEXES.SelectSocialHabits);\n      }\n    }\n  }, {\n    index: Constants.PAGE_INDEXES.CreateCheckUpBase,\n    id: 'checkup',\n    toolTip: 'Checkup Date',\n    icon: icon10,\n    action: () => {\n      if (patientData.patient.patientID) {\n        setPageIndex(Constants.PAGE_INDEXES.CreateCheckUpBase);\n      }\n    }\n  }, {\n    index: Constants.PAGE_INDEXES.MedicalTest,\n    id: 'reports',\n    toolTip: 'Medical Results',\n    icon: icon12,\n    action: () => {\n      if (validator(patientData, checkupData)) {\n        setPageIndex(Constants.PAGE_INDEXES.MedicalTest);\n      }\n    }\n  }, {\n    index: Constants.PAGE_INDEXES.SelectDiagnosis,\n    id: 'problems',\n    toolTip: 'Diagnosis/Problems',\n    icon: icon13,\n    action: () => {\n      if (validator(patientData, checkupData)) {\n        setPageIndex(Constants.PAGE_INDEXES.SelectDiagnosis);\n      }\n    }\n  }, {\n    index: Constants.PAGE_INDEXES.CreateInstructionNote,\n    id: 'instruction',\n    toolTip: 'Instruction',\n    icon: icon14,\n    action: () => {\n      if (validator(patientData, checkupData)) {\n        setPageIndex(Constants.PAGE_INDEXES.CreateInstructionNote);\n      }\n    }\n  }, {\n    index: Constants.PAGE_INDEXES.SelectPrescription,\n    id: 'prescription',\n    toolTip: 'RX',\n    icon: icon17,\n    action: () => {\n      if (validator(patientData, checkupData)) {\n        setPageIndex(Constants.PAGE_INDEXES.SelectPrescription);\n      }\n    }\n  }, {\n    index: Constants.PAGE_INDEXES.SelectDietaryHabit,\n    id: 'diet',\n    toolTip: 'Dietary Habits',\n    icon: icon19,\n    action: () => {\n      if (validator(patientData, checkupData)) {\n        setPageIndex(Constants.PAGE_INDEXES.SelectDietaryHabit);\n      }\n    }\n  }, {\n    index: Constants.PAGE_INDEXES.SelectPhysicalActivities,\n    id: 'fitness',\n    toolTip: 'Physical Activities',\n    icon: icon20,\n    action: () => {\n      if (validator(patientData, checkupData)) {\n        setPageIndex(Constants.PAGE_INDEXES.SelectPhysicalActivities);\n      }\n    }\n  }, // {\n  //     index: 9,\n  //     id: 'followups',\n  //     name: 'Follow Ups',\n  //     icon: 'cil-alarm',\n  //     action: () => {\n  //         if (validator(patientData, checkupData)) {\n  //             setPageIndex(9);\n  //         }\n  //     },\n  // },\n  // {\n  //     index: 10,\n  //     id: 'fitToWork',\n  //     name: 'Fit To Work Category',\n  //     icon: 'cil-check-alt',\n  //     action: () => {\n  //         if (validator(patientData, checkupData)) {\n  //             setPageIndex(10);\n  //         }\n  //     },\n  // },\n  //\n  // {\n  //     index: 11,\n  //     id: 'checkupSummery',\n  //     name: 'Checkup Summery',\n  //     icon: 'cil-book',\n  //     action: () => {\n  //         if (validator(patientData, checkupData)) {\n  //             setPageIndex(11);\n  //         }\n  //     },\n  // },\n  {\n    index: Constants.PAGE_INDEXES.OtherLettersBase,\n    id: 'otherLetters',\n    toolTip: 'Other Letters',\n    icon: icon22,\n    action: () => {\n      if (validator(patientData, checkupData)) {\n        setPageIndex(Constants.PAGE_INDEXES.OtherLettersBase);\n      }\n    }\n  }, {\n    index: Constants.PAGE_INDEXES.AllergyHistoryBase,\n    id: 'allergyHistory',\n    toolTip: 'Allergy History',\n    icon: icon24,\n    action: () => {\n      if (patientData.patient.patientID) {\n        setPageIndex(Constants.PAGE_INDEXES.AllergyHistoryBase);\n      }\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-row flex-wrap  justify-content-between\",\n    children: actionKeyMap.map(button => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mr-1 mb-1 stepper-header-btn-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(CTooltip, {\n          content: button.toolTip,\n          placement: \"top\",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            id: button.id,\n            color: \"light\",\n            className: 'stepper-header-btn',\n            onClick: () => {\n              button.action();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `d-flex flex-column action-button main-tab-header ${button.index == pageIndex ? 'selected-tab-header' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  target: \"_blank\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(CImg, {\n                    style: {\n                      height: '52px'\n                    },\n                    src: button.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 62\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 42\n                }, this), button.index < pageIndex && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: 'tab-header-ok-mark',\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-check-circle\",\n                    \"aria-hidden\": \"true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }, this)\n      }, button.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StepperHeader, \"oIuH7q9QfQbUleKZXlDzCZWLdTg=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = StepperHeader;\nexport default StepperHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepperHeader\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/headerComponents/StepperHeader.js"],"names":["React","CButton","CImg","CTooltip","useSelector","icon","icon3","icon5","icon10","icon11","icon12","icon13","icon14","icon17","icon19","icon20","icon22","icon23","icon24","Constants","validator","patientData","checkupData","patient","patientID","checkup","checkupID","StepperHeader","pageIndex","setPageIndex","patientAddEdit","checkupAddEdit","actionKeyMap","index","PAGE_INDEXES","RegisterPatientBase","id","toolTip","action","PatientComplainBase","SelectFamilyHistory","SelectSocialHabits","CreateCheckUpBase","MedicalTest","SelectDiagnosis","CreateInstructionNote","SelectPrescription","SelectDietaryHabit","SelectPhysicalActivities","OtherLettersBase","AllergyHistoryBase","map","button","height"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,QAAvB,QAAsC,eAAtC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,wDAAjB;AACA,OAAOC,KAAP,MAAkB,6CAAlB;AACA,OAAOC,KAAP,MAAkB,6CAAlB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;;AAEA,MAAMC,SAAS,GAAG,CAACC,WAAD,EAAcC,WAAd,KAA8B;AAC5C,SAAOD,WAAW,IAAIA,WAAW,CAACE,OAAZ,CAAoBC,SAAnC,IAAgDF,WAAhD,IAA+DA,WAAW,CAACG,OAAZ,CAAoBC,SAA1F;AACH,CAFD;;AAIA,MAAMC,aAAa,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA8B;AAEjD,QAAMR,WAAW,GAAGjB,WAAW,CAAC;AAAA,QAAC;AAACmB,MAAAA;AAAD,KAAD;AAAA,WAAeA,OAAO,GAAGA,OAAO,CAACO,cAAX,GAA4B,IAAlD;AAAA,GAAD,CAA/B;AACA,QAAMR,WAAW,GAAGlB,WAAW,CAAC;AAAA,QAAC;AAACqB,MAAAA;AAAD,KAAD;AAAA,WAAeA,OAAO,GAAGA,OAAO,CAACM,cAAX,GAA4B,IAAlD;AAAA,GAAD,CAA/B;AAEA,QAAMC,YAAY,GAAG,CACjB;AACIC,IAAAA,KAAK,EAAEd,SAAS,CAACe,YAAV,CAAuBC,mBADlC;AAEIC,IAAAA,EAAE,EAAE,QAFR;AAGIC,IAAAA,OAAO,EAAE,0BAHb;AAIIhC,IAAAA,IAAI,EAAEI,MAJV;AAKI6B,IAAAA,MAAM,EAAE,MAAM;AACVT,MAAAA,YAAY,CAACV,SAAS,CAACe,YAAV,CAAuBC,mBAAxB,CAAZ;AACH;AAPL,GADiB,EAUjB;AACIF,IAAAA,KAAK,EAAEd,SAAS,CAACe,YAAV,CAAuBK,mBADlC;AAEIH,IAAAA,EAAE,EAAE,iBAFR;AAGIC,IAAAA,OAAO,EAAE,kBAHb;AAIIhC,IAAAA,IAAI,EAAEY,MAJV;AAKIqB,IAAAA,MAAM,EAAE,MAAM;AACV,UAAIjB,WAAW,CAACE,OAAZ,CAAoBC,SAAxB,EAAmC;AAC/BK,QAAAA,YAAY,CAACV,SAAS,CAACe,YAAV,CAAuBK,mBAAxB,CAAZ;AACH;AACJ;AATL,GAViB,EAsBjB;AACIN,IAAAA,KAAK,EAAEd,SAAS,CAACe,YAAV,CAAuBM,mBADlC;AAEIJ,IAAAA,EAAE,EAAE,QAFR;AAGIC,IAAAA,OAAO,EAAE,gBAHb;AAIIhC,IAAAA,IAAI,EAAEE,KAJV;AAKI+B,IAAAA,MAAM,EAAE,MAAM;AACV,UAAIjB,WAAW,CAACE,OAAZ,CAAoBC,SAAxB,EAAmC;AAC/BK,QAAAA,YAAY,CAACV,SAAS,CAACe,YAAV,CAAuBM,mBAAxB,CAAZ;AACH;AACJ;AATL,GAtBiB,EAkCjB;AACIP,IAAAA,KAAK,EAAEd,SAAS,CAACe,YAAV,CAAuBO,kBADlC;AAEIL,IAAAA,EAAE,EAAE,QAFR;AAGIC,IAAAA,OAAO,EAAE,eAHb;AAIIhC,IAAAA,IAAI,EAAEC,KAJV;AAKIgC,IAAAA,MAAM,EAAE,MAAM;AACV,UAAIjB,WAAW,CAACE,OAAZ,CAAoBC,SAAxB,EAAmC;AAC/BK,QAAAA,YAAY,CAACV,SAAS,CAACe,YAAV,CAAuBO,kBAAxB,CAAZ;AACH;AACJ;AATL,GAlCiB,EA6CjB;AACIR,IAAAA,KAAK,EAAEd,SAAS,CAACe,YAAV,CAAuBQ,iBADlC;AAEIN,IAAAA,EAAE,EAAE,SAFR;AAGIC,IAAAA,OAAO,EAAE,cAHb;AAIIhC,IAAAA,IAAI,EAAEG,MAJV;AAKI8B,IAAAA,MAAM,EAAE,MAAM;AACV,UAAIjB,WAAW,CAACE,OAAZ,CAAoBC,SAAxB,EAAmC;AAC/BK,QAAAA,YAAY,CAACV,SAAS,CAACe,YAAV,CAAuBQ,iBAAxB,CAAZ;AACH;AACJ;AATL,GA7CiB,EAwDjB;AACIT,IAAAA,KAAK,EAAEd,SAAS,CAACe,YAAV,CAAuBS,WADlC;AAEIP,IAAAA,EAAE,EAAE,SAFR;AAGIC,IAAAA,OAAO,EAAE,iBAHb;AAIIhC,IAAAA,IAAI,EAAEK,MAJV;AAKI4B,IAAAA,MAAM,EAAE,MAAM;AACV,UAAIlB,SAAS,CAACC,WAAD,EAAcC,WAAd,CAAb,EAAyC;AACrCO,QAAAA,YAAY,CAACV,SAAS,CAACe,YAAV,CAAuBS,WAAxB,CAAZ;AACH;AACJ;AATL,GAxDiB,EAmEjB;AACIV,IAAAA,KAAK,EAAEd,SAAS,CAACe,YAAV,CAAuBU,eADlC;AAEIR,IAAAA,EAAE,EAAE,UAFR;AAGIC,IAAAA,OAAO,EAAE,oBAHb;AAIIhC,IAAAA,IAAI,EAAEM,MAJV;AAKI2B,IAAAA,MAAM,EAAE,MAAM;AACV,UAAIlB,SAAS,CAACC,WAAD,EAAcC,WAAd,CAAb,EAAyC;AACrCO,QAAAA,YAAY,CAACV,SAAS,CAACe,YAAV,CAAuBU,eAAxB,CAAZ;AACH;AACJ;AATL,GAnEiB,EA8EjB;AACIX,IAAAA,KAAK,EAAEd,SAAS,CAACe,YAAV,CAAuBW,qBADlC;AAEIT,IAAAA,EAAE,EAAE,aAFR;AAGIC,IAAAA,OAAO,EAAE,aAHb;AAIIhC,IAAAA,IAAI,EAAEO,MAJV;AAKI0B,IAAAA,MAAM,EAAE,MAAM;AACV,UAAIlB,SAAS,CAACC,WAAD,EAAcC,WAAd,CAAb,EAAyC;AACrCO,QAAAA,YAAY,CAACV,SAAS,CAACe,YAAV,CAAuBW,qBAAxB,CAAZ;AACH;AACJ;AATL,GA9EiB,EAyFjB;AACIZ,IAAAA,KAAK,EAAEd,SAAS,CAACe,YAAV,CAAuBY,kBADlC;AAEIV,IAAAA,EAAE,EAAE,cAFR;AAGIC,IAAAA,OAAO,EAAE,IAHb;AAIIhC,IAAAA,IAAI,EAAEQ,MAJV;AAKIyB,IAAAA,MAAM,EAAE,MAAM;AACV,UAAIlB,SAAS,CAACC,WAAD,EAAcC,WAAd,CAAb,EAAyC;AACrCO,QAAAA,YAAY,CAACV,SAAS,CAACe,YAAV,CAAuBY,kBAAxB,CAAZ;AACH;AACJ;AATL,GAzFiB,EAoGjB;AACIb,IAAAA,KAAK,EAAEd,SAAS,CAACe,YAAV,CAAuBa,kBADlC;AAEIX,IAAAA,EAAE,EAAE,MAFR;AAGIC,IAAAA,OAAO,EAAE,gBAHb;AAIIhC,IAAAA,IAAI,EAAES,MAJV;AAKIwB,IAAAA,MAAM,EAAE,MAAM;AACV,UAAIlB,SAAS,CAACC,WAAD,EAAcC,WAAd,CAAb,EAAyC;AACrCO,QAAAA,YAAY,CAACV,SAAS,CAACe,YAAV,CAAuBa,kBAAxB,CAAZ;AACH;AACJ;AATL,GApGiB,EAgHjB;AACId,IAAAA,KAAK,EAAEd,SAAS,CAACe,YAAV,CAAuBc,wBADlC;AAEIZ,IAAAA,EAAE,EAAE,SAFR;AAGIC,IAAAA,OAAO,EAAE,qBAHb;AAIIhC,IAAAA,IAAI,EAAEU,MAJV;AAKIuB,IAAAA,MAAM,EAAE,MAAM;AACV,UAAIlB,SAAS,CAACC,WAAD,EAAcC,WAAd,CAAb,EAAyC;AACrCO,QAAAA,YAAY,CAACV,SAAS,CAACe,YAAV,CAAuBc,wBAAxB,CAAZ;AACH;AACJ;AATL,GAhHiB,EA4HjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACIf,IAAAA,KAAK,EAAEd,SAAS,CAACe,YAAV,CAAuBe,gBADlC;AAEIb,IAAAA,EAAE,EAAE,cAFR;AAGIC,IAAAA,OAAO,EAAE,eAHb;AAIIhC,IAAAA,IAAI,EAAEW,MAJV;AAKIsB,IAAAA,MAAM,EAAE,MAAM;AACV,UAAIlB,SAAS,CAACC,WAAD,EAAcC,WAAd,CAAb,EAAyC;AACrCO,QAAAA,YAAY,CAACV,SAAS,CAACe,YAAV,CAAuBe,gBAAxB,CAAZ;AACH;AACJ;AATL,GAhKiB,EA4KjB;AACIhB,IAAAA,KAAK,EAAEd,SAAS,CAACe,YAAV,CAAuBgB,kBADlC;AAEId,IAAAA,EAAE,EAAE,gBAFR;AAGIC,IAAAA,OAAO,EAAE,iBAHb;AAIIhC,IAAAA,IAAI,EAAEa,MAJV;AAKIoB,IAAAA,MAAM,EAAE,MAAM;AACV,UAAIjB,WAAW,CAACE,OAAZ,CAAoBC,SAAxB,EAAmC;AAC/BK,QAAAA,YAAY,CAACV,SAAS,CAACe,YAAV,CAAuBgB,kBAAxB,CAAZ;AACH;AACJ;AATL,GA5KiB,CAArB;AA0LA,sBACI;AAAK,IAAA,SAAS,EAAC,oDAAf;AAAA,cAEQlB,YAAY,CAACmB,GAAb,CAAkBC,MAAD,IAAY;AACzB,0BACI;AACK,QAAA,SAAS,EAAC,sCADf;AAAA,+BAEI,QAAC,QAAD;AACI,UAAA,OAAO,EAAEA,MAAM,CAACf,OADpB;AAEI,UAAA,SAAS,EAAC,KAFd;AAAA,iCAII,QAAC,OAAD;AACI,YAAA,EAAE,EAAEe,MAAM,CAAChB,EADf;AAEI,YAAA,KAAK,EAAC,OAFV;AAGI,YAAA,SAAS,EAAE,oBAHf;AAII,YAAA,OAAO,EAAE,MAAM;AACXgB,cAAAA,MAAM,CAACd,MAAP;AACH,aANL;AAAA,mCAQI;AACI,cAAA,SAAS,EAAG,oDAAmDc,MAAM,CAACnB,KAAP,IAAgBL,SAAhB,GAA4B,qBAA5B,GAAoD,EAAG,EAD1H;AAAA,qCAGA;AAAA,wCACK;AAAG,kBAAA,MAAM,EAAC,QAAV;AAAA,+CAAoB,QAAC,IAAD;AAChB,oBAAA,KAAK,EAAE;AAACyB,sBAAAA,MAAM,EAAE;AAAT,qBADS;AAEhB,oBAAA,GAAG,EAAED,MAAM,CAAC/C;AAFI;AAAA;AAAA;AAAA;AAAA,0BAApB;AAAA;AAAA;AAAA;AAAA;AAAA,wBADL,EAOQ+C,MAAM,CAACnB,KAAP,GAAeL,SAAf,iBACA;AAAM,kBAAA,SAAS,EAAE,oBAAjB;AAAA,yCACQ;AAAG,oBAAA,SAAS,EAAC,oBAAb;AAAkC,mCAAY;AAA9C;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,wBARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAFJ,SAAUwB,MAAM,CAAChB,EAAjB;AAAA;AAAA;AAAA;AAAA,cADJ;AAqCH,KAtCD;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH,CA5OD;;GAAMT,a;UAEkBvB,W,EACAA,W;;;KAHlBuB,a;AA8ON,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport {CButton, CImg, CTooltip} from \"@coreui/react\";\nimport {useSelector} from \"react-redux\";\nimport icon from '../../../../../../../assets/img/medical-record (1).png';\nimport icon3 from \"../../../../../../../assets/img/icons/3.png\";\nimport icon5 from \"../../../../../../../assets/img/icons/5.png\";\nimport icon10 from \"../../../../../../../assets/img/icons/10.png\";\nimport icon11 from \"../../../../../../../assets/img/icons/11.png\";\nimport icon12 from \"../../../../../../../assets/img/icons/12.png\";\nimport icon13 from \"../../../../../../../assets/img/icons/13.png\";\nimport icon14 from \"../../../../../../../assets/img/icons/14.png\";\nimport icon17 from \"../../../../../../../assets/img/icons/17.png\";\nimport icon19 from \"../../../../../../../assets/img/icons/19.png\";\nimport icon20 from \"../../../../../../../assets/img/icons/20.png\";\nimport icon22 from \"../../../../../../../assets/img/icons/22.png\";\nimport icon23 from \"../../../../../../../assets/img/icons/23.png\";\nimport icon24 from \"../../../../../../../assets/img/icons/24.png\";\nimport Constants from \"../../../../../../../utils/Constants\";\n\nconst validator = (patientData, checkupData) => {\n    return patientData && patientData.patient.patientID && checkupData && checkupData.checkup.checkupID\n};\n\nconst StepperHeader = ({pageIndex, setPageIndex}) => {\n\n    const patientData = useSelector(({patient}) => patient ? patient.patientAddEdit : null);\n    const checkupData = useSelector(({checkup}) => checkup ? checkup.checkupAddEdit : null);\n\n    const actionKeyMap = [\n        {\n            index: Constants.PAGE_INDEXES.RegisterPatientBase,\n            id: 'create',\n            toolTip: 'Generate Patient Details',\n            icon: icon11,\n            action: () => {\n                setPageIndex(Constants.PAGE_INDEXES.RegisterPatientBase);\n            },\n        },\n        {\n            index: Constants.PAGE_INDEXES.PatientComplainBase,\n            id: 'patientComplain',\n            toolTip: 'Patient Complain',\n            icon: icon23,\n            action: () => {\n                if (patientData.patient.patientID) {\n                    setPageIndex(Constants.PAGE_INDEXES.PatientComplainBase);\n                }\n            },\n        },\n\n        {\n            index: Constants.PAGE_INDEXES.SelectFamilyHistory,\n            id: 'family',\n            toolTip: 'Family History',\n            icon: icon5,\n            action: () => {\n                if (patientData.patient.patientID) {\n                    setPageIndex(Constants.PAGE_INDEXES.SelectFamilyHistory);\n                }\n            },\n        },\n\n        {\n            index: Constants.PAGE_INDEXES.SelectSocialHabits,\n            id: 'habits',\n            toolTip: 'Social Habits',\n            icon: icon3,\n            action: () => {\n                if (patientData.patient.patientID) {\n                    setPageIndex(Constants.PAGE_INDEXES.SelectSocialHabits);\n                }\n            },\n        },\n        {\n            index: Constants.PAGE_INDEXES.CreateCheckUpBase,\n            id: 'checkup',\n            toolTip: 'Checkup Date',\n            icon: icon10,\n            action: () => {\n                if (patientData.patient.patientID) {\n                    setPageIndex(Constants.PAGE_INDEXES.CreateCheckUpBase);\n                }\n            },\n        },\n        {\n            index: Constants.PAGE_INDEXES.MedicalTest,\n            id: 'reports',\n            toolTip: 'Medical Results',\n            icon: icon12,\n            action: () => {\n                if (validator(patientData, checkupData)) {\n                    setPageIndex(Constants.PAGE_INDEXES.MedicalTest);\n                }\n            },\n        },\n        {\n            index: Constants.PAGE_INDEXES.SelectDiagnosis,\n            id: 'problems',\n            toolTip: 'Diagnosis/Problems',\n            icon: icon13,\n            action: () => {\n                if (validator(patientData, checkupData)) {\n                    setPageIndex(Constants.PAGE_INDEXES.SelectDiagnosis);\n                }\n            },\n        },\n        {\n            index: Constants.PAGE_INDEXES.CreateInstructionNote,\n            id: 'instruction',\n            toolTip: 'Instruction',\n            icon: icon14,\n            action: () => {\n                if (validator(patientData, checkupData)) {\n                    setPageIndex(Constants.PAGE_INDEXES.CreateInstructionNote);\n                }\n            },\n        },\n        {\n            index: Constants.PAGE_INDEXES.SelectPrescription,\n            id: 'prescription',\n            toolTip: 'RX',\n            icon: icon17,\n            action: () => {\n                if (validator(patientData, checkupData)) {\n                    setPageIndex(Constants.PAGE_INDEXES.SelectPrescription);\n                }\n            },\n        },\n        {\n            index: Constants.PAGE_INDEXES.SelectDietaryHabit,\n            id: 'diet',\n            toolTip: 'Dietary Habits',\n            icon: icon19,\n            action: () => {\n                if (validator(patientData, checkupData)) {\n                    setPageIndex(Constants.PAGE_INDEXES.SelectDietaryHabit);\n                }\n            },\n        },\n\n        {\n            index: Constants.PAGE_INDEXES.SelectPhysicalActivities,\n            id: 'fitness',\n            toolTip: 'Physical Activities',\n            icon: icon20,\n            action: () => {\n                if (validator(patientData, checkupData)) {\n                    setPageIndex(Constants.PAGE_INDEXES.SelectPhysicalActivities);\n                }\n            },\n        },\n\n        // {\n        //     index: 9,\n        //     id: 'followups',\n        //     name: 'Follow Ups',\n        //     icon: 'cil-alarm',\n        //     action: () => {\n        //         if (validator(patientData, checkupData)) {\n        //             setPageIndex(9);\n        //         }\n        //     },\n        // },\n\n        // {\n        //     index: 10,\n        //     id: 'fitToWork',\n        //     name: 'Fit To Work Category',\n        //     icon: 'cil-check-alt',\n        //     action: () => {\n        //         if (validator(patientData, checkupData)) {\n        //             setPageIndex(10);\n        //         }\n        //     },\n        // },\n        //\n        // {\n        //     index: 11,\n        //     id: 'checkupSummery',\n        //     name: 'Checkup Summery',\n        //     icon: 'cil-book',\n        //     action: () => {\n        //         if (validator(patientData, checkupData)) {\n        //             setPageIndex(11);\n        //         }\n        //     },\n        // },\n\n        {\n            index: Constants.PAGE_INDEXES.OtherLettersBase,\n            id: 'otherLetters',\n            toolTip: 'Other Letters',\n            icon: icon22,\n            action: () => {\n                if (validator(patientData, checkupData)) {\n                    setPageIndex(Constants.PAGE_INDEXES.OtherLettersBase);\n                }\n            },\n        },\n\n        {\n            index: Constants.PAGE_INDEXES.AllergyHistoryBase,\n            id: 'allergyHistory',\n            toolTip: 'Allergy History',\n            icon: icon24,\n            action: () => {\n                if (patientData.patient.patientID) {\n                    setPageIndex(Constants.PAGE_INDEXES.AllergyHistoryBase);\n                }\n            },\n        }\n\n    ];\n\n    return (\n        <div className=\"d-flex flex-row flex-wrap  justify-content-between\">\n            {\n                actionKeyMap.map((button) => {\n                    return (\n                        <div key={button.id}\n                             className='mr-1 mb-1 stepper-header-btn-wrapper'>\n                            <CTooltip\n                                content={button.toolTip}\n                                placement=\"top\"\n                            >\n                                <CButton\n                                    id={button.id}\n                                    color='light'\n                                    className={'stepper-header-btn'}\n                                    onClick={() => {\n                                        button.action();\n                                    }}\n                                >\n                                    <div\n                                        className={`d-flex flex-column action-button main-tab-header ${button.index == pageIndex ? 'selected-tab-header' : ''}`}\n                                    >\n                                    <span>\n                                         <a target=\"_blank\"> <CImg\n                                             style={{height: '52px'}}\n                                             src={button.icon}\n                                         /></a>\n                                        {/*<CIcon size={'lg'} name={button.icon}/>*/}\n                                        {\n                                            button.index < pageIndex &&\n                                            <span className={'tab-header-ok-mark'}>\n                                                    <i className=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\n                                                </span>\n                                        }\n                                    </span>\n                                    </div>\n                                </CButton>\n                            </CTooltip>\n\n                        </div>\n                    )\n                })\n            }\n        </div>\n    );\n};\n\nexport default StepperHeader;\n"]},"metadata":{},"sourceType":"module"}