{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable jsdoc/require-returns */\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n/* eslint-disable jsdoc/require-param */\n\n/* eslint-disable valid-jsdoc */\n\n/**\n * Chart legend\n */\n\n\nimport { remove, Browser, extend } from '@syncfusion/ej2-base';\nimport { LegendOptions, BaseLegend } from '../../common/legend/legend';\nimport { textTrim, removeElement, RectOption, withInBounds, blazorTemplatesReset } from '../../common/utils/helper';\nimport { getUnicodeText } from '../../common/utils/helper';\nimport { measureText, Rect, getElement } from '@syncfusion/ej2-svg-base';\nimport { legendRender, legendClick, regSub, regSup } from '../../common/model/constants';\n/**\n * `Legend` module is used to render legend for the chart.\n */\n\nvar Legend =\n/** @class */\nfunction (_super) {\n  __extends(Legend, _super);\n\n  function Legend(chart) {\n    var _this = _super.call(this, chart) || this;\n\n    _this.library = _this;\n\n    _this.addEventListener();\n\n    return _this;\n  }\n  /**\n   * Binding events for legend module.\n   */\n\n\n  Legend.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n\n    this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n    this.chart.on('click', this.click, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n  };\n  /**\n   * UnBinding events for legend module.\n   */\n\n\n  Legend.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n\n    this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n    this.chart.off('click', this.click);\n    this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n  };\n  /**\n   * To handle mosue move for legend module\n   */\n\n\n  Legend.prototype.mouseMove = function (e) {\n    if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n      this.move(e);\n\n      if (this.chart.highlightModule && this.chart.highlightMode !== 'None') {\n        this.click(e);\n      }\n    }\n  };\n  /**\n   * To handle mosue end for legend module\n   */\n\n\n  Legend.prototype.mouseEnd = function (e) {\n    if (this.chart.legendSettings.visible && this.chart.isTouch) {\n      this.move(e);\n    }\n  };\n  /**\n   * Get the legend options.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Legend.prototype.getLegendOptions = function (visibleSeriesCollection, chart) {\n    this.legendCollections = [];\n    var seriesType;\n    var fill;\n    var colors = [];\n    this.isRtlEnable = chart.enableRtl;\n    this.isReverse = !this.isRtlEnable && chart.legendSettings.reverse;\n\n    if (visibleSeriesCollection.length > 1) {\n      this.legend.mode = 'Series';\n    }\n\n    for (var _i = 0, visibleSeriesCollection_1 = visibleSeriesCollection; _i < visibleSeriesCollection_1.length; _i++) {\n      var series = visibleSeriesCollection_1[_i];\n\n      if (this.legend.mode === 'Series') {\n        if (series.category !== 'Indicator') {\n          seriesType = chart.chartAreaType === 'PolarRadar' ? series.drawType : series.type; // To set legend color when use pointColorMapping\n\n          fill = series.pointColorMapping && series.points.length > 0 ? series.points[0].interior ? series.points[0].interior : series.interior : series.interior;\n          this.legendCollections.push(new LegendOptions(series.name, fill, series.legendShape, series.category === 'TrendLine' ? this.chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible, seriesType, series.legendImageUrl, series.marker.shape, series.marker.visible));\n        }\n      } else if (this.legend.mode === 'Point') {\n        var _loop_1 = function (points) {\n          seriesType = chart.chartAreaType === 'PolarRadar' ? series.drawType : series.type;\n          fill = points.interior ? points.interior : series.interior;\n\n          if (this_1.legendCollections.filter(function (i) {\n            return i.text === points.x.toString();\n          }).length === 0) {\n            this_1.legendCollections.push(new LegendOptions(points.x.toString(), fill, series.legendShape, series.category === 'TrendLine' ? this_1.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible, seriesType, '', series.marker.shape, series.marker.visible));\n          }\n        };\n\n        var this_1 = this;\n\n        for (var _a = 0, _b = series.points; _a < _b.length; _a++) {\n          var points = _b[_a];\n\n          _loop_1(points);\n        }\n      } else if (this.legend.mode === 'Range') {\n        for (var _c = 0, _d = series.points; _c < _d.length; _c++) {\n          var points = _d[_c];\n          seriesType = chart.chartAreaType === 'PolarRadar' ? series.drawType : series.type;\n          fill = points.interior ? points.interior : series.interior;\n          var legendLabel = 'Others';\n\n          if (colors.indexOf(fill) < 0) {\n            colors.push(fill);\n\n            if (chart.rangeColorSettings.length >= 1 && chart.rangeColorSettings[0].colors.length === 1) {\n              for (var _e = 0, _f = chart.rangeColorSettings; _e < _f.length; _e++) {\n                var rangeMap = _f[_e];\n\n                if (rangeMap.colors[0] === fill) {\n                  legendLabel = rangeMap.label;\n                }\n              }\n\n              this.legendCollections.push(new LegendOptions(legendLabel, fill, series.legendShape, series.category === 'TrendLine' ? this.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible, seriesType, '', series.marker.shape, series.marker.visible));\n            }\n          }\n        }\n      } else {\n        if (this.legendCollections.length === 0 && chart.rangeColorSettings.length > 0) {\n          var startLabel = chart.rangeColorSettings[0].start.toString();\n          var endLabel = chart.rangeColorSettings[chart.rangeColorSettings.length - 1].end.toString();\n          this.legendCollections.push(new LegendOptions(startLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n          this.legendCollections.push(new LegendOptions(endLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n        }\n      }\n    }\n\n    if (this.isReverse && chart.legendSettings.mode !== 'Gradient') {\n      this.legendCollections.reverse();\n    }\n  };\n  /** @private */\n\n\n  Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n    this.calculateLegendTitle(legend, legendBounds);\n    this.isTitle = legend.title ? true : false;\n    var padding = legend.padding;\n    var titlePosition = legend.titlePosition;\n    var extraHeight = 0;\n    var extraWidth = 0;\n    var arrowWidth = this.arrowWidth;\n    var arrowHeight = this.arrowHeight;\n    var verticalArrowSpace = this.isVertical && !legend.enablePages ? arrowHeight : 0;\n    var titleSpace = this.isTitle && titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n    titleSpace = this.isTitle && this.isVertical && titlePosition !== 'Top' ? this.legendTitleSize.height + this.fivePixel : titleSpace;\n\n    if (!this.isVertical) {\n      extraHeight = !legend.height ? availableSize.height / 100 * 5 : 0;\n    } else {\n      extraWidth = !legend.width ? availableSize.width / 100 * 5 : 0;\n    }\n\n    legendBounds.height += extraHeight;\n    legendBounds.width += extraWidth;\n    var shapeWidth = legend.shapeWidth;\n    var shapePadding = legend.shapePadding;\n    var maximumWidth = 0;\n    var rowWidth = 0;\n    var legendWidth = 0;\n    var columnHeight = 0;\n    var rowCount = 0;\n    var titlePlusArrowSpace = 0;\n    var legendEventArgs;\n    this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n    var render = false;\n\n    for (var _i = 0, _a = this.legendCollections; _i < _a.length; _i++) {\n      var legendOption = _a[_i];\n\n      if (regSub.test(legendOption.text)) {\n        legendOption.text = getUnicodeText(legendOption.text, regSub);\n      }\n\n      if (regSup.test(legendOption.text)) {\n        legendOption.text = getUnicodeText(legendOption.text, regSup);\n      }\n\n      legendEventArgs = {\n        fill: legendOption.fill,\n        text: legendOption.text,\n        shape: legendOption.shape,\n        markerShape: legendOption.markerShape,\n        name: legendRender,\n        cancel: false\n      };\n      this.chart.trigger(legendRender, legendEventArgs);\n      legendOption.render = !legendEventArgs.cancel;\n      legendOption.text = legendEventArgs.text;\n      legendOption.fill = legendEventArgs.fill;\n      legendOption.shape = legendEventArgs.shape;\n      legendOption.markerShape = legendEventArgs.markerShape;\n      legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n      shapeWidth = legendOption.text ? legend.shapeWidth : 0;\n      shapePadding = legendOption.text ? legend.shapePadding : 0;\n\n      if (legendOption.render && legendOption.text) {\n        render = true;\n        legendWidth = shapeWidth + shapePadding + legendOption.textSize.width + padding;\n        rowWidth = rowWidth + legendWidth;\n\n        if (!legend.enablePages && !this.isVertical) {\n          titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n          titlePlusArrowSpace += arrowWidth;\n        }\n\n        if (legendBounds.width < padding + rowWidth + titlePlusArrowSpace || this.isVertical) {\n          maximumWidth = Math.max(maximumWidth, rowWidth + padding + titlePlusArrowSpace - (this.isVertical ? 0 : legendWidth));\n\n          if (rowCount === 0 && legendWidth !== rowWidth) {\n            rowCount = 1;\n          }\n\n          rowWidth = this.isVertical ? 0 : legendWidth;\n          rowCount++;\n          columnHeight = rowCount * (this.maxItemHeight + padding) + padding + titleSpace + verticalArrowSpace;\n        }\n      }\n    }\n\n    columnHeight = Math.max(columnHeight, this.maxItemHeight + padding + padding + titleSpace);\n    this.isPaging = legendBounds.height < columnHeight;\n\n    if (this.isPaging && !legend.enablePages) {\n      if (this.isVertical) {\n        // eslint-disable-next-line no-self-assign\n        columnHeight = columnHeight;\n      } else {\n        columnHeight = this.maxItemHeight + padding + padding + (titlePosition === 'Top' ? titleSpace : 0);\n      }\n    }\n\n    this.totalPages = rowCount;\n\n    if (!this.isPaging && !this.isVertical) {\n      rowWidth += this.isTitle && titlePosition !== 'Top' ? this.fivePixel + this.legendTitleSize.width + this.fivePixel : 0;\n    }\n\n    if (render) {\n      this.setBounds(Math.max(rowWidth + padding, maximumWidth), columnHeight, legend, legendBounds);\n    } else {\n      this.setBounds(0, 0, legend, legendBounds);\n    }\n  };\n  /** @private */\n\n\n  Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n    var padding = this.legend.padding;\n    var textWidth = textPadding + prevLegend.textSize.width;\n    var previousBound = prevLegend.location.x + (!this.isRtlEnable ? textWidth : -textWidth);\n\n    if (this.isWithinBounds(previousBound, legendOption.textSize.width + textPadding, rect) || this.isVertical) {\n      legendOption.location.x = start.x;\n      legendOption.location.y = count === firstLegend ? prevLegend.location.y : prevLegend.location.y + this.maxItemHeight + padding;\n    } else {\n      legendOption.location.x = count === firstLegend ? prevLegend.location.x : previousBound;\n      legendOption.location.y = prevLegend.location.y;\n    }\n\n    var availwidth = !this.isRtlEnable ? this.legendBounds.x + this.legendBounds.width - (legendOption.location.x + textPadding - this.legend.shapeWidth / 2) : legendOption.location.x - textPadding + this.legend.shapeWidth / 2 - this.legendBounds.x;\n    legendOption.text = textTrim(+availwidth.toFixed(4), legendOption.text, this.legend.textStyle);\n  };\n\n  Legend.prototype.isWithinBounds = function (previousBound, textWidth, rect) {\n    if (!this.isRtlEnable) {\n      return previousBound + textWidth > rect.x + rect.width + this.legend.shapeWidth / 2;\n    } else {\n      return previousBound - textWidth < rect.x - this.legend.shapeWidth / 2;\n    }\n  };\n  /** @private */\n\n\n  Legend.prototype.LegendClick = function (index, event) {\n    var chart = this.chart;\n    var seriesIndex = chart.legendSettings.mode === 'Series' ? index : 0;\n    var legendIndex = !this.isReverse ? index : this.legendCollections.length - 1 - index;\n    var series = chart.visibleSeries[seriesIndex];\n    var legend = this.legendCollections[legendIndex];\n    var changeDetection = 'isProtectedOnChange';\n\n    if (chart.legendSettings.mode === 'Series') {\n      var legendClickArgs = {\n        legendText: legend.text,\n        legendShape: legend.shape,\n        chart: chart.isBlazor ? {} : chart,\n        series: series,\n        points: series.points,\n        name: legendClick,\n        cancel: false\n      };\n      this.chart.trigger(legendClick, legendClickArgs);\n      series.legendShape = legendClickArgs.legendShape;\n\n      if (series.fill !== null) {\n        chart.visibleSeries[index].interior = series.fill;\n      }\n\n      if (chart.legendSettings.toggleVisibility) {\n        if (series.category === 'TrendLine') {\n          if (!chart.series[series.sourceIndex].trendlines[series.index].visible) {\n            chart.series[series.sourceIndex].trendlines[series.index].visible = true;\n          } else {\n            chart.series[series.sourceIndex].trendlines[series.index].visible = false;\n          }\n        } else {\n          series.chart[changeDetection] = true;\n          this.changeSeriesVisiblity(series, series.visible);\n        }\n\n        legend.visible = series.category === 'TrendLine' ? chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible;\n        this.refreshLegendToggle(chart, series);\n      } else if (chart.selectionModule) {\n        chart.selectionModule.legendSelection(chart, index, event);\n      } else if (chart.highlightModule) {\n        chart.highlightModule.legendSelection(chart, index, event);\n      }\n\n      series.chart[changeDetection] = false;\n    } else if (chart.legendSettings.mode === 'Point') {\n      var point = series.points[index];\n      var legendClickArgs = {\n        legendText: legend.text,\n        legendShape: legend.shape,\n        chart: chart.isBlazor ? {} : chart,\n        series: series,\n        points: [point],\n        name: legendClick,\n        cancel: false\n      };\n      this.chart.trigger(legendClick, legendClickArgs);\n\n      if (chart.legendSettings.toggleVisibility) {\n        point.visible = !point.visible;\n        var legendOption = this.legendCollections[index];\n        legendOption.visible = point.visible;\n        this.refreshLegendToggle(chart, series);\n      }\n    } else if (chart.legendSettings.mode === 'Range') {\n      var points = [];\n      var legendOption = this.legendCollections[index];\n\n      for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n        var point = _a[_i];\n\n        if (legendOption.fill === (point.interior || series.interior)) {\n          points.push(point);\n        }\n      }\n\n      var legendClickArgs = {\n        legendText: legend.text,\n        legendShape: legend.shape,\n        chart: chart.isBlazor ? {} : chart,\n        series: series,\n        points: points,\n        name: legendClick,\n        cancel: false\n      };\n      this.chart.trigger(legendClick, legendClickArgs);\n\n      if (chart.legendSettings.toggleVisibility) {\n        legendOption.visible = !legendOption.visible;\n\n        for (var _b = 0, points_1 = points; _b < points_1.length; _b++) {\n          var point = points_1[_b];\n          point.visible = !point.visible;\n        }\n\n        this.refreshLegendToggle(chart, series);\n      }\n    }\n  };\n\n  Legend.prototype.refreshLegendToggle = function (chart, series) {\n    var selectedDataIndexes = [];\n\n    if (chart.selectionModule) {\n      selectedDataIndexes = extend([], chart.selectionModule.selectedDataIndexes, null, true);\n    }\n\n    if (chart.svgObject.childNodes.length > 0 && !chart.enableAnimation && !chart.enableCanvas) {\n      while (chart.svgObject.lastChild) {\n        chart.svgObject.removeChild(chart.svgObject.lastChild);\n      }\n\n      remove(chart.svgObject);\n    }\n\n    chart.animateSeries = false;\n    chart.redraw = chart.enableAnimation;\n    chart.rotatedDataLabelCollections = [];\n    removeElement(getElement(chart.element.id + '_Secondary_Element').querySelectorAll('.ejSVGTooltip')[0]);\n    blazorTemplatesReset(chart);\n    this.redrawSeriesElements(series, chart);\n    chart.removeSvg();\n    chart.refreshAxis();\n    series.refreshAxisLabel();\n    this.refreshSeries(chart.visibleSeries);\n    chart.markerRender.removeHighlightedMarker();\n    chart.refreshBound();\n    chart.trigger('loaded', {\n      chart: chart\n    });\n\n    if (selectedDataIndexes.length > 0) {\n      chart.selectionModule.selectedDataIndexes = selectedDataIndexes;\n      chart.selectionModule.redrawSelection(chart, chart.selectionMode);\n    }\n\n    if (chart.highlightModule && chart.highlightMode !== 'None') {\n      chart.highlightModule.redrawSelection(chart, chart.highlightMode);\n    }\n\n    chart.redraw = false;\n  };\n\n  Legend.prototype.changeSeriesVisiblity = function (series, visibility) {\n    series.visible = !visibility;\n\n    if (this.isSecondaryAxis(series.xAxis)) {\n      series.xAxis.internalVisibility = series.xAxis.series.some(function (value) {\n        return value.visible;\n      });\n    }\n\n    if (this.isSecondaryAxis(series.yAxis)) {\n      series.yAxis.internalVisibility = series.yAxis.series.some(function (value) {\n        return value.visible;\n      });\n    }\n  };\n\n  Legend.prototype.isSecondaryAxis = function (axis) {\n    return this.chart.axes.indexOf(axis) > -1;\n  };\n\n  Legend.prototype.redrawSeriesElements = function (series, chart) {\n    if (!chart.redraw) {\n      return null;\n    }\n\n    removeElement(chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabelCollections');\n  };\n\n  Legend.prototype.refreshSeries = function (seriesCollection) {\n    for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n      var series = seriesCollection_1[_i];\n\n      if (series.type.indexOf('Spline') > -1) {\n        var isArea = series.type.indexOf('Area') > -1 || series.drawType.indexOf('Area') > -1;\n        var isRange = series.type.indexOf('Range') > -1;\n        this.chart['spline' + (isArea ? isRange ? 'RangeArea' : 'Area' : '') + 'SeriesModule'].findSplinePoint(series);\n      }\n\n      series.position = undefined;\n    }\n  };\n  /**\n   * To show the tooltip for the trimmed text in legend.\n   *\n   * @returns {void}\n   */\n\n\n  Legend.prototype.click = function (event) {\n    var _this = this;\n\n    if (!this.chart.legendSettings.visible) {\n      return;\n    }\n\n    var pageX = this.chart.mouseX;\n    var pageY = this.chart.mouseY;\n    var legendRegion = [];\n    var targetId = event.target.id;\n    var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_', this.legendID + '_shape_'];\n    var seriesIndex;\n\n    for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n      var id = legendItemsId_1[_i];\n\n      if (targetId.indexOf(id) > -1) {\n        seriesIndex = parseInt(targetId.split(id)[1], 10);\n        this.LegendClick(seriesIndex, event);\n        break;\n      }\n    }\n\n    if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n      this.changePage(event, true);\n    } else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n      this.changePage(event, false);\n    }\n\n    if (this.chart.enableCanvas && this.pagingRegions.length) {\n      this.checkWithinBounds(pageX, pageY);\n    }\n\n    legendRegion = this.legendRegions.filter(function (region) {\n      return withInBounds(pageX, pageY + (_this.isPaging ? (_this.currentPageNumber - 1) * _this.translatePage(null, 1, 2) : 0), region.rect);\n    });\n\n    if (legendRegion.length && this.chart.enableCanvas) {\n      this.LegendClick(legendRegion[0].index, event);\n    }\n  };\n  /**\n   * To check click position is within legend bounds\n   */\n\n\n  Legend.prototype.checkWithinBounds = function (pageX, pageY) {\n    var cRender = this.chart.renderer;\n    var bounds = this.legendBounds;\n    var borderWidth = this.chart.legendSettings.border.width;\n    var canvasRect = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n    canvasRect.x = canvasRect.x - borderWidth / 2;\n    canvasRect.y = canvasRect.y - borderWidth / 2;\n    canvasRect.width = canvasRect.width + borderWidth;\n    canvasRect.height = canvasRect.height + borderWidth;\n\n    if (withInBounds(pageX, pageY, this.pagingRegions[0])) {\n      // pageDown calculations are performing here\n      if (!this.isRtlEnable) {\n        this.canvasPageDown(cRender, canvasRect, bounds);\n      } else {\n        this.canvasPageUp(cRender, canvasRect, bounds);\n      }\n\n      return null;\n    }\n\n    if (withInBounds(pageX, pageY, this.pagingRegions[1])) {\n      // pageUp calculations are performing here\n      if (!this.isRtlEnable) {\n        this.canvasPageUp(cRender, canvasRect, bounds);\n      } else {\n        this.canvasPageDown(cRender, canvasRect, bounds);\n      }\n\n      return null;\n    }\n  };\n\n  Legend.prototype.canvasPageDown = function (cRender, canvasRect, bounds) {\n    if (--this.currentPageNumber > 0) {\n      this.legendRegions = [];\n      cRender.clearRect(canvasRect);\n      cRender.canvasClip(new RectOption('legendClipPath', 'transparent', {\n        width: 0,\n        color: ''\n      }, null, canvasRect));\n      this.renderLegend(this.chart, this.legend, bounds);\n      cRender.canvasRestore();\n    } else {\n      ++this.currentPageNumber;\n    }\n  };\n\n  Legend.prototype.canvasPageUp = function (cRender, canvasRect, bounds) {\n    if (++this.currentPageNumber > 0 && this.currentPageNumber <= this.totalNoOfPages) {\n      this.legendRegions = [];\n      cRender.clearRect(canvasRect);\n      cRender.canvasClip(new RectOption('legendClipPath', 'transpaent', {\n        width: 0,\n        color: ''\n      }, null, canvasRect));\n      this.renderLegend(this.chart, this.legend, bounds);\n      cRender.canvasRestore();\n    } else {\n      --this.currentPageNumber;\n    }\n  };\n  /**\n   * Get module name\n   */\n\n\n  Legend.prototype.getModuleName = function () {\n    return 'Legend';\n  };\n  /**\n   * To destroy the Legend.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Legend.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  return Legend;\n}(BaseLegend);\n\nexport { Legend };","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/node_modules/@syncfusion/ej2-charts/src/chart/legend/legend.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","remove","Browser","extend","LegendOptions","BaseLegend","textTrim","removeElement","RectOption","withInBounds","blazorTemplatesReset","getUnicodeText","measureText","Rect","getElement","legendRender","legendClick","regSub","regSup","Legend","_super","chart","_this","call","library","addEventListener","isDestroyed","on","touchMoveEvent","mouseMove","click","touchEndEvent","mouseEnd","removeEventListener","off","e","legendSettings","visible","isTouch","move","highlightModule","highlightMode","getLegendOptions","visibleSeriesCollection","legendCollections","seriesType","fill","colors","isRtlEnable","enableRtl","isReverse","reverse","length","legend","mode","_i","visibleSeriesCollection_1","series","category","chartAreaType","drawType","type","pointColorMapping","points","interior","push","name","legendShape","sourceIndex","trendlines","index","legendImageUrl","marker","shape","_loop_1","this_1","filter","i","text","x","toString","_a","_b","_c","_d","legendLabel","indexOf","rangeColorSettings","_e","_f","rangeMap","label","startLabel","start","endLabel","end","getLegendBounds","availableSize","legendBounds","calculateLegendTitle","isTitle","title","padding","titlePosition","extraHeight","extraWidth","arrowWidth","arrowHeight","verticalArrowSpace","isVertical","enablePages","titleSpace","legendTitleSize","height","fivePixel","width","shapeWidth","shapePadding","maximumWidth","rowWidth","legendWidth","columnHeight","rowCount","titlePlusArrowSpace","legendEventArgs","maxItemHeight","Math","max","textStyle","shapeHeight","render","legendOption","test","markerShape","cancel","trigger","textSize","isPaging","totalPages","setBounds","getRenderPoint","textPadding","prevLegend","rect","count","firstLegend","textWidth","previousBound","location","isWithinBounds","y","availwidth","toFixed","LegendClick","event","seriesIndex","legendIndex","visibleSeries","changeDetection","legendClickArgs","legendText","isBlazor","toggleVisibility","changeSeriesVisiblity","refreshLegendToggle","selectionModule","legendSelection","point","points_1","selectedDataIndexes","svgObject","childNodes","enableAnimation","enableCanvas","lastChild","removeChild","animateSeries","redraw","rotatedDataLabelCollections","element","id","querySelectorAll","redrawSeriesElements","removeSvg","refreshAxis","refreshAxisLabel","refreshSeries","markerRender","removeHighlightedMarker","refreshBound","redrawSelection","selectionMode","visibility","isSecondaryAxis","xAxis","internalVisibility","some","value","yAxis","axis","axes","undefined","seriesCollection","seriesCollection_1","isArea","isRange","findSplinePoint","position","pageX","mouseX","pageY","mouseY","legendRegion","targetId","target","legendItemsId","legendID","legendItemsId_1","parseInt","split","changePage","pagingRegions","checkWithinBounds","legendRegions","region","currentPageNumber","translatePage","cRender","renderer","bounds","borderWidth","border","canvasRect","canvasPageDown","canvasPageUp","clearRect","canvasClip","color","renderLegend","canvasRestore","totalNoOfPages","getModuleName","destroy"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;AAaA;;AACA;;AACA;;AACA;;AACA;AACA;AACA;;;AACA,SAASI,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,QAAwC,sBAAxC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,4BAA1C;AACA,SAASC,QAAT,EAAmBC,aAAnB,EAAkCC,UAAlC,EAA8CC,YAA9C,EAA4DC,oBAA5D,QAAwF,2BAAxF;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,UAA5B,QAA8C,0BAA9C;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,MAApC,EAA4CC,MAA5C,QAA0D,8BAA1D;AACA;AACA;AACA;;AACA,IAAIC,MAAM;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC1CjC,EAAAA,SAAS,CAACgC,MAAD,EAASC,MAAT,CAAT;;AACA,WAASD,MAAT,CAAgBE,KAAhB,EAAuB;AACnB,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,EAAkBF,KAAlB,KAA4B,IAAxC;;AACAC,IAAAA,KAAK,CAACE,OAAN,GAAgBF,KAAhB;;AACAA,IAAAA,KAAK,CAACG,gBAAN;;AACA,WAAOH,KAAP;AACH;AACD;AACJ;AACA;;;AACIH,EAAAA,MAAM,CAACpB,SAAP,CAAiB0B,gBAAjB,GAAoC,YAAY;AAC5C,QAAI,KAAKJ,KAAL,CAAWK,WAAf,EAA4B;AACxB;AACH;;AACD,SAAKL,KAAL,CAAWM,EAAX,CAAczB,OAAO,CAAC0B,cAAtB,EAAsC,KAAKC,SAA3C,EAAsD,IAAtD;AACA,SAAKR,KAAL,CAAWM,EAAX,CAAc,OAAd,EAAuB,KAAKG,KAA5B,EAAmC,IAAnC;AACA,SAAKT,KAAL,CAAWM,EAAX,CAAczB,OAAO,CAAC6B,aAAtB,EAAqC,KAAKC,QAA1C,EAAoD,IAApD;AACH,GAPD;AAQA;AACJ;AACA;;;AACIb,EAAAA,MAAM,CAACpB,SAAP,CAAiBkC,mBAAjB,GAAuC,YAAY;AAC/C,QAAI,KAAKZ,KAAL,CAAWK,WAAf,EAA4B;AACxB;AACH;;AACD,SAAKL,KAAL,CAAWa,GAAX,CAAehC,OAAO,CAAC0B,cAAvB,EAAuC,KAAKC,SAA5C;AACA,SAAKR,KAAL,CAAWa,GAAX,CAAe,OAAf,EAAwB,KAAKJ,KAA7B;AACA,SAAKT,KAAL,CAAWa,GAAX,CAAehC,OAAO,CAAC6B,aAAvB,EAAsC,KAAKC,QAA3C;AACH,GAPD;AAQA;AACJ;AACA;;;AACIb,EAAAA,MAAM,CAACpB,SAAP,CAAiB8B,SAAjB,GAA6B,UAAUM,CAAV,EAAa;AACtC,QAAI,KAAKd,KAAL,CAAWe,cAAX,CAA0BC,OAA1B,IAAqC,CAAC,KAAKhB,KAAL,CAAWiB,OAArD,EAA8D;AAC1D,WAAKC,IAAL,CAAUJ,CAAV;;AACA,UAAI,KAAKd,KAAL,CAAWmB,eAAX,IAA8B,KAAKnB,KAAL,CAAWoB,aAAX,KAA6B,MAA/D,EAAuE;AACnE,aAAKX,KAAL,CAAWK,CAAX;AACH;AACJ;AACJ,GAPD;AAQA;AACJ;AACA;;;AACIhB,EAAAA,MAAM,CAACpB,SAAP,CAAiBiC,QAAjB,GAA4B,UAAUG,CAAV,EAAa;AACrC,QAAI,KAAKd,KAAL,CAAWe,cAAX,CAA0BC,OAA1B,IAAqC,KAAKhB,KAAL,CAAWiB,OAApD,EAA6D;AACzD,WAAKC,IAAL,CAAUJ,CAAV;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACIhB,EAAAA,MAAM,CAACpB,SAAP,CAAiB2C,gBAAjB,GAAoC,UAAUC,uBAAV,EAAmCtB,KAAnC,EAA0C;AAC1E,SAAKuB,iBAAL,GAAyB,EAAzB;AACA,QAAIC,UAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,SAAKC,WAAL,GAAmB3B,KAAK,CAAC4B,SAAzB;AACA,SAAKC,SAAL,GAAiB,CAAC,KAAKF,WAAN,IAAqB3B,KAAK,CAACe,cAAN,CAAqBe,OAA3D;;AACA,QAAIR,uBAAuB,CAACS,MAAxB,GAAiC,CAArC,EAAwC;AACpC,WAAKC,MAAL,CAAYC,IAAZ,GAAmB,QAAnB;AACH;;AACD,SAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,yBAAyB,GAAGb,uBAA7C,EAAsEY,EAAE,GAAGC,yBAAyB,CAACJ,MAArG,EAA6GG,EAAE,EAA/G,EAAmH;AAC/G,UAAIE,MAAM,GAAGD,yBAAyB,CAACD,EAAD,CAAtC;;AACA,UAAI,KAAKF,MAAL,CAAYC,IAAZ,KAAqB,QAAzB,EAAmC;AAC/B,YAAIG,MAAM,CAACC,QAAP,KAAoB,WAAxB,EAAqC;AACjCb,UAAAA,UAAU,GAAIxB,KAAK,CAACsC,aAAN,KAAwB,YAAzB,GAAyCF,MAAM,CAACG,QAAhD,GACTH,MAAM,CAACI,IADX,CADiC,CAGjC;;AACAf,UAAAA,IAAI,GAAIW,MAAM,CAACK,iBAAP,IAA4BL,MAAM,CAACM,MAAP,CAAcX,MAAd,GAAuB,CAApD,GACFK,MAAM,CAACM,MAAP,CAAc,CAAd,EAAiBC,QAAjB,GAA4BP,MAAM,CAACM,MAAP,CAAc,CAAd,EAAiBC,QAA7C,GAAwDP,MAAM,CAACO,QAD7D,GACyEP,MAAM,CAACO,QADvF;AAEA,eAAKpB,iBAAL,CAAuBqB,IAAvB,CAA4B,IAAI7D,aAAJ,CAAkBqD,MAAM,CAACS,IAAzB,EAA+BpB,IAA/B,EAAqCW,MAAM,CAACU,WAA5C,EAA0DV,MAAM,CAACC,QAAP,KAAoB,WAApB,GAClF,KAAKrC,KAAL,CAAWoC,MAAX,CAAkBA,MAAM,CAACW,WAAzB,EAAsCC,UAAtC,CAAiDZ,MAAM,CAACa,KAAxD,EAA+DjC,OADmB,GACToB,MAAM,CAACpB,OADxD,EACkEQ,UADlE,EAC8EY,MAAM,CAACc,cADrF,EACqGd,MAAM,CAACe,MAAP,CAAcC,KADnH,EAC0HhB,MAAM,CAACe,MAAP,CAAcnC,OADxI,CAA5B;AAEH;AACJ,OAVD,MAWK,IAAI,KAAKgB,MAAL,CAAYC,IAAZ,KAAqB,OAAzB,EAAkC;AACnC,YAAIoB,OAAO,GAAG,UAAUX,MAAV,EAAkB;AAC5BlB,UAAAA,UAAU,GAAIxB,KAAK,CAACsC,aAAN,KAAwB,YAAzB,GAAyCF,MAAM,CAACG,QAAhD,GACTH,MAAM,CAACI,IADX;AAEAf,UAAAA,IAAI,GAAGiB,MAAM,CAACC,QAAP,GAAkBD,MAAM,CAACC,QAAzB,GAAoCP,MAAM,CAACO,QAAlD;;AACA,cAAIW,MAAM,CAAC/B,iBAAP,CAAyBgC,MAAzB,CAAgC,UAAUC,CAAV,EAAa;AAAE,mBAAOA,CAAC,CAACC,IAAF,KAAWf,MAAM,CAACgB,CAAP,CAASC,QAAT,EAAlB;AAAwC,WAAvF,EAAyF5B,MAAzF,KAAoG,CAAxG,EAA2G;AACvGuB,YAAAA,MAAM,CAAC/B,iBAAP,CAAyBqB,IAAzB,CAA8B,IAAI7D,aAAJ,CAAkB2D,MAAM,CAACgB,CAAP,CAASC,QAAT,EAAlB,EAAuClC,IAAvC,EAA6CW,MAAM,CAACU,WAApD,EAAkEV,MAAM,CAACC,QAAP,KAAoB,WAApB,GAC5FiB,MAAM,CAACtD,KAAP,CAAaoC,MAAb,CAAoBA,MAAM,CAACW,WAA3B,EAAwCC,UAAxC,CAAmDZ,MAAM,CAACa,KAA1D,EAAiEjC,OAD2B,GACjB0B,MAAM,CAAC1B,OADxD,EACkEQ,UADlE,EAC8E,EAD9E,EACkFY,MAAM,CAACe,MAAP,CAAcC,KADhG,EACuGhB,MAAM,CAACe,MAAP,CAAcnC,OADrH,CAA9B;AAEH;AACJ,SARD;;AASA,YAAIsC,MAAM,GAAG,IAAb;;AACA,aAAK,IAAIM,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAGzB,MAAM,CAACM,MAA7B,EAAqCkB,EAAE,GAAGC,EAAE,CAAC9B,MAA7C,EAAqD6B,EAAE,EAAvD,EAA2D;AACvD,cAAIlB,MAAM,GAAGmB,EAAE,CAACD,EAAD,CAAf;;AACAP,UAAAA,OAAO,CAACX,MAAD,CAAP;AACH;AACJ,OAfI,MAgBA,IAAI,KAAKV,MAAL,CAAYC,IAAZ,KAAqB,OAAzB,EAAkC;AACnC,aAAK,IAAI6B,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG3B,MAAM,CAACM,MAA7B,EAAqCoB,EAAE,GAAGC,EAAE,CAAChC,MAA7C,EAAqD+B,EAAE,EAAvD,EAA2D;AACvD,cAAIpB,MAAM,GAAGqB,EAAE,CAACD,EAAD,CAAf;AACAtC,UAAAA,UAAU,GAAIxB,KAAK,CAACsC,aAAN,KAAwB,YAAzB,GAAyCF,MAAM,CAACG,QAAhD,GACTH,MAAM,CAACI,IADX;AAEAf,UAAAA,IAAI,GAAGiB,MAAM,CAACC,QAAP,GAAkBD,MAAM,CAACC,QAAzB,GAAoCP,MAAM,CAACO,QAAlD;AACA,cAAIqB,WAAW,GAAG,QAAlB;;AACA,cAAItC,MAAM,CAACuC,OAAP,CAAexC,IAAf,IAAuB,CAA3B,EAA8B;AAC1BC,YAAAA,MAAM,CAACkB,IAAP,CAAYnB,IAAZ;;AACA,gBAAIzB,KAAK,CAACkE,kBAAN,CAAyBnC,MAAzB,IAAmC,CAAnC,IAAwC/B,KAAK,CAACkE,kBAAN,CAAyB,CAAzB,EAA4BxC,MAA5B,CAAmCK,MAAnC,KAA8C,CAA1F,EAA6F;AACzF,mBAAK,IAAIoC,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAGpE,KAAK,CAACkE,kBAA5B,EAAgDC,EAAE,GAAGC,EAAE,CAACrC,MAAxD,EAAgEoC,EAAE,EAAlE,EAAsE;AAClE,oBAAIE,QAAQ,GAAGD,EAAE,CAACD,EAAD,CAAjB;;AACA,oBAAIE,QAAQ,CAAC3C,MAAT,CAAgB,CAAhB,MAAuBD,IAA3B,EAAiC;AAC7BuC,kBAAAA,WAAW,GAAGK,QAAQ,CAACC,KAAvB;AACH;AACJ;;AACD,mBAAK/C,iBAAL,CAAuBqB,IAAvB,CAA4B,IAAI7D,aAAJ,CAAkBiF,WAAlB,EAA+BvC,IAA/B,EAAqCW,MAAM,CAACU,WAA5C,EAA0DV,MAAM,CAACC,QAAP,KAAoB,WAApB,GAClF,KAAKrC,KAAL,CAAWoC,MAAX,CAAkBA,MAAM,CAACW,WAAzB,EAAsCC,UAAtC,CAAiDZ,MAAM,CAACa,KAAxD,EAA+DjC,OADmB,GACT0B,MAAM,CAAC1B,OADxD,EACkEQ,UADlE,EAC8E,EAD9E,EACkFY,MAAM,CAACe,MAAP,CAAcC,KADhG,EACuGhB,MAAM,CAACe,MAAP,CAAcnC,OADrH,CAA5B;AAEH;AACJ;AACJ;AACJ,OArBI,MAsBA;AACD,YAAI,KAAKO,iBAAL,CAAuBQ,MAAvB,KAAkC,CAAlC,IAAuC/B,KAAK,CAACkE,kBAAN,CAAyBnC,MAAzB,GAAkC,CAA7E,EAAgF;AAC5E,cAAIwC,UAAU,GAAGvE,KAAK,CAACkE,kBAAN,CAAyB,CAAzB,EAA4BM,KAA5B,CAAkCb,QAAlC,EAAjB;AACA,cAAIc,QAAQ,GAAGzE,KAAK,CAACkE,kBAAN,CAAyBlE,KAAK,CAACkE,kBAAN,CAAyBnC,MAAzB,GAAkC,CAA3D,EAA8D2C,GAA9D,CAAkEf,QAAlE,EAAf;AACA,eAAKpC,iBAAL,CAAuBqB,IAAvB,CAA4B,IAAI7D,aAAJ,CAAkBwF,UAAlB,EAA8BnC,MAAM,CAACO,QAArC,EAA+C,WAA/C,EAA4D,IAA5D,EAAkEnB,UAAlE,EAA8E,EAA9E,EAAkFY,MAAM,CAACe,MAAP,CAAcC,KAAhG,EAAuGhB,MAAM,CAACe,MAAP,CAAcnC,OAArH,CAA5B;AACA,eAAKO,iBAAL,CAAuBqB,IAAvB,CAA4B,IAAI7D,aAAJ,CAAkB0F,QAAlB,EAA4BrC,MAAM,CAACO,QAAnC,EAA6C,WAA7C,EAA0D,IAA1D,EAAgEnB,UAAhE,EAA4E,EAA5E,EAAgFY,MAAM,CAACe,MAAP,CAAcC,KAA9F,EAAqGhB,MAAM,CAACe,MAAP,CAAcnC,OAAnH,CAA5B;AACH;AACJ;AACJ;;AACD,QAAI,KAAKa,SAAL,IAAkB7B,KAAK,CAACe,cAAN,CAAqBkB,IAArB,KAA8B,UAApD,EAAgE;AAC5D,WAAKV,iBAAL,CAAuBO,OAAvB;AACH;AACJ,GAzED;AA0EA;;;AACAhC,EAAAA,MAAM,CAACpB,SAAP,CAAiBiG,eAAjB,GAAmC,UAAUC,aAAV,EAAyBC,YAAzB,EAAuC7C,MAAvC,EAA+C;AAC9E,SAAK8C,oBAAL,CAA0B9C,MAA1B,EAAkC6C,YAAlC;AACA,SAAKE,OAAL,GAAe/C,MAAM,CAACgD,KAAP,GAAe,IAAf,GAAsB,KAArC;AACA,QAAIC,OAAO,GAAGjD,MAAM,CAACiD,OAArB;AACA,QAAIC,aAAa,GAAGlD,MAAM,CAACkD,aAA3B;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,UAAU,GAAG,KAAKA,UAAtB;AACA,QAAIC,WAAW,GAAG,KAAKA,WAAvB;AACA,QAAIC,kBAAkB,GAAG,KAAKC,UAAL,IAAmB,CAACxD,MAAM,CAACyD,WAA3B,GAAyCH,WAAzC,GAAuD,CAAhF;AACA,QAAII,UAAU,GAAG,KAAKX,OAAL,IAAgBG,aAAa,KAAK,KAAlC,GAA0C,KAAKS,eAAL,CAAqBC,MAArB,GAA8B,KAAKC,SAA7E,GAAyF,CAA1G;AACAH,IAAAA,UAAU,GAAG,KAAKX,OAAL,IAAgB,KAAKS,UAArB,IAAmCN,aAAa,KAAK,KAArD,GAA6D,KAAKS,eAAL,CAAqBC,MAArB,GAA8B,KAAKC,SAAhG,GAA4GH,UAAzH;;AACA,QAAI,CAAC,KAAKF,UAAV,EAAsB;AAClBL,MAAAA,WAAW,GAAG,CAACnD,MAAM,CAAC4D,MAAR,GAAmBhB,aAAa,CAACgB,MAAd,GAAuB,GAAxB,GAA+B,CAAjD,GAAsD,CAApE;AACH,KAFD,MAGK;AACDR,MAAAA,UAAU,GAAG,CAACpD,MAAM,CAAC8D,KAAR,GAAkBlB,aAAa,CAACkB,KAAd,GAAsB,GAAvB,GAA8B,CAA/C,GAAoD,CAAjE;AACH;;AACDjB,IAAAA,YAAY,CAACe,MAAb,IAAwBT,WAAxB;AACAN,IAAAA,YAAY,CAACiB,KAAb,IAAsBV,UAAtB;AACA,QAAIW,UAAU,GAAG/D,MAAM,CAAC+D,UAAxB;AACA,QAAIC,YAAY,GAAGhE,MAAM,CAACgE,YAA1B;AACA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,mBAAmB,GAAG,CAA1B;AACA,QAAIC,eAAJ;AACA,SAAKC,aAAL,GAAqBC,IAAI,CAACC,GAAL,CAASnH,WAAW,CAAC,aAAD,EAAgByC,MAAM,CAAC2E,SAAvB,CAAX,CAA6Cf,MAAtD,EAA8D5D,MAAM,CAAC4E,WAArE,CAArB;AACA,QAAIC,MAAM,GAAG,KAAb;;AACA,SAAK,IAAI3E,EAAE,GAAG,CAAT,EAAY0B,EAAE,GAAG,KAAKrC,iBAA3B,EAA8CW,EAAE,GAAG0B,EAAE,CAAC7B,MAAtD,EAA8DG,EAAE,EAAhE,EAAoE;AAChE,UAAI4E,YAAY,GAAGlD,EAAE,CAAC1B,EAAD,CAArB;;AACA,UAAItC,MAAM,CAACmH,IAAP,CAAYD,YAAY,CAACrD,IAAzB,CAAJ,EAAoC;AAChCqD,QAAAA,YAAY,CAACrD,IAAb,GAAoBnE,cAAc,CAACwH,YAAY,CAACrD,IAAd,EAAoB7D,MAApB,CAAlC;AACH;;AACD,UAAIC,MAAM,CAACkH,IAAP,CAAYD,YAAY,CAACrD,IAAzB,CAAJ,EAAoC;AAChCqD,QAAAA,YAAY,CAACrD,IAAb,GAAoBnE,cAAc,CAACwH,YAAY,CAACrD,IAAd,EAAoB5D,MAApB,CAAlC;AACH;;AACD0G,MAAAA,eAAe,GAAG;AACd9E,QAAAA,IAAI,EAAEqF,YAAY,CAACrF,IADL;AACWgC,QAAAA,IAAI,EAAEqD,YAAY,CAACrD,IAD9B;AACoCL,QAAAA,KAAK,EAAE0D,YAAY,CAAC1D,KADxD;AAEd4D,QAAAA,WAAW,EAAEF,YAAY,CAACE,WAFZ;AAEyBnE,QAAAA,IAAI,EAAEnD,YAF/B;AAE6CuH,QAAAA,MAAM,EAAE;AAFrD,OAAlB;AAIA,WAAKjH,KAAL,CAAWkH,OAAX,CAAmBxH,YAAnB,EAAiC6G,eAAjC;AACAO,MAAAA,YAAY,CAACD,MAAb,GAAsB,CAACN,eAAe,CAACU,MAAvC;AACAH,MAAAA,YAAY,CAACrD,IAAb,GAAoB8C,eAAe,CAAC9C,IAApC;AACAqD,MAAAA,YAAY,CAACrF,IAAb,GAAoB8E,eAAe,CAAC9E,IAApC;AACAqF,MAAAA,YAAY,CAAC1D,KAAb,GAAqBmD,eAAe,CAACnD,KAArC;AACA0D,MAAAA,YAAY,CAACE,WAAb,GAA2BT,eAAe,CAACS,WAA3C;AACAF,MAAAA,YAAY,CAACK,QAAb,GAAwB5H,WAAW,CAACuH,YAAY,CAACrD,IAAd,EAAoBzB,MAAM,CAAC2E,SAA3B,CAAnC;AACAZ,MAAAA,UAAU,GAAGe,YAAY,CAACrD,IAAb,GAAoBzB,MAAM,CAAC+D,UAA3B,GAAwC,CAArD;AACAC,MAAAA,YAAY,GAAGc,YAAY,CAACrD,IAAb,GAAoBzB,MAAM,CAACgE,YAA3B,GAA0C,CAAzD;;AACA,UAAIc,YAAY,CAACD,MAAb,IAAuBC,YAAY,CAACrD,IAAxC,EAA8C;AAC1CoD,QAAAA,MAAM,GAAG,IAAT;AACAV,QAAAA,WAAW,GAAGJ,UAAU,GAAGC,YAAb,GAA4Bc,YAAY,CAACK,QAAb,CAAsBrB,KAAlD,GAA0Db,OAAxE;AACAiB,QAAAA,QAAQ,GAAGA,QAAQ,GAAGC,WAAtB;;AACA,YAAI,CAACnE,MAAM,CAACyD,WAAR,IAAuB,CAAC,KAAKD,UAAjC,EAA6C;AACzCc,UAAAA,mBAAmB,GAAG,KAAKvB,OAAL,IAAgBG,aAAa,KAAK,KAAlC,GAA0C,KAAKS,eAAL,CAAqBG,KAArB,GAA6B,KAAKD,SAA5E,GAAwF,CAA9G;AACAS,UAAAA,mBAAmB,IAAIjB,UAAvB;AACH;;AACD,YAAIR,YAAY,CAACiB,KAAb,GAAsBb,OAAO,GAAGiB,QAAV,GAAqBI,mBAA3C,IAAmE,KAAKd,UAA5E,EAAwF;AACpFS,UAAAA,YAAY,GAAGQ,IAAI,CAACC,GAAL,CAAST,YAAT,EAAwBC,QAAQ,GAAGjB,OAAX,GAAqBqB,mBAArB,IAA4C,KAAKd,UAAL,GAAkB,CAAlB,GAAsBW,WAAlE,CAAxB,CAAf;;AACA,cAAIE,QAAQ,KAAK,CAAb,IAAmBF,WAAW,KAAKD,QAAvC,EAAkD;AAC9CG,YAAAA,QAAQ,GAAG,CAAX;AACH;;AACDH,UAAAA,QAAQ,GAAG,KAAKV,UAAL,GAAkB,CAAlB,GAAsBW,WAAjC;AACAE,UAAAA,QAAQ;AACRD,UAAAA,YAAY,GAAIC,QAAQ,IAAI,KAAKG,aAAL,GAAqBvB,OAAzB,CAAT,GAA8CA,OAA9C,GAAwDS,UAAxD,GAAqEH,kBAApF;AACH;AACJ;AACJ;;AACDa,IAAAA,YAAY,GAAGK,IAAI,CAACC,GAAL,CAASN,YAAT,EAAwB,KAAKI,aAAL,GAAqBvB,OAAtB,GAAiCA,OAAjC,GAA2CS,UAAlE,CAAf;AACA,SAAK0B,QAAL,GAAgBvC,YAAY,CAACe,MAAb,GAAsBQ,YAAtC;;AACA,QAAI,KAAKgB,QAAL,IAAiB,CAACpF,MAAM,CAACyD,WAA7B,EAA0C;AACtC,UAAI,KAAKD,UAAT,EAAqB;AACjB;AACAY,QAAAA,YAAY,GAAGA,YAAf;AACH,OAHD,MAIK;AACDA,QAAAA,YAAY,GAAI,KAAKI,aAAL,GAAqBvB,OAAtB,GAAiCA,OAAjC,IAA4CC,aAAa,KAAK,KAAlB,GAA0BQ,UAA1B,GAAuC,CAAnF,CAAf;AACH;AACJ;;AACD,SAAK2B,UAAL,GAAkBhB,QAAlB;;AACA,QAAI,CAAC,KAAKe,QAAN,IAAkB,CAAC,KAAK5B,UAA5B,EAAwC;AACpCU,MAAAA,QAAQ,IAAI,KAAKnB,OAAL,IAAgBG,aAAa,KAAK,KAAlC,GAA2C,KAAKW,SAAL,GAAiB,KAAKF,eAAL,CAAqBG,KAAtC,GAA8C,KAAKD,SAA9F,GAA2G,CAAvH;AACH;;AACD,QAAIgB,MAAJ,EAAY;AACR,WAAKS,SAAL,CAAeb,IAAI,CAACC,GAAL,CAAUR,QAAQ,GAAGjB,OAArB,EAA+BgB,YAA/B,CAAf,EAA6DG,YAA7D,EAA2EpE,MAA3E,EAAmF6C,YAAnF;AACH,KAFD,MAGK;AACD,WAAKyC,SAAL,CAAe,CAAf,EAAkB,CAAlB,EAAqBtF,MAArB,EAA6B6C,YAA7B;AACH;AACJ,GA5FD;AA6FA;;;AACA/E,EAAAA,MAAM,CAACpB,SAAP,CAAiB6I,cAAjB,GAAkC,UAAUT,YAAV,EAAwBtC,KAAxB,EAA+BgD,WAA/B,EAA4CC,UAA5C,EAAwDC,IAAxD,EAA8DC,KAA9D,EAAqEC,WAArE,EAAkF;AAChH,QAAI3C,OAAO,GAAG,KAAKjD,MAAL,CAAYiD,OAA1B;AACA,QAAI4C,SAAS,GAAGL,WAAW,GAAGC,UAAU,CAACN,QAAX,CAAoBrB,KAAlD;AACA,QAAIgC,aAAa,GAAGL,UAAU,CAACM,QAAX,CAAoBrE,CAApB,IAA0B,CAAC,KAAK/B,WAAP,GAAsBkG,SAAtB,GAAkC,CAACA,SAA5D,CAApB;;AACA,QAAI,KAAKG,cAAL,CAAoBF,aAApB,EAAmChB,YAAY,CAACK,QAAb,CAAsBrB,KAAtB,GAA8B0B,WAAjE,EAA8EE,IAA9E,KAAuF,KAAKlC,UAAhG,EAA4G;AACxGsB,MAAAA,YAAY,CAACiB,QAAb,CAAsBrE,CAAtB,GAA0Bc,KAAK,CAACd,CAAhC;AACAoD,MAAAA,YAAY,CAACiB,QAAb,CAAsBE,CAAtB,GAA2BN,KAAK,KAAKC,WAAX,GAA0BH,UAAU,CAACM,QAAX,CAAoBE,CAA9C,GACtBR,UAAU,CAACM,QAAX,CAAoBE,CAApB,GAAwB,KAAKzB,aAA7B,GAA6CvB,OADjD;AAEH,KAJD,MAKK;AACD6B,MAAAA,YAAY,CAACiB,QAAb,CAAsBrE,CAAtB,GAA2BiE,KAAK,KAAKC,WAAX,GAA0BH,UAAU,CAACM,QAAX,CAAoBrE,CAA9C,GAAkDoE,aAA5E;AACAhB,MAAAA,YAAY,CAACiB,QAAb,CAAsBE,CAAtB,GAA0BR,UAAU,CAACM,QAAX,CAAoBE,CAA9C;AACH;;AACD,QAAIC,UAAU,GAAI,CAAC,KAAKvG,WAAP,GAAuB,KAAKkD,YAAL,CAAkBnB,CAAlB,GAAsB,KAAKmB,YAAL,CAAkBiB,KAAzC,IAAmDgB,YAAY,CAACiB,QAAb,CAAsBrE,CAAtB,GACtF8D,WADsF,GACxE,KAAKxF,MAAL,CAAY+D,UAAZ,GAAyB,CADJ,CAAtB,GACgCe,YAAY,CAACiB,QAAb,CAAsBrE,CAAtB,GAA0B8D,WAA1B,GAAyC,KAAKxF,MAAL,CAAY+D,UAAZ,GAAyB,CAAnE,GAAyE,KAAKlB,YAAL,CAAkBnB,CAD3I;AAEAoD,IAAAA,YAAY,CAACrD,IAAb,GAAoBxE,QAAQ,CAAC,CAACiJ,UAAU,CAACC,OAAX,CAAmB,CAAnB,CAAF,EAAyBrB,YAAY,CAACrD,IAAtC,EAA4C,KAAKzB,MAAL,CAAY2E,SAAxD,CAA5B;AACH,GAhBD;;AAiBA7G,EAAAA,MAAM,CAACpB,SAAP,CAAiBsJ,cAAjB,GAAkC,UAAUF,aAAV,EAAyBD,SAAzB,EAAoCH,IAApC,EAA0C;AACxE,QAAI,CAAC,KAAK/F,WAAV,EAAuB;AACnB,aAAQmG,aAAa,GAAGD,SAAjB,GAA+BH,IAAI,CAAChE,CAAL,GAASgE,IAAI,CAAC5B,KAAd,GAAuB,KAAK9D,MAAL,CAAY+D,UAAZ,GAAyB,CAAtF;AACH,KAFD,MAGK;AACD,aAAQ+B,aAAa,GAAGD,SAAjB,GAA+BH,IAAI,CAAChE,CAAL,GAAU,KAAK1B,MAAL,CAAY+D,UAAZ,GAAyB,CAAzE;AACH;AACJ,GAPD;AAQA;;;AACAjG,EAAAA,MAAM,CAACpB,SAAP,CAAiB0J,WAAjB,GAA+B,UAAUnF,KAAV,EAAiBoF,KAAjB,EAAwB;AACnD,QAAIrI,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIsI,WAAW,GAAGtI,KAAK,CAACe,cAAN,CAAqBkB,IAArB,KAA8B,QAA9B,GAAyCgB,KAAzC,GAAiD,CAAnE;AACA,QAAIsF,WAAW,GAAG,CAAC,KAAK1G,SAAN,GAAkBoB,KAAlB,GAA2B,KAAK1B,iBAAL,CAAuBQ,MAAvB,GAAgC,CAAjC,GAAsCkB,KAAlF;AACA,QAAIb,MAAM,GAAGpC,KAAK,CAACwI,aAAN,CAAoBF,WAApB,CAAb;AACA,QAAItG,MAAM,GAAG,KAAKT,iBAAL,CAAuBgH,WAAvB,CAAb;AACA,QAAIE,eAAe,GAAG,qBAAtB;;AACA,QAAIzI,KAAK,CAACe,cAAN,CAAqBkB,IAArB,KAA8B,QAAlC,EAA4C;AACxC,UAAIyG,eAAe,GAAG;AAClBC,QAAAA,UAAU,EAAE3G,MAAM,CAACyB,IADD;AACOX,QAAAA,WAAW,EAAEd,MAAM,CAACoB,KAD3B;AAElBpD,QAAAA,KAAK,EAAEA,KAAK,CAAC4I,QAAN,GAAiB,EAAjB,GAAsB5I,KAFX;AAEkBoC,QAAAA,MAAM,EAAEA,MAF1B;AAEkCM,QAAAA,MAAM,EAAEN,MAAM,CAACM,MAFjD;AAEyDG,QAAAA,IAAI,EAAElD,WAF/D;AAE4EsH,QAAAA,MAAM,EAAE;AAFpF,OAAtB;AAIA,WAAKjH,KAAL,CAAWkH,OAAX,CAAmBvH,WAAnB,EAAgC+I,eAAhC;AACAtG,MAAAA,MAAM,CAACU,WAAP,GAAqB4F,eAAe,CAAC5F,WAArC;;AACA,UAAIV,MAAM,CAACX,IAAP,KAAgB,IAApB,EAA0B;AACtBzB,QAAAA,KAAK,CAACwI,aAAN,CAAoBvF,KAApB,EAA2BN,QAA3B,GAAsCP,MAAM,CAACX,IAA7C;AACH;;AACD,UAAIzB,KAAK,CAACe,cAAN,CAAqB8H,gBAAzB,EAA2C;AACvC,YAAIzG,MAAM,CAACC,QAAP,KAAoB,WAAxB,EAAqC;AACjC,cAAI,CAACrC,KAAK,CAACoC,MAAN,CAAaA,MAAM,CAACW,WAApB,EAAiCC,UAAjC,CAA4CZ,MAAM,CAACa,KAAnD,EAA0DjC,OAA/D,EAAwE;AACpEhB,YAAAA,KAAK,CAACoC,MAAN,CAAaA,MAAM,CAACW,WAApB,EAAiCC,UAAjC,CAA4CZ,MAAM,CAACa,KAAnD,EAA0DjC,OAA1D,GAAoE,IAApE;AACH,WAFD,MAGK;AACDhB,YAAAA,KAAK,CAACoC,MAAN,CAAaA,MAAM,CAACW,WAApB,EAAiCC,UAAjC,CAA4CZ,MAAM,CAACa,KAAnD,EAA0DjC,OAA1D,GAAoE,KAApE;AACH;AACJ,SAPD,MAQK;AACDoB,UAAAA,MAAM,CAACpC,KAAP,CAAayI,eAAb,IAAgC,IAAhC;AACA,eAAKK,qBAAL,CAA2B1G,MAA3B,EAAmCA,MAAM,CAACpB,OAA1C;AACH;;AACDgB,QAAAA,MAAM,CAAChB,OAAP,GAAiBoB,MAAM,CAACC,QAAP,KAAoB,WAApB,GAAkCrC,KAAK,CAACoC,MAAN,CAAaA,MAAM,CAACW,WAApB,EAAiCC,UAAjC,CAA4CZ,MAAM,CAACa,KAAnD,EAA0DjC,OAA5F,GACZoB,MAAM,CAACpB,OADZ;AAEA,aAAK+H,mBAAL,CAAyB/I,KAAzB,EAAgCoC,MAAhC;AACH,OAhBD,MAiBK,IAAIpC,KAAK,CAACgJ,eAAV,EAA2B;AAC5BhJ,QAAAA,KAAK,CAACgJ,eAAN,CAAsBC,eAAtB,CAAsCjJ,KAAtC,EAA6CiD,KAA7C,EAAoDoF,KAApD;AACH,OAFI,MAGA,IAAIrI,KAAK,CAACmB,eAAV,EAA2B;AAC5BnB,QAAAA,KAAK,CAACmB,eAAN,CAAsB8H,eAAtB,CAAsCjJ,KAAtC,EAA6CiD,KAA7C,EAAoDoF,KAApD;AACH;;AACDjG,MAAAA,MAAM,CAACpC,KAAP,CAAayI,eAAb,IAAgC,KAAhC;AACH,KAlCD,MAmCK,IAAIzI,KAAK,CAACe,cAAN,CAAqBkB,IAArB,KAA8B,OAAlC,EAA2C;AAC5C,UAAIiH,KAAK,GAAG9G,MAAM,CAACM,MAAP,CAAcO,KAAd,CAAZ;AACA,UAAIyF,eAAe,GAAG;AAClBC,QAAAA,UAAU,EAAE3G,MAAM,CAACyB,IADD;AACOX,QAAAA,WAAW,EAAEd,MAAM,CAACoB,KAD3B;AAElBpD,QAAAA,KAAK,EAAEA,KAAK,CAAC4I,QAAN,GAAiB,EAAjB,GAAsB5I,KAFX;AAEkBoC,QAAAA,MAAM,EAAEA,MAF1B;AAEkCM,QAAAA,MAAM,EAAE,CAACwG,KAAD,CAF1C;AAEmDrG,QAAAA,IAAI,EAAElD,WAFzD;AAEsEsH,QAAAA,MAAM,EAAE;AAF9E,OAAtB;AAIA,WAAKjH,KAAL,CAAWkH,OAAX,CAAmBvH,WAAnB,EAAgC+I,eAAhC;;AACA,UAAI1I,KAAK,CAACe,cAAN,CAAqB8H,gBAAzB,EAA2C;AACvCK,QAAAA,KAAK,CAAClI,OAAN,GAAgB,CAACkI,KAAK,CAAClI,OAAvB;AACA,YAAI8F,YAAY,GAAG,KAAKvF,iBAAL,CAAuB0B,KAAvB,CAAnB;AACA6D,QAAAA,YAAY,CAAC9F,OAAb,GAAuBkI,KAAK,CAAClI,OAA7B;AACA,aAAK+H,mBAAL,CAAyB/I,KAAzB,EAAgCoC,MAAhC;AACH;AACJ,KAbI,MAcA,IAAIpC,KAAK,CAACe,cAAN,CAAqBkB,IAArB,KAA8B,OAAlC,EAA2C;AAC5C,UAAIS,MAAM,GAAG,EAAb;AACA,UAAIoE,YAAY,GAAG,KAAKvF,iBAAL,CAAuB0B,KAAvB,CAAnB;;AACA,WAAK,IAAIf,EAAE,GAAG,CAAT,EAAY0B,EAAE,GAAGxB,MAAM,CAACM,MAA7B,EAAqCR,EAAE,GAAG0B,EAAE,CAAC7B,MAA7C,EAAqDG,EAAE,EAAvD,EAA2D;AACvD,YAAIgH,KAAK,GAAGtF,EAAE,CAAC1B,EAAD,CAAd;;AACA,YAAI4E,YAAY,CAACrF,IAAb,MAAuByH,KAAK,CAACvG,QAAN,IAAkBP,MAAM,CAACO,QAAhD,CAAJ,EAA+D;AAC3DD,UAAAA,MAAM,CAACE,IAAP,CAAYsG,KAAZ;AACH;AACJ;;AACD,UAAIR,eAAe,GAAG;AAClBC,QAAAA,UAAU,EAAE3G,MAAM,CAACyB,IADD;AACOX,QAAAA,WAAW,EAAEd,MAAM,CAACoB,KAD3B;AAElBpD,QAAAA,KAAK,EAAEA,KAAK,CAAC4I,QAAN,GAAiB,EAAjB,GAAsB5I,KAFX;AAEkBoC,QAAAA,MAAM,EAAEA,MAF1B;AAEkCM,QAAAA,MAAM,EAAEA,MAF1C;AAEkDG,QAAAA,IAAI,EAAElD,WAFxD;AAEqEsH,QAAAA,MAAM,EAAE;AAF7E,OAAtB;AAIA,WAAKjH,KAAL,CAAWkH,OAAX,CAAmBvH,WAAnB,EAAgC+I,eAAhC;;AACA,UAAI1I,KAAK,CAACe,cAAN,CAAqB8H,gBAAzB,EAA2C;AACvC/B,QAAAA,YAAY,CAAC9F,OAAb,GAAuB,CAAC8F,YAAY,CAAC9F,OAArC;;AACA,aAAK,IAAI6C,EAAE,GAAG,CAAT,EAAYsF,QAAQ,GAAGzG,MAA5B,EAAoCmB,EAAE,GAAGsF,QAAQ,CAACpH,MAAlD,EAA0D8B,EAAE,EAA5D,EAAgE;AAC5D,cAAIqF,KAAK,GAAGC,QAAQ,CAACtF,EAAD,CAApB;AACAqF,UAAAA,KAAK,CAAClI,OAAN,GAAgB,CAACkI,KAAK,CAAClI,OAAvB;AACH;;AACD,aAAK+H,mBAAL,CAAyB/I,KAAzB,EAAgCoC,MAAhC;AACH;AACJ;AACJ,GA/ED;;AAgFAtC,EAAAA,MAAM,CAACpB,SAAP,CAAiBqK,mBAAjB,GAAuC,UAAU/I,KAAV,EAAiBoC,MAAjB,EAAyB;AAC5D,QAAIgH,mBAAmB,GAAG,EAA1B;;AACA,QAAIpJ,KAAK,CAACgJ,eAAV,EAA2B;AACvBI,MAAAA,mBAAmB,GAAGtK,MAAM,CAAC,EAAD,EAAKkB,KAAK,CAACgJ,eAAN,CAAsBI,mBAA3B,EAAgD,IAAhD,EAAsD,IAAtD,CAA5B;AACH;;AACD,QAAKpJ,KAAK,CAACqJ,SAAN,CAAgBC,UAAhB,CAA2BvH,MAA3B,GAAoC,CAArC,IAA2C,CAAC/B,KAAK,CAACuJ,eAAlD,IAAqE,CAACvJ,KAAK,CAACwJ,YAAhF,EAA8F;AAC1F,aAAOxJ,KAAK,CAACqJ,SAAN,CAAgBI,SAAvB,EAAkC;AAC9BzJ,QAAAA,KAAK,CAACqJ,SAAN,CAAgBK,WAAhB,CAA4B1J,KAAK,CAACqJ,SAAN,CAAgBI,SAA5C;AACH;;AACD7K,MAAAA,MAAM,CAACoB,KAAK,CAACqJ,SAAP,CAAN;AACH;;AACDrJ,IAAAA,KAAK,CAAC2J,aAAN,GAAsB,KAAtB;AACA3J,IAAAA,KAAK,CAAC4J,MAAN,GAAe5J,KAAK,CAACuJ,eAArB;AACAvJ,IAAAA,KAAK,CAAC6J,2BAAN,GAAoC,EAApC;AACA3K,IAAAA,aAAa,CAACO,UAAU,CAACO,KAAK,CAAC8J,OAAN,CAAcC,EAAd,GAAmB,oBAApB,CAAV,CAAoDC,gBAApD,CAAqE,eAArE,EAAsF,CAAtF,CAAD,CAAb;AACA3K,IAAAA,oBAAoB,CAACW,KAAD,CAApB;AACA,SAAKiK,oBAAL,CAA0B7H,MAA1B,EAAkCpC,KAAlC;AACAA,IAAAA,KAAK,CAACkK,SAAN;AACAlK,IAAAA,KAAK,CAACmK,WAAN;AACA/H,IAAAA,MAAM,CAACgI,gBAAP;AACA,SAAKC,aAAL,CAAmBrK,KAAK,CAACwI,aAAzB;AACAxI,IAAAA,KAAK,CAACsK,YAAN,CAAmBC,uBAAnB;AACAvK,IAAAA,KAAK,CAACwK,YAAN;AACAxK,IAAAA,KAAK,CAACkH,OAAN,CAAc,QAAd,EAAwB;AAAElH,MAAAA,KAAK,EAAEA;AAAT,KAAxB;;AACA,QAAIoJ,mBAAmB,CAACrH,MAApB,GAA6B,CAAjC,EAAoC;AAChC/B,MAAAA,KAAK,CAACgJ,eAAN,CAAsBI,mBAAtB,GAA4CA,mBAA5C;AACApJ,MAAAA,KAAK,CAACgJ,eAAN,CAAsByB,eAAtB,CAAsCzK,KAAtC,EAA6CA,KAAK,CAAC0K,aAAnD;AACH;;AACD,QAAI1K,KAAK,CAACmB,eAAN,IAAyBnB,KAAK,CAACoB,aAAN,KAAwB,MAArD,EAA6D;AACzDpB,MAAAA,KAAK,CAACmB,eAAN,CAAsBsJ,eAAtB,CAAsCzK,KAAtC,EAA6CA,KAAK,CAACoB,aAAnD;AACH;;AACDpB,IAAAA,KAAK,CAAC4J,MAAN,GAAe,KAAf;AACH,GAhCD;;AAiCA9J,EAAAA,MAAM,CAACpB,SAAP,CAAiBoK,qBAAjB,GAAyC,UAAU1G,MAAV,EAAkBuI,UAAlB,EAA8B;AACnEvI,IAAAA,MAAM,CAACpB,OAAP,GAAiB,CAAC2J,UAAlB;;AACA,QAAI,KAAKC,eAAL,CAAqBxI,MAAM,CAACyI,KAA5B,CAAJ,EAAwC;AACpCzI,MAAAA,MAAM,CAACyI,KAAP,CAAaC,kBAAb,GAAkC1I,MAAM,CAACyI,KAAP,CAAazI,MAAb,CAAoB2I,IAApB,CAAyB,UAAUC,KAAV,EAAiB;AAAE,eAAQA,KAAK,CAAChK,OAAd;AAAyB,OAArE,CAAlC;AACH;;AACD,QAAI,KAAK4J,eAAL,CAAqBxI,MAAM,CAAC6I,KAA5B,CAAJ,EAAwC;AACpC7I,MAAAA,MAAM,CAAC6I,KAAP,CAAaH,kBAAb,GAAkC1I,MAAM,CAAC6I,KAAP,CAAa7I,MAAb,CAAoB2I,IAApB,CAAyB,UAAUC,KAAV,EAAiB;AAAE,eAAQA,KAAK,CAAChK,OAAd;AAAyB,OAArE,CAAlC;AACH;AACJ,GARD;;AASAlB,EAAAA,MAAM,CAACpB,SAAP,CAAiBkM,eAAjB,GAAmC,UAAUM,IAAV,EAAgB;AAC/C,WAAQ,KAAKlL,KAAL,CAAWmL,IAAX,CAAgBlH,OAAhB,CAAwBiH,IAAxB,IAAgC,CAAC,CAAzC;AACH,GAFD;;AAGApL,EAAAA,MAAM,CAACpB,SAAP,CAAiBuL,oBAAjB,GAAwC,UAAU7H,MAAV,EAAkBpC,KAAlB,EAAyB;AAC7D,QAAI,CAACA,KAAK,CAAC4J,MAAX,EAAmB;AACf,aAAO,IAAP;AACH;;AACD1K,IAAAA,aAAa,CAACc,KAAK,CAAC8J,OAAN,CAAcC,EAAd,GAAmB,UAAnB,IAAiC3H,MAAM,CAACa,KAAP,KAAiBmI,SAAjB,GAA6BhJ,MAAM,CAACC,QAApC,GAA+CD,MAAM,CAACa,KAAvF,IACV,uBADS,CAAb;AAEH,GAND;;AAOAnD,EAAAA,MAAM,CAACpB,SAAP,CAAiB2L,aAAjB,GAAiC,UAAUgB,gBAAV,EAA4B;AACzD,SAAK,IAAInJ,EAAE,GAAG,CAAT,EAAYoJ,kBAAkB,GAAGD,gBAAtC,EAAwDnJ,EAAE,GAAGoJ,kBAAkB,CAACvJ,MAAhF,EAAwFG,EAAE,EAA1F,EAA8F;AAC1F,UAAIE,MAAM,GAAGkJ,kBAAkB,CAACpJ,EAAD,CAA/B;;AACA,UAAIE,MAAM,CAACI,IAAP,CAAYyB,OAAZ,CAAoB,QAApB,IAAgC,CAAC,CAArC,EAAwC;AACpC,YAAIsH,MAAM,GAAInJ,MAAM,CAACI,IAAP,CAAYyB,OAAZ,CAAoB,MAApB,IAA8B,CAAC,CAA/B,IAAoC7B,MAAM,CAACG,QAAP,CAAgB0B,OAAhB,CAAwB,MAAxB,IAAkC,CAAC,CAArF;AACA,YAAIuH,OAAO,GAAGpJ,MAAM,CAACI,IAAP,CAAYyB,OAAZ,CAAoB,OAApB,IAA+B,CAAC,CAA9C;AACA,aAAKjE,KAAL,CAAW,YAAYuL,MAAM,GAAGC,OAAO,GAAG,WAAH,GAAiB,MAA3B,GAAoC,EAAtD,IAA4D,cAAvE,EAAuFC,eAAvF,CAAuGrJ,MAAvG;AACH;;AACDA,MAAAA,MAAM,CAACsJ,QAAP,GAAkBN,SAAlB;AACH;AACJ,GAVD;AAWA;AACJ;AACA;AACA;AACA;;;AACItL,EAAAA,MAAM,CAACpB,SAAP,CAAiB+B,KAAjB,GAAyB,UAAU4H,KAAV,EAAiB;AACtC,QAAIpI,KAAK,GAAG,IAAZ;;AACA,QAAI,CAAC,KAAKD,KAAL,CAAWe,cAAX,CAA0BC,OAA/B,EAAwC;AACpC;AACH;;AACD,QAAI2K,KAAK,GAAG,KAAK3L,KAAL,CAAW4L,MAAvB;AACA,QAAIC,KAAK,GAAG,KAAK7L,KAAL,CAAW8L,MAAvB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,QAAQ,GAAG3D,KAAK,CAAC4D,MAAN,CAAalC,EAA5B;AACA,QAAImC,aAAa,GAAG,CAAC,KAAKC,QAAL,GAAgB,QAAjB,EAA2B,KAAKA,QAAL,GAAgB,gBAA3C,EAChB,KAAKA,QAAL,GAAgB,SADA,CAApB;AAEA,QAAI7D,WAAJ;;AACA,SAAK,IAAIpG,EAAE,GAAG,CAAT,EAAYkK,eAAe,GAAGF,aAAnC,EAAkDhK,EAAE,GAAGkK,eAAe,CAACrK,MAAvE,EAA+EG,EAAE,EAAjF,EAAqF;AACjF,UAAI6H,EAAE,GAAGqC,eAAe,CAAClK,EAAD,CAAxB;;AACA,UAAI8J,QAAQ,CAAC/H,OAAT,CAAiB8F,EAAjB,IAAuB,CAAC,CAA5B,EAA+B;AAC3BzB,QAAAA,WAAW,GAAG+D,QAAQ,CAACL,QAAQ,CAACM,KAAT,CAAevC,EAAf,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAtB;AACA,aAAK3B,WAAL,CAAiBE,WAAjB,EAA8BD,KAA9B;AACA;AACH;AACJ;;AACD,QAAI2D,QAAQ,CAAC/H,OAAT,CAAiB,KAAKkI,QAAL,GAAgB,SAAjC,IAA8C,CAAC,CAAnD,EAAsD;AAClD,WAAKI,UAAL,CAAgBlE,KAAhB,EAAuB,IAAvB;AACH,KAFD,MAGK,IAAI2D,QAAQ,CAAC/H,OAAT,CAAiB,KAAKkI,QAAL,GAAgB,WAAjC,IAAgD,CAAC,CAArD,EAAwD;AACzD,WAAKI,UAAL,CAAgBlE,KAAhB,EAAuB,KAAvB;AACH;;AACD,QAAI,KAAKrI,KAAL,CAAWwJ,YAAX,IAA2B,KAAKgD,aAAL,CAAmBzK,MAAlD,EAA0D;AACtD,WAAK0K,iBAAL,CAAuBd,KAAvB,EAA8BE,KAA9B;AACH;;AACDE,IAAAA,YAAY,GAAG,KAAKW,aAAL,CAAmBnJ,MAAnB,CAA0B,UAAUoJ,MAAV,EAAkB;AACvD,aAAQvN,YAAY,CAACuM,KAAD,EAASE,KAAK,IAAI5L,KAAK,CAACmH,QAAN,GAAiB,CAACnH,KAAK,CAAC2M,iBAAN,GAA0B,CAA3B,IAAgC3M,KAAK,CAAC4M,aAAN,CAAoB,IAApB,EAA0B,CAA1B,EAA6B,CAA7B,CAAjD,GAAmF,CAAvF,CAAd,EAA0GF,MAAM,CAACjF,IAAjH,CAApB;AACH,KAFc,CAAf;;AAGA,QAAIqE,YAAY,CAAChK,MAAb,IAAuB,KAAK/B,KAAL,CAAWwJ,YAAtC,EAAoD;AAChD,WAAKpB,WAAL,CAAiB2D,YAAY,CAAC,CAAD,CAAZ,CAAgB9I,KAAjC,EAAwCoF,KAAxC;AACH;AACJ,GAnCD;AAoCA;AACJ;AACA;;;AACIvI,EAAAA,MAAM,CAACpB,SAAP,CAAiB+N,iBAAjB,GAAqC,UAAUd,KAAV,EAAiBE,KAAjB,EAAwB;AACzD,QAAIiB,OAAO,GAAG,KAAK9M,KAAL,CAAW+M,QAAzB;AACA,QAAIC,MAAM,GAAG,KAAKnI,YAAlB;AACA,QAAIoI,WAAW,GAAG,KAAKjN,KAAL,CAAWe,cAAX,CAA0BmM,MAA1B,CAAiCpH,KAAnD;AACA,QAAIqH,UAAU,GAAG,IAAI3N,IAAJ,CAASwN,MAAM,CAACtJ,CAAhB,EAAmBsJ,MAAM,CAAC/E,CAA1B,EAA6B+E,MAAM,CAAClH,KAApC,EAA2CkH,MAAM,CAACpH,MAAlD,CAAjB;AACAuH,IAAAA,UAAU,CAACzJ,CAAX,GAAeyJ,UAAU,CAACzJ,CAAX,GAAeuJ,WAAW,GAAG,CAA5C;AACAE,IAAAA,UAAU,CAAClF,CAAX,GAAekF,UAAU,CAAClF,CAAX,GAAegF,WAAW,GAAG,CAA5C;AACAE,IAAAA,UAAU,CAACrH,KAAX,GAAmBqH,UAAU,CAACrH,KAAX,GAAmBmH,WAAtC;AACAE,IAAAA,UAAU,CAACvH,MAAX,GAAoBuH,UAAU,CAACvH,MAAX,GAAoBqH,WAAxC;;AACA,QAAI7N,YAAY,CAACuM,KAAD,EAAQE,KAAR,EAAe,KAAKW,aAAL,CAAmB,CAAnB,CAAf,CAAhB,EAAuD;AACnD;AACA,UAAI,CAAC,KAAK7K,WAAV,EAAuB;AACnB,aAAKyL,cAAL,CAAoBN,OAApB,EAA6BK,UAA7B,EAAyCH,MAAzC;AACH,OAFD,MAGK;AACD,aAAKK,YAAL,CAAkBP,OAAlB,EAA2BK,UAA3B,EAAuCH,MAAvC;AACH;;AACD,aAAO,IAAP;AACH;;AACD,QAAI5N,YAAY,CAACuM,KAAD,EAAQE,KAAR,EAAe,KAAKW,aAAL,CAAmB,CAAnB,CAAf,CAAhB,EAAuD;AACnD;AACA,UAAI,CAAC,KAAK7K,WAAV,EAAuB;AACnB,aAAK0L,YAAL,CAAkBP,OAAlB,EAA2BK,UAA3B,EAAuCH,MAAvC;AACH,OAFD,MAGK;AACD,aAAKI,cAAL,CAAoBN,OAApB,EAA6BK,UAA7B,EAAyCH,MAAzC;AACH;;AACD,aAAO,IAAP;AACH;AACJ,GA7BD;;AA8BAlN,EAAAA,MAAM,CAACpB,SAAP,CAAiB0O,cAAjB,GAAkC,UAAUN,OAAV,EAAmBK,UAAnB,EAA+BH,MAA/B,EAAuC;AACrE,QAAI,EAAE,KAAKJ,iBAAP,GAA2B,CAA/B,EAAkC;AAC9B,WAAKF,aAAL,GAAqB,EAArB;AACAI,MAAAA,OAAO,CAACQ,SAAR,CAAkBH,UAAlB;AACAL,MAAAA,OAAO,CAACS,UAAR,CAAmB,IAAIpO,UAAJ,CAAe,gBAAf,EAAiC,aAAjC,EAAgD;AAAE2G,QAAAA,KAAK,EAAE,CAAT;AAAY0H,QAAAA,KAAK,EAAE;AAAnB,OAAhD,EAAyE,IAAzE,EAA+EL,UAA/E,CAAnB;AACA,WAAKM,YAAL,CAAkB,KAAKzN,KAAvB,EAA8B,KAAKgC,MAAnC,EAA2CgL,MAA3C;AACAF,MAAAA,OAAO,CAACY,aAAR;AACH,KAND,MAOK;AACD,QAAE,KAAKd,iBAAP;AACH;AACJ,GAXD;;AAYA9M,EAAAA,MAAM,CAACpB,SAAP,CAAiB2O,YAAjB,GAAgC,UAAUP,OAAV,EAAmBK,UAAnB,EAA+BH,MAA/B,EAAuC;AACnE,QAAI,EAAE,KAAKJ,iBAAP,GAA2B,CAA3B,IAAgC,KAAKA,iBAAL,IAA0B,KAAKe,cAAnE,EAAmF;AAC/E,WAAKjB,aAAL,GAAqB,EAArB;AACAI,MAAAA,OAAO,CAACQ,SAAR,CAAkBH,UAAlB;AACAL,MAAAA,OAAO,CAACS,UAAR,CAAmB,IAAIpO,UAAJ,CAAe,gBAAf,EAAiC,YAAjC,EAA+C;AAAE2G,QAAAA,KAAK,EAAE,CAAT;AAAY0H,QAAAA,KAAK,EAAE;AAAnB,OAA/C,EAAwE,IAAxE,EAA8EL,UAA9E,CAAnB;AACA,WAAKM,YAAL,CAAkB,KAAKzN,KAAvB,EAA8B,KAAKgC,MAAnC,EAA2CgL,MAA3C;AACAF,MAAAA,OAAO,CAACY,aAAR;AACH,KAND,MAOK;AACD,QAAE,KAAKd,iBAAP;AACH;AACJ,GAXD;AAYA;AACJ;AACA;;;AACI9M,EAAAA,MAAM,CAACpB,SAAP,CAAiBkP,aAAjB,GAAiC,YAAY;AACzC,WAAO,QAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;;;AACI9N,EAAAA,MAAM,CAACpB,SAAP,CAAiBmP,OAAjB,GAA2B,YAAY;AACnC,SAAKjN,mBAAL;AACH,GAFD;;AAGA,SAAOd,MAAP;AACH,CA3f2B,CA2f1Bd,UA3f0B,CAA5B;;AA4fA,SAASc,MAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\n/**\n * Chart legend\n */\nimport { remove, Browser, extend } from '@syncfusion/ej2-base';\nimport { LegendOptions, BaseLegend } from '../../common/legend/legend';\nimport { textTrim, removeElement, RectOption, withInBounds, blazorTemplatesReset } from '../../common/utils/helper';\nimport { getUnicodeText } from '../../common/utils/helper';\nimport { measureText, Rect, getElement } from '@syncfusion/ej2-svg-base';\nimport { legendRender, legendClick, regSub, regSup } from '../../common/model/constants';\n/**\n * `Legend` module is used to render legend for the chart.\n */\nvar Legend = /** @class */ (function (_super) {\n    __extends(Legend, _super);\n    function Legend(chart) {\n        var _this = _super.call(this, chart) || this;\n        _this.library = _this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * Binding events for legend module.\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.chart.on('click', this.click, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n        this.chart.off('click', this.click);\n        this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * To handle mosue move for legend module\n     */\n    Legend.prototype.mouseMove = function (e) {\n        if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n            this.move(e);\n            if (this.chart.highlightModule && this.chart.highlightMode !== 'None') {\n                this.click(e);\n            }\n        }\n    };\n    /**\n     * To handle mosue end for legend module\n     */\n    Legend.prototype.mouseEnd = function (e) {\n        if (this.chart.legendSettings.visible && this.chart.isTouch) {\n            this.move(e);\n        }\n    };\n    /**\n     * Get the legend options.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (visibleSeriesCollection, chart) {\n        this.legendCollections = [];\n        var seriesType;\n        var fill;\n        var colors = [];\n        this.isRtlEnable = chart.enableRtl;\n        this.isReverse = !this.isRtlEnable && chart.legendSettings.reverse;\n        if (visibleSeriesCollection.length > 1) {\n            this.legend.mode = 'Series';\n        }\n        for (var _i = 0, visibleSeriesCollection_1 = visibleSeriesCollection; _i < visibleSeriesCollection_1.length; _i++) {\n            var series = visibleSeriesCollection_1[_i];\n            if (this.legend.mode === 'Series') {\n                if (series.category !== 'Indicator') {\n                    seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                        series.type;\n                    // To set legend color when use pointColorMapping\n                    fill = (series.pointColorMapping && series.points.length > 0) ?\n                        (series.points[0].interior ? series.points[0].interior : series.interior) : series.interior;\n                    this.legendCollections.push(new LegendOptions(series.name, fill, series.legendShape, (series.category === 'TrendLine' ?\n                        this.chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible), seriesType, series.legendImageUrl, series.marker.shape, series.marker.visible));\n                }\n            }\n            else if (this.legend.mode === 'Point') {\n                var _loop_1 = function (points) {\n                    seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                        series.type;\n                    fill = points.interior ? points.interior : series.interior;\n                    if (this_1.legendCollections.filter(function (i) { return i.text === points.x.toString(); }).length === 0) {\n                        this_1.legendCollections.push(new LegendOptions(points.x.toString(), fill, series.legendShape, (series.category === 'TrendLine' ?\n                            this_1.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible), seriesType, '', series.marker.shape, series.marker.visible));\n                    }\n                };\n                var this_1 = this;\n                for (var _a = 0, _b = series.points; _a < _b.length; _a++) {\n                    var points = _b[_a];\n                    _loop_1(points);\n                }\n            }\n            else if (this.legend.mode === 'Range') {\n                for (var _c = 0, _d = series.points; _c < _d.length; _c++) {\n                    var points = _d[_c];\n                    seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                        series.type;\n                    fill = points.interior ? points.interior : series.interior;\n                    var legendLabel = 'Others';\n                    if (colors.indexOf(fill) < 0) {\n                        colors.push(fill);\n                        if (chart.rangeColorSettings.length >= 1 && chart.rangeColorSettings[0].colors.length === 1) {\n                            for (var _e = 0, _f = chart.rangeColorSettings; _e < _f.length; _e++) {\n                                var rangeMap = _f[_e];\n                                if (rangeMap.colors[0] === fill) {\n                                    legendLabel = rangeMap.label;\n                                }\n                            }\n                            this.legendCollections.push(new LegendOptions(legendLabel, fill, series.legendShape, (series.category === 'TrendLine' ?\n                                this.chart.series[series.sourceIndex].trendlines[series.index].visible : points.visible), seriesType, '', series.marker.shape, series.marker.visible));\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.legendCollections.length === 0 && chart.rangeColorSettings.length > 0) {\n                    var startLabel = chart.rangeColorSettings[0].start.toString();\n                    var endLabel = chart.rangeColorSettings[chart.rangeColorSettings.length - 1].end.toString();\n                    this.legendCollections.push(new LegendOptions(startLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n                    this.legendCollections.push(new LegendOptions(endLabel, series.interior, 'Rectangle', true, seriesType, '', series.marker.shape, series.marker.visible));\n                }\n            }\n        }\n        if (this.isReverse && chart.legendSettings.mode !== 'Gradient') {\n            this.legendCollections.reverse();\n        }\n    };\n    /** @private */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        this.calculateLegendTitle(legend, legendBounds);\n        this.isTitle = legend.title ? true : false;\n        var padding = legend.padding;\n        var titlePosition = legend.titlePosition;\n        var extraHeight = 0;\n        var extraWidth = 0;\n        var arrowWidth = this.arrowWidth;\n        var arrowHeight = this.arrowHeight;\n        var verticalArrowSpace = this.isVertical && !legend.enablePages ? arrowHeight : 0;\n        var titleSpace = this.isTitle && titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n        titleSpace = this.isTitle && this.isVertical && titlePosition !== 'Top' ? this.legendTitleSize.height + this.fivePixel : titleSpace;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.height += (extraHeight);\n        legendBounds.width += extraWidth;\n        var shapeWidth = legend.shapeWidth;\n        var shapePadding = legend.shapePadding;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var legendWidth = 0;\n        var columnHeight = 0;\n        var rowCount = 0;\n        var titlePlusArrowSpace = 0;\n        var legendEventArgs;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var render = false;\n        for (var _i = 0, _a = this.legendCollections; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            if (regSub.test(legendOption.text)) {\n                legendOption.text = getUnicodeText(legendOption.text, regSub);\n            }\n            if (regSup.test(legendOption.text)) {\n                legendOption.text = getUnicodeText(legendOption.text, regSup);\n            }\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                markerShape: legendOption.markerShape, name: legendRender, cancel: false\n            };\n            this.chart.trigger(legendRender, legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.markerShape = legendEventArgs.markerShape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            shapeWidth = legendOption.text ? legend.shapeWidth : 0;\n            shapePadding = legendOption.text ? legend.shapePadding : 0;\n            if (legendOption.render && legendOption.text) {\n                render = true;\n                legendWidth = shapeWidth + shapePadding + legendOption.textSize.width + padding;\n                rowWidth = rowWidth + legendWidth;\n                if (!legend.enablePages && !this.isVertical) {\n                    titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n                    titlePlusArrowSpace += arrowWidth;\n                }\n                if (legendBounds.width < (padding + rowWidth + titlePlusArrowSpace) || this.isVertical) {\n                    maximumWidth = Math.max(maximumWidth, (rowWidth + padding + titlePlusArrowSpace - (this.isVertical ? 0 : legendWidth)));\n                    if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                        rowCount = 1;\n                    }\n                    rowWidth = this.isVertical ? 0 : legendWidth;\n                    rowCount++;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding + titleSpace + verticalArrowSpace;\n                }\n            }\n        }\n        columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding + titleSpace);\n        this.isPaging = legendBounds.height < columnHeight;\n        if (this.isPaging && !legend.enablePages) {\n            if (this.isVertical) {\n                // eslint-disable-next-line no-self-assign\n                columnHeight = columnHeight;\n            }\n            else {\n                columnHeight = (this.maxItemHeight + padding) + padding + (titlePosition === 'Top' ? titleSpace : 0);\n            }\n        }\n        this.totalPages = rowCount;\n        if (!this.isPaging && !this.isVertical) {\n            rowWidth += this.isTitle && titlePosition !== 'Top' ? (this.fivePixel + this.legendTitleSize.width + this.fivePixel) : 0;\n        }\n        if (render) {\n            this.setBounds(Math.max((rowWidth + padding), maximumWidth), columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /** @private */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        var textWidth = textPadding + prevLegend.textSize.width;\n        var previousBound = prevLegend.location.x + ((!this.isRtlEnable) ? textWidth : -textWidth);\n        if (this.isWithinBounds(previousBound, legendOption.textSize.width + textPadding, rect) || this.isVertical) {\n            legendOption.location.x = start.x;\n            legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                prevLegend.location.y + this.maxItemHeight + padding;\n        }\n        else {\n            legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            legendOption.location.y = prevLegend.location.y;\n        }\n        var availwidth = (!this.isRtlEnable) ? (this.legendBounds.x + this.legendBounds.width) - (legendOption.location.x +\n            textPadding - this.legend.shapeWidth / 2) : (legendOption.location.x - textPadding + (this.legend.shapeWidth / 2)) - this.legendBounds.x;\n        legendOption.text = textTrim(+availwidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    Legend.prototype.isWithinBounds = function (previousBound, textWidth, rect) {\n        if (!this.isRtlEnable) {\n            return (previousBound + textWidth) > (rect.x + rect.width + (this.legend.shapeWidth / 2));\n        }\n        else {\n            return (previousBound - textWidth) < (rect.x - (this.legend.shapeWidth / 2));\n        }\n    };\n    /** @private */\n    Legend.prototype.LegendClick = function (index, event) {\n        var chart = this.chart;\n        var seriesIndex = chart.legendSettings.mode === 'Series' ? index : 0;\n        var legendIndex = !this.isReverse ? index : (this.legendCollections.length - 1) - index;\n        var series = chart.visibleSeries[seriesIndex];\n        var legend = this.legendCollections[legendIndex];\n        var changeDetection = 'isProtectedOnChange';\n        if (chart.legendSettings.mode === 'Series') {\n            var legendClickArgs = {\n                legendText: legend.text, legendShape: legend.shape,\n                chart: chart.isBlazor ? {} : chart, series: series, points: series.points, name: legendClick, cancel: false\n            };\n            this.chart.trigger(legendClick, legendClickArgs);\n            series.legendShape = legendClickArgs.legendShape;\n            if (series.fill !== null) {\n                chart.visibleSeries[index].interior = series.fill;\n            }\n            if (chart.legendSettings.toggleVisibility) {\n                if (series.category === 'TrendLine') {\n                    if (!chart.series[series.sourceIndex].trendlines[series.index].visible) {\n                        chart.series[series.sourceIndex].trendlines[series.index].visible = true;\n                    }\n                    else {\n                        chart.series[series.sourceIndex].trendlines[series.index].visible = false;\n                    }\n                }\n                else {\n                    series.chart[changeDetection] = true;\n                    this.changeSeriesVisiblity(series, series.visible);\n                }\n                legend.visible = series.category === 'TrendLine' ? chart.series[series.sourceIndex].trendlines[series.index].visible :\n                    (series.visible);\n                this.refreshLegendToggle(chart, series);\n            }\n            else if (chart.selectionModule) {\n                chart.selectionModule.legendSelection(chart, index, event);\n            }\n            else if (chart.highlightModule) {\n                chart.highlightModule.legendSelection(chart, index, event);\n            }\n            series.chart[changeDetection] = false;\n        }\n        else if (chart.legendSettings.mode === 'Point') {\n            var point = series.points[index];\n            var legendClickArgs = {\n                legendText: legend.text, legendShape: legend.shape,\n                chart: chart.isBlazor ? {} : chart, series: series, points: [point], name: legendClick, cancel: false\n            };\n            this.chart.trigger(legendClick, legendClickArgs);\n            if (chart.legendSettings.toggleVisibility) {\n                point.visible = !point.visible;\n                var legendOption = this.legendCollections[index];\n                legendOption.visible = point.visible;\n                this.refreshLegendToggle(chart, series);\n            }\n        }\n        else if (chart.legendSettings.mode === 'Range') {\n            var points = [];\n            var legendOption = this.legendCollections[index];\n            for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n                var point = _a[_i];\n                if (legendOption.fill === (point.interior || series.interior)) {\n                    points.push(point);\n                }\n            }\n            var legendClickArgs = {\n                legendText: legend.text, legendShape: legend.shape,\n                chart: chart.isBlazor ? {} : chart, series: series, points: points, name: legendClick, cancel: false\n            };\n            this.chart.trigger(legendClick, legendClickArgs);\n            if (chart.legendSettings.toggleVisibility) {\n                legendOption.visible = !legendOption.visible;\n                for (var _b = 0, points_1 = points; _b < points_1.length; _b++) {\n                    var point = points_1[_b];\n                    point.visible = !point.visible;\n                }\n                this.refreshLegendToggle(chart, series);\n            }\n        }\n    };\n    Legend.prototype.refreshLegendToggle = function (chart, series) {\n        var selectedDataIndexes = [];\n        if (chart.selectionModule) {\n            selectedDataIndexes = extend([], chart.selectionModule.selectedDataIndexes, null, true);\n        }\n        if ((chart.svgObject.childNodes.length > 0) && !chart.enableAnimation && !chart.enableCanvas) {\n            while (chart.svgObject.lastChild) {\n                chart.svgObject.removeChild(chart.svgObject.lastChild);\n            }\n            remove(chart.svgObject);\n        }\n        chart.animateSeries = false;\n        chart.redraw = chart.enableAnimation;\n        chart.rotatedDataLabelCollections = [];\n        removeElement(getElement(chart.element.id + '_Secondary_Element').querySelectorAll('.ejSVGTooltip')[0]);\n        blazorTemplatesReset(chart);\n        this.redrawSeriesElements(series, chart);\n        chart.removeSvg();\n        chart.refreshAxis();\n        series.refreshAxisLabel();\n        this.refreshSeries(chart.visibleSeries);\n        chart.markerRender.removeHighlightedMarker();\n        chart.refreshBound();\n        chart.trigger('loaded', { chart: chart });\n        if (selectedDataIndexes.length > 0) {\n            chart.selectionModule.selectedDataIndexes = selectedDataIndexes;\n            chart.selectionModule.redrawSelection(chart, chart.selectionMode);\n        }\n        if (chart.highlightModule && chart.highlightMode !== 'None') {\n            chart.highlightModule.redrawSelection(chart, chart.highlightMode);\n        }\n        chart.redraw = false;\n    };\n    Legend.prototype.changeSeriesVisiblity = function (series, visibility) {\n        series.visible = !visibility;\n        if (this.isSecondaryAxis(series.xAxis)) {\n            series.xAxis.internalVisibility = series.xAxis.series.some(function (value) { return (value.visible); });\n        }\n        if (this.isSecondaryAxis(series.yAxis)) {\n            series.yAxis.internalVisibility = series.yAxis.series.some(function (value) { return (value.visible); });\n        }\n    };\n    Legend.prototype.isSecondaryAxis = function (axis) {\n        return (this.chart.axes.indexOf(axis) > -1);\n    };\n    Legend.prototype.redrawSeriesElements = function (series, chart) {\n        if (!chart.redraw) {\n            return null;\n        }\n        removeElement(chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) +\n            '_DataLabelCollections');\n    };\n    Legend.prototype.refreshSeries = function (seriesCollection) {\n        for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n            var series = seriesCollection_1[_i];\n            if (series.type.indexOf('Spline') > -1) {\n                var isArea = (series.type.indexOf('Area') > -1 || series.drawType.indexOf('Area') > -1);\n                var isRange = series.type.indexOf('Range') > -1;\n                this.chart['spline' + (isArea ? isRange ? 'RangeArea' : 'Area' : '') + 'SeriesModule'].findSplinePoint(series);\n            }\n            series.position = undefined;\n        }\n    };\n    /**\n     * To show the tooltip for the trimmed text in legend.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.click = function (event) {\n        var _this = this;\n        if (!this.chart.legendSettings.visible) {\n            return;\n        }\n        var pageX = this.chart.mouseX;\n        var pageY = this.chart.mouseY;\n        var legendRegion = [];\n        var targetId = event.target.id;\n        var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_',\n            this.legendID + '_shape_'];\n        var seriesIndex;\n        for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n            var id = legendItemsId_1[_i];\n            if (targetId.indexOf(id) > -1) {\n                seriesIndex = parseInt(targetId.split(id)[1], 10);\n                this.LegendClick(seriesIndex, event);\n                break;\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n        if (this.chart.enableCanvas && this.pagingRegions.length) {\n            this.checkWithinBounds(pageX, pageY);\n        }\n        legendRegion = this.legendRegions.filter(function (region) {\n            return (withInBounds(pageX, (pageY + (_this.isPaging ? (_this.currentPageNumber - 1) * _this.translatePage(null, 1, 2) : 0)), region.rect));\n        });\n        if (legendRegion.length && this.chart.enableCanvas) {\n            this.LegendClick(legendRegion[0].index, event);\n        }\n    };\n    /**\n     * To check click position is within legend bounds\n     */\n    Legend.prototype.checkWithinBounds = function (pageX, pageY) {\n        var cRender = this.chart.renderer;\n        var bounds = this.legendBounds;\n        var borderWidth = this.chart.legendSettings.border.width;\n        var canvasRect = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        canvasRect.x = canvasRect.x - borderWidth / 2;\n        canvasRect.y = canvasRect.y - borderWidth / 2;\n        canvasRect.width = canvasRect.width + borderWidth;\n        canvasRect.height = canvasRect.height + borderWidth;\n        if (withInBounds(pageX, pageY, this.pagingRegions[0])) {\n            // pageDown calculations are performing here\n            if (!this.isRtlEnable) {\n                this.canvasPageDown(cRender, canvasRect, bounds);\n            }\n            else {\n                this.canvasPageUp(cRender, canvasRect, bounds);\n            }\n            return null;\n        }\n        if (withInBounds(pageX, pageY, this.pagingRegions[1])) {\n            // pageUp calculations are performing here\n            if (!this.isRtlEnable) {\n                this.canvasPageUp(cRender, canvasRect, bounds);\n            }\n            else {\n                this.canvasPageDown(cRender, canvasRect, bounds);\n            }\n            return null;\n        }\n    };\n    Legend.prototype.canvasPageDown = function (cRender, canvasRect, bounds) {\n        if (--this.currentPageNumber > 0) {\n            this.legendRegions = [];\n            cRender.clearRect(canvasRect);\n            cRender.canvasClip(new RectOption('legendClipPath', 'transparent', { width: 0, color: '' }, null, canvasRect));\n            this.renderLegend(this.chart, this.legend, bounds);\n            cRender.canvasRestore();\n        }\n        else {\n            ++this.currentPageNumber;\n        }\n    };\n    Legend.prototype.canvasPageUp = function (cRender, canvasRect, bounds) {\n        if (++this.currentPageNumber > 0 && this.currentPageNumber <= this.totalNoOfPages) {\n            this.legendRegions = [];\n            cRender.clearRect(canvasRect);\n            cRender.canvasClip(new RectOption('legendClipPath', 'transpaent', { width: 0, color: '' }, null, canvasRect));\n            this.renderLegend(this.chart, this.legend, bounds);\n            cRender.canvasRestore();\n        }\n        else {\n            --this.currentPageNumber;\n        }\n    };\n    /**\n     * Get module name\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the Legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Legend;\n}(BaseLegend));\nexport { Legend };\n"]},"metadata":{},"sourceType":"module"}