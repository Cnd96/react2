{"ast":null,"code":"import dataService from \"../../../../../../../../../services/dataService\";\nimport patientAppEndpoints from \"./patient.register.app.endpoints\";\nexport const ON_ADD_EDIT_FORM_CHANGE = '[PATIENT ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_SAVE_UPDATE = '[PATIENT ADD EDIT] ON_SAVE_UPDATE';\nexport const ON_RESET_FORM_DATA = '[PATIENT ADD EDIT] ON_RESET_FORM_DATA';\nexport const GET_PATIENT = '[PATIENT ADD EDIT] GET_PATIENT';\nexport const ON_RESET_PATIENT_DATA = '[PATIENT ADD EDIT] ON_RESET_PATIENT_DATA';\nexport function onFormChange(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_ADD_EDIT_FORM_CHANGE,\n      payload: data\n    });\n  };\n}\nexport function saveOrUpdatePatient(data) {\n  const request = dataService.post(patientAppEndpoints.saveOrUpdatePatient, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: ON_SAVE_UPDATE,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function reset() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET_FORM_DATA,\n      payload: {}\n    });\n  };\n}\nexport function onResetPatientData() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET_PATIENT_DATA,\n      payload: {}\n    });\n  };\n}\nexport function getPatientDTOByID(patientID) {\n  let endpoint = Object.assign({}, patientAppEndpoints.getPatientDTOByID);\n  endpoint.url = endpoint.url + '/' + patientID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_PATIENT,\n      payload: response.data.result\n    }));\n  };\n}\nexport function setPatient(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: GET_PATIENT,\n      payload: data\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/registerPatient/store/actions/patient.register.app.add.edit.action.js"],"names":["dataService","patientAppEndpoints","ON_ADD_EDIT_FORM_CHANGE","ON_SAVE_UPDATE","ON_RESET_FORM_DATA","GET_PATIENT","ON_RESET_PATIENT_DATA","onFormChange","data","dispatch","getState","type","payload","saveOrUpdatePatient","request","post","then","response","result","reset","onResetPatientData","getPatientDTOByID","patientID","endpoint","Object","assign","url","get","setPatient"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iDAAxB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AAEA,OAAO,MAAMC,uBAAuB,GAAG,4CAAhC;AACP,OAAO,MAAMC,cAAc,GAAG,mCAAvB;AACP,OAAO,MAAMC,kBAAkB,GAAG,uCAA3B;AACP,OAAO,MAAMC,WAAW,GAAG,gCAApB;AACP,OAAO,MAAMC,qBAAqB,GAAG,0CAA9B;AAGP,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC/B,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAET,uBADD;AAELU,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASK,mBAAT,CAA6BL,IAA7B,EAAmC;AACtC,QAAMM,OAAO,GAAGd,WAAW,CAACe,IAAZ,CAAiBd,mBAAmB,CAACY,mBAArC,EAA0DL,IAA1D,CAAhB;AAEA,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3B,WAAOI,OAAO,CAACE,IAAR,CAAcC,QAAD,IAAc;AAC1B,aAAOR,QAAQ,CAAC;AACZE,QAAAA,IAAI,EAAER,cADM;AAEZS,QAAAA,OAAO,EAAEK,QAAQ,CAACT,IAAT,CAAcU;AAFX,OAAD,CAAf;AAIH,KALE,CAAP;AAOH,GARD;AASH;AAED,OAAO,SAASC,KAAT,GAAiB;AACpB,SAAO,CAACV,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEP,kBADD;AAELQ,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASQ,kBAAT,GAA8B;AACjC,SAAO,CAACX,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,qBADD;AAELM,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASS,iBAAT,CAA2BC,SAA3B,EAAsC;AAEzC,MAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBxB,mBAAmB,CAACoB,iBAAtC,CAAf;AACAE,EAAAA,QAAQ,CAACG,GAAT,GAAeH,QAAQ,CAACG,GAAT,GAAe,GAAf,GAAqBJ,SAApC;AAEA,QAAMR,OAAO,GAAGd,WAAW,CAAC2B,GAAZ,CAAgBJ,QAAhB,CAAhB;AAEA,SAAO,CAACd,QAAD,EAAWC,QAAX,KAAwB;AAC3BI,IAAAA,OAAO,CAACE,IAAR,CAAcC,QAAD,IACTR,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,WADD;AAELO,MAAAA,OAAO,EAAEK,QAAQ,CAACT,IAAT,CAAcU;AAFlB,KAAD,CADZ;AAMH,GAPD;AAQH;AAED,OAAO,SAASU,UAAT,CAAoBpB,IAApB,EAA0B;AAC7B,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,WADD;AAELO,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH","sourcesContent":["import dataService from \"../../../../../../../../../services/dataService\";\nimport patientAppEndpoints from \"./patient.register.app.endpoints\";\n\nexport const ON_ADD_EDIT_FORM_CHANGE = '[PATIENT ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_SAVE_UPDATE = '[PATIENT ADD EDIT] ON_SAVE_UPDATE';\nexport const ON_RESET_FORM_DATA = '[PATIENT ADD EDIT] ON_RESET_FORM_DATA';\nexport const GET_PATIENT = '[PATIENT ADD EDIT] GET_PATIENT';\nexport const ON_RESET_PATIENT_DATA = '[PATIENT ADD EDIT] ON_RESET_PATIENT_DATA';\n\n\nexport function onFormChange(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_ADD_EDIT_FORM_CHANGE,\n            payload: data\n        })\n    };\n}\n\nexport function saveOrUpdatePatient(data) {\n    const request = dataService.post(patientAppEndpoints.saveOrUpdatePatient, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: ON_SAVE_UPDATE,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function reset() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET_FORM_DATA,\n            payload: {}\n        })\n    };\n}\n\nexport function onResetPatientData() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET_PATIENT_DATA,\n            payload: {}\n        })\n    };\n}\n\nexport function getPatientDTOByID(patientID) {\n\n    let endpoint = Object.assign({}, patientAppEndpoints.getPatientDTOByID);\n    endpoint.url = endpoint.url + '/' + patientID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_PATIENT,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function setPatient(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: GET_PATIENT,\n            payload: data\n        })\n    };\n}"]},"metadata":{},"sourceType":"module"}