{"ast":null,"code":"import dataService from \"../../../../../../../../../services/dataService\";\nimport checkupHistoryAppEndpoints from \"./checkup.history.app.endpoints\";\nexport const GET_CHECKUP_HISTORY_GRAPH_DATA = '[CHECKUP HISTORY DATA] GET CHECKUP HISTORY GRAPH DATA';\nexport const GET_CHECKUP_HISTORY_FULL_DATA = '[CHECKUP HISTORY DATA] GET CHECKUP HISTORY FULL DATA';\nexport const ON_RESET_CHECKUP_HISTORY = '[CHECKUP HISTORY DATA] RESET CHECKUP HISTORY DATA';\nexport function getCheckupHistoryNumericValuesOnlyByPatientID(data) {\n  const request = dataService.post(checkupHistoryAppEndpoints.getCheckupHistoryNumericValuesOnlyByPatientID, data);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_CHECKUP_HISTORY_GRAPH_DATA,\n      payload: response.data.result\n    }));\n  };\n}\nexport function resetCheckupHistory() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET_CHECKUP_HISTORY,\n      payload: {}\n    });\n  };\n}\nexport function getCheckupFullHistoryByPatientID(data) {\n  const request = dataService.post(checkupHistoryAppEndpoints.getCheckupFullHistoryByPatientID, data);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_CHECKUP_HISTORY_FULL_DATA,\n      payload: response.data.result\n    }));\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/checkupHistory/store/actions/checkup.history.action.js"],"names":["dataService","checkupHistoryAppEndpoints","GET_CHECKUP_HISTORY_GRAPH_DATA","GET_CHECKUP_HISTORY_FULL_DATA","ON_RESET_CHECKUP_HISTORY","getCheckupHistoryNumericValuesOnlyByPatientID","data","request","post","dispatch","getState","then","response","type","payload","result","resetCheckupHistory","getCheckupFullHistoryByPatientID"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iDAAxB;AACA,OAAOC,0BAAP,MAAuC,iCAAvC;AAEA,OAAO,MAAMC,8BAA8B,GAAG,uDAAvC;AACP,OAAO,MAAMC,6BAA6B,GAAG,sDAAtC;AACP,OAAO,MAAMC,wBAAwB,GAAG,mDAAjC;AAGP,OAAO,SAASC,6CAAT,CAAuDC,IAAvD,EAA6D;AAChE,QAAMC,OAAO,GAAGP,WAAW,CAACQ,IAAZ,CAAiBP,0BAA0B,CAACI,6CAA5C,EAA2FC,IAA3F,CAAhB;AACA,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3BH,IAAAA,OAAO,CAACI,IAAR,CAAcC,QAAD,IACTH,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEX,8BADD;AAELY,MAAAA,OAAO,EAAEF,QAAQ,CAACN,IAAT,CAAcS;AAFlB,KAAD,CADZ;AAMH,GAPD;AASH;AAED,OAAO,SAASC,mBAAT,GAA+B;AAClC,SAAO,CAACP,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,wBADD;AAELU,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASG,gCAAT,CAA0CX,IAA1C,EAAgD;AACnD,QAAMC,OAAO,GAAGP,WAAW,CAACQ,IAAZ,CAAiBP,0BAA0B,CAACgB,gCAA5C,EAA8EX,IAA9E,CAAhB;AACA,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3BH,IAAAA,OAAO,CAACI,IAAR,CAAcC,QAAD,IACTH,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEV,6BADD;AAELW,MAAAA,OAAO,EAAEF,QAAQ,CAACN,IAAT,CAAcS;AAFlB,KAAD,CADZ;AAMH,GAPD;AASH","sourcesContent":["import dataService from \"../../../../../../../../../services/dataService\";\nimport checkupHistoryAppEndpoints from \"./checkup.history.app.endpoints\";\n\nexport const GET_CHECKUP_HISTORY_GRAPH_DATA = '[CHECKUP HISTORY DATA] GET CHECKUP HISTORY GRAPH DATA';\nexport const GET_CHECKUP_HISTORY_FULL_DATA = '[CHECKUP HISTORY DATA] GET CHECKUP HISTORY FULL DATA';\nexport const ON_RESET_CHECKUP_HISTORY = '[CHECKUP HISTORY DATA] RESET CHECKUP HISTORY DATA';\n\n\nexport function getCheckupHistoryNumericValuesOnlyByPatientID(data) {\n    const request = dataService.post(checkupHistoryAppEndpoints.getCheckupHistoryNumericValuesOnlyByPatientID, data);\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_CHECKUP_HISTORY_GRAPH_DATA,\n                payload: response.data.result\n            })\n        );\n    };\n\n}\n\nexport function resetCheckupHistory() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET_CHECKUP_HISTORY,\n            payload: {}\n        })\n    };\n}\n\nexport function getCheckupFullHistoryByPatientID(data) {\n    const request = dataService.post(checkupHistoryAppEndpoints.getCheckupFullHistoryByPatientID, data);\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_CHECKUP_HISTORY_FULL_DATA,\n                payload: response.data.result\n            })\n        );\n    };\n\n}"]},"metadata":{},"sourceType":"module"}