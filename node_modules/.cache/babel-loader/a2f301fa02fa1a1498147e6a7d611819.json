{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\registerPatient\\\\components\\\\PatientAddEditFrom.js\";\nimport React, { Component } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { CButton, CCol, CFormGroup, CLabel, CRow, CSelect } from \"@coreui/react\";\nimport { getCivilStatusOptions, getCommonGenderOptions, getCommonTitleOptions, getInputFieldClassNames, getStandardContactNumber } from \"../../../../../../../../../utils/FormUtils\";\nimport Constants from \"../../../../../../../../../utils/Constants\";\nimport customValidator from \"../../../../../../../../../utils/ValidationUtil\";\nimport * as Action from \"../store/actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport FormikDatePicker from \"../../../../../../../../common/FormikDatePicker\";\nimport { trimData } from \"../../../../../../../../../utils/DataExtractHelper\";\nimport { setStorageItem } from \"../../../../../../../../../utils/StorageUtils\";\nimport CIcon from \"@coreui/icons-react\";\nimport { toDate } from \"../../../../../../../../../utils/HealthTrackerUtils\";\nimport { getCitiesOptions } from \"../../../../../../../../../utils/Cities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PatientAddEditFrom extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      patientInit: {\n        patientID: '',\n        title: 'MR',\n        patientCode: '',\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        nicPassport: '',\n        contactNo: '',\n        email: '',\n        gender: 'M',\n        dateOfBirthStr: '',\n        age: '',\n        bloodGroup: '',\n        civilStatus: Constants.CIVIL_STATUS_CONST.UNKNOWN,\n        referredBy: '',\n        occupation: '',\n        companyName: '',\n        department: '',\n        addressLine1: '',\n        addressLine2: '',\n        addressLine3: '',\n        city: '',\n        landLineNumber: '',\n        whatsappNumber: '',\n        mobileNumber: '',\n        comment: '',\n        status: Constants.STATUS_CONST.ACT\n      }\n    };\n\n    this.getValidations = () => {\n      return {\n        firstName: {\n          required: {\n            message: 'Required'\n          },\n          maxLength: {\n            value: 255\n          }\n        },\n        // nicPassport: {\n        //     required: {message: 'Required'},\n        //     maxLength: {value: 12},\n        //     nicLK: {message: 'Invalid NIC'}\n        // },\n        email: {\n          email: {\n            message: 'Invalid Email'\n          }\n        },\n        contactNo: {\n          required: {\n            message: 'Required'\n          },\n          maxLength: {\n            value: 12\n          },\n          phone: {\n            message: 'Invalid Contact Number'\n          }\n        } // age: {\n        //     required: {message: 'Required'},\n        //     maxLength: {value: 3},\n        //     min: {value: 1}\n        // },\n\n      };\n    };\n\n    this.onCustomValidation = values => {\n      const {\n        onFormChange\n      } = this.props;\n\n      if (values.contactNo) {\n        values.contactNo = getStandardContactNumber(values.contactNo);\n      }\n\n      if (values.dateOfBirthStr) {\n        let dob = toDate(values.dateOfBirthStr);\n        let today = new Date();\n        let diff = today.getTime() - dob.getTime();\n        values.age = Math.floor(diff / 31556736000);\n        console.log(values.age);\n      }\n\n      if (values.title) {\n        console.log(values.title);\n\n        if (values.title === Constants.TITLE_CONST.MR) {\n          values.gender = Constants.GENDER_CONST.M;\n        } else if (values.title === Constants.TITLE_CONST.MS || values.title === Constants.TITLE_CONST.MRS || values.title === Constants.TITLE_CONST.MISS) {\n          values.gender = Constants.GENDER_CONST.F;\n        }\n\n        if (values.title === Constants.TITLE_CONST.MRS) {\n          values.civilStatus = Constants.CIVIL_STATUS_CONST.MARRIED;\n        }\n      }\n\n      let validate = customValidator(values, this.getValidations());\n      onFormChange({\n        isValid: validate.isValid,\n        values: values\n      });\n      return validate.errors;\n    };\n\n    this.setInitialValues = () => {\n      let {\n        patient\n      } = this.props;\n      let {\n        patientInit\n      } = this.state;\n      let initData = {\n        patientID: patient.patientID ? patient.patientID : patientInit.patientID,\n        title: patient.title ? patient.title : patientInit.title,\n        patientCode: patient.patientCode ? patient.patientCode : patientInit.patientCode,\n        firstName: patient.firstName ? patient.firstName : patientInit.firstName,\n        middleName: patient.middleName ? patient.middleName : patientInit.middleName,\n        lastName: patient.lastName ? patient.lastName : patientInit.lastName,\n        nicPassport: patient.nicPassport ? patient.nicPassport : patientInit.nicPassport,\n        contactNo: patient.contactNo ? patient.contactNo : patientInit.contactNo,\n        email: patient.email ? patient.email : patientInit.email,\n        gender: patient.gender ? patient.gender : patientInit.gender,\n        dateOfBirthStr: patient.dateOfBirthStr ? patient.dateOfBirthStr : patientInit.dateOfBirthStr,\n        age: patient.age ? patient.age : patientInit.age,\n        occupation: patient.occupation ? patient.occupation : patientInit.occupation,\n        companyName: patient.companyName ? patient.companyName : patientInit.companyName,\n        department: patient.department ? patient.department : patientInit.department,\n        addressLine1: patient.addressLine1 ? patient.addressLine1 : patientInit.addressLine1,\n        addressLine2: patient.addressLine2 ? patient.addressLine2 : patientInit.addressLine2,\n        addressLine3: patient.addressLine3 ? patient.addressLine3 : patientInit.addressLine3,\n        bloodGroup: patient.bloodGroup ? patient.bloodGroup : patientInit.bloodGroup,\n        civilStatus: patient.civilStatus ? patient.civilStatus : patientInit.civilStatus,\n        referredBy: patient.referredBy ? patient.referredBy : patientInit.referredBy,\n        landLineNumber: patient.landLineNumber ? patient.landLineNumber : patientInit.landLineNumber,\n        whatsappNumber: patient.whatsappNumber ? patient.whatsappNumber : patientInit.whatsappNumber,\n        mobileNumber: patient.mobileNumber ? patient.mobileNumber : patientInit.mobileNumber,\n        comment: patient.comment ? patient.comment : patientInit.comment,\n        city: patient.city ? patient.city : patientInit.city,\n        status: patient.status ? patient.status : patientInit.status\n      };\n      return initData;\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.patient !== this.props.patient) {\n      this.onCustomValidation(this.props.patient);\n    }\n  }\n\n  render() {\n    let {\n      isValid,\n      values\n    } = this.props.formData;\n    let {\n      setPageIndex\n    } = this.props;\n    let initValues = this.setInitialValues();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: `red`\n            },\n            className: \"departmentCard\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Examination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-row flex-wrap  justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(CButton, {\n          disabled: !isValid,\n          onClick: () => {\n            this.props.saveOrUpdatePatient(trimData(values)).then(response => {\n              setStorageItem(Constants.STORAGE.PATIENT_ID, response.payload.patientID);\n              setPageIndex(this.props.nextPageIndex);\n            }).catch(error => {\n              console.log(error);\n            });\n          },\n          color: \"success\",\n          children: [\"Next\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(CIcon, {\n              size: 'lg',\n              name: 'cil-media-skip-forward',\n              style: {\n                marginLeft: '3px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        enableReinitialize: true,\n        initialValues: initValues,\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting\n          } = _ref;\n          setTimeout(() => {\n            setSubmitting(false);\n          }, 200);\n        },\n        validateOnChange: true,\n        validate: values => {\n          return this.onCustomValidation(values);\n        },\n        children: _ref2 => {\n          let {\n            errors,\n            touched\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'privilege-main-category-section',\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'privilege-category-name',\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [\"Basic Information - \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"color-green\",\n                    children: initValues.patientCode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 65\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'privilege-category-section',\n                children: /*#__PURE__*/_jsxDEV(CRow, {\n                  children: [/*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"title\",\n                        className: 'required',\n                        children: \"Title\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        name: \"title\",\n                        className: getInputFieldClassNames(touched.title, errors.title),\n                        children: _ref3 => {\n                          let {\n                            field,\n                            // { name, value, onChange, onBlur }\n                            form: {\n                              touched,\n                              errors\n                            },\n                            // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n                            meta\n                          } = _ref3;\n                          return /*#__PURE__*/_jsxDEV(CSelect, {\n                            custom: true,\n                            name: \"title\",\n                            ...field,\n                            children: getCommonTitleOptions(false).map(item => {\n                              return /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: item.key,\n                                children: item.value\n                              }, item.key, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 254,\n                                columnNumber: 77\n                              }, this);\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 250,\n                            columnNumber: 61\n                          }, this);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"title\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 265,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"firstName\",\n                        className: 'required',\n                        children: \"First Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"firstName\",\n                        placeholder: 'First Name',\n                        className: getInputFieldClassNames(touched.firstName, errors.firstName)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 275,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"firstName\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"middleName\",\n                        children: \"Middle Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"middleName\",\n                        placeholder: 'Middle Name',\n                        className: getInputFieldClassNames(touched.middleName, errors.middleName)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"middleName\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 303,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"lastName\",\n                        children: \"Last Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 310,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"lastName\",\n                        placeholder: 'Last Name',\n                        className: getInputFieldClassNames(touched.lastName, errors.lastName)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"lastName\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 322,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"nicPassport\",\n                        children: \"NIC/Passport\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 330,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"nicPassport\",\n                        placeholder: 'NIC',\n                        className: getInputFieldClassNames(touched.nicPassport, errors.nicPassport)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 332,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"nicPassport\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"contactNo\",\n                        className: 'required',\n                        children: \"Mobile Phone\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 349,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"contactNo\",\n                        placeholder: 'Contact No',\n                        className: getInputFieldClassNames(touched.contactNo, errors.contactNo)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"contactNo\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 362,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"gender\",\n                        className: 'required',\n                        children: \"Gender\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 369,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        name: \"gender\",\n                        className: getInputFieldClassNames(touched.gender, errors.gender),\n                        children: _ref4 => {\n                          let {\n                            field,\n                            // { name, value, onChange, onBlur }\n                            form: {\n                              touched,\n                              errors\n                            },\n                            // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n                            meta\n                          } = _ref4;\n                          return /*#__PURE__*/_jsxDEV(CSelect, {\n                            custom: true,\n                            name: \"gender\",\n                            ...field,\n                            children: getCommonGenderOptions(false).map(item => {\n                              return /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: item.key,\n                                children: item.value\n                              }, item.key, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 383,\n                                columnNumber: 77\n                              }, this);\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 379,\n                            columnNumber: 61\n                          }, this);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 370,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"gender\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 392,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"dateOfBirthStr\",\n                        className: 'required',\n                        children: \"Date of Birth\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 401,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"test\",\n                        name: \"dateOfBirthStr\",\n                        placeholder: 'Date of Birth',\n                        component: FormikDatePicker\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 404,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"dateOfBirthStr\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 414,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"age\",\n                        className: 'required',\n                        children: \"Age\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"number\",\n                        name: \"age\",\n                        placeholder: 'Age',\n                        className: getInputFieldClassNames(touched.age, errors.age)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 423,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"age\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 433,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"bloodGroup\",\n                        children: \"Blood Group\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        name: \"bloodGroup\",\n                        className: getInputFieldClassNames(touched.bloodGroup, errors.bloodGroup),\n                        children: _ref5 => {\n                          let {\n                            field,\n                            // { name, value, onChange, onBlur }\n                            form: {\n                              touched,\n                              errors\n                            },\n                            // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n                            meta\n                          } = _ref5;\n                          return /*#__PURE__*/_jsxDEV(CSelect, {\n                            custom: true,\n                            name: \"bloodGroup\",\n                            ...field,\n                            children: Constants.BLOOD_GROUP.map(item => {\n                              return /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: item.key,\n                                children: item.value\n                              }, item.key, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 457,\n                                columnNumber: 77\n                              }, this);\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 453,\n                            columnNumber: 61\n                          }, this);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 444,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"civilStatus\",\n                        children: \"Civil Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 472,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        name: \"civilStatus\",\n                        className: getInputFieldClassNames(touched.civilStatus, errors.civilStatus),\n                        children: _ref6 => {\n                          let {\n                            field,\n                            // { name, value, onChange, onBlur }\n                            form: {\n                              touched,\n                              errors\n                            },\n                            // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n                            meta\n                          } = _ref6;\n                          return /*#__PURE__*/_jsxDEV(CSelect, {\n                            custom: true,\n                            name: \"civilStatus\",\n                            ...field,\n                            children: getCivilStatusOptions(false).map(item => {\n                              return /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: item.key,\n                                children: item.value\n                              }, item.key, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 487,\n                                columnNumber: 77\n                              }, this);\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 483,\n                            columnNumber: 61\n                          }, this);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 474,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 471,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"civilStatus\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 498,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"email\",\n                        children: \"Referred By\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 506,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"referredBy\",\n                        placeholder: 'Referred By',\n                        className: getInputFieldClassNames(touched.referredBy, errors.referredBy)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 508,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"email\",\n                        children: \"Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 520,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"email\",\n                        name: \"email\",\n                        placeholder: 'Email',\n                        className: getInputFieldClassNames(touched.email, errors.email)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 522,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 519,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"email\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 532,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'privilege-main-category-section',\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'privilege-category-name',\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Other Information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'privilege-category-section',\n                children: /*#__PURE__*/_jsxDEV(CRow, {\n                  children: [/*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"occupation\",\n                        children: \"Occupation\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 551,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"occupation\",\n                        placeholder: 'Occupation',\n                        className: getInputFieldClassNames(touched.occupation, errors.occupation)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 553,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"occupation\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 563,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 561,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"companyName\",\n                        children: \"Company Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 570,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"companyName\",\n                        placeholder: 'Company Name',\n                        className: getInputFieldClassNames(touched.companyName, errors.companyName)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 572,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 569,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"companyName\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 582,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 580,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"department\",\n                        children: \"Department\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 589,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"department\",\n                        placeholder: 'Department',\n                        className: getInputFieldClassNames(touched.department, errors.department)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 591,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 588,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"department\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 601,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"addressLine1\",\n                        children: \"Address Line 1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 608,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"addressLine1\",\n                        placeholder: 'Address Line 1',\n                        className: getInputFieldClassNames(touched.addressLine1, errors.addressLine1)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 611,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"addressLine1\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 621,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 606,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"addressLine2\",\n                        children: \"Address Line 2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 628,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"addressLine2\",\n                        placeholder: 'Address Line 2',\n                        className: getInputFieldClassNames(touched.addressLine2, errors.addressLine2)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 629,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 627,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"addressLine2\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 639,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 637,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"addressLine3\",\n                        children: \"Address Line 3\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 647,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"addressLine3\",\n                        placeholder: 'Address Line 3',\n                        className: getInputFieldClassNames(touched.addressLine3, errors.addressLine3)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 649,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"addressLine3\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 659,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 657,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 645,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"city\",\n                        children: \"City\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 666,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        name: \"city\",\n                        className: getInputFieldClassNames(touched.city, errors.city),\n                        children: _ref7 => {\n                          let {\n                            field,\n                            // { name, value, onChange, onBlur }\n                            form: {\n                              touched,\n                              errors\n                            },\n                            // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n                            meta\n                          } = _ref7;\n                          return /*#__PURE__*/_jsxDEV(CSelect, {\n                            custom: true,\n                            name: \"city\",\n                            ...field,\n                            children: getCitiesOptions(false).map(item => {\n                              return /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: item.key,\n                                children: item.value.trim()\n                              }, item.key, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 681,\n                                columnNumber: 77\n                              }, this);\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 677,\n                            columnNumber: 61\n                          }, this);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 668,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 665,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"city\",\n                      render: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: 'formik-error-message',\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 692,\n                        columnNumber: 70\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 690,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 664,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'privilege-main-category-section',\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'privilege-category-name',\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Other Contacts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'privilege-category-section',\n                children: /*#__PURE__*/_jsxDEV(CRow, {\n                  children: [/*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"landLineNumber\",\n                        children: \"Land Line Number\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 713,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"landLineNumber\",\n                        placeholder: 'Land Line Number',\n                        className: getInputFieldClassNames(touched.landLineNumber, errors.landLineNumber)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 715,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 712,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"mobileNumber\",\n                        children: \"Mobile Number (2)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 727,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"mobileNumber\",\n                        placeholder: 'Mobile Number',\n                        className: getInputFieldClassNames(touched.mobileNumber, errors.mobileNumber)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 729,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 726,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 725,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    md: \"6\",\n                    lg: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"whatsappNumber\",\n                        children: \"Whatsapp Number\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 740,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        type: \"text\",\n                        name: \"whatsappNumber\",\n                        placeholder: 'whatsapp Number',\n                        className: getInputFieldClassNames(touched.whatsappNumber, errors.whatsappNumber)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 742,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 739,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 738,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'privilege-main-category-section',\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'privilege-category-name',\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Note\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'privilege-category-section',\n                children: /*#__PURE__*/_jsxDEV(CRow, {\n                  children: /*#__PURE__*/_jsxDEV(CCol, {\n                    sm: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: /*#__PURE__*/_jsxDEV(Field, {\n                        rows: \"5\",\n                        cols: \"120\",\n                        name: \"comment\",\n                        placeholder: '',\n                        className: getInputFieldClassNames(touched.comment, errors.comment),\n                        as: \"textarea\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 764,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 761,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-row flex-wrap  justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(CButton, {\n          disabled: !isValid,\n          onClick: () => {\n            this.props.saveOrUpdatePatient(trimData(values)).then(response => {\n              setStorageItem(Constants.STORAGE.PATIENT_ID, response.payload.patientID);\n              setPageIndex(this.props.nextPageIndex);\n            }).catch(error => {\n              console.log(error);\n            });\n          },\n          color: \"success\",\n          children: [\"Next\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(CIcon, {\n              size: 'lg',\n              name: 'cil-media-skip-forward',\n              style: {\n                marginLeft: '3px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    onFormChange: Action.onFormChange,\n    saveOrUpdatePatient: Action.saveOrUpdatePatient\n  }, dispatch);\n};\n\nfunction mapStateToProps(_ref8) {\n  let {\n    patient\n  } = _ref8;\n  return {\n    patient: patient.patientAddEdit.patient,\n    formData: patient.patientAddEdit.formData\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientAddEditFrom);","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/registerPatient/components/PatientAddEditFrom.js"],"names":["React","Component","ErrorMessage","Field","Form","Formik","CButton","CCol","CFormGroup","CLabel","CRow","CSelect","getCivilStatusOptions","getCommonGenderOptions","getCommonTitleOptions","getInputFieldClassNames","getStandardContactNumber","Constants","customValidator","Action","connect","bindActionCreators","FormikDatePicker","trimData","setStorageItem","CIcon","toDate","getCitiesOptions","PatientAddEditFrom","state","patientInit","patientID","title","patientCode","firstName","middleName","lastName","nicPassport","contactNo","email","gender","dateOfBirthStr","age","bloodGroup","civilStatus","CIVIL_STATUS_CONST","UNKNOWN","referredBy","occupation","companyName","department","addressLine1","addressLine2","addressLine3","city","landLineNumber","whatsappNumber","mobileNumber","comment","status","STATUS_CONST","ACT","getValidations","required","message","maxLength","value","phone","onCustomValidation","values","onFormChange","props","dob","today","Date","diff","getTime","Math","floor","console","log","TITLE_CONST","MR","GENDER_CONST","M","MS","MRS","MISS","F","MARRIED","validate","isValid","errors","setInitialValues","patient","initData","componentDidUpdate","prevProps","prevState","snapshot","render","formData","setPageIndex","initValues","backgroundColor","saveOrUpdatePatient","then","response","STORAGE","PATIENT_ID","payload","nextPageIndex","catch","error","marginLeft","setSubmitting","setTimeout","touched","field","form","meta","map","item","key","msg","BLOOD_GROUP","trim","mapDispatchToProps","dispatch","mapStateToProps","patientAddEdit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,EAAsBC,KAAtB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAgD,QAAhD;AACA,SAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,MAAnC,EAA2CC,IAA3C,EAAiDC,OAAjD,QAA+D,eAA/D;AACA,SACIC,qBADJ,EAEIC,sBAFJ,EAGIC,qBAHJ,EAIIC,uBAJJ,EAKIC,wBALJ,QAMO,4CANP;AAOA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,iDAA7B;AACA,SAAQC,QAAR,QAAuB,oDAAvB;AACA,SAAQC,cAAR,QAA6B,+CAA7B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAAQC,MAAR,QAAqB,qDAArB;AACA,SAAQC,gBAAR,QAA+B,yCAA/B;;;;AAEA,MAAMC,kBAAN,SAAiC3B,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAEvC4B,KAFuC,GAE/B;AACJC,MAAAA,WAAW,EAAE;AACTC,QAAAA,SAAS,EAAE,EADF;AAETC,QAAAA,KAAK,EAAE,IAFE;AAGTC,QAAAA,WAAW,EAAE,EAHJ;AAITC,QAAAA,SAAS,EAAE,EAJF;AAKTC,QAAAA,UAAU,EAAE,EALH;AAMTC,QAAAA,QAAQ,EAAE,EAND;AAOTC,QAAAA,WAAW,EAAE,EAPJ;AAQTC,QAAAA,SAAS,EAAE,EARF;AASTC,QAAAA,KAAK,EAAE,EATE;AAUTC,QAAAA,MAAM,EAAE,GAVC;AAWTC,QAAAA,cAAc,EAAE,EAXP;AAYTC,QAAAA,GAAG,EAAE,EAZI;AAaTC,QAAAA,UAAU,EAAE,EAbH;AAcTC,QAAAA,WAAW,EAAE3B,SAAS,CAAC4B,kBAAV,CAA6BC,OAdjC;AAeTC,QAAAA,UAAU,EAAE,EAfH;AAgBTC,QAAAA,UAAU,EAAE,EAhBH;AAiBTC,QAAAA,WAAW,EAAE,EAjBJ;AAkBTC,QAAAA,UAAU,EAAE,EAlBH;AAmBTC,QAAAA,YAAY,EAAE,EAnBL;AAoBTC,QAAAA,YAAY,EAAE,EApBL;AAqBTC,QAAAA,YAAY,EAAE,EArBL;AAsBTC,QAAAA,IAAI,EAAE,EAtBG;AAuBTC,QAAAA,cAAc,EAAE,EAvBP;AAwBTC,QAAAA,cAAc,EAAE,EAxBP;AAyBTC,QAAAA,YAAY,EAAE,EAzBL;AA0BTC,QAAAA,OAAO,EAAE,EA1BA;AA2BTC,QAAAA,MAAM,EAAE1C,SAAS,CAAC2C,YAAV,CAAuBC;AA3BtB;AADT,KAF+B;;AAAA,SAkCvCC,cAlCuC,GAkCtB,MAAM;AACnB,aAAO;AACH5B,QAAAA,SAAS,EAAE;AACP6B,UAAAA,QAAQ,EAAE;AAACC,YAAAA,OAAO,EAAE;AAAV,WADH;AAEPC,UAAAA,SAAS,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR;AAFJ,SADR;AAMH;AACA;AACA;AACA;AACA;AAEA3B,QAAAA,KAAK,EAAE;AACHA,UAAAA,KAAK,EAAE;AAACyB,YAAAA,OAAO,EAAE;AAAV;AADJ,SAZJ;AAgBH1B,QAAAA,SAAS,EAAE;AACPyB,UAAAA,QAAQ,EAAE;AAACC,YAAAA,OAAO,EAAE;AAAV,WADH;AAEPC,UAAAA,SAAS,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAFJ;AAGPC,UAAAA,KAAK,EAAE;AAACH,YAAAA,OAAO,EAAE;AAAV;AAHA,SAhBR,CAsBH;AACA;AACA;AACA;AACA;;AA1BG,OAAP;AA4BH,KA/DsC;;AAAA,SAiEvCI,kBAjEuC,GAiEjBC,MAAD,IAAY;AAC7B,YAAM;AAACC,QAAAA;AAAD,UAAiB,KAAKC,KAA5B;;AAEA,UAAIF,MAAM,CAAC/B,SAAX,EAAsB;AAClB+B,QAAAA,MAAM,CAAC/B,SAAP,GAAmBtB,wBAAwB,CAACqD,MAAM,CAAC/B,SAAR,CAA3C;AACH;;AACD,UAAI+B,MAAM,CAAC5B,cAAX,EAA2B;AACvB,YAAI+B,GAAG,GAAG9C,MAAM,CAAC2C,MAAM,CAAC5B,cAAR,CAAhB;AACA,YAAIgC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,YAAIC,IAAI,GAAGF,KAAK,CAACG,OAAN,KAAkBJ,GAAG,CAACI,OAAJ,EAA7B;AACAP,QAAAA,MAAM,CAAC3B,GAAP,GAAamC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,WAAlB,CAAb;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAAC3B,GAAnB;AACH;;AAED,UAAI2B,MAAM,CAACrC,KAAX,EAAkB;AACd+C,QAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACrC,KAAnB;;AACA,YAAIqC,MAAM,CAACrC,KAAP,KAAiBf,SAAS,CAACgE,WAAV,CAAsBC,EAA3C,EAA+C;AAC3Cb,UAAAA,MAAM,CAAC7B,MAAP,GAAgBvB,SAAS,CAACkE,YAAV,CAAuBC,CAAvC;AACH,SAFD,MAEO,IAAIf,MAAM,CAACrC,KAAP,KAAiBf,SAAS,CAACgE,WAAV,CAAsBI,EAAvC,IAA6ChB,MAAM,CAACrC,KAAP,KAAiBf,SAAS,CAACgE,WAAV,CAAsBK,GAApF,IAA2FjB,MAAM,CAACrC,KAAP,KAAiBf,SAAS,CAACgE,WAAV,CAAsBM,IAAtI,EAA4I;AAC/IlB,UAAAA,MAAM,CAAC7B,MAAP,GAAgBvB,SAAS,CAACkE,YAAV,CAAuBK,CAAvC;AACH;;AAED,YAAInB,MAAM,CAACrC,KAAP,KAAiBf,SAAS,CAACgE,WAAV,CAAsBK,GAA3C,EAAgD;AAC5CjB,UAAAA,MAAM,CAACzB,WAAP,GAAqB3B,SAAS,CAAC4B,kBAAV,CAA6B4C,OAAlD;AACH;AACJ;;AAED,UAAIC,QAAQ,GAAGxE,eAAe,CAACmD,MAAD,EAAS,KAAKP,cAAL,EAAT,CAA9B;AAEAQ,MAAAA,YAAY,CAAC;AACTqB,QAAAA,OAAO,EAAED,QAAQ,CAACC,OADT;AAETtB,QAAAA,MAAM,EAAEA;AAFC,OAAD,CAAZ;AAKA,aAAOqB,QAAQ,CAACE,MAAhB;AACH,KApGsC;;AAAA,SA4GvCC,gBA5GuC,GA4GpB,MAAM;AACrB,UAAI;AAACC,QAAAA;AAAD,UAAY,KAAKvB,KAArB;AACA,UAAI;AAACzC,QAAAA;AAAD,UAAgB,KAAKD,KAAzB;AAEA,UAAIkE,QAAQ,GAAG;AACXhE,QAAAA,SAAS,EAAE+D,OAAO,CAAC/D,SAAR,GAAoB+D,OAAO,CAAC/D,SAA5B,GAAwCD,WAAW,CAACC,SADpD;AAEXC,QAAAA,KAAK,EAAE8D,OAAO,CAAC9D,KAAR,GAAgB8D,OAAO,CAAC9D,KAAxB,GAAgCF,WAAW,CAACE,KAFxC;AAGXC,QAAAA,WAAW,EAAE6D,OAAO,CAAC7D,WAAR,GAAsB6D,OAAO,CAAC7D,WAA9B,GAA4CH,WAAW,CAACG,WAH1D;AAIXC,QAAAA,SAAS,EAAE4D,OAAO,CAAC5D,SAAR,GAAoB4D,OAAO,CAAC5D,SAA5B,GAAwCJ,WAAW,CAACI,SAJpD;AAKXC,QAAAA,UAAU,EAAE2D,OAAO,CAAC3D,UAAR,GAAqB2D,OAAO,CAAC3D,UAA7B,GAA0CL,WAAW,CAACK,UALvD;AAMXC,QAAAA,QAAQ,EAAE0D,OAAO,CAAC1D,QAAR,GAAmB0D,OAAO,CAAC1D,QAA3B,GAAsCN,WAAW,CAACM,QANjD;AAOXC,QAAAA,WAAW,EAAEyD,OAAO,CAACzD,WAAR,GAAsByD,OAAO,CAACzD,WAA9B,GAA4CP,WAAW,CAACO,WAP1D;AAQXC,QAAAA,SAAS,EAAEwD,OAAO,CAACxD,SAAR,GAAoBwD,OAAO,CAACxD,SAA5B,GAAwCR,WAAW,CAACQ,SARpD;AASXC,QAAAA,KAAK,EAAEuD,OAAO,CAACvD,KAAR,GAAgBuD,OAAO,CAACvD,KAAxB,GAAgCT,WAAW,CAACS,KATxC;AAUXC,QAAAA,MAAM,EAAEsD,OAAO,CAACtD,MAAR,GAAiBsD,OAAO,CAACtD,MAAzB,GAAkCV,WAAW,CAACU,MAV3C;AAWXC,QAAAA,cAAc,EAAEqD,OAAO,CAACrD,cAAR,GAAyBqD,OAAO,CAACrD,cAAjC,GAAkDX,WAAW,CAACW,cAXnE;AAYXC,QAAAA,GAAG,EAAEoD,OAAO,CAACpD,GAAR,GAAcoD,OAAO,CAACpD,GAAtB,GAA4BZ,WAAW,CAACY,GAZlC;AAaXM,QAAAA,UAAU,EAAE8C,OAAO,CAAC9C,UAAR,GAAqB8C,OAAO,CAAC9C,UAA7B,GAA0ClB,WAAW,CAACkB,UAbvD;AAcXC,QAAAA,WAAW,EAAE6C,OAAO,CAAC7C,WAAR,GAAsB6C,OAAO,CAAC7C,WAA9B,GAA4CnB,WAAW,CAACmB,WAd1D;AAeXC,QAAAA,UAAU,EAAE4C,OAAO,CAAC5C,UAAR,GAAqB4C,OAAO,CAAC5C,UAA7B,GAA0CpB,WAAW,CAACoB,UAfvD;AAgBXC,QAAAA,YAAY,EAAE2C,OAAO,CAAC3C,YAAR,GAAuB2C,OAAO,CAAC3C,YAA/B,GAA8CrB,WAAW,CAACqB,YAhB7D;AAiBXC,QAAAA,YAAY,EAAE0C,OAAO,CAAC1C,YAAR,GAAuB0C,OAAO,CAAC1C,YAA/B,GAA8CtB,WAAW,CAACsB,YAjB7D;AAkBXC,QAAAA,YAAY,EAAEyC,OAAO,CAACzC,YAAR,GAAuByC,OAAO,CAACzC,YAA/B,GAA8CvB,WAAW,CAACuB,YAlB7D;AAmBXV,QAAAA,UAAU,EAAEmD,OAAO,CAACnD,UAAR,GAAqBmD,OAAO,CAACnD,UAA7B,GAA0Cb,WAAW,CAACa,UAnBvD;AAoBXC,QAAAA,WAAW,EAAEkD,OAAO,CAAClD,WAAR,GAAsBkD,OAAO,CAAClD,WAA9B,GAA4Cd,WAAW,CAACc,WApB1D;AAqBXG,QAAAA,UAAU,EAAE+C,OAAO,CAAC/C,UAAR,GAAqB+C,OAAO,CAAC/C,UAA7B,GAA0CjB,WAAW,CAACiB,UArBvD;AAsBXQ,QAAAA,cAAc,EAAEuC,OAAO,CAACvC,cAAR,GAAyBuC,OAAO,CAACvC,cAAjC,GAAkDzB,WAAW,CAACyB,cAtBnE;AAuBXC,QAAAA,cAAc,EAAEsC,OAAO,CAACtC,cAAR,GAAyBsC,OAAO,CAACtC,cAAjC,GAAkD1B,WAAW,CAAC0B,cAvBnE;AAwBXC,QAAAA,YAAY,EAAEqC,OAAO,CAACrC,YAAR,GAAuBqC,OAAO,CAACrC,YAA/B,GAA8C3B,WAAW,CAAC2B,YAxB7D;AAyBXC,QAAAA,OAAO,EAAEoC,OAAO,CAACpC,OAAR,GAAkBoC,OAAO,CAACpC,OAA1B,GAAoC5B,WAAW,CAAC4B,OAzB9C;AA0BXJ,QAAAA,IAAI,EAAEwC,OAAO,CAACxC,IAAR,GAAewC,OAAO,CAACxC,IAAvB,GAA8BxB,WAAW,CAACwB,IA1BrC;AA2BXK,QAAAA,MAAM,EAAEmC,OAAO,CAACnC,MAAR,GAAiBmC,OAAO,CAACnC,MAAzB,GAAkC7B,WAAW,CAAC6B;AA3B3C,OAAf;AA6BA,aAAOoC,QAAP;AACH,KA9IsC;AAAA;;AAsGvCC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAIF,SAAS,CAACH,OAAV,KAAsB,KAAKvB,KAAL,CAAWuB,OAArC,EAA8C;AAC1C,WAAK1B,kBAAL,CAAwB,KAAKG,KAAL,CAAWuB,OAAnC;AACH;AACJ;;AAsCDM,EAAAA,MAAM,GAAG;AAEL,QAAI;AAACT,MAAAA,OAAD;AAAUtB,MAAAA;AAAV,QAAoB,KAAKE,KAAL,CAAW8B,QAAnC;AACA,QAAI;AAACC,MAAAA;AAAD,QAAiB,KAAK/B,KAA1B;AACA,QAAIgC,UAAU,GAAG,KAAKV,gBAAL,EAAjB;AAEA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,IAAT;AAAc,UAAA,EAAE,EAAC,GAAjB;AAAqB,UAAA,EAAE,EAAC,GAAxB;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,IAAT;AAAc,UAAA,EAAE,EAAC,GAAjB;AAAqB,UAAA,EAAE,EAAC,GAAxB;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,KAAK,EAAE;AAACW,cAAAA,eAAe,EAAE;AAAlB,aAAZ;AAAqC,YAAA,SAAS,EAAC,gBAA/C;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAeI;AAAK,QAAA,SAAS,EAAC,gDAAf;AAAA,+BACI,QAAC,OAAD;AACI,UAAA,QAAQ,EAAE,CAACb,OADf;AAEI,UAAA,OAAO,EAAE,MAAM;AACX,iBAAKpB,KAAL,CAAWkC,mBAAX,CAA+BlF,QAAQ,CAAC8C,MAAD,CAAvC,EAAiDqC,IAAjD,CAAuDC,QAAD,IAAc;AAChEnF,cAAAA,cAAc,CAACP,SAAS,CAAC2F,OAAV,CAAkBC,UAAnB,EAA+BF,QAAQ,CAACG,OAAT,CAAiB/E,SAAhD,CAAd;AACAuE,cAAAA,YAAY,CAAC,KAAK/B,KAAL,CAAWwC,aAAZ,CAAZ;AACH,aAHD,EAGGC,KAHH,CAGSC,KAAK,IAAI;AACdlC,cAAAA,OAAO,CAACC,GAAR,CAAYiC,KAAZ;AACH,aALD;AAMH,WATL;AAUI,UAAA,KAAK,EAAC,SAVV;AAAA,0CAaI;AAAA,mCACI,QAAC,KAAD;AACI,cAAA,IAAI,EAAE,IADV;AAEI,cAAA,IAAI,EAAE,wBAFV;AAGI,cAAA,KAAK,EAAE;AAACC,gBAAAA,UAAU,EAAE;AAAb;AAHX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAfJ,eAsCI,QAAC,MAAD;AACI,QAAA,kBAAkB,EAAE,IADxB;AAEI,QAAA,aAAa,EAAEX,UAFnB;AAGI,QAAA,QAAQ,EAAE,CAAClC,MAAD,WAA6B;AAAA,cAApB;AAAC8C,YAAAA;AAAD,WAAoB;AACnCC,UAAAA,UAAU,CAAC,MAAM;AACbD,YAAAA,aAAa,CAAC,KAAD,CAAb;AACH,WAFS,EAEP,GAFO,CAAV;AAGH,SAPL;AAQI,QAAA,gBAAgB,EAAE,IARtB;AASI,QAAA,QAAQ,EAAG9C,MAAD,IAAY;AAClB,iBAAO,KAAKD,kBAAL,CAAwBC,MAAxB,CAAP;AACH,SAXL;AAAA,kBAaK,SAAuB;AAAA,cAAtB;AAACuB,YAAAA,MAAD;AAASyB,YAAAA;AAAT,WAAsB;AACpB,8BACI,QAAC,IAAD;AAAA,oCAEI;AAAK,cAAA,SAAS,EAAE,iCAAhB;AAAA,sCAEI;AAAK,gBAAA,SAAS,EAAE,yBAAhB;AAAA,uCACI;AAAA,kEAAwB;AACpB,oBAAA,SAAS,EAAC,aADU;AAAA,8BACKd,UAAU,CAACtE;AADhB;AAAA;AAAA;AAAA;AAAA,0BAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAMI;AAAK,gBAAA,SAAS,EAAE,4BAAhB;AAAA,uCACI,QAAC,IAAD;AAAA,0CACI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,OAAhB;AAAwB,wBAAA,SAAS,EAAE,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AAAO,wBAAA,IAAI,EAAC,OAAZ;AACO,wBAAA,SAAS,EAAElB,uBAAuB,CAACsG,OAAO,CAACrF,KAAT,EAAgB4D,MAAM,CAAC5D,KAAvB,CADzC;AAAA,kCAGK;AAAA,8BAAC;AACIsF,4BAAAA,KADJ;AACW;AACPC,4BAAAA,IAAI,EAAE;AAACF,8BAAAA,OAAD;AAAUzB,8BAAAA;AAAV,6BAFV;AAE6B;AACzB4B,4BAAAA;AAHJ,2BAAD;AAAA,8CAMG,QAAC,OAAD;AAAS,4BAAA,MAAM,MAAf;AAAgB,4BAAA,IAAI,EAAC,OAArB;AAAA,+BAAiCF,KAAjC;AAAA,sCAEQxG,qBAAqB,CAAC,KAAD,CAArB,CAA6B2G,GAA7B,CAAkCC,IAAD,IAAU;AACvC,kDACI;AACQ,gCAAA,KAAK,EAAEA,IAAI,CAACC,GADpB;AAAA,0CAC0BD,IAAI,CAACxD;AAD/B,iCAAawD,IAAI,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA,sCADJ;AAIH,6BALD;AAFR;AAAA;AAAA;AAAA;AAAA,kCANH;AAAA;AAHL;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eA0BI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,OADT;AAEI,sBAAA,MAAM,EAAGC,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAkCI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,WAAhB;AAA4B,wBAAA,SAAS,EAAE,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAII,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,WAFT;AAGI,wBAAA,WAAW,EAAE,YAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAACnF,SAAT,EAAoB0D,MAAM,CAAC1D,SAA3B;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAaI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,WADT;AAEI,sBAAA,MAAM,EAAG0F,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAlCJ,eAsDI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,YAFT;AAGI,wBAAA,WAAW,EAAE,aAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAAClF,UAAT,EAAqByD,MAAM,CAACzD,UAA5B;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAWI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,YADT;AAEI,sBAAA,MAAM,EAAGyF,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAtDJ,eAwEI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,UAFT;AAGI,wBAAA,WAAW,EAAE,WAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAACjF,QAAT,EAAmBwD,MAAM,CAACxD,QAA1B;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAYI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,UADT;AAEI,sBAAA,MAAM,EAAGwF,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAxEJ,eA4FI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,aAFT;AAGI,wBAAA,WAAW,EAAE,KAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAAChF,WAAT,EAAsBuD,MAAM,CAACvD,WAA7B;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAYI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,aADT;AAEI,sBAAA,MAAM,EAAGuF,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BA5FJ,eA+GI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,WAAhB;AAA4B,wBAAA,SAAS,EAAE,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAII,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,WAFT;AAGI,wBAAA,WAAW,EAAE,YAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAAC/E,SAAT,EAAoBsD,MAAM,CAACtD,SAA3B;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAaI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,WADT;AAEI,sBAAA,MAAM,EAAGsF,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BA/GJ,eAkII,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CAEI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,QAAhB;AAAyB,wBAAA,SAAS,EAAE,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI,QAAC,KAAD;AAAO,wBAAA,IAAI,EAAC,QAAZ;AACO,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAAC7E,MAAT,EAAiBoD,MAAM,CAACpD,MAAxB,CADzC;AAAA,kCAGK;AAAA,8BAAC;AACI8E,4BAAAA,KADJ;AACW;AACPC,4BAAAA,IAAI,EAAE;AAACF,8BAAAA,OAAD;AAAUzB,8BAAAA;AAAV,6BAFV;AAE6B;AACzB4B,4BAAAA;AAHJ,2BAAD;AAAA,8CAMG,QAAC,OAAD;AAAS,4BAAA,MAAM,MAAf;AAAgB,4BAAA,IAAI,EAAC,QAArB;AAAA,+BAAkCF,KAAlC;AAAA,sCAEQzG,sBAAsB,CAAC,KAAD,CAAtB,CAA8B4G,GAA9B,CAAmCC,IAAD,IAAU;AACxC,kDACI;AACQ,gCAAA,KAAK,EAAEA,IAAI,CAACC,GADpB;AAAA,0CAC0BD,IAAI,CAACxD;AAD/B,iCAAawD,IAAI,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA,sCADJ;AAIH,6BALD;AAFR;AAAA;AAAA;AAAA;AAAA,kCANH;AAAA;AAHL;AAAA;AAAA;AAAA;AAAA,8BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,eA0BI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,QADT;AAEI,sBAAA,MAAM,EAAGC,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAlIJ,eAmKI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,gBAAhB;AAAiC,wBAAA,SAAS,EAAE,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAII,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,gBAFT;AAGI,wBAAA,WAAW,EAAE,eAHjB;AAII,wBAAA,SAAS,EAAEtG;AAJf;AAAA;AAAA;AAAA;AAAA,8BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAaI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,gBADT;AAEI,sBAAA,MAAM,EAAGsG,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAnKJ,eAuLI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,KAAhB;AAAsB,wBAAA,SAAS,EAAE,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,QADT;AAEI,wBAAA,IAAI,EAAC,KAFT;AAGI,wBAAA,WAAW,EAAE,KAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAAC3E,GAAT,EAAckD,MAAM,CAAClD,GAArB;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAYI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,KADT;AAEI,sBAAA,MAAM,EAAGkF,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAvLJ,eA0MI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,2CAEI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAII,QAAC,KAAD;AAAO,wBAAA,IAAI,EAAC,YAAZ;AACO,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAAC1E,UAAT,EAAqBiD,MAAM,CAACjD,UAA5B,CADzC;AAAA,kCAGK;AAAA,8BAAC;AACI2E,4BAAAA,KADJ;AACW;AACPC,4BAAAA,IAAI,EAAE;AAACF,8BAAAA,OAAD;AAAUzB,8BAAAA;AAAV,6BAFV;AAE6B;AACzB4B,4BAAAA;AAHJ,2BAAD;AAAA,8CAMG,QAAC,OAAD;AAAS,4BAAA,MAAM,MAAf;AAAgB,4BAAA,IAAI,EAAC,YAArB;AAAA,+BAAsCF,KAAtC;AAAA,sCAEQrG,SAAS,CAAC4G,WAAV,CAAsBJ,GAAtB,CAA2BC,IAAD,IAAU;AAChC,kDACI;AACQ,gCAAA,KAAK,EAAEA,IAAI,CAACC,GADpB;AAAA,0CAC0BD,IAAI,CAACxD;AAD/B,iCAAawD,IAAI,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA,sCADJ;AAIH,6BALD;AAFR;AAAA;AAAA;AAAA;AAAA,kCANH;AAAA;AAHL;AAAA;AAAA;AAAA;AAAA,8BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,0BA1MJ,eAyOI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CAEI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AAAO,wBAAA,IAAI,EAAC,aAAZ;AACO,wBAAA,SAAS,EAAE5G,uBAAuB,CAACsG,OAAO,CAACzE,WAAT,EAAsBgD,MAAM,CAAChD,WAA7B,CADzC;AAAA,kCAGK;AAAA,8BAAC;AACI0E,4BAAAA,KADJ;AACW;AACPC,4BAAAA,IAAI,EAAE;AAACF,8BAAAA,OAAD;AAAUzB,8BAAAA;AAAV,6BAFV;AAE6B;AACzB4B,4BAAAA;AAHJ,2BAAD;AAAA,8CAMG,QAAC,OAAD;AAAS,4BAAA,MAAM,MAAf;AAAgB,4BAAA,IAAI,EAAC,aAArB;AAAA,+BAAuCF,KAAvC;AAAA,sCAEQ1G,qBAAqB,CAAC,KAAD,CAArB,CAA6B6G,GAA7B,CAAkCC,IAAD,IAAU;AACvC,kDACI;AACQ,gCAAA,KAAK,EAAEA,IAAI,CAACC,GADpB;AAAA,0CAC0BD,IAAI,CAACxD;AAD/B,iCAAawD,IAAI,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA,sCADJ;AAIH,6BALD;AAFR;AAAA;AAAA;AAAA;AAAA,kCANH;AAAA;AAHL;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,eA2BI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,aADT;AAEI,sBAAA,MAAM,EAAGC,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAzOJ,eA4QI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,2CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,YAFT;AAGI,wBAAA,WAAW,EAAE,aAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAACtE,UAAT,EAAqB6C,MAAM,CAAC7C,UAA5B;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BA5QJ,eA0RI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,OADT;AAEI,wBAAA,IAAI,EAAC,OAFT;AAGI,wBAAA,WAAW,EAAE,OAHjB;AAII,wBAAA,SAAS,EAAEhC,uBAAuB,CAACsG,OAAO,CAAC9E,KAAT,EAAgBqD,MAAM,CAACrD,KAAvB;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAYI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,OADT;AAEI,sBAAA,MAAM,EAAGqF,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BA1RJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAyTI;AAAK,cAAA,SAAS,EAAE,iCAAhB;AAAA,sCAEI;AAAK,gBAAA,SAAS,EAAE,yBAAhB;AAAA,uCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAMI;AAAK,gBAAA,SAAS,EAAE,4BAAhB;AAAA,uCAEI,QAAC,IAAD;AAAA,0CACI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,YAFT;AAGI,wBAAA,WAAW,EAAE,YAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAACrE,UAAT,EAAqB4C,MAAM,CAAC5C,UAA5B;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAYI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,YADT;AAEI,sBAAA,MAAM,EAAG4E,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAoBI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,aAFT;AAGI,wBAAA,WAAW,EAAE,cAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAACpE,WAAT,EAAsB2C,MAAM,CAAC3C,WAA7B;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAYI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,aADT;AAEI,sBAAA,MAAM,EAAG2E,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BApBJ,eAuCI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,YAFT;AAGI,wBAAA,WAAW,EAAE,YAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAACnE,UAAT,EAAqB0C,MAAM,CAAC1C,UAA5B;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAYI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,YADT;AAEI,sBAAA,MAAM,EAAG0E,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAvCJ,eA0DI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAII,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,cAFT;AAGI,wBAAA,WAAW,EAAE,gBAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAAClE,YAAT,EAAuByC,MAAM,CAACzC,YAA9B;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAaI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,cADT;AAEI,sBAAA,MAAM,EAAGyE,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BA1DJ,eA8EI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,cAFT;AAGI,wBAAA,WAAW,EAAE,gBAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAACjE,YAAT,EAAuBwC,MAAM,CAACxC,YAA9B;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAWI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,cADT;AAEI,sBAAA,MAAM,EAAGwE,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BA9EJ,eAiGI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,cAFT;AAGI,wBAAA,WAAW,EAAE,gBAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAAChE,YAAT,EAAuBuC,MAAM,CAACvC,YAA9B;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAYI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,cADT;AAEI,sBAAA,MAAM,EAAGuE,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjGJ,eAoHI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,4CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AAAO,wBAAA,IAAI,EAAC,MAAZ;AACO,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAAC/D,IAAT,EAAesC,MAAM,CAACtC,IAAtB,CADzC;AAAA,kCAGK;AAAA,8BAAC;AACIgE,4BAAAA,KADJ;AACW;AACPC,4BAAAA,IAAI,EAAE;AAACF,8BAAAA,OAAD;AAAUzB,8BAAAA;AAAV,6BAFV;AAE6B;AACzB4B,4BAAAA;AAHJ,2BAAD;AAAA,8CAMG,QAAC,OAAD;AAAS,4BAAA,MAAM,MAAf;AAAgB,4BAAA,IAAI,EAAC,MAArB;AAAA,+BAAgCF,KAAhC;AAAA,sCAEQ3F,gBAAgB,CAAC,KAAD,CAAhB,CAAwB8F,GAAxB,CAA6BC,IAAD,IAAU;AAClC,kDACI;AACQ,gCAAA,KAAK,EAAEA,IAAI,CAACC,GADpB;AAAA,0CAC0BD,IAAI,CAACxD,KAAL,CAAW4D,IAAX;AAD1B,iCAAaJ,IAAI,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA,sCADJ;AAIH,6BALD;AAFR;AAAA;AAAA;AAAA;AAAA,kCANH;AAAA;AAHL;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eA0BI,QAAC,YAAD;AACI,sBAAA,IAAI,EAAC,MADT;AAEI,sBAAA,MAAM,EAAGC,GAAD,iBAAS;AACb,wBAAA,SAAS,EAAE,sBADE;AAAA,kCACuBA;AADvB;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,4BA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BApHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzTJ,eA2dI;AAAK,cAAA,SAAS,EAAE,iCAAhB;AAAA,sCAEI;AAAK,gBAAA,SAAS,EAAE,yBAAhB;AAAA,uCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAMI;AAAK,gBAAA,SAAS,EAAE,4BAAhB;AAAA,uCAEI,QAAC,IAAD;AAAA,0CACI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,2CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,gBAFT;AAGI,wBAAA,WAAW,EAAE,kBAHjB;AAII,wBAAA,SAAS,EAAE7G,uBAAuB,CAACsG,OAAO,CAAC9D,cAAT,EAAyBqC,MAAM,CAACrC,cAAhC;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAeI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,2CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,cAFT;AAGI,wBAAA,WAAW,EAAE,eAHjB;AAII,wBAAA,SAAS,EAAExC,uBAAuB,CAACsG,OAAO,CAAC5D,YAAT,EAAuBmC,MAAM,CAACnC,YAA9B;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BAfJ,eA4BI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAc,oBAAA,EAAE,EAAC,GAAjB;AAAqB,oBAAA,EAAE,EAAC,GAAxB;AAAA,2CACI,QAAC,UAAD;AAAA,8CACI,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAGI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,MADT;AAEI,wBAAA,IAAI,EAAC,gBAFT;AAGI,wBAAA,WAAW,EAAE,iBAHjB;AAII,wBAAA,SAAS,EAAE1C,uBAAuB,CAACsG,OAAO,CAAC7D,cAAT,EAAyBoC,MAAM,CAACpC,cAAhC;AAJtC;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3dJ,eAghBI;AAAK,cAAA,SAAS,EAAE,iCAAhB;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAE,yBAAhB;AAAA,uCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAK,gBAAA,SAAS,EAAE,4BAAhB;AAAA,uCACI,QAAC,IAAD;AAAA,yCACI,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,IAAT;AAAA,2CACI,QAAC,UAAD;AAAA,6CAEI,QAAC,KAAD;AACI,wBAAA,IAAI,EAAC,GADT;AACa,wBAAA,IAAI,EAAC,KADlB;AAEI,wBAAA,IAAI,EAAC,SAFT;AAGI,wBAAA,WAAW,EAAE,EAHjB;AAII,wBAAA,SAAS,EAAEzC,uBAAuB,CAACsG,OAAO,CAAC3D,OAAT,EAAkBkC,MAAM,CAAClC,OAAzB,CAJtC;AAKI,wBAAA,EAAE,EAAC;AALP;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAyiBH;AAvjBL;AAAA;AAAA;AAAA;AAAA,cAtCJ,eAgmBI;AAAK,QAAA,SAAS,EAAC,gDAAf;AAAA,+BACI,QAAC,OAAD;AACI,UAAA,QAAQ,EAAE,CAACiC,OADf;AAEI,UAAA,OAAO,EAAE,MAAM;AACX,iBAAKpB,KAAL,CAAWkC,mBAAX,CAA+BlF,QAAQ,CAAC8C,MAAD,CAAvC,EAAiDqC,IAAjD,CAAuDC,QAAD,IAAc;AAChEnF,cAAAA,cAAc,CAACP,SAAS,CAAC2F,OAAV,CAAkBC,UAAnB,EAA+BF,QAAQ,CAACG,OAAT,CAAiB/E,SAAhD,CAAd;AACAuE,cAAAA,YAAY,CAAC,KAAK/B,KAAL,CAAWwC,aAAZ,CAAZ;AACH,aAHD,EAGGC,KAHH,CAGSC,KAAK,IAAI;AACdlC,cAAAA,OAAO,CAACC,GAAR,CAAYiC,KAAZ;AACH,aALD;AAMH,WATL;AAUI,UAAA,KAAK,EAAC,SAVV;AAAA,0CAaI;AAAA,mCACI,QAAC,KAAD;AACI,cAAA,IAAI,EAAE,IADV;AAEI,cAAA,IAAI,EAAE,wBAFV;AAGI,cAAA,KAAK,EAAE;AAACC,gBAAAA,UAAU,EAAE;AAAb;AAHX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhmBJ;AAAA,oBADJ;AA0nBH;;AAhxBsC;;AAmxB3C,MAAMa,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO3G,kBAAkB,CAAC;AACtBiD,IAAAA,YAAY,EAAEnD,MAAM,CAACmD,YADC;AAEtBmC,IAAAA,mBAAmB,EAAEtF,MAAM,CAACsF;AAFN,GAAD,EAGtBuB,QAHsB,CAAzB;AAIH,CALD;;AAOA,SAASC,eAAT,QAAoC;AAAA,MAAX;AAACnC,IAAAA;AAAD,GAAW;AAChC,SAAO;AACHA,IAAAA,OAAO,EAAEA,OAAO,CAACoC,cAAR,CAAuBpC,OAD7B;AAEHO,IAAAA,QAAQ,EAAEP,OAAO,CAACoC,cAAR,CAAuB7B;AAF9B,GAAP;AAIH;;AAED,eAAejF,OAAO,CAAC6G,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CnG,kBAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\nimport {CButton, CCol, CFormGroup, CLabel, CRow, CSelect} from \"@coreui/react\";\nimport {\n    getCivilStatusOptions,\n    getCommonGenderOptions,\n    getCommonTitleOptions,\n    getInputFieldClassNames,\n    getStandardContactNumber\n} from \"../../../../../../../../../utils/FormUtils\";\nimport Constants from \"../../../../../../../../../utils/Constants\";\nimport customValidator from \"../../../../../../../../../utils/ValidationUtil\";\nimport * as Action from \"../store/actions\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from 'redux';\nimport FormikDatePicker from \"../../../../../../../../common/FormikDatePicker\";\nimport {trimData} from \"../../../../../../../../../utils/DataExtractHelper\";\nimport {setStorageItem} from \"../../../../../../../../../utils/StorageUtils\";\nimport CIcon from \"@coreui/icons-react\";\nimport {toDate} from \"../../../../../../../../../utils/HealthTrackerUtils\";\nimport {getCitiesOptions} from \"../../../../../../../../../utils/Cities\";\n\nclass PatientAddEditFrom extends Component {\n\n    state = {\n        patientInit: {\n            patientID: '',\n            title: 'MR',\n            patientCode: '',\n            firstName: '',\n            middleName: '',\n            lastName: '',\n            nicPassport: '',\n            contactNo: '',\n            email: '',\n            gender: 'M',\n            dateOfBirthStr: '',\n            age: '',\n            bloodGroup: '',\n            civilStatus: Constants.CIVIL_STATUS_CONST.UNKNOWN,\n            referredBy: '',\n            occupation: '',\n            companyName: '',\n            department: '',\n            addressLine1: '',\n            addressLine2: '',\n            addressLine3: '',\n            city: '',\n            landLineNumber: '',\n            whatsappNumber: '',\n            mobileNumber: '',\n            comment: '',\n            status: Constants.STATUS_CONST.ACT,\n        }\n    };\n\n    getValidations = () => {\n        return {\n            firstName: {\n                required: {message: 'Required'},\n                maxLength: {value: 255}\n            },\n\n            // nicPassport: {\n            //     required: {message: 'Required'},\n            //     maxLength: {value: 12},\n            //     nicLK: {message: 'Invalid NIC'}\n            // },\n\n            email: {\n                email: {message: 'Invalid Email'}\n            },\n\n            contactNo: {\n                required: {message: 'Required'},\n                maxLength: {value: 12},\n                phone: {message: 'Invalid Contact Number'}\n            },\n\n            // age: {\n            //     required: {message: 'Required'},\n            //     maxLength: {value: 3},\n            //     min: {value: 1}\n            // },\n        };\n    };\n\n    onCustomValidation = (values) => {\n        const {onFormChange} = this.props;\n\n        if (values.contactNo) {\n            values.contactNo = getStandardContactNumber(values.contactNo);\n        }\n        if (values.dateOfBirthStr) {\n            let dob = toDate(values.dateOfBirthStr);\n            let today = new Date();\n            let diff = today.getTime() - dob.getTime();\n            values.age = Math.floor(diff / 31556736000);\n            console.log(values.age);\n        }\n\n        if (values.title) {\n            console.log(values.title);\n            if (values.title === Constants.TITLE_CONST.MR) {\n                values.gender = Constants.GENDER_CONST.M;\n            } else if (values.title === Constants.TITLE_CONST.MS || values.title === Constants.TITLE_CONST.MRS || values.title === Constants.TITLE_CONST.MISS) {\n                values.gender = Constants.GENDER_CONST.F;\n            }\n\n            if (values.title === Constants.TITLE_CONST.MRS) {\n                values.civilStatus = Constants.CIVIL_STATUS_CONST.MARRIED\n            }\n        }\n\n        let validate = customValidator(values, this.getValidations());\n\n        onFormChange({\n            isValid: validate.isValid,\n            values: values\n        });\n\n        return validate.errors;\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.patient !== this.props.patient) {\n            this.onCustomValidation(this.props.patient);\n        }\n    }\n\n    setInitialValues = () => {\n        let {patient} = this.props;\n        let {patientInit} = this.state;\n\n        let initData = {\n            patientID: patient.patientID ? patient.patientID : patientInit.patientID,\n            title: patient.title ? patient.title : patientInit.title,\n            patientCode: patient.patientCode ? patient.patientCode : patientInit.patientCode,\n            firstName: patient.firstName ? patient.firstName : patientInit.firstName,\n            middleName: patient.middleName ? patient.middleName : patientInit.middleName,\n            lastName: patient.lastName ? patient.lastName : patientInit.lastName,\n            nicPassport: patient.nicPassport ? patient.nicPassport : patientInit.nicPassport,\n            contactNo: patient.contactNo ? patient.contactNo : patientInit.contactNo,\n            email: patient.email ? patient.email : patientInit.email,\n            gender: patient.gender ? patient.gender : patientInit.gender,\n            dateOfBirthStr: patient.dateOfBirthStr ? patient.dateOfBirthStr : patientInit.dateOfBirthStr,\n            age: patient.age ? patient.age : patientInit.age,\n            occupation: patient.occupation ? patient.occupation : patientInit.occupation,\n            companyName: patient.companyName ? patient.companyName : patientInit.companyName,\n            department: patient.department ? patient.department : patientInit.department,\n            addressLine1: patient.addressLine1 ? patient.addressLine1 : patientInit.addressLine1,\n            addressLine2: patient.addressLine2 ? patient.addressLine2 : patientInit.addressLine2,\n            addressLine3: patient.addressLine3 ? patient.addressLine3 : patientInit.addressLine3,\n            bloodGroup: patient.bloodGroup ? patient.bloodGroup : patientInit.bloodGroup,\n            civilStatus: patient.civilStatus ? patient.civilStatus : patientInit.civilStatus,\n            referredBy: patient.referredBy ? patient.referredBy : patientInit.referredBy,\n            landLineNumber: patient.landLineNumber ? patient.landLineNumber : patientInit.landLineNumber,\n            whatsappNumber: patient.whatsappNumber ? patient.whatsappNumber : patientInit.whatsappNumber,\n            mobileNumber: patient.mobileNumber ? patient.mobileNumber : patientInit.mobileNumber,\n            comment: patient.comment ? patient.comment : patientInit.comment,\n            city: patient.city ? patient.city : patientInit.city,\n            status: patient.status ? patient.status : patientInit.status,\n        };\n        return initData;\n    };\n\n    render() {\n\n        let {isValid, values} = this.props.formData;\n        let {setPageIndex} = this.props;\n        let initValues = this.setInitialValues();\n\n        return (\n            <>\n                <hr></hr>\n                <CRow>\n                    <CCol sm=\"12\" md=\"6\" lg=\"4\">\n                        <h2>one</h2>\n                    </CCol>\n                    <CCol sm=\"12\" md=\"6\" lg=\"8\">\n                        <div>\n                            \n                        </div>\n                        <div style={{backgroundColor:`red`}} className='departmentCard'>\n                            <p >Examination</p> \n                        </div>\n                    </CCol>\n                </CRow>\n                <div className='d-flex flex-row flex-wrap  justify-content-end'>\n                    <CButton\n                        disabled={!isValid}\n                        onClick={() => {\n                            this.props.saveOrUpdatePatient(trimData(values)).then((response) => {\n                                setStorageItem(Constants.STORAGE.PATIENT_ID, response.payload.patientID);\n                                setPageIndex(this.props.nextPageIndex);\n                            }).catch(error => {\n                                console.log(error);\n                            })\n                        }}\n                        color=\"success\"\n                    >\n                        Next\n                        <span>\n                            <CIcon\n                                size={'lg'}\n                                name={'cil-media-skip-forward'}\n                                style={{marginLeft: '3px'}}\n                            />\n                        </span>\n                    </CButton>\n                </div>\n                <Formik\n                    enableReinitialize={true}\n                    initialValues={initValues}\n                    onSubmit={(values, {setSubmitting}) => {\n                        setTimeout(() => {\n                            setSubmitting(false)\n                        }, 200)\n                    }}\n                    validateOnChange={true}\n                    validate={(values) => {\n                        return this.onCustomValidation(values);\n                    }}\n                >\n                    {({errors, touched}) => {\n                        return (\n                            <Form>\n\n                                <div className={'privilege-main-category-section'}>\n\n                                    <div className={'privilege-category-name'}>\n                                        <h5>Basic Information - <span\n                                            className=\"color-green\">{initValues.patientCode}</span></h5>\n                                    </div>\n                                    <div className={'privilege-category-section'}>\n                                        <CRow>\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"title\" className={'required'}>Title</CLabel>\n\n                                                    <Field name=\"title\"\n                                                           className={getInputFieldClassNames(touched.title, errors.title)}\n                                                    >\n                                                        {({\n                                                              field, // { name, value, onChange, onBlur }\n                                                              form: {touched, errors}, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n                                                              meta,\n                                                          }) => (\n\n                                                            <CSelect custom name=\"title\" {...field}>\n                                                                {\n                                                                    getCommonTitleOptions(false).map((item) => {\n                                                                        return (\n                                                                            <option key={item.key}\n                                                                                    value={item.key}>{item.value}</option>\n                                                                        );\n                                                                    })\n                                                                }\n                                                            </CSelect>\n                                                        )}\n                                                    </Field>\n                                                </CFormGroup>\n                                                <ErrorMessage\n                                                    name=\"title\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"firstName\" className={'required'}>First\n                                                        Name</CLabel>\n\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"firstName\"\n                                                        placeholder={'First Name'}\n                                                        className={getInputFieldClassNames(touched.firstName, errors.firstName)}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"firstName\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"middleName\">Middle Name</CLabel>\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"middleName\"\n                                                        placeholder={'Middle Name'}\n                                                        className={getInputFieldClassNames(touched.middleName, errors.middleName)}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"middleName\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"lastName\">Last Name</CLabel>\n\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"lastName\"\n                                                        placeholder={'Last Name'}\n                                                        className={getInputFieldClassNames(touched.lastName, errors.lastName)}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"lastName\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"nicPassport\">NIC/Passport</CLabel>\n\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"nicPassport\"\n                                                        placeholder={'NIC'}\n                                                        className={getInputFieldClassNames(touched.nicPassport, errors.nicPassport)}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"nicPassport\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"contactNo\" className={'required'}>Mobile\n                                                        Phone</CLabel>\n\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"contactNo\"\n                                                        placeholder={'Contact No'}\n                                                        className={getInputFieldClassNames(touched.contactNo, errors.contactNo)}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"contactNo\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"gender\" className={'required'}>Gender</CLabel>\n                                                    <Field name=\"gender\"\n                                                           className={getInputFieldClassNames(touched.gender, errors.gender)}\n                                                    >\n                                                        {({\n                                                              field, // { name, value, onChange, onBlur }\n                                                              form: {touched, errors}, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n                                                              meta,\n                                                          }) => (\n\n                                                            <CSelect custom name=\"gender\" {...field}>\n                                                                {\n                                                                    getCommonGenderOptions(false).map((item) => {\n                                                                        return (\n                                                                            <option key={item.key}\n                                                                                    value={item.key}>{item.value}</option>\n                                                                        );\n                                                                    })\n                                                                }\n                                                            </CSelect>\n                                                        )}\n                                                    </Field>\n                                                </CFormGroup>\n                                                <ErrorMessage\n                                                    name=\"gender\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"dateOfBirthStr\" className={'required'}>Date of\n                                                        Birth</CLabel>\n\n                                                    <Field\n                                                        type=\"test\"\n                                                        name=\"dateOfBirthStr\"\n                                                        placeholder={'Date of Birth'}\n                                                        component={FormikDatePicker}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"dateOfBirthStr\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"age\" className={'required'}>Age</CLabel>\n\n                                                    <Field\n                                                        type=\"number\"\n                                                        name=\"age\"\n                                                        placeholder={'Age'}\n                                                        className={getInputFieldClassNames(touched.age, errors.age)}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"age\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"bloodGroup\">Blood\n                                                        Group</CLabel>\n\n                                                    <Field name=\"bloodGroup\"\n                                                           className={getInputFieldClassNames(touched.bloodGroup, errors.bloodGroup)}\n                                                    >\n                                                        {({\n                                                              field, // { name, value, onChange, onBlur }\n                                                              form: {touched, errors}, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n                                                              meta,\n                                                          }) => (\n\n                                                            <CSelect custom name=\"bloodGroup\" {...field}>\n                                                                {\n                                                                    Constants.BLOOD_GROUP.map((item) => {\n                                                                        return (\n                                                                            <option key={item.key}\n                                                                                    value={item.key}>{item.value}</option>\n                                                                        );\n                                                                    })\n                                                                }\n                                                            </CSelect>\n                                                        )}\n                                                    </Field>\n                                                </CFormGroup>\n                                            </CCol>\n\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"civilStatus\">Civil Status</CLabel>\n\n                                                    <Field name=\"civilStatus\"\n                                                           className={getInputFieldClassNames(touched.civilStatus, errors.civilStatus)}\n                                                    >\n                                                        {({\n                                                              field, // { name, value, onChange, onBlur }\n                                                              form: {touched, errors}, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n                                                              meta,\n                                                          }) => (\n\n                                                            <CSelect custom name=\"civilStatus\" {...field}>\n                                                                {\n                                                                    getCivilStatusOptions(false).map((item) => {\n                                                                        return (\n                                                                            <option key={item.key}\n                                                                                    value={item.key}>{item.value}</option>\n                                                                        );\n                                                                    })\n                                                                }\n                                                            </CSelect>\n                                                        )}\n                                                    </Field>\n                                                </CFormGroup>\n                                                <ErrorMessage\n                                                    name=\"civilStatus\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"email\">Referred By</CLabel>\n\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"referredBy\"\n                                                        placeholder={'Referred By'}\n                                                        className={getInputFieldClassNames(touched.referredBy, errors.referredBy)}\n                                                    />\n                                                </CFormGroup>\n\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"email\">Email</CLabel>\n\n                                                    <Field\n                                                        type=\"email\"\n                                                        name=\"email\"\n                                                        placeholder={'Email'}\n                                                        className={getInputFieldClassNames(touched.email, errors.email)}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"email\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n                                        </CRow>\n                                    </div>\n                                </div>\n\n                                <div className={'privilege-main-category-section'}>\n\n                                    <div className={'privilege-category-name'}>\n                                        <h5>Other Information</h5>\n                                    </div>\n\n                                    <div className={'privilege-category-section'}>\n\n                                        <CRow>\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"occupation\">Occupation</CLabel>\n\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"occupation\"\n                                                        placeholder={'Occupation'}\n                                                        className={getInputFieldClassNames(touched.occupation, errors.occupation)}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"occupation\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"companyName\">Company Name</CLabel>\n\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"companyName\"\n                                                        placeholder={'Company Name'}\n                                                        className={getInputFieldClassNames(touched.companyName, errors.companyName)}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"companyName\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"department\">Department</CLabel>\n\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"department\"\n                                                        placeholder={'Department'}\n                                                        className={getInputFieldClassNames(touched.department, errors.department)}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"department\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"addressLine1\">Address Line\n                                                        1</CLabel>\n\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"addressLine1\"\n                                                        placeholder={'Address Line 1'}\n                                                        className={getInputFieldClassNames(touched.addressLine1, errors.addressLine1)}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"addressLine1\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"addressLine2\">Address Line 2</CLabel>\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"addressLine2\"\n                                                        placeholder={'Address Line 2'}\n                                                        className={getInputFieldClassNames(touched.addressLine2, errors.addressLine2)}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"addressLine2\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"addressLine3\">Address Line 3</CLabel>\n\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"addressLine3\"\n                                                        placeholder={'Address Line 3'}\n                                                        className={getInputFieldClassNames(touched.addressLine3, errors.addressLine3)}\n                                                    />\n                                                </CFormGroup>\n\n                                                <ErrorMessage\n                                                    name=\"addressLine3\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"city\">City</CLabel>\n\n                                                    <Field name=\"city\"\n                                                           className={getInputFieldClassNames(touched.city, errors.city)}\n                                                    >\n                                                        {({\n                                                              field, // { name, value, onChange, onBlur }\n                                                              form: {touched, errors}, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n                                                              meta,\n                                                          }) => (\n\n                                                            <CSelect custom name=\"city\" {...field}>\n                                                                {\n                                                                    getCitiesOptions(false).map((item) => {\n                                                                        return (\n                                                                            <option key={item.key}\n                                                                                    value={item.key}>{item.value.trim()}</option>\n                                                                        );\n                                                                    })\n                                                                }\n                                                            </CSelect>\n                                                        )}\n                                                    </Field>\n                                                </CFormGroup>\n                                                <ErrorMessage\n                                                    name=\"city\"\n                                                    render={(msg) => <div\n                                                        className={'formik-error-message'}>{msg}</div>}\n                                                />\n                                            </CCol>\n\n                                        </CRow>\n                                    </div>\n                                </div>\n\n\n                                <div className={'privilege-main-category-section'}>\n\n                                    <div className={'privilege-category-name'}>\n                                        <h5>Other Contacts</h5>\n                                    </div>\n\n                                    <div className={'privilege-category-section'}>\n\n                                        <CRow>\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"landLineNumber\">Land Line Number</CLabel>\n\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"landLineNumber\"\n                                                        placeholder={'Land Line Number'}\n                                                        className={getInputFieldClassNames(touched.landLineNumber, errors.landLineNumber)}\n                                                    />\n                                                </CFormGroup>\n\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"mobileNumber\">Mobile Number (2)</CLabel>\n\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"mobileNumber\"\n                                                        placeholder={'Mobile Number'}\n                                                        className={getInputFieldClassNames(touched.mobileNumber, errors.mobileNumber)}\n                                                    />\n                                                </CFormGroup>\n                                            </CCol>\n\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">\n                                                <CFormGroup>\n                                                    <CLabel htmlFor=\"whatsappNumber\">Whatsapp Number</CLabel>\n\n                                                    <Field\n                                                        type=\"text\"\n                                                        name=\"whatsappNumber\"\n                                                        placeholder={'whatsapp Number'}\n                                                        className={getInputFieldClassNames(touched.whatsappNumber, errors.whatsappNumber)}\n                                                    />\n                                                </CFormGroup>\n                                            </CCol>\n                                        </CRow>\n                                    </div>\n                                </div>\n\n\n                                <div className={'privilege-main-category-section'}>\n                                    <div className={'privilege-category-name'}>\n                                        <h5>Note</h5>\n                                    </div>\n                                    <div className={'privilege-category-section'}>\n                                        <CRow>\n                                            <CCol sm=\"12\">\n                                                <CFormGroup>\n                                                    {/*<CLabel htmlFor=\"comment\">Comment</CLabel>*/}\n                                                    <Field\n                                                        rows=\"5\" cols=\"120\"\n                                                        name=\"comment\"\n                                                        placeholder={''}\n                                                        className={getInputFieldClassNames(touched.comment, errors.comment)}\n                                                        as='textarea'\n                                                    >\n                                                    </Field>\n                                                </CFormGroup>\n                                            </CCol>\n                                        </CRow>\n                                    </div>\n                                </div>\n                            </Form>\n                        );\n                    }}\n                </Formik>\n\n                <div className='d-flex flex-row flex-wrap  justify-content-end'>\n                    <CButton\n                        disabled={!isValid}\n                        onClick={() => {\n                            this.props.saveOrUpdatePatient(trimData(values)).then((response) => {\n                                setStorageItem(Constants.STORAGE.PATIENT_ID, response.payload.patientID);\n                                setPageIndex(this.props.nextPageIndex);\n                            }).catch(error => {\n                                console.log(error);\n                            })\n                        }}\n                        color=\"success\"\n                    >\n                        Next\n                        <span>\n                            <CIcon\n                                size={'lg'}\n                                name={'cil-media-skip-forward'}\n                                style={{marginLeft: '3px'}}\n                            />\n                        </span>\n                    </CButton>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        onFormChange: Action.onFormChange,\n        saveOrUpdatePatient: Action.saveOrUpdatePatient\n    }, dispatch)\n};\n\nfunction mapStateToProps({patient}) {\n    return {\n        patient: patient.patientAddEdit.patient,\n        formData: patient.patientAddEdit.formData,\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientAddEditFrom);"]},"metadata":{},"sourceType":"module"}