{"ast":null,"code":"import dataService from \"../../../../../../../../../services/dataService\";\nimport selectPhysicalActivitiesAppEndpoints from \"./select.physical.activities.endpoints\";\nexport const GET_PHYSICAL_ACTIVITIES_CATEGORIES = '[PHYSICAL ACTIVITIES SELECT] GET_PHYSICAL_ACTIVITIES_CATEGORIES';\nexport const ON_CHECKUP_SELECT_PHYSICAL_ACTIVITIES = '[PHYSICAL ACTIVITIES SELECT] ON_CHECKUP_SELECT_PHYSICAL_ACTIVITIES';\nexport const ON_CHECKUP_SAVE_PHYSICAL_ACTIVITIES = '[PHYSICAL ACTIVITIES SELECT] ON_CHECKUP_SAVE_PHYSICAL_ACTIVITIES';\nexport const ON_SET_CHECKUP_PHYSICAL_ACTIVITY_IDS = '[PHYSICAL ACTIVITIES SELECT] ON_SET_CHECKUP_PHYSICAL_ACTIVITY_IDS';\nexport const ON_RESET_CHECKUP_PHYSICAL_ACTIVITIES = '[PHYSICAL ACTIVITIES SELECT] ON_RESET_CHECKUP_PHYSICAL_ACTIVITIES   ';\nexport function getPhysicalActivityCategories() {\n  const request = dataService.get(selectPhysicalActivitiesAppEndpoints.getPhysicalActivityCategories);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_PHYSICAL_ACTIVITIES_CATEGORIES,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function onSelectOption(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_CHECKUP_SELECT_PHYSICAL_ACTIVITIES,\n      payload: data\n    });\n  };\n}\nexport function setCheckupPhysicalActivityIds(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_SET_CHECKUP_PHYSICAL_ACTIVITY_IDS,\n      payload: data\n    });\n  };\n}\nexport function saveOrUpdateCheckupWithPhysicalActivities(data) {\n  const request = dataService.post(selectPhysicalActivitiesAppEndpoints.saveOrUpdateCheckupWithPhysicalActivities, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: ON_CHECKUP_SAVE_PHYSICAL_ACTIVITIES,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function onResetPhysicalActivity() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET_CHECKUP_PHYSICAL_ACTIVITIES,\n      payload: {}\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/selectPhysicalActivities/store/actions/select.physical.activities.actions.js"],"names":["dataService","selectPhysicalActivitiesAppEndpoints","GET_PHYSICAL_ACTIVITIES_CATEGORIES","ON_CHECKUP_SELECT_PHYSICAL_ACTIVITIES","ON_CHECKUP_SAVE_PHYSICAL_ACTIVITIES","ON_SET_CHECKUP_PHYSICAL_ACTIVITY_IDS","ON_RESET_CHECKUP_PHYSICAL_ACTIVITIES","getPhysicalActivityCategories","request","get","dispatch","getState","then","response","type","payload","data","result","onSelectOption","setCheckupPhysicalActivityIds","saveOrUpdateCheckupWithPhysicalActivities","post","onResetPhysicalActivity"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iDAAxB;AACA,OAAOC,oCAAP,MAAiD,wCAAjD;AAEA,OAAO,MAAMC,kCAAkC,GAAG,iEAA3C;AACP,OAAO,MAAMC,qCAAqC,GAAG,oEAA9C;AACP,OAAO,MAAMC,mCAAmC,GAAG,kEAA5C;AACP,OAAO,MAAMC,oCAAoC,GAAG,mEAA7C;AACP,OAAO,MAAMC,oCAAoC,GAAG,sEAA7C;AAEP,OAAO,SAASC,6BAAT,GAAyC;AAC5C,QAAMC,OAAO,GAAGR,WAAW,CAACS,GAAZ,CAAgBR,oCAAoC,CAACM,6BAArD,CAAhB;AAEA,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3BH,IAAAA,OAAO,CAACI,IAAR,CAAcC,QAAD,IAAc;AACnBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEZ,kCADD;AAELa,QAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFlB,OAAD,CAAR;AAIH,KALL;AAOH,GARD;AASH;AAED,OAAO,SAASC,cAAT,CAAwBF,IAAxB,EAA8B;AACjC,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEX,qCADD;AAELY,MAAAA,OAAO,EAAEC;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASG,6BAAT,CAAuCH,IAAvC,EAA6C;AAChD,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,oCADD;AAELU,MAAAA,OAAO,EAAEC;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASI,yCAAT,CAAmDJ,IAAnD,EAAyD;AAC5D,QAAMR,OAAO,GAAGR,WAAW,CAACqB,IAAZ,CAAiBpB,oCAAoC,CAACmB,yCAAtD,EAAiGJ,IAAjG,CAAhB;AAEA,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3B,WAAOH,OAAO,CAACI,IAAR,CAAcC,QAAD,IAAc;AAC1B,aAAOH,QAAQ,CAAC;AACZI,QAAAA,IAAI,EAAEV,mCADM;AAEZW,QAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFX,OAAD,CAAf;AAIH,KALE,CAAP;AAOH,GARD;AASH;AAED,OAAO,SAASK,uBAAT,GAAmC;AACtC,SAAO,CAACZ,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAER,oCADD;AAELS,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH","sourcesContent":["import dataService from \"../../../../../../../../../services/dataService\";\nimport selectPhysicalActivitiesAppEndpoints from \"./select.physical.activities.endpoints\";\n\nexport const GET_PHYSICAL_ACTIVITIES_CATEGORIES = '[PHYSICAL ACTIVITIES SELECT] GET_PHYSICAL_ACTIVITIES_CATEGORIES';\nexport const ON_CHECKUP_SELECT_PHYSICAL_ACTIVITIES = '[PHYSICAL ACTIVITIES SELECT] ON_CHECKUP_SELECT_PHYSICAL_ACTIVITIES';\nexport const ON_CHECKUP_SAVE_PHYSICAL_ACTIVITIES = '[PHYSICAL ACTIVITIES SELECT] ON_CHECKUP_SAVE_PHYSICAL_ACTIVITIES';\nexport const ON_SET_CHECKUP_PHYSICAL_ACTIVITY_IDS = '[PHYSICAL ACTIVITIES SELECT] ON_SET_CHECKUP_PHYSICAL_ACTIVITY_IDS';\nexport const ON_RESET_CHECKUP_PHYSICAL_ACTIVITIES = '[PHYSICAL ACTIVITIES SELECT] ON_RESET_CHECKUP_PHYSICAL_ACTIVITIES   ';\n\nexport function getPhysicalActivityCategories() {\n    const request = dataService.get(selectPhysicalActivitiesAppEndpoints.getPhysicalActivityCategories);\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: GET_PHYSICAL_ACTIVITIES_CATEGORIES,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function onSelectOption(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_CHECKUP_SELECT_PHYSICAL_ACTIVITIES,\n            payload: data\n        })\n    };\n}\n\nexport function setCheckupPhysicalActivityIds(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_SET_CHECKUP_PHYSICAL_ACTIVITY_IDS,\n            payload: data\n        })\n    };\n}\n\nexport function saveOrUpdateCheckupWithPhysicalActivities(data) {\n    const request = dataService.post(selectPhysicalActivitiesAppEndpoints.saveOrUpdateCheckupWithPhysicalActivities, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: ON_CHECKUP_SAVE_PHYSICAL_ACTIVITIES,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function onResetPhysicalActivity() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET_CHECKUP_PHYSICAL_ACTIVITIES,\n            payload: {}\n        })\n    };\n}\n\n"]},"metadata":{},"sourceType":"module"}