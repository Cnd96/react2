{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\config\\\\medicine\\\\search\\\\components\\\\MedicineResult.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setStorageItem } from \"../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport history from \"../../../../../../../@history\";\nimport * as Actions from \"../../store/action\";\nimport { CAlert, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport { getActInaFromConstantForGrid, getCommonStringForGrid } from \"../../../../../../../utils/GridUtil\";\nimport AppPagination from \"../../../../../common/AppPagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getCommaSeparatedVales = (dataArray, keyValue) => {\n  let stringVales = '';\n  dataArray.forEach(element => {\n    stringVales.concat(element[keyValue]).concat(', ');\n  });\n  stringVales.slice(0, -1);\n  return stringVales;\n};\n\nconst MedicineResult = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = useSelector(_ref => {\n    let {\n      medicine\n    } = _ref;\n    return medicine.medicineSearch;\n  });\n\n  const gotToAddEdit = medicineID => {\n    setStorageItem(Constants.STORAGE.SELECTED_MEDICINE_ID, medicineID);\n    history.push({\n      pathname: Constants.PAGES.medicineAddEdit\n    });\n  };\n\n  const onPageDataChange = data => {\n    dispatch(Actions.setPageInfo(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CCard, {\n      children: /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: [data.pagedMedicine.pageData && data.pagedMedicine.pageData.length == 0 && /*#__PURE__*/_jsxDEV(CAlert, {\n          color: \"warning\",\n          children: \"No Medicines found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), data.pagedMedicine.pageData && data.pagedMedicine.pageData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Medicine\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Doses\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Frequents\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Meal Times\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Trades\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: data.pagedMedicine.pageData.map(data => {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: 'clickable-data-row',\n                    onClick: e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      gotToAddEdit(data.medicineID);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: getCommonStringForGrid(data.medicineName)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: getCommonStringForGrid(data.doses)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: getCommonStringForGrid(data.frequents)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: getCommonStringForGrid(data.mealTimes)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: getCommonStringForGrid(data.trades)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: getActInaFromConstantForGrid(data.status)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 49\n                    }, this)]\n                  }, data.medicineID, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              children: /*#__PURE__*/_jsxDEV(AppPagination, {\n                currentPageNo: data.pagedMedicine.currentPageNo,\n                totalNoOfPages: data.pagedMedicine.totalNoOfPages,\n                pageLength: data.pagedMedicine.pageLength,\n                onPaginationChange: onPageDataChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MedicineResult, \"VrJnXoQP2+XQ+/f/72CAYzsOD3w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MedicineResult;\nexport default MedicineResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicineResult\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/medicine/search/components/MedicineResult.js"],"names":["React","useDispatch","useSelector","setStorageItem","Constants","history","Actions","CAlert","CCard","CCardBody","CCol","CRow","getActInaFromConstantForGrid","getCommonStringForGrid","AppPagination","getCommaSeparatedVales","dataArray","keyValue","stringVales","forEach","element","concat","slice","MedicineResult","dispatch","data","medicine","medicineSearch","gotToAddEdit","medicineID","STORAGE","SELECTED_MEDICINE_ID","push","pathname","PAGES","medicineAddEdit","onPageDataChange","setPageInfo","pagedMedicine","pageData","length","map","e","preventDefault","stopPropagation","medicineName","doses","frequents","mealTimes","trades","status","currentPageNo","totalNoOfPages","pageLength"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setStorageItem} from \"../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport history from \"../../../../../../../@history\";\nimport * as Actions from \"../../store/action\"\nimport {CAlert, CCard, CCardBody, CCol, CRow} from \"@coreui/react\";\nimport {getActInaFromConstantForGrid, getCommonStringForGrid} from \"../../../../../../../utils/GridUtil\";\nimport AppPagination from \"../../../../../common/AppPagination\";\n\n\nconst getCommaSeparatedVales = (dataArray, keyValue) => {\n    let stringVales = '';\n    dataArray.forEach(element => {\n        stringVales.concat(element[keyValue]).concat(', ');\n    });\n    stringVales.slice(0, -1);\n    return stringVales;\n};\n\nconst MedicineResult = () => {\n\n    const dispatch = useDispatch();\n    const data = useSelector(({medicine}) => medicine.medicineSearch);\n\n    const gotToAddEdit = (medicineID) => {\n        setStorageItem(Constants.STORAGE.SELECTED_MEDICINE_ID, medicineID);\n        history.push({\n            pathname: Constants.PAGES.medicineAddEdit\n        });\n    };\n\n    const onPageDataChange = (data) => {\n        dispatch(Actions.setPageInfo(data));\n    };\n\n    return (\n        <div>\n            <CCard>\n                <CCardBody>\n                    {\n                        data.pagedMedicine.pageData && data.pagedMedicine.pageData.length == 0 &&\n\n                        <CAlert color=\"warning\">\n                            No Medicines found.\n                        </CAlert>\n                    }\n                    {\n                        data.pagedMedicine.pageData && data.pagedMedicine.pageData.length > 0\n\n                        &&\n                        <>\n\n                            <div className=\"table-responsive\">\n                                <table className=\"table table-striped\">\n                                    <thead>\n                                    <tr>\n                                        <th>Medicine</th>\n                                        <th>Doses</th>\n                                        <th>Frequents</th>\n                                        <th>Meal Times</th>\n                                        <th>Trades</th>\n                                        <th>Status</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n\n                                    {data.pagedMedicine.pageData.map((data) => {\n                                        return (\n                                            <tr key={data.medicineID}\n                                                className={'clickable-data-row'}\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    e.stopPropagation();\n                                                    gotToAddEdit(data.medicineID);\n                                                }}\n                                            >\n                                                <td>{getCommonStringForGrid(data.medicineName)}</td>\n                                                <td>{getCommonStringForGrid(data.doses)}</td>\n                                                <td>{getCommonStringForGrid(data.frequents)}</td>\n                                                <td>{getCommonStringForGrid(data.mealTimes)}</td>\n                                                <td>{getCommonStringForGrid(data.trades)}</td>\n                                                <td>\n                                                    {\n                                                        getActInaFromConstantForGrid(data.status)\n                                                    }\n                                                </td>\n                                            </tr>\n                                        );\n                                    })\n                                    }\n                                    </tbody>\n                                </table>\n                            </div>\n                            <CRow>\n                                <CCol xs=\"12\">\n                                    <AppPagination\n                                        currentPageNo={data.pagedMedicine.currentPageNo}\n                                        totalNoOfPages={data.pagedMedicine.totalNoOfPages}\n                                        pageLength={data.pagedMedicine.pageLength}\n                                        onPaginationChange={onPageDataChange}\n                                    />\n                                </CCol>\n                            </CRow>\n                        </>\n                    }\n\n                </CCardBody>\n            </CCard>\n        </div>\n    );\n};\n\nexport default MedicineResult;"]},"metadata":{},"sourceType":"module"}