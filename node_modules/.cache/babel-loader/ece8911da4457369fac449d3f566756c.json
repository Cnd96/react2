{"ast":null,"code":"import dataService from \"../../../../../../../../../services/dataService\";\nimport instructionNoteAppEndpoints from \"./instruction.note.app.endpoints\";\nexport const ON_SAVE_INSTRUCTION_NOTE = '[INSTRUCTION NOTE ADD EDIT] ON_SAVE_INSTRUCTION_NOTE';\nexport const ON_ADD_EDIT_FORM_CHANGE = '[INSTRUCTION NOTE ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const GET_INSTRUCTION_NOTE = '[INSTRUCTION NOTE ADD EDIT] GET_INSTRUCTION_NOTE';\nexport const ON_RESET_INSTRUCTION_NOTE_DATA = '[INSTRUCTION NOTE ADD EDIT] ON_RESET_INSTRUCTION_NOTE_DATA';\nexport function saveOrUpdateInstructionNote(data) {\n  const request = dataService.post(instructionNoteAppEndpoints.saveOrUpdateInstructionNote, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: ON_SAVE_INSTRUCTION_NOTE,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function onFormChange(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_ADD_EDIT_FORM_CHANGE,\n      payload: data\n    });\n  };\n}\nexport function getInstructionNoteDTOByID(instructionNoteID) {\n  let endpoint = Object.assign({}, instructionNoteAppEndpoints.getInstructionNoteDTOByID);\n  endpoint.url = endpoint.url + '/' + instructionNoteID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_INSTRUCTION_NOTE,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getInstructionNoteDTOByCheckupID(checkupID) {\n  let endpoint = Object.assign({}, instructionNoteAppEndpoints.getInstructionNoteDTOByCheckupID);\n  endpoint.url = endpoint.url + '/' + checkupID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_INSTRUCTION_NOTE,\n      payload: response.data.result\n    }));\n  };\n}\nexport function onRemoveInstructionData() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET_INSTRUCTION_NOTE_DATA,\n      payload: {}\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/createInstructionNote/store/actions/instruction.note.add.edit.action.js"],"names":["dataService","instructionNoteAppEndpoints","ON_SAVE_INSTRUCTION_NOTE","ON_ADD_EDIT_FORM_CHANGE","GET_INSTRUCTION_NOTE","ON_RESET_INSTRUCTION_NOTE_DATA","saveOrUpdateInstructionNote","data","request","post","dispatch","getState","then","response","type","payload","result","onFormChange","getInstructionNoteDTOByID","instructionNoteID","endpoint","Object","assign","url","get","getInstructionNoteDTOByCheckupID","checkupID","onRemoveInstructionData"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iDAAxB;AACA,OAAOC,2BAAP,MAAwC,kCAAxC;AAEA,OAAO,MAAMC,wBAAwB,GAAG,sDAAjC;AACP,OAAO,MAAMC,uBAAuB,GAAG,qDAAhC;AACP,OAAO,MAAMC,oBAAoB,GAAG,kDAA7B;AACP,OAAO,MAAMC,8BAA8B,GAAG,4DAAvC;AAEP,OAAO,SAASC,2BAAT,CAAqCC,IAArC,EAA2C;AAC9C,QAAMC,OAAO,GAAGR,WAAW,CAACS,IAAZ,CAAiBR,2BAA2B,CAACK,2BAA7C,EAA0EC,IAA1E,CAAhB;AAEA,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3B,WAAOH,OAAO,CAACI,IAAR,CAAcC,QAAD,IAAc;AAC1B,aAAOH,QAAQ,CAAC;AACZI,QAAAA,IAAI,EAAEZ,wBADM;AAEZa,QAAAA,OAAO,EAAEF,QAAQ,CAACN,IAAT,CAAcS;AAFX,OAAD,CAAf;AAIH,KALE,CAAP;AAOH,GARD;AASH;AAED,OAAO,SAASC,YAAT,CAAsBV,IAAtB,EAA4B;AAC/B,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEX,uBADD;AAELY,MAAAA,OAAO,EAAER;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASW,yBAAT,CAAmCC,iBAAnC,EAAsD;AAEzD,MAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBrB,2BAA2B,CAACiB,yBAA9C,CAAf;AACAE,EAAAA,QAAQ,CAACG,GAAT,GAAeH,QAAQ,CAACG,GAAT,GAAe,GAAf,GAAqBJ,iBAApC;AAEA,QAAMX,OAAO,GAAGR,WAAW,CAACwB,GAAZ,CAAgBJ,QAAhB,CAAhB;AAEA,SAAO,CAACV,QAAD,EAAWC,QAAX,KAAwB;AAC3BH,IAAAA,OAAO,CAACI,IAAR,CAAcC,QAAD,IACTH,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEV,oBADD;AAELW,MAAAA,OAAO,EAAEF,QAAQ,CAACN,IAAT,CAAcS;AAFlB,KAAD,CADZ;AAMH,GAPD;AAQH;AAED,OAAO,SAASS,gCAAT,CAA0CC,SAA1C,EAAqD;AAExD,MAAIN,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBrB,2BAA2B,CAACwB,gCAA9C,CAAf;AACAL,EAAAA,QAAQ,CAACG,GAAT,GAAeH,QAAQ,CAACG,GAAT,GAAe,GAAf,GAAqBG,SAApC;AAEA,QAAMlB,OAAO,GAAGR,WAAW,CAACwB,GAAZ,CAAgBJ,QAAhB,CAAhB;AAEA,SAAO,CAACV,QAAD,EAAWC,QAAX,KAAwB;AAC3BH,IAAAA,OAAO,CAACI,IAAR,CAAcC,QAAD,IACTH,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEV,oBADD;AAELW,MAAAA,OAAO,EAAEF,QAAQ,CAACN,IAAT,CAAcS;AAFlB,KAAD,CADZ;AAMH,GAPD;AAQH;AAGD,OAAO,SAASW,uBAAT,GAAmC;AACtC,SAAO,CAACjB,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,8BADD;AAELU,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH","sourcesContent":["import dataService from \"../../../../../../../../../services/dataService\";\nimport instructionNoteAppEndpoints from \"./instruction.note.app.endpoints\";\n\nexport const ON_SAVE_INSTRUCTION_NOTE = '[INSTRUCTION NOTE ADD EDIT] ON_SAVE_INSTRUCTION_NOTE';\nexport const ON_ADD_EDIT_FORM_CHANGE = '[INSTRUCTION NOTE ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const GET_INSTRUCTION_NOTE = '[INSTRUCTION NOTE ADD EDIT] GET_INSTRUCTION_NOTE';\nexport const ON_RESET_INSTRUCTION_NOTE_DATA = '[INSTRUCTION NOTE ADD EDIT] ON_RESET_INSTRUCTION_NOTE_DATA';\n\nexport function saveOrUpdateInstructionNote(data) {\n    const request = dataService.post(instructionNoteAppEndpoints.saveOrUpdateInstructionNote, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: ON_SAVE_INSTRUCTION_NOTE,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function onFormChange(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_ADD_EDIT_FORM_CHANGE,\n            payload: data\n        })\n    };\n}\n\nexport function getInstructionNoteDTOByID(instructionNoteID) {\n\n    let endpoint = Object.assign({}, instructionNoteAppEndpoints.getInstructionNoteDTOByID);\n    endpoint.url = endpoint.url + '/' + instructionNoteID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_INSTRUCTION_NOTE,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function getInstructionNoteDTOByCheckupID(checkupID) {\n\n    let endpoint = Object.assign({}, instructionNoteAppEndpoints.getInstructionNoteDTOByCheckupID);\n    endpoint.url = endpoint.url + '/' + checkupID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_INSTRUCTION_NOTE,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\n\nexport function onRemoveInstructionData() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET_INSTRUCTION_NOTE_DATA,\n            payload: {}\n        })\n    };\n}\n\n"]},"metadata":{},"sourceType":"module"}