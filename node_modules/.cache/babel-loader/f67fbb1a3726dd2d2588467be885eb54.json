{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\config\\\\user\\\\add-edit\\\\components\\\\UserAddEditBase.js\";\nimport React, { Component } from 'react';\nimport { CButton, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport UserAddEditForm from \"./UserAddEditForm\";\nimport UserEditRole from \"./UserRoleEdit\";\nimport AppYesNo from \"../../../../../common/AppYesNo\";\nimport { hasUserPrivilege } from \"../../../../../../../utils/PrivilegeUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UserAddEditBase extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showPasswordReset: false\n    };\n\n    this.showHidePasswordReset = showHide => {\n      this.setState({\n        showPasswordReset: showHide\n      });\n    };\n\n    this.onYes = () => {\n      this.props.onPasswordReset(this.props.user.userID);\n      this.showHidePasswordReset();\n    };\n\n    this.onNo = () => {\n      this.showHidePasswordReset();\n    };\n  }\n\n  render() {\n    const {\n      isNew,\n      user,\n      roles,\n      checkedRoleIDs,\n      isValid,\n      onSaveUpdate,\n      onRoleChange\n    } = this.props;\n    const {\n      showPasswordReset\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          xs: \"12\",\n          children: /*#__PURE__*/_jsxDEV(CCard, {\n            children: /*#__PURE__*/_jsxDEV(CCardBody, {\n              children: [/*#__PURE__*/_jsxDEV(UserAddEditForm, {\n                isNew: isNew,\n                user: user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(UserEditRole, {\n                isNew: isNew,\n                user: user,\n                roles: roles,\n                checkedRoleIDs: checkedRoleIDs,\n                onRoleChange: onRoleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CRow, {\n                children: /*#__PURE__*/_jsxDEV(CCol, {\n                  xs: \"12\",\n                  children: [!isNew && hasUserPrivilege(Constants.PRIVILEGE_CODES.HEALTH_TRACKER_SETTINGS_USER_PASSWORD_RESET) && /*#__PURE__*/_jsxDEV(CButton, {\n                    onClick: () => {\n                      this.showHidePasswordReset(true);\n                    },\n                    color: \"warning\",\n                    children: \"Password Reset\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                    disabled: !isValid,\n                    onClick: onSaveUpdate,\n                    color: \"primary\",\n                    className: \"float-right\",\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AppYesNo, {\n        header: 'Password Reset',\n        body: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Are you sure to reset the password of \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: 'bold-font',\n              children: user && user ? user.userName : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 71\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"New password will be sent to \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: 'bold-font',\n              children: [\" \", user.email, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true),\n        isOpen: showPasswordReset,\n        onYes: this.onYes,\n        onNo: this.onNo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default UserAddEditBase;","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/user/add-edit/components/UserAddEditBase.js"],"names":["React","Component","CButton","CCard","CCardBody","CCol","CRow","UserAddEditForm","UserEditRole","AppYesNo","hasUserPrivilege","Constants","UserAddEditBase","state","showPasswordReset","showHidePasswordReset","showHide","setState","onYes","props","onPasswordReset","user","userID","onNo","render","isNew","roles","checkedRoleIDs","isValid","onSaveUpdate","onRoleChange","PRIVILEGE_CODES","HEALTH_TRACKER_SETTINGS_USER_PASSWORD_RESET","userName","email"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,IAAnC,EAAyCC,IAAzC,QAAoD,eAApD;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAAQC,gBAAR,QAA+B,2CAA/B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;;;AAEA,MAAMC,eAAN,SAA8BX,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCY,KAFoC,GAE5B;AACJC,MAAAA,iBAAiB,EAAE;AADf,KAF4B;;AAAA,SAMpCC,qBANoC,GAMXC,QAAD,IAAc;AAClC,WAAKC,QAAL,CAAc;AACVH,QAAAA,iBAAiB,EAAEE;AADT,OAAd;AAGH,KAVmC;;AAAA,SAYpCE,KAZoC,GAY5B,MAAM;AACV,WAAKC,KAAL,CAAWC,eAAX,CAA2B,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,MAA3C;AACA,WAAKP,qBAAL;AACH,KAfmC;;AAAA,SAiBpCQ,IAjBoC,GAiB7B,MAAM;AACT,WAAKR,qBAAL;AACH,KAnBmC;AAAA;;AAqBpCS,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA,KAAD;AAAQJ,MAAAA,IAAR;AAAcK,MAAAA,KAAd;AAAqBC,MAAAA,cAArB;AAAqCC,MAAAA,OAArC;AAA8CC,MAAAA,YAA9C;AAA4DC,MAAAA;AAA5D,QAA4E,KAAKX,KAAvF;AACA,UAAM;AAACL,MAAAA;AAAD,QAAsB,KAAKD,KAAjC;AAEA,wBACI;AAAA,8BACI,QAAC,IAAD;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,IAAT;AAAA,iCACI,QAAC,KAAD;AAAA,mCACI,QAAC,SAAD;AAAA,sCACI,QAAC,eAAD;AACI,gBAAA,KAAK,EAAEY,KADX;AAEI,gBAAA,IAAI,EAAEJ;AAFV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,YAAD;AACI,gBAAA,KAAK,EAAEI,KADX;AAEI,gBAAA,IAAI,EAAEJ,IAFV;AAGI,gBAAA,KAAK,EAAEK,KAHX;AAII,gBAAA,cAAc,EAAEC,cAJpB;AAKI,gBAAA,YAAY,EAAEG;AALlB;AAAA;AAAA;AAAA;AAAA,sBANJ,eAcI,QAAC,IAAD;AAAA,uCACI,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,IAAT;AAAA,6BAEQ,CAACL,KAAD,IAAWf,gBAAgB,CAACC,SAAS,CAACoB,eAAV,CAA0BC,2CAA3B,CAA3B,iBACA,QAAC,OAAD;AACI,oBAAA,OAAO,EAAE,MAAM;AACX,2BAAKjB,qBAAL,CAA2B,IAA3B;AACH,qBAHL;AAII,oBAAA,KAAK,EAAC,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHR,eAUI,QAAC,OAAD;AACI,oBAAA,QAAQ,EAAE,CAACa,OADf;AAEI,oBAAA,OAAO,EAAEC,YAFb;AAGI,oBAAA,KAAK,EAAC,SAHV;AAGoB,oBAAA,SAAS,EAAC,aAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAwCI,QAAC,QAAD;AACI,QAAA,MAAM,EAAE,gBADZ;AAEI,QAAA,IAAI,eACA;AAAA,kCACI;AAAA,8EAC0C;AACtC,cAAA,SAAS,EAAE,WAD2B;AAAA,wBACbR,IAAI,IAAIA,IAAR,GAAeA,IAAI,CAACY,QAApB,GAA+B;AADlB;AAAA;AAAA;AAAA;AAAA,oBAD1C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAA,qEACiC;AAAM,cAAA,SAAS,EAAE,WAAjB;AAAA,8BAAgCZ,IAAI,CAACa,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,wBAHR;AAcI,QAAA,MAAM,EAAEpB,iBAdZ;AAeI,QAAA,KAAK,EAAE,KAAKI,KAfhB;AAgBI,QAAA,IAAI,EAAE,KAAKK;AAhBf;AAAA;AAAA;AAAA;AAAA,cAxCJ;AAAA,oBADJ;AA6DH;;AAvFmC;;AA2FxC,eAAeX,eAAf","sourcesContent":["import React, {Component} from 'react';\nimport {CButton, CCard, CCardBody, CCol, CRow} from \"@coreui/react\";\nimport UserAddEditForm from \"./UserAddEditForm\";\nimport UserEditRole from \"./UserRoleEdit\";\nimport AppYesNo from \"../../../../../common/AppYesNo\";\nimport {hasUserPrivilege} from \"../../../../../../../utils/PrivilegeUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\n\nclass UserAddEditBase extends Component {\n\n    state = {\n        showPasswordReset: false\n    };\n\n    showHidePasswordReset = (showHide) => {\n        this.setState({\n            showPasswordReset: showHide\n        });\n    };\n\n    onYes = () => {\n        this.props.onPasswordReset(this.props.user.userID);\n        this.showHidePasswordReset();\n    };\n\n    onNo = () => {\n        this.showHidePasswordReset();\n    };\n\n    render() {\n\n        const {isNew, user, roles, checkedRoleIDs, isValid, onSaveUpdate, onRoleChange} = this.props;\n        const {showPasswordReset} = this.state;\n\n        return (\n            <>\n                <CRow>\n                    <CCol xs=\"12\">\n                        <CCard>\n                            <CCardBody>\n                                <UserAddEditForm\n                                    isNew={isNew}\n                                    user={user}\n                                />\n\n                                <UserEditRole\n                                    isNew={isNew}\n                                    user={user}\n                                    roles={roles}\n                                    checkedRoleIDs={checkedRoleIDs}\n                                    onRoleChange={onRoleChange}\n                                />\n\n                                <CRow>\n                                    <CCol xs=\"12\">\n                                        {\n                                            !isNew &&  hasUserPrivilege(Constants.PRIVILEGE_CODES.HEALTH_TRACKER_SETTINGS_USER_PASSWORD_RESET) &&\n                                            <CButton\n                                                onClick={() => {\n                                                    this.showHidePasswordReset(true);\n                                                }}\n                                                color=\"warning\">Password Reset</CButton>\n                                        }\n\n                                        <CButton\n                                            disabled={!isValid}\n                                            onClick={onSaveUpdate}\n                                            color=\"primary\" className=\"float-right\">Save</CButton>\n                                    </CCol>\n                                </CRow>\n                            </CCardBody>\n                        </CCard>\n                    </CCol>\n                </CRow>\n\n                <AppYesNo\n                    header={'Password Reset'}\n                    body={\n                        <>\n                            <p>\n                                Are you sure to reset the password of <span\n                                className={'bold-font'}>{user && user ? user.userName : ''}</span>\n                            </p>\n                            <p>\n                                New password will be sent to <span className={'bold-font'}> {user.email} </span>\n                            </p>\n                        </>\n                    }\n\n                    isOpen={showPasswordReset}\n                    onYes={this.onYes}\n                    onNo={this.onNo}\n                />\n            </>\n        );\n    }\n\n}\n\nexport default UserAddEditBase;\n"]},"metadata":{},"sourceType":"module"}