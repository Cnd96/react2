{"ast":null,"code":"import dataService from \"../../../../../../../../../services/dataService\";\nimport selectPatientComplainAppEndpoints from \"./patient.complain.end.points\";\nexport const ON_ADD_EDIT_FORM_CHANGE = '[PATIENT COMPLAIN ] ON_ADD_EDIT_FORM_CHANGE';\nexport const GET_PATIENT_COMPLAIN_LIST = '[PATIENT COMPLAIN ] GET_PATIENT_COMPLAIN_LIST';\nexport const GET_PATIENT_COMPLAIN = '[ PATIENT COMPLAIN ] GET_PATIENT_COMPLAINT';\nexport const ON_SAVE_PATIENT_COMPLAIN = '[PATIENT COMPLAIN ] ON_SAVE_PATIENT_COMPLAIN';\nexport const ON_RESET_FORM = '[PATIENT COMPLAIN ] ON_RESET_FORM';\nexport const ON_SET_PATIENT_COMPLAIN_TO_FORM = '[PATIENT COMPLAIN ] ON_SET_PATIENT_COMPLAIN_TO_FORM';\nexport const ON_RESET_PATIENT_COMPLAIN = '[PATIENT COMPLAIN ] ON_RESET_PATIENT_COMPLAIN_FORM';\nexport function getPatientsComplainList(data) {\n  const request = dataService.post(selectPatientComplainAppEndpoints.getPatientsComplainList, data);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_PATIENT_COMPLAIN_LIST,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getPatientComplainByID(patientComplainID) {\n  let endpoint = Object.assign({}, selectPatientComplainAppEndpoints.getPatientComplainByID);\n  endpoint.url = endpoint.url + '/' + patientComplainID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_PATIENT_COMPLAIN,\n      payload: response.data.result\n    }));\n  };\n}\nexport function saveOrUpdatePatientComplain(data) {\n  const request = dataService.post(selectPatientComplainAppEndpoints.saveOrUpdatePatientComplain, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: ON_SAVE_PATIENT_COMPLAIN,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function saveOrUpdatePatientComplainWithMessage(data) {\n  const request = dataService.post(selectPatientComplainAppEndpoints.saveOrUpdatePatientComplainWithMessage, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: ON_SAVE_PATIENT_COMPLAIN,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function onFormChange(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_ADD_EDIT_FORM_CHANGE,\n      payload: data\n    });\n  };\n}\nexport function onResetForm() {\n  return (dispatch, getState) => {\n    return dispatch({\n      type: ON_RESET_FORM,\n      payload: {}\n    });\n  };\n}\nexport function onResetPatrintComplain() {\n  return (dispatch, getState) => {\n    return dispatch({\n      type: ON_RESET_PATIENT_COMPLAIN,\n      payload: {}\n    });\n  };\n}\nexport function onSetPatientComplainToForm(data) {\n  return (dispatch, getState) => {\n    return dispatch({\n      type: ON_SET_PATIENT_COMPLAIN_TO_FORM,\n      payload: data\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/patientComplain/store/actions/patient.complain.add.edit.action.js"],"names":["dataService","selectPatientComplainAppEndpoints","ON_ADD_EDIT_FORM_CHANGE","GET_PATIENT_COMPLAIN_LIST","GET_PATIENT_COMPLAIN","ON_SAVE_PATIENT_COMPLAIN","ON_RESET_FORM","ON_SET_PATIENT_COMPLAIN_TO_FORM","ON_RESET_PATIENT_COMPLAIN","getPatientsComplainList","data","request","post","dispatch","getState","then","response","type","payload","result","getPatientComplainByID","patientComplainID","endpoint","Object","assign","url","get","saveOrUpdatePatientComplain","saveOrUpdatePatientComplainWithMessage","onFormChange","onResetForm","onResetPatrintComplain","onSetPatientComplainToForm"],"mappings":"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","sourcesContent":["import dataService from \"../../../../../../../../../services/dataService\";\nimport selectPatientComplainAppEndpoints from \"./patient.complain.end.points\";\n\nexport const ON_ADD_EDIT_FORM_CHANGE = '[PATIENT COMPLAIN ] ON_ADD_EDIT_FORM_CHANGE';\nexport const GET_PATIENT_COMPLAIN_LIST = '[PATIENT COMPLAIN ] GET_PATIENT_COMPLAIN_LIST';\nexport const GET_PATIENT_COMPLAIN = '[ PATIENT COMPLAIN ] GET_PATIENT_COMPLAINT';\nexport const ON_SAVE_PATIENT_COMPLAIN = '[PATIENT COMPLAIN ] ON_SAVE_PATIENT_COMPLAIN';\nexport const ON_RESET_FORM = '[PATIENT COMPLAIN ] ON_RESET_FORM';\nexport const ON_SET_PATIENT_COMPLAIN_TO_FORM = '[PATIENT COMPLAIN ] ON_SET_PATIENT_COMPLAIN_TO_FORM';\nexport const ON_RESET_PATIENT_COMPLAIN = '[PATIENT COMPLAIN ] ON_RESET_PATIENT_COMPLAIN_FORM';\n\nexport function getPatientsComplainList(data) {\n    const request = dataService.post(selectPatientComplainAppEndpoints.getPatientsComplainList, data);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_PATIENT_COMPLAIN_LIST,\n                payload: response.data.result\n            })\n        );\n    }\n}\n\nexport function getPatientComplainByID(patientComplainID) {\n    let endpoint = Object.assign({}, selectPatientComplainAppEndpoints.getPatientComplainByID);\n    endpoint.url = endpoint.url + '/' + patientComplainID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_PATIENT_COMPLAIN,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\n\nexport function saveOrUpdatePatientComplain(data) {\n    const request = dataService.post(selectPatientComplainAppEndpoints.saveOrUpdatePatientComplain, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: ON_SAVE_PATIENT_COMPLAIN,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function saveOrUpdatePatientComplainWithMessage(data) {\n    const request = dataService.post(selectPatientComplainAppEndpoints.saveOrUpdatePatientComplainWithMessage, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: ON_SAVE_PATIENT_COMPLAIN,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\n\n\n\nexport function onFormChange(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_ADD_EDIT_FORM_CHANGE,\n            payload: data\n        })\n    };\n}\n\n\nexport function onResetForm() {\n    return (dispatch, getState) => {\n        return dispatch({\n            type: ON_RESET_FORM,\n            payload: {}\n        })\n    };\n}\n\n\nexport function onResetPatrintComplain() {\n\n    return (dispatch, getState) => {\n        return dispatch({\n            type: ON_RESET_PATIENT_COMPLAIN,\n            payload: {}\n        })\n    };\n}\n\nexport function onSetPatientComplainToForm(data) {\n\n    return (dispatch, getState) => {\n        return dispatch({\n            type: ON_SET_PATIENT_COMPLAIN_TO_FORM,\n            payload: data\n        })\n    };\n}\n\n"]},"metadata":{},"sourceType":"module"}