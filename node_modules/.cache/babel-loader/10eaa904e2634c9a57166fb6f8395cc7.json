{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\registerPatient\\\\components\\\\PatientAddEditFrom.js\";\nimport React, { Component } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { CButton, CCol, CFormGroup, CLabel, CRow, CSelect } from \"@coreui/react\";\nimport { getCivilStatusOptions, getCommonGenderOptions, getCommonTitleOptions, getInputFieldClassNames, getStandardContactNumber } from \"../../../../../../../../../utils/FormUtils\";\nimport Constants from \"../../../../../../../../../utils/Constants\";\nimport customValidator from \"../../../../../../../../../utils/ValidationUtil\";\nimport * as Action from \"../store/actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport FormikDatePicker from \"../../../../../../../../common/FormikDatePicker\";\nimport { trimData } from \"../../../../../../../../../utils/DataExtractHelper\";\nimport { setStorageItem } from \"../../../../../../../../../utils/StorageUtils\";\nimport CIcon from \"@coreui/icons-react\";\nimport { toDate } from \"../../../../../../../../../utils/HealthTrackerUtils\";\nimport { getCitiesOptions } from \"../../../../../../../../../utils/Cities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PatientAddEditFrom extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      patientInit: {\n        patientID: '',\n        title: 'MR',\n        patientCode: '',\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        nicPassport: '',\n        contactNo: '',\n        email: '',\n        gender: 'M',\n        dateOfBirthStr: '',\n        age: '',\n        bloodGroup: '',\n        civilStatus: Constants.CIVIL_STATUS_CONST.UNKNOWN,\n        referredBy: '',\n        occupation: '',\n        companyName: '',\n        department: '',\n        addressLine1: '',\n        addressLine2: '',\n        addressLine3: '',\n        city: '',\n        landLineNumber: '',\n        whatsappNumber: '',\n        mobileNumber: '',\n        comment: '',\n        status: Constants.STATUS_CONST.ACT\n      }\n    };\n\n    this.getValidations = () => {\n      return {\n        firstName: {\n          required: {\n            message: 'Required'\n          },\n          maxLength: {\n            value: 255\n          }\n        },\n        // nicPassport: {\n        //     required: {message: 'Required'},\n        //     maxLength: {value: 12},\n        //     nicLK: {message: 'Invalid NIC'}\n        // },\n        email: {\n          email: {\n            message: 'Invalid Email'\n          }\n        },\n        contactNo: {\n          required: {\n            message: 'Required'\n          },\n          maxLength: {\n            value: 12\n          },\n          phone: {\n            message: 'Invalid Contact Number'\n          }\n        } // age: {\n        //     required: {message: 'Required'},\n        //     maxLength: {value: 3},\n        //     min: {value: 1}\n        // },\n\n      };\n    };\n\n    this.onCustomValidation = values => {\n      const {\n        onFormChange\n      } = this.props;\n\n      if (values.contactNo) {\n        values.contactNo = getStandardContactNumber(values.contactNo);\n      }\n\n      if (values.dateOfBirthStr) {\n        let dob = toDate(values.dateOfBirthStr);\n        let today = new Date();\n        let diff = today.getTime() - dob.getTime();\n        values.age = Math.floor(diff / 31556736000);\n        console.log(values.age);\n      }\n\n      if (values.title) {\n        console.log(values.title);\n\n        if (values.title === Constants.TITLE_CONST.MR) {\n          values.gender = Constants.GENDER_CONST.M;\n        } else if (values.title === Constants.TITLE_CONST.MS || values.title === Constants.TITLE_CONST.MRS || values.title === Constants.TITLE_CONST.MISS) {\n          values.gender = Constants.GENDER_CONST.F;\n        }\n\n        if (values.title === Constants.TITLE_CONST.MRS) {\n          values.civilStatus = Constants.CIVIL_STATUS_CONST.MARRIED;\n        }\n      }\n\n      let validate = customValidator(values, this.getValidations());\n      onFormChange({\n        isValid: validate.isValid,\n        values: values\n      });\n      return validate.errors;\n    };\n\n    this.setInitialValues = () => {\n      let {\n        patient\n      } = this.props;\n      let {\n        patientInit\n      } = this.state;\n      let initData = {\n        patientID: patient.patientID ? patient.patientID : patientInit.patientID,\n        title: patient.title ? patient.title : patientInit.title,\n        patientCode: patient.patientCode ? patient.patientCode : patientInit.patientCode,\n        firstName: patient.firstName ? patient.firstName : patientInit.firstName,\n        middleName: patient.middleName ? patient.middleName : patientInit.middleName,\n        lastName: patient.lastName ? patient.lastName : patientInit.lastName,\n        nicPassport: patient.nicPassport ? patient.nicPassport : patientInit.nicPassport,\n        contactNo: patient.contactNo ? patient.contactNo : patientInit.contactNo,\n        email: patient.email ? patient.email : patientInit.email,\n        gender: patient.gender ? patient.gender : patientInit.gender,\n        dateOfBirthStr: patient.dateOfBirthStr ? patient.dateOfBirthStr : patientInit.dateOfBirthStr,\n        age: patient.age ? patient.age : patientInit.age,\n        occupation: patient.occupation ? patient.occupation : patientInit.occupation,\n        companyName: patient.companyName ? patient.companyName : patientInit.companyName,\n        department: patient.department ? patient.department : patientInit.department,\n        addressLine1: patient.addressLine1 ? patient.addressLine1 : patientInit.addressLine1,\n        addressLine2: patient.addressLine2 ? patient.addressLine2 : patientInit.addressLine2,\n        addressLine3: patient.addressLine3 ? patient.addressLine3 : patientInit.addressLine3,\n        bloodGroup: patient.bloodGroup ? patient.bloodGroup : patientInit.bloodGroup,\n        civilStatus: patient.civilStatus ? patient.civilStatus : patientInit.civilStatus,\n        referredBy: patient.referredBy ? patient.referredBy : patientInit.referredBy,\n        landLineNumber: patient.landLineNumber ? patient.landLineNumber : patientInit.landLineNumber,\n        whatsappNumber: patient.whatsappNumber ? patient.whatsappNumber : patientInit.whatsappNumber,\n        mobileNumber: patient.mobileNumber ? patient.mobileNumber : patientInit.mobileNumber,\n        comment: patient.comment ? patient.comment : patientInit.comment,\n        city: patient.city ? patient.city : patientInit.city,\n        status: patient.status ? patient.status : patientInit.status\n      };\n      return initData;\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.patient !== this.props.patient) {\n      this.onCustomValidation(this.props.patient);\n    }\n  }\n\n  render() {\n    let {\n      isValid,\n      values\n    } = this.props.formData;\n    let {\n      setPageIndex\n    } = this.props;\n    let initValues = this.setInitialValues();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: 500,\n              overflowY: 'scroll'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: `#e57373`,\n                height: 500\n              },\n              id: \"mone\",\n              children: /*#__PURE__*/_jsxDEV(CRow, {\n                children: [/*#__PURE__*/_jsxDEV(CCol, {\n                  sm: \"12\",\n                  md: \"6\",\n                  lg: \"5\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Blood Pressure\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 45\n                  }, this), \" Examination\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                  sm: \"12\",\n                  md: \"6\",\n                  lg: \"3\",\n                  children: \"Examination\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                  sm: \"12\",\n                  md: \"6\",\n                  lg: \"4\",\n                  children: \"Examination\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: `#f06292`,\n                height: 500\n              },\n              id: \"mtwo\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Blood Pressure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: `#fff176`,\n                height: 500\n              },\n              id: \"mthree\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Glycaemic Control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CCol, {\n          sm: \"12\",\n          md: \"6\",\n          lg: \"7\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"medicalTestTypeMenu\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: `#e57373`\n              },\n              onClick: () => document.getElementById('mone').scrollIntoView(),\n              className: \"medicalTestTypeCard\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: \"Examination\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: `#f06292`\n              },\n              onClick: () => document.getElementById('mtwo').scrollIntoView(),\n              className: \"medicalTestTypeCard\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: \"Blood Pressure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: `#fff176`\n              },\n              onClick: () => document.getElementById('mthree').scrollIntoView(),\n              className: \"medicalTestTypeCard\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Glycaemic Control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: `#dce775`\n              },\n              className: \"medicalTestTypeCard\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Kidney Function\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: `#4dd0e1`\n              },\n              className: \"medicalTestTypeCard\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Bone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: `#ffb74d`\n              },\n              className: \"medicalTestTypeCard\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Cardiac Assessment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: `#64b5f6`\n              },\n              className: \"medicalTestTypeCard\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Thyroid Hermone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: `#a1887f`\n              },\n              className: \"medicalTestTypeCard\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Lipid Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    onFormChange: Action.onFormChange,\n    saveOrUpdatePatient: Action.saveOrUpdatePatient\n  }, dispatch);\n};\n\nfunction mapStateToProps(_ref) {\n  let {\n    patient\n  } = _ref;\n  return {\n    patient: patient.patientAddEdit.patient,\n    formData: patient.patientAddEdit.formData\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientAddEditFrom);","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/registerPatient/components/PatientAddEditFrom.js"],"names":["React","Component","ErrorMessage","Field","Form","Formik","CButton","CCol","CFormGroup","CLabel","CRow","CSelect","getCivilStatusOptions","getCommonGenderOptions","getCommonTitleOptions","getInputFieldClassNames","getStandardContactNumber","Constants","customValidator","Action","connect","bindActionCreators","FormikDatePicker","trimData","setStorageItem","CIcon","toDate","getCitiesOptions","PatientAddEditFrom","state","patientInit","patientID","title","patientCode","firstName","middleName","lastName","nicPassport","contactNo","email","gender","dateOfBirthStr","age","bloodGroup","civilStatus","CIVIL_STATUS_CONST","UNKNOWN","referredBy","occupation","companyName","department","addressLine1","addressLine2","addressLine3","city","landLineNumber","whatsappNumber","mobileNumber","comment","status","STATUS_CONST","ACT","getValidations","required","message","maxLength","value","phone","onCustomValidation","values","onFormChange","props","dob","today","Date","diff","getTime","Math","floor","console","log","TITLE_CONST","MR","GENDER_CONST","M","MS","MRS","MISS","F","MARRIED","validate","isValid","errors","setInitialValues","patient","initData","componentDidUpdate","prevProps","prevState","snapshot","render","formData","setPageIndex","initValues","height","overflowY","backgroundColor","document","getElementById","scrollIntoView","mapDispatchToProps","dispatch","saveOrUpdatePatient","mapStateToProps","patientAddEdit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\nimport {CButton, CCol, CFormGroup, CLabel, CRow, CSelect} from \"@coreui/react\";\nimport {\n    getCivilStatusOptions,\n    getCommonGenderOptions,\n    getCommonTitleOptions,\n    getInputFieldClassNames,\n    getStandardContactNumber\n} from \"../../../../../../../../../utils/FormUtils\";\nimport Constants from \"../../../../../../../../../utils/Constants\";\nimport customValidator from \"../../../../../../../../../utils/ValidationUtil\";\nimport * as Action from \"../store/actions\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from 'redux';\nimport FormikDatePicker from \"../../../../../../../../common/FormikDatePicker\";\nimport {trimData} from \"../../../../../../../../../utils/DataExtractHelper\";\nimport {setStorageItem} from \"../../../../../../../../../utils/StorageUtils\";\nimport CIcon from \"@coreui/icons-react\";\nimport {toDate} from \"../../../../../../../../../utils/HealthTrackerUtils\";\nimport {getCitiesOptions} from \"../../../../../../../../../utils/Cities\";\n\nclass PatientAddEditFrom extends Component {\n\n    state = {\n        patientInit: {\n            patientID: '',\n            title: 'MR',\n            patientCode: '',\n            firstName: '',\n            middleName: '',\n            lastName: '',\n            nicPassport: '',\n            contactNo: '',\n            email: '',\n            gender: 'M',\n            dateOfBirthStr: '',\n            age: '',\n            bloodGroup: '',\n            civilStatus: Constants.CIVIL_STATUS_CONST.UNKNOWN,\n            referredBy: '',\n            occupation: '',\n            companyName: '',\n            department: '',\n            addressLine1: '',\n            addressLine2: '',\n            addressLine3: '',\n            city: '',\n            landLineNumber: '',\n            whatsappNumber: '',\n            mobileNumber: '',\n            comment: '',\n            status: Constants.STATUS_CONST.ACT,\n        }\n    };\n\n    getValidations = () => {\n        return {\n            firstName: {\n                required: {message: 'Required'},\n                maxLength: {value: 255}\n            },\n\n            // nicPassport: {\n            //     required: {message: 'Required'},\n            //     maxLength: {value: 12},\n            //     nicLK: {message: 'Invalid NIC'}\n            // },\n\n            email: {\n                email: {message: 'Invalid Email'}\n            },\n\n            contactNo: {\n                required: {message: 'Required'},\n                maxLength: {value: 12},\n                phone: {message: 'Invalid Contact Number'}\n            },\n\n            // age: {\n            //     required: {message: 'Required'},\n            //     maxLength: {value: 3},\n            //     min: {value: 1}\n            // },\n        };\n    };\n\n    onCustomValidation = (values) => {\n        const {onFormChange} = this.props;\n\n        if (values.contactNo) {\n            values.contactNo = getStandardContactNumber(values.contactNo);\n        }\n        if (values.dateOfBirthStr) {\n            let dob = toDate(values.dateOfBirthStr);\n            let today = new Date();\n            let diff = today.getTime() - dob.getTime();\n            values.age = Math.floor(diff / 31556736000);\n            console.log(values.age);\n        }\n\n        if (values.title) {\n            console.log(values.title);\n            if (values.title === Constants.TITLE_CONST.MR) {\n                values.gender = Constants.GENDER_CONST.M;\n            } else if (values.title === Constants.TITLE_CONST.MS || values.title === Constants.TITLE_CONST.MRS || values.title === Constants.TITLE_CONST.MISS) {\n                values.gender = Constants.GENDER_CONST.F;\n            }\n\n            if (values.title === Constants.TITLE_CONST.MRS) {\n                values.civilStatus = Constants.CIVIL_STATUS_CONST.MARRIED\n            }\n        }\n\n        let validate = customValidator(values, this.getValidations());\n\n        onFormChange({\n            isValid: validate.isValid,\n            values: values\n        });\n\n        return validate.errors;\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.patient !== this.props.patient) {\n            this.onCustomValidation(this.props.patient);\n        }\n    }\n\n    setInitialValues = () => {\n        let {patient} = this.props;\n        let {patientInit} = this.state;\n\n        let initData = {\n            patientID: patient.patientID ? patient.patientID : patientInit.patientID,\n            title: patient.title ? patient.title : patientInit.title,\n            patientCode: patient.patientCode ? patient.patientCode : patientInit.patientCode,\n            firstName: patient.firstName ? patient.firstName : patientInit.firstName,\n            middleName: patient.middleName ? patient.middleName : patientInit.middleName,\n            lastName: patient.lastName ? patient.lastName : patientInit.lastName,\n            nicPassport: patient.nicPassport ? patient.nicPassport : patientInit.nicPassport,\n            contactNo: patient.contactNo ? patient.contactNo : patientInit.contactNo,\n            email: patient.email ? patient.email : patientInit.email,\n            gender: patient.gender ? patient.gender : patientInit.gender,\n            dateOfBirthStr: patient.dateOfBirthStr ? patient.dateOfBirthStr : patientInit.dateOfBirthStr,\n            age: patient.age ? patient.age : patientInit.age,\n            occupation: patient.occupation ? patient.occupation : patientInit.occupation,\n            companyName: patient.companyName ? patient.companyName : patientInit.companyName,\n            department: patient.department ? patient.department : patientInit.department,\n            addressLine1: patient.addressLine1 ? patient.addressLine1 : patientInit.addressLine1,\n            addressLine2: patient.addressLine2 ? patient.addressLine2 : patientInit.addressLine2,\n            addressLine3: patient.addressLine3 ? patient.addressLine3 : patientInit.addressLine3,\n            bloodGroup: patient.bloodGroup ? patient.bloodGroup : patientInit.bloodGroup,\n            civilStatus: patient.civilStatus ? patient.civilStatus : patientInit.civilStatus,\n            referredBy: patient.referredBy ? patient.referredBy : patientInit.referredBy,\n            landLineNumber: patient.landLineNumber ? patient.landLineNumber : patientInit.landLineNumber,\n            whatsappNumber: patient.whatsappNumber ? patient.whatsappNumber : patientInit.whatsappNumber,\n            mobileNumber: patient.mobileNumber ? patient.mobileNumber : patientInit.mobileNumber,\n            comment: patient.comment ? patient.comment : patientInit.comment,\n            city: patient.city ? patient.city : patientInit.city,\n            status: patient.status ? patient.status : patientInit.status,\n        };\n        return initData;\n    };\n\n    render() {\n\n        let {isValid, values} = this.props.formData;\n        let {setPageIndex} = this.props;\n        let initValues = this.setInitialValues();\n\n        return (\n            <>\n                <hr></hr>\n                \n                    <CRow>\n                        <CCol sm=\"12\" md=\"6\" lg=\"5\">\n                            <div  style={{height:500,overflowY:'scroll'}} >\n                                \n                                    <div style={{backgroundColor:`#e57373`,height:500}} id=\"mone\">\n                                        <CRow>\n                                            <CCol sm=\"12\" md=\"6\" lg=\"5\">\n                                            <p >Blood Pressure</p> Examination\n                                            </CCol>\n                                            <CCol sm=\"12\" md=\"6\" lg=\"3\">Examination</CCol>\n                                            <CCol sm=\"12\" md=\"6\" lg=\"4\">Examination</CCol>\n                                        </CRow>\n                                    </div>\n\n                                    <div style={{backgroundColor:`#f06292`,height:500}} id=\"mtwo\">\n                                        <p >Blood Pressure</p> \n                                    </div>\n\n                                    <div style={{backgroundColor:`#fff176`,height:500}} id=\"mthree\">\n                                        <p >Glycaemic Control</p> \n                                    </div>\n                            </div>\n                        </CCol>\n                        <CCol sm=\"12\" md=\"6\" lg=\"7\">\n                            <div className='medicalTestTypeMenu'>\n                                <div style={{backgroundColor:`#e57373`}} onClick={()=>document.getElementById('mone').scrollIntoView()} className='medicalTestTypeCard'  >\n                                    <a >Examination</a> \n                                </div>\n                                <div style={{backgroundColor:`#f06292`}} onClick={()=>document.getElementById('mtwo').scrollIntoView()} className='medicalTestTypeCard'  >\n                                    <a >Blood Pressure</a> \n                                </div>\n                                <div style={{backgroundColor:`#fff176`}} onClick={()=>document.getElementById('mthree').scrollIntoView()} className='medicalTestTypeCard'>\n                                    <p >Glycaemic Control</p> \n                                </div>\n                                <div style={{backgroundColor:`#dce775`}} className='medicalTestTypeCard'>\n                                    <p >Kidney Function</p> \n                                </div>\n                                <div style={{backgroundColor:`#4dd0e1`}} className='medicalTestTypeCard'>\n                                    <p >Bone</p> \n                                </div>\n                                <div style={{backgroundColor:`#ffb74d`}} className='medicalTestTypeCard'>\n                                    <p >Cardiac Assessment</p> \n                                </div>\n                                <div style={{backgroundColor:`#64b5f6`}} className='medicalTestTypeCard'>\n                                    <p >Thyroid Hermone</p> \n                                </div>\n                                <div style={{backgroundColor:`#a1887f`}} className='medicalTestTypeCard'>\n                                    <p >Lipid Profile</p> \n                                </div>\n                            </div>\n                            \n                        </CCol>\n                    </CRow>\n                \n                \n            </>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        onFormChange: Action.onFormChange,\n        saveOrUpdatePatient: Action.saveOrUpdatePatient\n    }, dispatch)\n};\n\nfunction mapStateToProps({patient}) {\n    return {\n        patient: patient.patientAddEdit.patient,\n        formData: patient.patientAddEdit.formData,\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientAddEditFrom);"]},"metadata":{},"sourceType":"module"}