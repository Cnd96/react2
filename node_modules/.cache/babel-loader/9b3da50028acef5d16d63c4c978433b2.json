{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\config\\\\role\\\\add-edit\\\\components\\\\privileges\\\\components\\\\PrivilegeCategory.js\";\nimport React, { Component } from \"react\";\nimport * as _ from 'lodash';\nimport Privilege from \"./Privilege\";\nimport CustomCheckBox from \"../../../../../../../common/CustomCheckBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PrivilegeCategory extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.getSectionPrivilegeIDs = () => {\n      const {\n        privileges\n      } = this.props;\n      return privileges.map(p => p.privilegeID);\n    };\n\n    this.onSectionPrivilegeClick = () => {\n      const {\n        checkedPrivilegeIDs,\n        onSelectPrivileges\n      } = this.props;\n      let sectionPrivilegeIDs = this.getSectionPrivilegeIDs();\n\n      let difference = _.difference(sectionPrivilegeIDs, checkedPrivilegeIDs);\n\n      if (difference.length > 0) {\n        onSelectPrivileges(sectionPrivilegeIDs, true);\n      } else {\n        onSelectPrivileges(sectionPrivilegeIDs, false);\n      }\n    };\n\n    this.isSectionAllSelected = () => {\n      const {\n        checkedPrivilegeIDs\n      } = this.props;\n      let sectionPrivilegeIDs = this.getSectionPrivilegeIDs();\n\n      let difference = _.difference(sectionPrivilegeIDs, checkedPrivilegeIDs);\n\n      return difference.length === 0;\n    };\n  }\n\n  render() {\n    const {\n      category,\n      privileges,\n      checkedPrivilegeIDs,\n      onCheckChange\n    } = this.props;\n    const isAllSelected = this.isSectionAllSelected();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"privilege-scroll-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'privilege-main-category-section',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'privilege-category-name',\n          children: /*#__PURE__*/_jsxDEV(CustomCheckBox, {\n            id: category,\n            name: category,\n            checked: isAllSelected,\n            value: category,\n            label: category,\n            onCheckChange: value => {\n              this.onSectionPrivilegeClick();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'privilege-category-section',\n          children: privileges.map(privilege => {\n            return /*#__PURE__*/_jsxDEV(Privilege, {\n              privilege: privilege,\n              checked: _.indexOf(checkedPrivilegeIDs, privilege.privilegeID) !== -1,\n              onCheckChange: onCheckChange\n            }, privilege.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PrivilegeCategory;","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/role/add-edit/components/privileges/components/PrivilegeCategory.js"],"names":["React","Component","_","Privilege","CustomCheckBox","PrivilegeCategory","getSectionPrivilegeIDs","privileges","props","map","p","privilegeID","onSectionPrivilegeClick","checkedPrivilegeIDs","onSelectPrivileges","sectionPrivilegeIDs","difference","length","isSectionAllSelected","render","category","onCheckChange","isAllSelected","value","privilege","indexOf","code"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;;;AAEA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAEtCK,sBAFsC,GAEb,MAAM;AAC3B,YAAM;AAACC,QAAAA;AAAD,UAAe,KAAKC,KAA1B;AACA,aAAOD,UAAU,CAACE,GAAX,CAAgBC,CAAD,IAAOA,CAAC,CAACC,WAAxB,CAAP;AACH,KALqC;;AAAA,SAOtCC,uBAPsC,GAOZ,MAAM;AAC5B,YAAM;AAACC,QAAAA,mBAAD;AAAsBC,QAAAA;AAAtB,UAA4C,KAAKN,KAAvD;AACA,UAAIO,mBAAmB,GAAG,KAAKT,sBAAL,EAA1B;;AAEA,UAAIU,UAAU,GAAGd,CAAC,CAACc,UAAF,CAAaD,mBAAb,EAAkCF,mBAAlC,CAAjB;;AACA,UAAIG,UAAU,CAACC,MAAX,GAAoB,CAAxB,EAA2B;AACvBH,QAAAA,kBAAkB,CAACC,mBAAD,EAAsB,IAAtB,CAAlB;AACH,OAFD,MAEO;AACHD,QAAAA,kBAAkB,CAACC,mBAAD,EAAsB,KAAtB,CAAlB;AACH;AACJ,KAjBqC;;AAAA,SAmBtCG,oBAnBsC,GAmBf,MAAM;AACzB,YAAM;AAACL,QAAAA;AAAD,UAAwB,KAAKL,KAAnC;AACA,UAAIO,mBAAmB,GAAG,KAAKT,sBAAL,EAA1B;;AACA,UAAIU,UAAU,GAAGd,CAAC,CAACc,UAAF,CAAaD,mBAAb,EAAkCF,mBAAlC,CAAjB;;AACA,aAAOG,UAAU,CAACC,MAAX,KAAsB,CAA7B;AACH,KAxBqC;AAAA;;AA0BtCE,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA,QAAD;AAAWb,MAAAA,UAAX;AAAuBM,MAAAA,mBAAvB;AAA4CQ,MAAAA;AAA5C,QAA6D,KAAKb,KAAxE;AACA,UAAMc,aAAa,GAAG,KAAKJ,oBAAL,EAAtB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,6BACI;AACI,QAAA,SAAS,EAAE,iCADf;AAAA,gCAGI;AAAK,UAAA,SAAS,EAAE,yBAAhB;AAAA,iCACI,QAAC,cAAD;AACI,YAAA,EAAE,EAAEE,QADR;AAEI,YAAA,IAAI,EAAEA,QAFV;AAGI,YAAA,OAAO,EAAEE,aAHb;AAII,YAAA,KAAK,EAAEF,QAJX;AAKI,YAAA,KAAK,EAAEA,QALX;AAOI,YAAA,aAAa,EAAGG,KAAD,IAAW;AACtB,mBAAKX,uBAAL;AACH;AATL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAiBI;AACI,UAAA,SAAS,EAAE,4BADf;AAAA,oBAIQL,UAAU,CAACE,GAAX,CAAgBe,SAAD,IAAe;AAC1B,gCAAO,QAAC,SAAD;AAEH,cAAA,SAAS,EAAEA,SAFR;AAGH,cAAA,OAAO,EAAEtB,CAAC,CAACuB,OAAF,CAAUZ,mBAAV,EAA+BW,SAAS,CAACb,WAAzC,MAA0D,CAAC,CAHjE;AAIH,cAAA,aAAa,EAAEU;AAJZ,eACEG,SAAS,CAACE,IADZ;AAAA;AAAA;AAAA;AAAA,oBAAP;AAMH,WAPD;AAJR;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAoCH;;AAnEqC;;AAsE1C,eAAerB,iBAAf","sourcesContent":["import React, {Component} from \"react\";\nimport * as _ from 'lodash';\nimport Privilege from \"./Privilege\";\nimport CustomCheckBox from \"../../../../../../../common/CustomCheckBox\";\n\nclass PrivilegeCategory extends Component {\n\n    getSectionPrivilegeIDs = () => {\n        const {privileges} = this.props;\n        return privileges.map((p) => p.privilegeID);\n    };\n\n    onSectionPrivilegeClick = () => {\n        const {checkedPrivilegeIDs, onSelectPrivileges} = this.props;\n        let sectionPrivilegeIDs = this.getSectionPrivilegeIDs();\n\n        let difference = _.difference(sectionPrivilegeIDs, checkedPrivilegeIDs);\n        if (difference.length > 0) {\n            onSelectPrivileges(sectionPrivilegeIDs, true);\n        } else {\n            onSelectPrivileges(sectionPrivilegeIDs, false);\n        }\n    };\n\n    isSectionAllSelected = () => {\n        const {checkedPrivilegeIDs} = this.props;\n        let sectionPrivilegeIDs = this.getSectionPrivilegeIDs();\n        let difference = _.difference(sectionPrivilegeIDs, checkedPrivilegeIDs);\n        return difference.length === 0;\n    };\n\n    render() {\n\n        const {category, privileges, checkedPrivilegeIDs, onCheckChange} = this.props;\n        const isAllSelected = this.isSectionAllSelected();\n\n        return (\n            <div className='privilege-scroll-section'>\n                <div\n                    className={'privilege-main-category-section'}\n                >\n                    <div className={'privilege-category-name'}>\n                        <CustomCheckBox\n                            id={category}\n                            name={category}\n                            checked={isAllSelected}\n                            value={category}\n                            label={category}\n\n                            onCheckChange={(value) => {\n                                this.onSectionPrivilegeClick()\n                            }}\n                        />\n                    </div>\n\n                    <div\n                        className={'privilege-category-section'}\n                    >\n                        {\n                            privileges.map((privilege) => {\n                                return <Privilege\n                                    key={privilege.code}\n                                    privilege={privilege}\n                                    checked={_.indexOf(checkedPrivilegeIDs, privilege.privilegeID) !== -1}\n                                    onCheckChange={onCheckChange}\n                                />\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PrivilegeCategory;\n"]},"metadata":{},"sourceType":"module"}