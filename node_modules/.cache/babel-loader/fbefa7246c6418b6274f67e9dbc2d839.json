{"ast":null,"code":"import { GET_DIETARY_CATEGORIES, ON_CHECKUP_SELECT_DIETARY_HABITS, ON_RESET_CHECKUP_DIETARY_HABITS, ON_SET_CHECKUP_DIETARY_HABITS_IDS } from \"../action/select.dietary.habit.actions\";\nimport * as _ from \"lodash\";\nconst initialState = {\n  dietaryCategories: [],\n  dietaryHabitsIDs: {},\n  allDietaryHabitsIds: [],\n  currentIDs: [],\n  prevDietaryHabitIds: []\n};\n\nconst selectDietaryHabitReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_DIETARY_CATEGORIES:\n      {\n        let allDietaryHabitsIds = [];\n        action.payload.forEach(element => {\n          element.dietaryHabits.forEach(x => {\n            allDietaryHabitsIds.push(x.dietaryHabitID);\n          });\n        });\n        return { ...state,\n          dietaryCategories: action.payload,\n          allDietaryHabitsIds: allDietaryHabitsIds\n        };\n      }\n\n    case ON_CHECKUP_SELECT_DIETARY_HABITS:\n      {\n        let obj = _.cloneDeep(state.dietaryHabitsIDs);\n\n        if (action.payload.dietaryCategoryID) {\n          obj = Object.assign(obj, {\n            [action.payload.dietaryCategoryID]: action.payload.dietaryHabitID\n          });\n        }\n\n        return { ...state,\n          dietaryHabitsIDs: obj,\n          currentIDs: Object.values(obj)\n        };\n      }\n\n    case ON_SET_CHECKUP_DIETARY_HABITS_IDS:\n      {\n        let obj = Object.values(action.payload);\n        return { ...state,\n          prevDietaryHabitIds: obj,\n          currentIDs: obj,\n          dietaryHabitsIDs: action.payload\n        };\n      }\n\n    case ON_RESET_CHECKUP_DIETARY_HABITS:\n      {\n        return { ...state,\n          currentIDs: [],\n          prevDietaryHabitIds: [],\n          dietaryHabitsIDs: {}\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default selectDietaryHabitReducer;","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/selectDietaryHabits/store/reducer/select.dietary.habit.reducer.js"],"names":["GET_DIETARY_CATEGORIES","ON_CHECKUP_SELECT_DIETARY_HABITS","ON_RESET_CHECKUP_DIETARY_HABITS","ON_SET_CHECKUP_DIETARY_HABITS_IDS","_","initialState","dietaryCategories","dietaryHabitsIDs","allDietaryHabitsIds","currentIDs","prevDietaryHabitIds","selectDietaryHabitReducer","state","action","type","payload","forEach","element","dietaryHabits","x","push","dietaryHabitID","obj","cloneDeep","dietaryCategoryID","Object","assign","values"],"mappings":"AAAA,SACIA,sBADJ,EAEIC,gCAFJ,EAGIC,+BAHJ,EAIIC,iCAJJ,QAKO,wCALP;AAMA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,iBAAiB,EAAE,EADF;AAEjBC,EAAAA,gBAAgB,EAAE,EAFD;AAGjBC,EAAAA,mBAAmB,EAAE,EAHJ;AAIjBC,EAAAA,UAAU,EAAE,EAJK;AAKjBC,EAAAA,mBAAmB,EAAE;AALJ,CAArB;;AAQA,MAAMC,yBAAyB,GAAG,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBP,YAAsB;AAAA,MAARQ,MAAQ;;AAEtE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,sBAAL;AAA8B;AAC1B,YAAIQ,mBAAmB,GAAG,EAA1B;AACAK,QAAAA,MAAM,CAACE,OAAP,CAAeC,OAAf,CAAuBC,OAAO,IAAI;AAC9BA,UAAAA,OAAO,CAACC,aAAR,CAAsBF,OAAtB,CACIG,CAAC,IAAI;AACDX,YAAAA,mBAAmB,CAACY,IAApB,CAAyBD,CAAC,CAACE,cAA3B;AACH,WAHL;AAKH,SAND;AAOA,eAAO,EACH,GAAGT,KADA;AAEHN,UAAAA,iBAAiB,EAAEO,MAAM,CAACE,OAFvB;AAGHP,UAAAA,mBAAmB,EAAEA;AAHlB,SAAP;AAKH;;AAED,SAAKP,gCAAL;AAAwC;AACpC,YAAIqB,GAAG,GAAGlB,CAAC,CAACmB,SAAF,CAAYX,KAAK,CAACL,gBAAlB,CAAV;;AACA,YAAIM,MAAM,CAACE,OAAP,CAAeS,iBAAnB,EAAsC;AAClCF,UAAAA,GAAG,GAAGG,MAAM,CAACC,MAAP,CAAcJ,GAAd,EAAmB;AAAC,aAACT,MAAM,CAACE,OAAP,CAAeS,iBAAhB,GAAoCX,MAAM,CAACE,OAAP,CAAeM;AAApD,WAAnB,CAAN;AACH;;AACD,eAAO,EACH,GAAGT,KADA;AAEHL,UAAAA,gBAAgB,EAAEe,GAFf;AAGHb,UAAAA,UAAU,EAAEgB,MAAM,CAACE,MAAP,CAAcL,GAAd;AAHT,SAAP;AAKH;;AAED,SAAKnB,iCAAL;AAAyC;AACrC,YAAImB,GAAG,GAAGG,MAAM,CAACE,MAAP,CAAcd,MAAM,CAACE,OAArB,CAAV;AACA,eAAO,EACH,GAAGH,KADA;AAEHF,UAAAA,mBAAmB,EAAEY,GAFlB;AAGHb,UAAAA,UAAU,EAAEa,GAHT;AAIHf,UAAAA,gBAAgB,EAAEM,MAAM,CAACE;AAJtB,SAAP;AAMH;;AAED,SAAKb,+BAAL;AAAuC;AACnC,eAAO,EACH,GAAGU,KADA;AAEHH,UAAAA,UAAU,EAAE,EAFT;AAGHC,UAAAA,mBAAmB,EAAE,EAHlB;AAIHH,UAAAA,gBAAgB,EAAE;AAJf,SAAP;AAMH;;AAED;AACI,aAAOK,KAAP;AAjDR;AAmDH,CArDD;;AAuDA,eAAeD,yBAAf","sourcesContent":["import {\n    GET_DIETARY_CATEGORIES,\n    ON_CHECKUP_SELECT_DIETARY_HABITS,\n    ON_RESET_CHECKUP_DIETARY_HABITS,\n    ON_SET_CHECKUP_DIETARY_HABITS_IDS\n} from \"../action/select.dietary.habit.actions\";\nimport * as _ from \"lodash\";\n\nconst initialState = {\n    dietaryCategories: [],\n    dietaryHabitsIDs: {},\n    allDietaryHabitsIds: [],\n    currentIDs: [],\n    prevDietaryHabitIds: []\n};\n\nconst selectDietaryHabitReducer = function (state = initialState, action) {\n\n    switch (action.type) {\n        case GET_DIETARY_CATEGORIES : {\n            let allDietaryHabitsIds = [];\n            action.payload.forEach(element => {\n                element.dietaryHabits.forEach(\n                    x => {\n                        allDietaryHabitsIds.push(x.dietaryHabitID)\n                    }\n                )\n            });\n            return {\n                ...state,\n                dietaryCategories: action.payload,\n                allDietaryHabitsIds: allDietaryHabitsIds\n            }\n        }\n\n        case ON_CHECKUP_SELECT_DIETARY_HABITS : {\n            let obj = _.cloneDeep(state.dietaryHabitsIDs);\n            if (action.payload.dietaryCategoryID) {\n                obj = Object.assign(obj, {[action.payload.dietaryCategoryID]: action.payload.dietaryHabitID});\n            }\n            return {\n                ...state,\n                dietaryHabitsIDs: obj,\n                currentIDs: Object.values(obj)\n            }\n        }\n\n        case ON_SET_CHECKUP_DIETARY_HABITS_IDS : {\n            let obj = Object.values(action.payload);\n            return {\n                ...state,\n                prevDietaryHabitIds: obj,\n                currentIDs: obj,\n                dietaryHabitsIDs: action.payload,\n            }\n        }\n\n        case ON_RESET_CHECKUP_DIETARY_HABITS : {\n            return {\n                ...state,\n                currentIDs: [],\n                prevDietaryHabitIds: [],\n                dietaryHabitsIDs: {},\n            }\n        }\n\n        default :\n            return state;\n    }\n};\n\nexport default selectDietaryHabitReducer;\n\n"]},"metadata":{},"sourceType":"module"}