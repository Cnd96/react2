{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\containers\\\\LayoutManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { matchRoutes } from 'react-router-config';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppContext from '../AppContext';\nimport * as _ from 'lodash';\nimport * as Actions from '../store/actions/notebook';\nimport TheLayout from \"./TheLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LayoutManager(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const defaultSettings = useSelector(_ref => {\n    let {\n      notebook\n    } = _ref;\n    return notebook.settings.initial;\n  });\n  const settings = useSelector(_ref2 => {\n    let {\n      notebook\n    } = _ref2;\n    return notebook.settings.current;\n  });\n  const appContext = useContext(AppContext);\n  const {\n    routes\n  } = appContext;\n  useEffect(() => {\n    function routeSettingsCheck() {\n      const matched = matchRoutes(routes, props.location.pathname)[0];\n\n      if (matched && matched.route.settings) {\n        const routeSettings = _.merge({}, defaultSettings, {\n          settings: matched.route.settings\n        });\n\n        if (!_.isEqual(settings, routeSettings)) {\n          dispatch(Actions.setSettings(_.merge({}, routeSettings)));\n        }\n      } else {\n        if (!_.isEqual(settings, defaultSettings)) {\n          dispatch(Actions.resetSettings());\n        }\n      }\n    }\n\n    routeSettingsCheck();\n  }, [defaultSettings, dispatch, props.location.pathname, routes, settings]);\n  return /*#__PURE__*/_jsxDEV(TheLayout, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LayoutManager, \"T25Zu8VsY2Rbs94kybmAkJlp+J8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = LayoutManager;\nexport default _c3 = withRouter(_c2 = /*#__PURE__*/React.memo(LayoutManager));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LayoutManager\");\n$RefreshReg$(_c2, \"%default%$withRouter\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/containers/LayoutManager.js"],"names":["React","useContext","useEffect","withRouter","matchRoutes","useDispatch","useSelector","AppContext","_","Actions","TheLayout","LayoutManager","props","dispatch","defaultSettings","notebook","settings","initial","current","appContext","routes","routeSettingsCheck","matched","location","pathname","route","routeSettings","merge","isEqual","setSettings","resetSettings","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE1B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,eAAe,GAAGR,WAAW,CAAC;AAAA,QAAC;AAACS,MAAAA;AAAD,KAAD;AAAA,WAAgBA,QAAQ,CAACC,QAAT,CAAkBC,OAAlC;AAAA,GAAD,CAAnC;AACA,QAAMD,QAAQ,GAAGV,WAAW,CAAC;AAAA,QAAC;AAACS,MAAAA;AAAD,KAAD;AAAA,WAAgBA,QAAQ,CAACC,QAAT,CAAkBE,OAAlC;AAAA,GAAD,CAA5B;AAEA,QAAMC,UAAU,GAAGlB,UAAU,CAACM,UAAD,CAA7B;AACA,QAAM;AAACa,IAAAA;AAAD,MAAWD,UAAjB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASmB,kBAAT,GAA8B;AAC1B,YAAMC,OAAO,GAAGlB,WAAW,CAACgB,MAAD,EAASR,KAAK,CAACW,QAAN,CAAeC,QAAxB,CAAX,CAA6C,CAA7C,CAAhB;;AAEA,UAAIF,OAAO,IAAIA,OAAO,CAACG,KAAR,CAAcT,QAA7B,EAAuC;AACnC,cAAMU,aAAa,GAAGlB,CAAC,CAACmB,KAAF,CAAQ,EAAR,EAAYb,eAAZ,EAA6B;AAACE,UAAAA,QAAQ,EAAEM,OAAO,CAACG,KAAR,CAAcT;AAAzB,SAA7B,CAAtB;;AACA,YAAI,CAACR,CAAC,CAACoB,OAAF,CAAUZ,QAAV,EAAoBU,aAApB,CAAL,EAAyC;AACrCb,UAAAA,QAAQ,CAACJ,OAAO,CAACoB,WAAR,CAAoBrB,CAAC,CAACmB,KAAF,CAAQ,EAAR,EAAYD,aAAZ,CAApB,CAAD,CAAR;AACH;AACJ,OALD,MAKO;AACH,YAAI,CAAClB,CAAC,CAACoB,OAAF,CAAUZ,QAAV,EAAoBF,eAApB,CAAL,EAA2C;AACvCD,UAAAA,QAAQ,CAACJ,OAAO,CAACqB,aAAR,EAAD,CAAR;AACH;AACJ;AACJ;;AAEDT,IAAAA,kBAAkB;AACrB,GAjBQ,EAiBN,CAACP,eAAD,EAAkBD,QAAlB,EAA4BD,KAAK,CAACW,QAAN,CAAeC,QAA3C,EAAqDJ,MAArD,EAA6DJ,QAA7D,CAjBM,CAAT;AAoBA,sBACI,QAAC,SAAD,OAAeJ;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAhCQD,a;UAEYN,W,EACOC,W,EACPA,W;;;KAJZK,a;AAkCT,qBAAeR,UAAU,oBAACH,KAAK,CAAC+B,IAAN,CAAWpB,aAAX,CAAD,CAAzB","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {matchRoutes} from 'react-router-config';\nimport {useDispatch, useSelector} from 'react-redux';\nimport AppContext from '../AppContext';\nimport * as _ from 'lodash';\nimport * as Actions from '../store/actions/notebook';\nimport TheLayout from \"./TheLayout\";\n\nfunction LayoutManager(props) {\n\n    const dispatch = useDispatch();\n    const defaultSettings = useSelector(({notebook}) => notebook.settings.initial);\n    const settings = useSelector(({notebook}) => notebook.settings.current);\n\n    const appContext = useContext(AppContext);\n    const {routes} = appContext;\n\n    useEffect(() => {\n        function routeSettingsCheck() {\n            const matched = matchRoutes(routes, props.location.pathname)[0];\n\n            if (matched && matched.route.settings) {\n                const routeSettings = _.merge({}, defaultSettings, {settings: matched.route.settings});\n                if (!_.isEqual(settings, routeSettings)) {\n                    dispatch(Actions.setSettings(_.merge({}, routeSettings)));\n                }\n            } else {\n                if (!_.isEqual(settings, defaultSettings)) {\n                    dispatch(Actions.resetSettings());\n                }\n            }\n        }\n\n        routeSettingsCheck();\n    }, [defaultSettings, dispatch, props.location.pathname, routes, settings]);\n\n\n    return (\n        <TheLayout {...props}/>\n    );\n}\n\nexport default withRouter(React.memo(LayoutManager));\n"]},"metadata":{},"sourceType":"module"}