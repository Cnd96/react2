{"ast":null,"code":"import dataService from \"../../../../../../../../../services/dataService\";\nimport selectOtherLettersEndpoints from \"./select.other.letters.endpoints\";\nexport const ON_SELECT_OTHER_LETTERS = '[OTHER LETTERS] ON_SELECT_OTHER_LETTERS';\nexport const GET_CHECKUP_INSTRUCTION_NOTE = '[OTHER LETTERS] GET CHECKUP INSTRUCTION NOTE';\nexport const GET_PATIENT = '[OTHER LETTERS] GET PATIENT';\nexport const GET_CHECKUP = '[OTHER LETTERS] GET CHECKUP';\nexport const CLEAR_STORE = '[OTHER LETTERS] CLEAR STORE';\nexport const GET_PRESCRIPTION = '[OTHER LETTERS] GET PRESCRIPTION';\nexport const GET_HOSPITAL_DETAILS = '[OTHER LETTERS] GET HOSPITAL DETAILS';\nexport const GET_DOCTOR_DETAILS = '[OTHER LETTERS] GET DOCTOR DETAILS';\nexport function onSelectOtherLetters(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_SELECT_OTHER_LETTERS,\n      payload: data\n    });\n  };\n}\nexport function getCheckupInstructionNoteByCheckupID(data) {\n  const request = dataService.post(selectOtherLettersEndpoints.getCheckupInstructionNote, data);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_CHECKUP_INSTRUCTION_NOTE,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getPatientDTOByID(patientID) {\n  let endpoint = Object.assign({}, selectOtherLettersEndpoints.getPatientDTOByID);\n  endpoint.url = endpoint.url + '/' + patientID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_PATIENT,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getCheckupDTOByID(checkupID) {\n  let endpoint = Object.assign({}, selectOtherLettersEndpoints.getCheckupDTOByID);\n  endpoint.url = endpoint.url + '/' + checkupID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_CHECKUP,\n      payload: response.data.result\n    }));\n  };\n}\nexport function clearStore() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: CLEAR_STORE\n    });\n  };\n}\nexport function getPrescriptionByID(prescriptionID) {\n  let endpoint = Object.assign({}, selectOtherLettersEndpoints.getPrescriptionByID);\n  endpoint.url = endpoint.url + '/' + prescriptionID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_PRESCRIPTION,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getHospitalByID(hospitalID) {\n  let endpoint = Object.assign({}, selectOtherLettersEndpoints.getHospitalByID);\n  endpoint.url = endpoint.url + '/' + hospitalID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_HOSPITAL_DETAILS,\n      payload: response.data.result\n    }));\n  };\n}\nexport function getDoctorByID(doctorID) {\n  let endpoint = Object.assign({}, selectOtherLettersEndpoints.getDoctorByID);\n  endpoint.url = endpoint.url + '/' + doctorID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_DOCTOR_DETAILS,\n      payload: response.data.result\n    }));\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/otherLetters/store/actions/select.other.letter.action.js"],"names":["dataService","selectOtherLettersEndpoints","ON_SELECT_OTHER_LETTERS","GET_CHECKUP_INSTRUCTION_NOTE","GET_PATIENT","GET_CHECKUP","CLEAR_STORE","GET_PRESCRIPTION","GET_HOSPITAL_DETAILS","GET_DOCTOR_DETAILS","onSelectOtherLetters","data","dispatch","getState","type","payload","getCheckupInstructionNoteByCheckupID","request","post","getCheckupInstructionNote","then","response","result","getPatientDTOByID","patientID","endpoint","Object","assign","url","get","getCheckupDTOByID","checkupID","clearStore","getPrescriptionByID","prescriptionID","getHospitalByID","hospitalID","getDoctorByID","doctorID"],"mappings":"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","sourcesContent":["import dataService from \"../../../../../../../../../services/dataService\";\nimport selectOtherLettersEndpoints from \"./select.other.letters.endpoints\";\n\n\nexport const ON_SELECT_OTHER_LETTERS = '[OTHER LETTERS] ON_SELECT_OTHER_LETTERS';\nexport const GET_CHECKUP_INSTRUCTION_NOTE = '[OTHER LETTERS] GET CHECKUP INSTRUCTION NOTE';\nexport const GET_PATIENT = '[OTHER LETTERS] GET PATIENT';\nexport const GET_CHECKUP = '[OTHER LETTERS] GET CHECKUP';\nexport const CLEAR_STORE = '[OTHER LETTERS] CLEAR STORE';\nexport const GET_PRESCRIPTION = '[OTHER LETTERS] GET PRESCRIPTION';\nexport const GET_HOSPITAL_DETAILS = '[OTHER LETTERS] GET HOSPITAL DETAILS';\nexport const GET_DOCTOR_DETAILS = '[OTHER LETTERS] GET DOCTOR DETAILS';\n\nexport function onSelectOtherLetters(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_SELECT_OTHER_LETTERS,\n            payload: data\n        })\n    };\n}\n\nexport function getCheckupInstructionNoteByCheckupID(data) {\n    const request = dataService.post(selectOtherLettersEndpoints.getCheckupInstructionNote, data);\n    return (dispatch, getState) => {\n\n        request.then((response) =>\n            dispatch({\n                type: GET_CHECKUP_INSTRUCTION_NOTE,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function getPatientDTOByID(patientID) {\n\n    let endpoint = Object.assign({}, selectOtherLettersEndpoints.getPatientDTOByID);\n    endpoint.url = endpoint.url + '/' + patientID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_PATIENT,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function getCheckupDTOByID(checkupID) {\n\n    let endpoint = Object.assign({}, selectOtherLettersEndpoints.getCheckupDTOByID);\n    endpoint.url = endpoint.url + '/' + checkupID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_CHECKUP,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function clearStore() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: CLEAR_STORE,\n        })\n    };\n}\n\nexport function getPrescriptionByID(prescriptionID) {\n\n    let endpoint = Object.assign({}, selectOtherLettersEndpoints.getPrescriptionByID);\n    endpoint.url = endpoint.url + '/' + prescriptionID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_PRESCRIPTION,\n                payload: response.data.result\n            })\n        );\n    };\n}\n\nexport function getHospitalByID(hospitalID) {\n\n    let endpoint = Object.assign({}, selectOtherLettersEndpoints.getHospitalByID);\n    endpoint.url = endpoint.url + '/' + hospitalID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_HOSPITAL_DETAILS,\n                payload: response.data.result\n            })\n        );\n    };\n\n}\n\nexport function getDoctorByID(doctorID) {\n\n    let endpoint = Object.assign({}, selectOtherLettersEndpoints.getDoctorByID);\n    endpoint.url = endpoint.url + '/' + doctorID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_DOCTOR_DETAILS,\n                payload: response.data.result\n            })\n        );\n    };\n\n}\n\n"]},"metadata":{},"sourceType":"module"}