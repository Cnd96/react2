{"ast":null,"code":"import dataService from \"../../../../../../../../../services/dataService\";\nimport medicalTestEndpoints from \"./patient.add.medical.test.results.app.endpoints\";\nexport const GET_MEDICAL_TEST_TYPES = '[PATIENT MEDICAL TEST ADD EDIT] GET_MEDICAL_TEST_TYPES';\nexport const SET_MEDICAL_TEST_RESULTS = '[PATIENT MEDICAL TEST ADD EDIT] SET_MEDICAL_TEST_RESULTS';\nexport const ON_ADD_CHECKUP_MEDICAL_TEST_RESULTS = '[PATIENT MEDICAL TEST ADD EDIT] ON_ADD_CHECKUP_MEDICAL_TEST_RESULTS';\nexport const ON_RESET = '[PATIENT MEDICAL TEST ADD EDIT] ON_RESET';\nexport function getMedicalTestTypes() {\n  const request = dataService.get(medicalTestEndpoints.getMedicalTestTypes);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_MEDICAL_TEST_TYPES,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function onSetMedicalResult(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SET_MEDICAL_TEST_RESULTS,\n      payload: data\n    });\n  };\n}\nexport function saveOrUpdateCheckupWithPatientMedicalTestsResults(data) {\n  const request = dataService.post(medicalTestEndpoints.saveOrUpdateCheckupWithPatientMedicalTestsResults, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: ON_ADD_CHECKUP_MEDICAL_TEST_RESULTS,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function resetMedicalTest() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET,\n      payload: {}\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/medicalTests/store/actions/patient.add.medical.test.results.action.js"],"names":["dataService","medicalTestEndpoints","GET_MEDICAL_TEST_TYPES","SET_MEDICAL_TEST_RESULTS","ON_ADD_CHECKUP_MEDICAL_TEST_RESULTS","ON_RESET","getMedicalTestTypes","request","get","dispatch","getState","then","response","type","payload","data","result","onSetMedicalResult","saveOrUpdateCheckupWithPatientMedicalTestsResults","post","resetMedicalTest"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iDAAxB;AACA,OAAOC,oBAAP,MAAiC,kDAAjC;AAGA,OAAO,MAAMC,sBAAsB,GAAG,wDAA/B;AACP,OAAO,MAAMC,wBAAwB,GAAG,0DAAjC;AACP,OAAO,MAAMC,mCAAmC,GAAG,qEAA5C;AACP,OAAO,MAAMC,QAAQ,GAAG,0CAAjB;AAEP,OAAO,SAASC,mBAAT,GAA+B;AAElC,QAAMC,OAAO,GAAGP,WAAW,CAACQ,GAAZ,CAAgBP,oBAAoB,CAACK,mBAArC,CAAhB;AACA,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3BH,IAAAA,OAAO,CAACI,IAAR,CAAcC,QAAD,IAAc;AACnBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEX,sBADD;AAELY,QAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFlB,OAAD,CAAR;AAIH,KALL;AAOH,GARD;AASH;AAGD,OAAO,SAASC,kBAAT,CAA4BF,IAA5B,EAAkC;AACrC,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEV,wBADD;AAELW,MAAAA,OAAO,EAAEC;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASG,iDAAT,CAA2DH,IAA3D,EAAiE;AACpE,QAAMR,OAAO,GAAGP,WAAW,CAACmB,IAAZ,CAAiBlB,oBAAoB,CAACiB,iDAAtC,EAAyFH,IAAzF,CAAhB;AAEA,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3B,WAAOH,OAAO,CAACI,IAAR,CAAcC,QAAD,IAAc;AAC1B,aAAOH,QAAQ,CAAC;AACZI,QAAAA,IAAI,EAAET,mCADM;AAEZU,QAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFX,OAAD,CAAf;AAIH,KALE,CAAP;AAOH,GARD;AASH;AAED,OAAO,SAASI,gBAAT,GAA4B;AAC/B,SAAO,CAACX,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAER,QADD;AAELS,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH","sourcesContent":["import dataService from \"../../../../../../../../../services/dataService\";\nimport medicalTestEndpoints from \"./patient.add.medical.test.results.app.endpoints\";\n\n\nexport const GET_MEDICAL_TEST_TYPES = '[PATIENT MEDICAL TEST ADD EDIT] GET_MEDICAL_TEST_TYPES';\nexport const SET_MEDICAL_TEST_RESULTS = '[PATIENT MEDICAL TEST ADD EDIT] SET_MEDICAL_TEST_RESULTS';\nexport const ON_ADD_CHECKUP_MEDICAL_TEST_RESULTS = '[PATIENT MEDICAL TEST ADD EDIT] ON_ADD_CHECKUP_MEDICAL_TEST_RESULTS';\nexport const ON_RESET = '[PATIENT MEDICAL TEST ADD EDIT] ON_RESET';\n\nexport function getMedicalTestTypes() {\n\n    const request = dataService.get(medicalTestEndpoints.getMedicalTestTypes);\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: GET_MEDICAL_TEST_TYPES,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\n\nexport function onSetMedicalResult(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: SET_MEDICAL_TEST_RESULTS,\n            payload: data\n        })\n    };\n}\n\nexport function saveOrUpdateCheckupWithPatientMedicalTestsResults(data) {\n    const request = dataService.post(medicalTestEndpoints.saveOrUpdateCheckupWithPatientMedicalTestsResults, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: ON_ADD_CHECKUP_MEDICAL_TEST_RESULTS,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function resetMedicalTest() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET,\n            payload: {}\n        })\n    };\n}"]},"metadata":{},"sourceType":"module"}