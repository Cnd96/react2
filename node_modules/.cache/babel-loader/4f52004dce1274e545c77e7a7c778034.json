{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\utils\\\\FormUtils.js\";\nimport React from \"react\";\nimport * as _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getCommonStatusOptions = includeEmpty => {\n  let result = [];\n\n  if (includeEmpty) {\n    result = [{\n      key: null,\n      value: ''\n    }];\n  }\n\n  result = [...result, {\n    key: 'ACT',\n    value: 'Active'\n  }, {\n    key: 'INA',\n    value: 'Inactive'\n  }];\n  return result;\n};\nexport const getCommonTitleOptions = includeEmpty => {\n  let result = [];\n\n  if (includeEmpty) {\n    result = [{\n      key: null,\n      value: ''\n    }];\n  }\n\n  result = [...result, {\n    key: 'DR',\n    value: 'Dr'\n  }, {\n    key: 'MR',\n    value: 'Mr'\n  }, {\n    key: 'MS',\n    value: 'Ms'\n  }, {\n    key: 'MRS',\n    value: 'Mrs'\n  }, {\n    key: 'MISS',\n    value: 'Miss'\n  }];\n  return result;\n};\nexport const getCommonAmountSpecifyAsOptions = includeEmpty => {\n  let result = [];\n\n  if (includeEmpty) {\n    result = [{\n      key: null,\n      value: ''\n    }];\n  }\n\n  result = [...result, {\n    key: 'PERCENTAGE',\n    value: 'Percentage'\n  }, {\n    key: 'VALUE',\n    value: 'value'\n  }];\n  return result;\n};\nexport const getCommonGenderOptions = includeEmpty => {\n  let result = [];\n\n  if (includeEmpty) {\n    result = [{\n      key: null,\n      value: ''\n    }];\n  }\n\n  result = [...result, {\n    key: 'M',\n    value: 'Male'\n  }, {\n    key: 'F',\n    value: 'Female'\n  }];\n  return result;\n};\nexport const getCivilStatusOptions = includeEmpty => {\n  let result = [];\n\n  if (includeEmpty) {\n    result = [{\n      key: null,\n      value: ''\n    }];\n  }\n\n  result = [...result, {\n    key: 'UNKNOWN',\n    value: 'Unknown'\n  }, {\n    key: 'MARRIED',\n    value: 'Married'\n  }, {\n    key: 'WIDOWED',\n    value: 'Widowed'\n  }, {\n    key: 'DIVORCED',\n    value: 'Divorced'\n  }, {\n    key: 'SEPARATED',\n    value: 'Separated'\n  }, {\n    key: 'SINGLE',\n    value: 'Single'\n  }];\n  return result;\n};\nexport const getOptionsListByObject = (dataObject, includeEmpty) => {\n  let optionArray = [];\n  let result = [];\n\n  if (includeEmpty) {\n    optionArray.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\"\n    }, \"\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 26\n    }, this));\n  }\n\n  let keys = Object.keys(dataObject);\n  keys.map(item => {\n    optionArray.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: dataObject[item]\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 26\n    }, this));\n  });\n  return optionArray;\n};\nexport const getOptionsList = (dataList, includeEmpty) => {\n  let optionArray = [];\n  let result = [];\n\n  if (includeEmpty) {\n    optionArray.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\"\n    }, \"\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 26\n    }, this));\n  }\n\n  dataList.map(item => {\n    optionArray.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, \"\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 26\n    }, this));\n  });\n  return optionArray;\n};\nexport const highlightText = (text, query) => {\n  let lastIndex = 0;\n  const words = query.split(/\\s+/).filter(word => word.length > 0).map(escapeRegExpChars);\n\n  if (words.length === 0) {\n    return [text];\n  }\n\n  const regexp = new RegExp(words.join(\"|\"), \"gi\");\n  const tokens = [];\n\n  while (true) {\n    const match = regexp.exec(text);\n\n    if (!match) {\n      break;\n    }\n\n    const length = match[0].length;\n    const before = text.slice(lastIndex, regexp.lastIndex - length);\n\n    if (before.length > 0) {\n      tokens.push(before);\n    }\n\n    lastIndex = regexp.lastIndex;\n    tokens.push( /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: match[0]\n    }, lastIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }, this));\n  }\n\n  const rest = text.slice(lastIndex);\n\n  if (rest.length > 0) {\n    tokens.push(rest);\n  }\n\n  return tokens;\n};\nexport const escapeRegExpChars = text => {\n  return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n};\nexport const getOptionsListByObjectList = (objectList, key, value, description, includeEmpty) => {\n  let optionArray = [];\n  let result = [];\n\n  if (includeEmpty) {\n    optionArray.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\"\n    }, \"\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 26\n    }, this));\n  }\n\n  objectList.map(item => {\n    if (description) {\n      optionArray.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item[key],\n        children: [item[value], \" - \", item[description]]\n      }, item[key], true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 30\n      }, this));\n    } else {\n      optionArray.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item[key],\n        children: item[value]\n      }, item[key], false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 30\n      }, this));\n    }\n  });\n  return optionArray;\n};\nexport const getLocationNameAndCodeFromID = (objectList, locationID) => {\n  console.log(\"in method\", objectList, locationID);\n  let nameAndCode = \"\";\n  objectList.map(item => {\n    if (item.locationID === locationID) {\n      nameAndCode = item.locationName + \" - \" + item.locationCode;\n    }\n  });\n  return nameAndCode;\n};\nexport const getSupplierNameAndCodeFromID = (objectList, supplierID) => {\n  let nameAndCode = \"\";\n  objectList.map(item => {\n    if (item.supplierID === supplierID) {\n      nameAndCode = item.supplierCode + \" - \" + item.supplierName;\n      console.log(\"uusssssssssssssssssss \", nameAndCode);\n    }\n  });\n  return nameAndCode;\n};\nexport const getMultiselectListByList = (objectList, key, value, description) => {\n  let optionArray = [];\n\n  if (!_.isEmpty(objectList)) {\n    objectList.map((item, i) => {\n      if (description) {\n        optionArray.push({\n          id: item[key],\n          key: item[key],\n          value: item[value] + \" - \" + item[description],\n          disabled: false\n        });\n      } else {\n        optionArray.push({\n          id: item[key],\n          key: item[key],\n          value: item[value],\n          disabled: false\n        });\n      }\n    });\n  }\n\n  return optionArray;\n};\nexport const getSingleSelectListByList = (objectList, key, value, description, firstEmpty) => {\n  let optionArray = [];\n\n  if (firstEmpty) {\n    optionArray.push({\n      id: null,\n      key: '',\n      value: '(No Selection)'\n    });\n  }\n\n  if (!_.isEmpty(objectList)) {\n    objectList.map((item, i) => {\n      if (description) {\n        optionArray.push({\n          id: item[key],\n          key: item[key],\n          value: item[description],\n          disabled: false\n        });\n      } else {\n        optionArray.push({\n          id: item[key],\n          key: item[key],\n          value: item[value],\n          disabled: false\n        });\n      }\n    });\n  }\n\n  return optionArray;\n};\nexport const getMultiselectListByObject = dataObject => {\n  let keys = Object.keys(dataObject);\n  let optionArray = [];\n  keys.map(item => {\n    optionArray.push({\n      id: item,\n      key: item,\n      value: dataObject[item],\n      disabled: false\n    });\n  });\n  return optionArray;\n};\nexport const getPageOptions = () => {\n  return [{\n    key: 5,\n    value: '5'\n  }, {\n    key: 10,\n    value: '10'\n  }, {\n    key: 20,\n    value: '20'\n  }, {\n    key: 50,\n    value: '50'\n  }, {\n    key: 100,\n    value: '100'\n  }, {\n    key: 200,\n    value: '200'\n  }];\n};\nexport const hasValueInObject = (obj, value) => {\n  let found = false;\n  obj = obj ? obj : {};\n  value = (value + '').trim().toLowerCase();\n\n  let keys = _.keys(obj);\n\n  for (let i = 0; i < keys.length; i++) {\n    let objValue = obj[keys[i]];\n    let type = typeof objValue;\n\n    if (type === 'number' || type === 'string') {\n      found = (objValue + '').toLowerCase().indexOf(value) !== -1;\n\n      if (found) {\n        break;\n      }\n    }\n  }\n\n  return found;\n};\nexport const getConstantValueForSearch = (formValue, defaultValue) => {\n  if (_.isUndefined(formValue)) {\n    return defaultValue;\n  }\n\n  return formValue ? formValue : null;\n};\nexport const getConstantValuesForSearch = (formValue, defaultValue) => {\n  if (_.isUndefined(formValue)) {\n    return [defaultValue];\n  }\n\n  return formValue ? [formValue] : null;\n};\nexport const getInputFieldClassNames = (touched, error) => {\n  let classNames = 'form-control';\n\n  if (touched) {\n    if (error) {\n      classNames += ' is-invalid';\n    } else {\n      classNames += ' is-valid';\n    }\n  }\n\n  return classNames;\n};\nexport const isValueIsNumber = value => {\n  return /^-?[\\d.]+(?:e-?\\d+)?$/.test(value);\n};\nexport const getStandardContactNumber = value => {\n  if (isValueIsNumber(value) && value.length === 10) {\n    let number = value.substring(1, 10);\n\n    let newNumber = _.padStart(number, 12, '+94');\n\n    return newNumber;\n  } else {\n    return value;\n  }\n};\nexport const getOptionsListByObjectListForCustomSelect = function (objectList, value, label, name, key, includedEmpty, isFixed) {\n  let isDisabled = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n  //FIXME\n  let optionArray = [];\n\n  if (includedEmpty) {\n    optionArray = [{\n      key: null,\n      value: '',\n      label: ''\n    }];\n  }\n\n  objectList.map(item => {\n    optionArray.push({\n      target: {\n        value: item[value],\n        label: item[label],\n        name: name\n      },\n      value: item[value],\n      label: item[label],\n      key: item[key],\n      isFixed: item[isFixed],\n      isDisabled: item[isDisabled]\n    });\n  });\n  return optionArray;\n};\nexport const processMobileNumber = value => {\n  if (isValueIsNumber(value) && value.length === 10) {\n    let number = value.substring(1, 10);\n    return _.padStart(number, 12, '+94');\n  } else {\n    return value;\n  }\n};\nexport const validateDateInput = value => {\n  let invalidDateObj = {\n    isValid: false,\n    errors: {\n      checkupDateStr: 'Invalid date'\n    }\n  };\n  let length = value ? value.length : 0;\n  let day = '',\n      month = '',\n      year = '';\n\n  if (length !== 8 && length !== 10 && length !== 16) {\n    return invalidDateObj;\n  }\n\n  if (length === 8) {\n    day = parseInt(value.substr(0, 2));\n    month = parseInt(value.substr(2, 2));\n    year = parseInt(value.substr(4, 4));\n  } else {\n    day = parseInt(value.substr(0, 2));\n    month = parseInt(value.substr(3, 2));\n    year = parseInt(value.substr(6, 4));\n  }\n\n  let currentDate = new Date();\n\n  if (currentDate.getUTCFullYear() < year) {\n    return invalidDateObj;\n  }\n\n  if (currentDate.getUTCFullYear() === year) {\n    if (currentDate.getUTCMonth() + 1 < month) {\n      return invalidDateObj;\n    }\n  }\n\n  if (currentDate.getUTCFullYear() === year && currentDate.getUTCMonth() + 1 === month) {\n    if (currentDate.getUTCDate() < day) {\n      return invalidDateObj;\n    }\n  }\n\n  if (_.isNaN(day) || _.isNaN(month) || _.isNaN(year)) {\n    return invalidDateObj;\n  }\n\n  return {\n    isValid: true,\n    errors: {}\n  };\n};","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/utils/FormUtils.js"],"names":["React","_","getCommonStatusOptions","includeEmpty","result","key","value","getCommonTitleOptions","getCommonAmountSpecifyAsOptions","getCommonGenderOptions","getCivilStatusOptions","getOptionsListByObject","dataObject","optionArray","push","keys","Object","map","item","getOptionsList","dataList","highlightText","text","query","lastIndex","words","split","filter","word","length","escapeRegExpChars","regexp","RegExp","join","tokens","match","exec","before","slice","rest","replace","getOptionsListByObjectList","objectList","description","getLocationNameAndCodeFromID","locationID","console","log","nameAndCode","locationName","locationCode","getSupplierNameAndCodeFromID","supplierID","supplierCode","supplierName","getMultiselectListByList","isEmpty","i","id","disabled","getSingleSelectListByList","firstEmpty","getMultiselectListByObject","getPageOptions","hasValueInObject","obj","found","trim","toLowerCase","objValue","type","indexOf","getConstantValueForSearch","formValue","defaultValue","isUndefined","getConstantValuesForSearch","getInputFieldClassNames","touched","error","classNames","isValueIsNumber","test","getStandardContactNumber","number","substring","newNumber","padStart","getOptionsListByObjectListForCustomSelect","label","name","includedEmpty","isFixed","isDisabled","target","processMobileNumber","validateDateInput","invalidDateObj","isValid","errors","checkupDateStr","day","month","year","parseInt","substr","currentDate","Date","getUTCFullYear","getUTCMonth","getUTCDate","isNaN"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as _ from \"lodash\"\n\nexport const getCommonStatusOptions = (includeEmpty) => {\n    let result = [];\n    if (includeEmpty) {\n        result = [{\n            key: null,\n            value: ''\n        }];\n    }\n\n    result = [...result, {\n        key: 'ACT',\n        value: 'Active'\n    },\n        {\n            key: 'INA',\n            value: 'Inactive'\n        }];\n\n    return result;\n};\n\nexport const getCommonTitleOptions = (includeEmpty) => {\n    let result = [];\n    if (includeEmpty) {\n        result = [{\n            key: null,\n            value: ''\n        }];\n    }\n\n    result = [...result,\n        {\n            key: 'DR',\n            value: 'Dr'\n        },\n        {\n            key: 'MR',\n            value: 'Mr'\n        },\n        {\n            key: 'MS',\n            value: 'Ms'\n        },\n        {\n            key: 'MRS',\n            value: 'Mrs'\n        },\n        {\n            key: 'MISS',\n            value: 'Miss'\n        }\n\n    ];\n\n    return result;\n};\n\nexport const getCommonAmountSpecifyAsOptions = (includeEmpty) => {\n    let result = [];\n    if (includeEmpty) {\n        result = [{\n            key: null,\n            value: ''\n        }];\n    }\n\n    result = [...result, {\n        key: 'PERCENTAGE',\n        value: 'Percentage'\n    },\n        {\n            key: 'VALUE',\n            value: 'value'\n        }];\n\n    return result;\n};\n\nexport const getCommonGenderOptions = (includeEmpty) => {\n    let result = [];\n    if (includeEmpty) {\n        result = [{\n            key: null,\n            value: ''\n        }];\n    }\n\n    result = [...result, {\n        key: 'M',\n        value: 'Male'\n    },\n        {\n            key: 'F',\n            value: 'Female'\n        }];\n    return result;\n};\n\nexport const getCivilStatusOptions = (includeEmpty) => {\n    let result = [];\n    if (includeEmpty) {\n        result = [{\n            key: null,\n            value: ''\n        }];\n    }\n\n    result = [...result,\n        {\n            key: 'UNKNOWN',\n            value: 'Unknown'\n        },\n        {\n            key: 'MARRIED',\n            value: 'Married'\n        },\n        {\n            key: 'WIDOWED',\n            value: 'Widowed'\n        },\n        {\n            key: 'DIVORCED',\n            value: 'Divorced'\n        },\n        {\n            key: 'SEPARATED',\n            value: 'Separated'\n        },\n        {\n            key: 'SINGLE',\n            value: 'Single'\n        }];\n\n    return result;\n};\n\nexport const getOptionsListByObject = (dataObject, includeEmpty) => {\n\n    let optionArray = [];\n    let result = [];\n    if (includeEmpty) {\n        optionArray.push(<option key=\"\" value=\"\"></option>);\n    }\n    let keys = Object.keys(dataObject);\n\n    keys.map((item) => {\n\n        optionArray.push(<option key={item} value={item}>{dataObject[item]}</option>)\n    });\n\n    return optionArray;\n};\n\nexport const getOptionsList = (dataList, includeEmpty) => {\n\n    let optionArray = [];\n    let result = [];\n    if (includeEmpty) {\n        optionArray.push(<option key=\"\" value=\"\"></option>);\n    }\n\n\n    dataList.map((item) => {\n        optionArray.push(<option key=\"\" value={item}>{item}</option>)\n    });\n\n    return optionArray;\n};\n\nexport const highlightText = (text, query) => {\n    let lastIndex = 0;\n    const words = query\n        .split(/\\s+/)\n        .filter(word => word.length > 0)\n        .map(escapeRegExpChars);\n    if (words.length === 0) {\n        return [text];\n    }\n    const regexp = new RegExp(words.join(\"|\"), \"gi\");\n    const tokens = [];\n    while (true) {\n        const match = regexp.exec(text);\n        if (!match) {\n            break;\n        }\n        const length = match[0].length;\n        const before = text.slice(lastIndex, regexp.lastIndex - length);\n        if (before.length > 0) {\n            tokens.push(before);\n        }\n        lastIndex = regexp.lastIndex;\n        tokens.push(<strong key={lastIndex}>{match[0]}</strong>);\n    }\n    const rest = text.slice(lastIndex);\n    if (rest.length > 0) {\n        tokens.push(rest);\n    }\n    return tokens;\n};\n\n\nexport const escapeRegExpChars = (text) => {\n    return text.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n};\n\nexport const getOptionsListByObjectList = (objectList, key, value, description, includeEmpty) => {\n\n    let optionArray = [];\n    let result = [];\n    if (includeEmpty) {\n        optionArray.push(<option key=\"\" value=\"\"></option>);\n    }\n\n\n    objectList.map((item) => {\n        if (description) {\n            optionArray.push(<option key={item[key]} value={item[key]}>{item[value]} - {item[description]}</option>);\n        } else {\n            optionArray.push(<option key={item[key]} value={item[key]}>{item[value]}</option>);\n        }\n    });\n\n    return optionArray;\n};\n\nexport const getLocationNameAndCodeFromID = (objectList, locationID) => {\n    console.log(\"in method\", objectList, locationID);\n    let nameAndCode = \"\";\n    objectList.map((item) => {\n        if (item.locationID === locationID) {\n            nameAndCode = item.locationName + \" - \" + item.locationCode;\n        }\n    });\n    return nameAndCode;\n};\n\nexport const getSupplierNameAndCodeFromID = (objectList, supplierID) => {\n    let nameAndCode = \"\";\n    objectList.map((item) => {\n        if (item.supplierID === supplierID) {\n            nameAndCode = item.supplierCode + \" - \" + item.supplierName;\n            console.log(\"uusssssssssssssssssss \", nameAndCode)\n        }\n    });\n\n    return nameAndCode;\n};\n\nexport const getMultiselectListByList = (objectList, key, value, description) => {\n\n    let optionArray = [];\n    if (!_.isEmpty(objectList)) {\n        objectList.map((item, i) => {\n            if (description) {\n                optionArray.push({\n                    id: item[key],\n                    key: item[key],\n                    value: item[value] + \" - \" + item[description],\n                    disabled: false\n                },);\n            } else {\n                optionArray.push({id: item[key], key: item[key], value: item[value], disabled: false},);\n            }\n        });\n    }\n\n    return optionArray;\n\n};\nexport const getSingleSelectListByList = (objectList, key, value, description, firstEmpty) => {\n\n    let optionArray = [];\n\n    if (firstEmpty) {\n        optionArray.push({\n            id: null,\n            key: '',\n            value: '(No Selection)'\n        });\n    }\n\n    if (!_.isEmpty(objectList)) {\n        objectList.map((item, i) => {\n            if (description) {\n                optionArray.push({\n                    id: item[key],\n                    key: item[key],\n                    value: item[description],\n                    disabled: false\n                },);\n            } else {\n                optionArray.push({id: item[key], key: item[key], value: item[value], disabled: false},);\n            }\n        });\n    }\n\n    return optionArray;\n\n};\n\nexport const getMultiselectListByObject = (dataObject) => {\n\n    let keys = Object.keys(dataObject);\n\n\n    let optionArray = [];\n    keys.map((item) => {\n        optionArray.push({id: item, key: item, value: dataObject[item], disabled: false},);\n    });\n    return optionArray;\n};\n\nexport const getPageOptions = () => {\n    return [\n        {\n            key: 5,\n            value: '5'\n        },\n\n        {\n            key: 10,\n            value: '10'\n        },\n\n        {\n            key: 20,\n            value: '20'\n        },\n\n        {\n            key: 50,\n            value: '50'\n        },\n\n        {\n            key: 100,\n            value: '100'\n        },\n\n        {\n            key: 200,\n            value: '200'\n        },\n    ];\n};\n\nexport const hasValueInObject = (obj, value) => {\n    let found = false;\n    obj = obj ? obj : {};\n    value = (value + '').trim().toLowerCase();\n\n    let keys = _.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        let objValue = obj[keys[i]];\n        let type = typeof objValue;\n\n        if (type === 'number' || type === 'string') {\n            found = (objValue + '').toLowerCase().indexOf(value) !== -1;\n            if (found) {\n                break;\n            }\n        }\n    }\n\n    return found;\n};\n\nexport const getConstantValueForSearch = (formValue, defaultValue) => {\n    if (_.isUndefined(formValue)) {\n        return defaultValue;\n    }\n\n    return formValue ? formValue : null;\n};\n\n\nexport const getConstantValuesForSearch = (formValue, defaultValue) => {\n    if (_.isUndefined(formValue)) {\n        return [defaultValue];\n    }\n\n    return formValue ? [formValue] : null;\n};\n\nexport const getInputFieldClassNames = (touched, error) => {\n    let classNames = 'form-control';\n\n    if (touched) {\n        if (error) {\n            classNames += ' is-invalid';\n        } else {\n            classNames += ' is-valid';\n        }\n    }\n\n    return classNames;\n};\n\nexport const isValueIsNumber = (value) => {\n    return /^-?[\\d.]+(?:e-?\\d+)?$/.test(value)\n};\n\n\nexport const getStandardContactNumber = (value) => {\n    if (isValueIsNumber(value) && value.length === 10) {\n        let number = value.substring(1, 10);\n        let newNumber = _.padStart(number, 12, '+94');\n        return newNumber;\n    } else {\n        return value;\n    }\n\n};\n\nexport const getOptionsListByObjectListForCustomSelect = (objectList, value, label, name, key, includedEmpty, isFixed, isDisabled = false) => {   //FIXME\n\n    let optionArray = [];\n    if (includedEmpty) {\n        optionArray = [{\n            key: null,\n            value: '',\n            label: '',\n        }];\n    }\n    objectList.map((item) => {\n        optionArray.push({\n            target: {\n                value: item[value],\n                label: item[label],\n                name: name\n            },\n            value: item[value],\n            label: item[label],\n            key: item[key],\n            isFixed: item[isFixed],\n            isDisabled: item[isDisabled],\n        });\n    });\n    return optionArray;\n};\n\nexport const processMobileNumber = (value) => {\n\n    if (isValueIsNumber(value) && value.length === 10) {\n        let number = value.substring(1, 10);\n        return _.padStart(number, 12, '+94');\n    } else {\n        return value\n    }\n};\n\n\nexport const validateDateInput = (value) => {\n    let invalidDateObj = {\n        isValid: false,\n        errors: {\n            checkupDateStr: 'Invalid date'\n        }\n    };\n\n    let length = value ? value.length : 0;\n\n    let day = '', month = '', year = '';\n\n    if (length !== 8 && length !== 10 && length !== 16) {\n        return invalidDateObj;\n    }\n\n    if (length === 8) {\n        day = parseInt(value.substr(0, 2));\n        month = parseInt(value.substr(2, 2));\n        year = parseInt(value.substr(4, 4));\n    } else {\n        day = parseInt(value.substr(0, 2));\n        month = parseInt(value.substr(3, 2));\n        year = parseInt(value.substr(6, 4));\n    }\n\n    let currentDate = new Date();\n\n    if (currentDate.getUTCFullYear() < year) {\n        return invalidDateObj;\n    }\n\n    if (currentDate.getUTCFullYear() === year) {\n        if ((currentDate.getUTCMonth() + 1) < month) {\n            return invalidDateObj;\n        }\n    }\n\n    if (currentDate.getUTCFullYear() === year && (currentDate.getUTCMonth() + 1) === month) {\n        if (currentDate.getUTCDate() < day) {\n            return invalidDateObj;\n        }\n    }\n\n    if (_.isNaN(day) || _.isNaN(month) || _.isNaN(year)) {\n        return invalidDateObj;\n    }\n\n    return {\n        isValid: true,\n        errors: {}\n    };\n};\n\n"]},"metadata":{},"sourceType":"module"}