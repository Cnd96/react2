{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\config\\\\medicalTestRecords\\\\search\\\\components\\\\MedicalTestRecordResults.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setStorageItem } from \"../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport history from \"../../../../../../../@history\";\nimport { CAlert, CCard, CCardHeader, CCol, CRow } from \"@coreui/react\";\nimport { getActInaFromConstantForGrid, getCommonStringForGrid } from \"../../../../../../../utils/GridUtil\";\nimport AppPagination from \"../../../../../common/AppPagination\";\nimport * as Actions from '../../store/actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MedicalTestRecordResults = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = useSelector(_ref => {\n    let {\n      medicalTestRecords\n    } = _ref;\n    return medicalTestRecords.medicalTestRecordSearch;\n  });\n\n  const gotToAddEdit = recordID => {\n    setStorageItem(Constants.STORAGE.SELECTED_MEDICAL_TEST_RECORD_ID, recordID);\n    history.push({\n      pathname: Constants.PAGES.medicalTestRecordsAddEdit\n    });\n  };\n\n  const onPageDataChange = data => {\n    dispatch(Actions.setPageInfo(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CCard, {\n      children: /*#__PURE__*/_jsxDEV(CCardHeader, {\n        children: [data.pagedMedicalTestRecords.pageData && data.pagedMedicalTestRecords.pageData.length == 0 && /*#__PURE__*/_jsxDEV(CAlert, {\n          color: \"warning\",\n          children: \"No role(s) found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), data.pagedMedicalTestRecords.pageData && data.pagedMedicalTestRecords.pageData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                fontSize: '15px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Measurement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Report Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.pagedMedicalTestRecords.pageData.map(data => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: 'clickable-data-row',\n                onClick: e => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  gotToAddEdit(data.medicalTestRecordID);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getCommonStringForGrid(data.measurementName)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getCommonStringForGrid(data.testType)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getActInaFromConstantForGrid(data.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 41\n                }, this)]\n              }, data.medicalTestRecordID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CRow, {\n          children: /*#__PURE__*/_jsxDEV(CCol, {\n            xs: \"12\",\n            children: /*#__PURE__*/_jsxDEV(AppPagination, {\n              currentPageNo: data.pagedMedicalTestRecords.currentPageNo,\n              totalNoOfPages: data.pagedMedicalTestRecords.totalNoOfPages,\n              pageLength: data.pagedMedicalTestRecords.pageLength,\n              onPaginationChange: onPageDataChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MedicalTestRecordResults, \"VrJnXoQP2+XQ+/f/72CAYzsOD3w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MedicalTestRecordResults;\nexport default MedicalTestRecordResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicalTestRecordResults\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/medicalTestRecords/search/components/MedicalTestRecordResults.js"],"names":["React","useDispatch","useSelector","setStorageItem","Constants","history","CAlert","CCard","CCardHeader","CCol","CRow","getActInaFromConstantForGrid","getCommonStringForGrid","AppPagination","Actions","MedicalTestRecordResults","dispatch","data","medicalTestRecords","medicalTestRecordSearch","gotToAddEdit","recordID","STORAGE","SELECTED_MEDICAL_TEST_RECORD_ID","push","pathname","PAGES","medicalTestRecordsAddEdit","onPageDataChange","setPageInfo","pagedMedicalTestRecords","pageData","length","fontSize","map","e","preventDefault","stopPropagation","medicalTestRecordID","measurementName","testType","status","currentPageNo","totalNoOfPages","pageLength"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setStorageItem} from \"../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport history from \"../../../../../../../@history\";\nimport {CAlert, CCard, CCardHeader, CCol, CRow} from \"@coreui/react\";\nimport {getActInaFromConstantForGrid, getCommonStringForGrid} from \"../../../../../../../utils/GridUtil\";\nimport AppPagination from \"../../../../../common/AppPagination\";\nimport * as Actions from '../../store/actions/index'\n\nconst MedicalTestRecordResults = () => {\n\n    const dispatch = useDispatch();\n    const data = useSelector(({medicalTestRecords}) => medicalTestRecords.medicalTestRecordSearch);\n\n    const gotToAddEdit = (recordID) => {\n        setStorageItem(Constants.STORAGE.SELECTED_MEDICAL_TEST_RECORD_ID, recordID);\n        history.push({\n            pathname: Constants.PAGES.medicalTestRecordsAddEdit\n        });\n    };\n\n    const onPageDataChange = (data) => {\n        dispatch(Actions.setPageInfo(data));\n    };\n\n    return (\n        <div>\n            <CCard>\n                <CCardHeader>\n                    {\n                        data.pagedMedicalTestRecords.pageData && data.pagedMedicalTestRecords.pageData.length == 0 &&\n\n                        <CAlert color=\"warning\">\n                            No role(s) found.\n                        </CAlert>\n                    }\n                    {\n                        data.pagedMedicalTestRecords.pageData && data.pagedMedicalTestRecords.pageData.length > 0\n\n                        &&\n\n                        <table className=\"table\">\n                            <thead>\n                            <tr style={{fontSize: '15px'}}>\n                                <th>Measurement</th>\n                                <th>Report Type</th>\n                                <th>Status</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n\n                            {data.pagedMedicalTestRecords.pageData.map((data) => {\n                                return (\n                                    <tr key={data.medicalTestRecordID}\n                                        className={'clickable-data-row'}\n                                        onClick={(e) => {\n                                            e.preventDefault();\n                                            e.stopPropagation();\n                                            gotToAddEdit(data.medicalTestRecordID);\n                                        }}\n                                    >\n                                        <td>{getCommonStringForGrid(data.measurementName)}</td>\n                                        <td>{getCommonStringForGrid(data.testType)}</td>\n                                        <td>\n                                            {\n                                                getActInaFromConstantForGrid(data.status)\n                                            }\n                                        </td>\n                                    </tr>\n                                );\n                            })\n                            }\n                            </tbody>\n                        </table>\n                    }\n                    <CRow>\n                        <CCol xs=\"12\">\n                            <AppPagination\n                                currentPageNo={data.pagedMedicalTestRecords.currentPageNo}\n                                totalNoOfPages={data.pagedMedicalTestRecords.totalNoOfPages}\n                                pageLength={data.pagedMedicalTestRecords.pageLength}\n                                onPaginationChange={onPageDataChange}\n                            />\n                        </CCol>\n                    </CRow>\n                </CCardHeader>\n            </CCard>\n        </div>\n    );\n};\n\nexport default MedicalTestRecordResults;\n"]},"metadata":{},"sourceType":"module"}