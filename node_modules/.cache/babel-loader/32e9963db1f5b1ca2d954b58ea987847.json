{"ast":null,"code":"import * as Actions from '../../actions/notebook';\nimport * as _ from 'lodash';\nconst initialSettings = getInitialSettings();\nconst initialState = {\n  initial: initialSettings,\n  current: _.merge({}, initialSettings),\n  sidebarShow: 'responsive',\n  minimize: false\n};\n\nconst settings = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Actions.SET_SETTINGS:\n      {\n        let value = action.payload;\n\n        const newSettings = _.merge({}, state.current, value);\n\n        return { ...state,\n          current: newSettings\n        };\n      }\n\n    case Actions.RESET_DEFAULT_SETTINGS:\n      {\n        return { ...state,\n          current: _.merge({}, state.defaults)\n        };\n      }\n\n    case Actions.SET_SHOW_SIDE_BAR:\n      {\n        return { ...state,\n          sidebarShow: action.payload\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nfunction getInitialSettings() {\n  return {\n    settings: {\n      layout: {\n        adminSideMenu: {\n          display: false\n        },\n        adminTopMenu: {\n          display: false\n        },\n        publicSideMenu1: {\n          display: false\n        }\n      }\n    }\n  };\n}\n\nexport default settings;","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/store/reducers/notebook/settings.reducer.js"],"names":["Actions","_","initialSettings","getInitialSettings","initialState","initial","current","merge","sidebarShow","minimize","settings","state","action","type","SET_SETTINGS","value","payload","newSettings","RESET_DEFAULT_SETTINGS","defaults","SET_SHOW_SIDE_BAR","layout","adminSideMenu","display","adminTopMenu","publicSideMenu1"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,wBAAzB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AAEA,MAAMC,eAAe,GAAGC,kBAAkB,EAA1C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAEH,eADQ;AAEjBI,EAAAA,OAAO,EAAEL,CAAC,CAACM,KAAF,CAAQ,EAAR,EAAYL,eAAZ,CAFQ;AAGjBM,EAAAA,WAAW,EAAE,YAHI;AAIjBC,EAAAA,QAAQ,EAAE;AAJO,CAArB;;AAOA,MAAMC,QAAQ,GAAG,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBP,YAAsB;AAAA,MAARQ,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKb,OAAO,CAACc,YAAb;AAA2B;AACvB,YAAIC,KAAK,GAAGH,MAAM,CAACI,OAAnB;;AACA,cAAMC,WAAW,GAAGhB,CAAC,CAACM,KAAF,CAChB,EADgB,EAEhBI,KAAK,CAACL,OAFU,EAGhBS,KAHgB,CAApB;;AAKA,eAAO,EACH,GAAGJ,KADA;AAEHL,UAAAA,OAAO,EAAEW;AAFN,SAAP;AAIH;;AAED,SAAKjB,OAAO,CAACkB,sBAAb;AAAsC;AAClC,eAAO,EACH,GAAGP,KADA;AAEHL,UAAAA,OAAO,EAAEL,CAAC,CAACM,KAAF,CAAQ,EAAR,EAAYI,KAAK,CAACQ,QAAlB;AAFN,SAAP;AAIH;;AAED,SAAKnB,OAAO,CAACoB,iBAAb;AAAiC;AAC7B,eAAO,EACH,GAAGT,KADA;AAEHH,UAAAA,WAAW,EAAEI,MAAM,CAACI;AAFjB,SAAP;AAIH;;AAED;AAAS;AACL,eAAOL,KAAP;AACH;AA/BL;AAiCH,CAlCD;;AAoCA,SAASR,kBAAT,GAA8B;AAC1B,SAAO;AACHO,IAAAA,QAAQ,EAAE;AACNW,MAAAA,MAAM,EAAE;AACJC,QAAAA,aAAa,EAAE;AACXC,UAAAA,OAAO,EAAE;AADE,SADX;AAIJC,QAAAA,YAAY,EAAE;AACVD,UAAAA,OAAO,EAAE;AADC,SAJV;AAOJE,QAAAA,eAAe,EAAE;AACbF,UAAAA,OAAO,EAAE;AADI;AAPb;AADF;AADP,GAAP;AAeH;;AAED,eAAeb,QAAf","sourcesContent":["import * as Actions from '../../actions/notebook';\nimport * as _ from 'lodash';\n\nconst initialSettings = getInitialSettings();\n\nconst initialState = {\n    initial: initialSettings,\n    current: _.merge({}, initialSettings),\n    sidebarShow: 'responsive',\n    minimize: false,\n};\n\nconst settings = function (state = initialState, action) {\n    switch (action.type) {\n\n        case Actions.SET_SETTINGS: {\n            let value = action.payload;\n            const newSettings = _.merge(\n                {},\n                state.current,\n                value);\n\n            return {\n                ...state,\n                current: newSettings,\n            };\n        }\n\n        case Actions.RESET_DEFAULT_SETTINGS : {\n            return {\n                ...state,\n                current: _.merge({}, state.defaults),\n            };\n        }\n\n        case Actions.SET_SHOW_SIDE_BAR : {\n            return {\n                ...state,\n                sidebarShow: action.payload\n            }\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n\nfunction getInitialSettings() {\n    return {\n        settings: {\n            layout: {\n                adminSideMenu: {\n                    display: false\n                },\n                adminTopMenu: {\n                    display: false\n                },\n                publicSideMenu1: {\n                    display: false\n                }\n            }\n        }\n    };\n}\n\nexport default settings;\n"]},"metadata":{},"sourceType":"module"}