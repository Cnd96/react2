{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\config\\\\medicalDiseases\\\\search\\\\components\\\\MedicalDiseaseResult.js\";\nimport React, { Component } from 'react';\nimport * as Actions from \"../../store/action/index\";\nimport { bindActionCreators } from \"redux\";\nimport { CAlert, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport { getActInaFromConstantForGrid, getCommonStringForGrid } from \"../../../../../../../utils/GridUtil\";\nimport AppPagination from \"../../../../../common/AppPagination\";\nimport { connect } from \"react-redux\";\nimport { setStorageItem } from \"../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport history from '../../../../../../../@history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MedicalDiseaseResult extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageDataChange = data => {\n      this.props.setPageInfo(data);\n    };\n\n    this.gotToAddEdit = importerGroupID => {\n      setStorageItem(Constants.STORAGE.SELECTED_MEDICAL_DISEASE_ID, importerGroupID);\n      history.push({\n        pathname: Constants.PAGES.medicalDiseasesAddEdit\n      });\n    };\n  }\n\n  render() {\n    let {\n      pagedMedicalDisease\n    } = this.props;\n    pagedMedicalDisease = pagedMedicalDisease ? pagedMedicalDisease : {};\n    const hasData = pagedMedicalDisease.pageData && pagedMedicalDisease.pageData.length > 0;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          xs: \"12\",\n          children: /*#__PURE__*/_jsxDEV(CCard, {\n            children: /*#__PURE__*/_jsxDEV(CCardBody, {\n              children: [!hasData && /*#__PURE__*/_jsxDEV(CAlert, {\n                color: \"warning\",\n                children: \"No Disease(s) found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this), hasData && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"table table-striped\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Disease\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 52,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Description\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 53,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Status\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 54,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 51,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 50,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: pagedMedicalDisease.pageData.map(data => {\n                        return /*#__PURE__*/_jsxDEV(\"tr\", {\n                          className: 'clickable-data-row',\n                          onClick: e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            this.gotToAddEdit(data.medicalDiseaseID);\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getCommonStringForGrid(data.diseaseName)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 70,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getCommonStringForGrid(data.description)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 71,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getActInaFromConstantForGrid(data.status)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 72,\n                            columnNumber: 65\n                          }, this)]\n                        }, data.medicalDiseaseID, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 62,\n                          columnNumber: 61\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(CRow, {\n                  children: /*#__PURE__*/_jsxDEV(CCol, {\n                    xs: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(AppPagination, {\n                      currentPageNo: pagedMedicalDisease.currentPageNo,\n                      totalNoOfPages: pagedMedicalDisease.totalNoOfPages,\n                      pageLength: pagedMedicalDisease.pageLength,\n                      onPaginationChange: this.onPageDataChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setPageInfo: Actions.setPageInfo\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  let {\n    medicalDisease\n  } = _ref;\n  return {\n    pagedMedicalDisease: medicalDisease.medicalDiseaseSearch.pagedMedicalDisease\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MedicalDiseaseResult);","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/medicalDiseases/search/components/MedicalDiseaseResult.js"],"names":["React","Component","Actions","bindActionCreators","CAlert","CCard","CCardBody","CCol","CRow","getActInaFromConstantForGrid","getCommonStringForGrid","AppPagination","connect","setStorageItem","Constants","history","MedicalDiseaseResult","onPageDataChange","data","props","setPageInfo","gotToAddEdit","importerGroupID","STORAGE","SELECTED_MEDICAL_DISEASE_ID","push","pathname","PAGES","medicalDiseasesAddEdit","render","pagedMedicalDisease","hasData","pageData","length","map","e","preventDefault","stopPropagation","medicalDiseaseID","diseaseName","description","status","currentPageNo","totalNoOfPages","pageLength","mapDispatchToProps","dispatch","mapStateToProps","medicalDisease","medicalDiseaseSearch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as Actions from \"../../store/action/index\";\nimport {bindActionCreators} from \"redux\";\nimport {CAlert, CCard, CCardBody, CCol, CRow} from \"@coreui/react\";\nimport {getActInaFromConstantForGrid, getCommonStringForGrid} from \"../../../../../../../utils/GridUtil\";\nimport AppPagination from \"../../../../../common/AppPagination\";\nimport {connect} from \"react-redux\";\nimport {setStorageItem} from \"../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport history from '../../../../../../../@history';\n\nclass MedicalDiseaseResult extends Component {\n\n    onPageDataChange = (data) => {\n        this.props.setPageInfo(data);\n    };\n\n    gotToAddEdit = (importerGroupID) => {\n        setStorageItem(Constants.STORAGE.SELECTED_MEDICAL_DISEASE_ID, importerGroupID);\n        history.push({\n            pathname: Constants.PAGES.medicalDiseasesAddEdit\n        });\n    };\n\n    render() {\n\n        let {pagedMedicalDisease} = this.props;\n        pagedMedicalDisease = pagedMedicalDisease ? pagedMedicalDisease : {};\n        const hasData = pagedMedicalDisease.pageData && pagedMedicalDisease.pageData.length > 0;\n\n        return (\n            <>\n                <CRow>\n                    <CCol xs=\"12\">\n                        <CCard>\n                            <CCardBody>\n\n                                {\n                                    !hasData &&\n                                    <CAlert color=\"warning\">\n                                        No Disease(s) found.\n                                    </CAlert>\n                                }\n\n                                {\n                                    hasData &&\n                                    <>\n                                        <div className=\"table-responsive\">\n                                            <table className=\"table table-striped\">\n                                                <thead>\n                                                <tr>\n                                                    <th>Disease</th>\n                                                    <th>Description</th>\n                                                    <th>Status</th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n\n                                                {\n                                                    pagedMedicalDisease.pageData.map((data) => {\n                                                        return (\n                                                            <tr key={data.medicalDiseaseID}\n                                                                className={'clickable-data-row'}\n                                                                onClick={(e) => {\n                                                                    e.preventDefault();\n                                                                    e.stopPropagation();\n                                                                    this.gotToAddEdit(data.medicalDiseaseID);\n                                                                }}\n                                                            >\n                                                                <td>{getCommonStringForGrid(data.diseaseName)}</td>\n                                                                <td>{getCommonStringForGrid(data.description)}</td>\n                                                                <td>\n                                                                    {\n                                                                        getActInaFromConstantForGrid(data.status)\n                                                                    }\n                                                                </td>\n                                                            </tr>\n                                                        );\n                                                    })\n                                                }\n                                                </tbody>\n                                            </table>\n                                        </div>\n\n                                        <CRow>\n                                            <CCol xs=\"12\">\n                                                <AppPagination\n                                                    currentPageNo={pagedMedicalDisease.currentPageNo}\n                                                    totalNoOfPages={pagedMedicalDisease.totalNoOfPages}\n                                                    pageLength={pagedMedicalDisease.pageLength}\n                                                    onPaginationChange={this.onPageDataChange}\n                                                />\n                                            </CCol>\n                                        </CRow>\n                                    </>\n                                }\n\n                            </CCardBody>\n                        </CCard>\n                    </CCol>\n                </CRow>\n            </>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n            setPageInfo: Actions.setPageInfo,\n        },\n        dispatch);\n}\n\nfunction mapStateToProps({medicalDisease}) {\n    return {\n        pagedMedicalDisease: medicalDisease.medicalDiseaseSearch.pagedMedicalDisease\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MedicalDiseaseResult);"]},"metadata":{},"sourceType":"module"}