{"ast":null,"code":"import dataService from \"../../../../../../services/dataService\";\nimport prescriptionTemplateAppEndpoints from \"./prescription.template.app.endpoints\";\nexport const GET_PRESCRIPTION_TEMPLATE = '[PRESCRIPTION TEMPLATE ADD EDIT] GET_PRESCRIPTION_TEMPLATE';\nexport const ON_ADD_EDIT_FORM_CHANGE = '[PRESCRIPTION TEMPLATE ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_SAVE_UPDATE = '[PRESCRIPTION TEMPLATE ADD EDIT] ON_SAVE_UPDATE';\nexport const ON_RESET = '[PRESCRIPTION TEMPLATE ADD EDIT] ON_RESET';\nexport const ON_FORM_RESET = '[PRESCRIPTION TEMPLATE ADD EDIT] ON_FORM_RESET';\nexport const ON_SET_SELECTED_IDS = '[PRESCRIPTION TEMPLATE ADD EDIT] ON SET SELECTED IDS';\nexport const ON_ADD_MEDICINE = '[PRESCRIPTION TEMPLATE ADD EDIT] ON ADD MEDICINE';\nexport const GET_DOES_LIST = '[PRESCRIPTION TEMPLATE ADD EDIT] GET DOES LIST';\nexport const GET_MEAL_TIME_LIST = '[PRESCRIPTION TEMPLATE ADD EDIT] GET MEAL TIME LIST';\nexport const GET_FREQUENT_LIST = '[PRESCRIPTION TEMPLATE ADD EDIT] GET FREQUENT LIST';\nexport const GET_MEDICINE_VALUE_LIST = '[PRESCRIPTION TEMPLATE ADD EDIT] GET MEDICINE VALUE LIST';\nexport const ADD_TEMPLATE_MEDICINE = '[PRESCRIPTION TEMPLATE ADD EDIT] ADD TEMPLATE MEDICINE';\nexport const TOGGLE_STATE = '[PRESCRIPTION TEMPLATE ADD EDIT] TOGGLE_STATE';\nexport function getPrescriptionTemplateByID(categoryID) {\n  let endpoint = Object.assign({}, prescriptionTemplateAppEndpoints.getPrescriptionTemplateByID);\n  endpoint.url = endpoint.url + '/' + categoryID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_PRESCRIPTION_TEMPLATE,\n      payload: response.data.result\n    }));\n  };\n}\nexport function onFormChange(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_ADD_EDIT_FORM_CHANGE,\n      payload: data\n    });\n  };\n}\nexport function reset() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET,\n      payload: {}\n    });\n  };\n}\nexport function onFormReset() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_FORM_RESET,\n      payload: {}\n    });\n  };\n}\nexport function saveOrUpdatePrescriptionTemplate(data) {\n  const request = dataService.post(prescriptionTemplateAppEndpoints.saveOrUpdatePrescriptionTemplate, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: ON_SAVE_UPDATE,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function onSetSelectedIDs(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_SET_SELECTED_IDS,\n      payload: data\n    });\n  };\n}\nexport function onAddMedicine(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_ADD_MEDICINE,\n      payload: data\n    });\n  };\n}\nexport function getDoseList(data) {\n  const request = dataService.post(prescriptionTemplateAppEndpoints.getDoseListOptions, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_DOES_LIST,\n        payload: {\n          [data.medicineID]: response.data.result\n        }\n      });\n    });\n  };\n}\nexport function getMealTimeList(data) {\n  const request = dataService.post(prescriptionTemplateAppEndpoints.getMealTimeListOptions, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_MEAL_TIME_LIST,\n        payload: {\n          [data.medicineID]: response.data.result\n        }\n      });\n    });\n  };\n}\nexport function getFrequentList(data) {\n  const request = dataService.post(prescriptionTemplateAppEndpoints.getFrequentListOptions, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_FREQUENT_LIST,\n        payload: {\n          [data.medicineID]: response.data.result\n        }\n      });\n    });\n  };\n}\nexport function addTemplateMedicine(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_TEMPLATE_MEDICINE,\n      payload: data\n    });\n  };\n}\nexport function getMedicineValueList(data) {\n  const request = dataService.post(prescriptionTemplateAppEndpoints.getMedicineListOptions, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_MEDICINE_VALUE_LIST,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function toggleState(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: TOGGLE_STATE,\n      payload: data\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/prescriptionTemplate/store/actions/prescription.template.add.edit.action.js"],"names":["dataService","prescriptionTemplateAppEndpoints","GET_PRESCRIPTION_TEMPLATE","ON_ADD_EDIT_FORM_CHANGE","ON_SAVE_UPDATE","ON_RESET","ON_FORM_RESET","ON_SET_SELECTED_IDS","ON_ADD_MEDICINE","GET_DOES_LIST","GET_MEAL_TIME_LIST","GET_FREQUENT_LIST","GET_MEDICINE_VALUE_LIST","ADD_TEMPLATE_MEDICINE","TOGGLE_STATE","getPrescriptionTemplateByID","categoryID","endpoint","Object","assign","url","request","get","dispatch","getState","then","response","type","payload","data","result","onFormChange","reset","onFormReset","saveOrUpdatePrescriptionTemplate","post","onSetSelectedIDs","onAddMedicine","getDoseList","getDoseListOptions","medicineID","getMealTimeList","getMealTimeListOptions","getFrequentList","getFrequentListOptions","addTemplateMedicine","getMedicineValueList","getMedicineListOptions","toggleState"],"mappings":"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","sourcesContent":["import dataService from \"../../../../../../services/dataService\";\nimport prescriptionTemplateAppEndpoints from \"./prescription.template.app.endpoints\";\n\nexport const GET_PRESCRIPTION_TEMPLATE = '[PRESCRIPTION TEMPLATE ADD EDIT] GET_PRESCRIPTION_TEMPLATE';\nexport const ON_ADD_EDIT_FORM_CHANGE = '[PRESCRIPTION TEMPLATE ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_SAVE_UPDATE = '[PRESCRIPTION TEMPLATE ADD EDIT] ON_SAVE_UPDATE';\nexport const ON_RESET = '[PRESCRIPTION TEMPLATE ADD EDIT] ON_RESET';\nexport const ON_FORM_RESET = '[PRESCRIPTION TEMPLATE ADD EDIT] ON_FORM_RESET';\nexport const ON_SET_SELECTED_IDS = '[PRESCRIPTION TEMPLATE ADD EDIT] ON SET SELECTED IDS';\nexport const ON_ADD_MEDICINE = '[PRESCRIPTION TEMPLATE ADD EDIT] ON ADD MEDICINE';\nexport const GET_DOES_LIST = '[PRESCRIPTION TEMPLATE ADD EDIT] GET DOES LIST';\nexport const GET_MEAL_TIME_LIST = '[PRESCRIPTION TEMPLATE ADD EDIT] GET MEAL TIME LIST';\nexport const GET_FREQUENT_LIST = '[PRESCRIPTION TEMPLATE ADD EDIT] GET FREQUENT LIST';\nexport const GET_MEDICINE_VALUE_LIST = '[PRESCRIPTION TEMPLATE ADD EDIT] GET MEDICINE VALUE LIST';\nexport const ADD_TEMPLATE_MEDICINE = '[PRESCRIPTION TEMPLATE ADD EDIT] ADD TEMPLATE MEDICINE';\nexport const TOGGLE_STATE = '[PRESCRIPTION TEMPLATE ADD EDIT] TOGGLE_STATE';\n\n\nexport function getPrescriptionTemplateByID(categoryID) {\n\n    let endpoint = Object.assign({}, prescriptionTemplateAppEndpoints.getPrescriptionTemplateByID);\n    endpoint.url = endpoint.url + '/' + categoryID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_PRESCRIPTION_TEMPLATE,\n                payload: response.data.result\n            })\n        );\n    };\n\n}\n\nexport function onFormChange(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_ADD_EDIT_FORM_CHANGE,\n            payload: data\n        })\n    };\n}\n\nexport function reset() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET,\n            payload: {}\n        })\n    };\n}\n\nexport function onFormReset() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_FORM_RESET,\n            payload: {}\n        })\n    };\n}\n\nexport function saveOrUpdatePrescriptionTemplate(data) {\n    const request = dataService.post(prescriptionTemplateAppEndpoints.saveOrUpdatePrescriptionTemplate, data);\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: ON_SAVE_UPDATE,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function onSetSelectedIDs(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_SET_SELECTED_IDS,\n            payload: data\n        })\n    };\n}\n\nexport function onAddMedicine(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_ADD_MEDICINE,\n            payload: data\n        })\n    };\n}\n\n\nexport function getDoseList(data) {\n    const request = dataService.post(prescriptionTemplateAppEndpoints.getDoseListOptions, data);\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: GET_DOES_LIST,\n                    payload: {[data.medicineID]: response.data.result}\n                });\n            }\n        );\n    };\n}\n\nexport function getMealTimeList(data) {\n    const request = dataService.post(prescriptionTemplateAppEndpoints.getMealTimeListOptions, data);\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: GET_MEAL_TIME_LIST,\n                    payload: {[data.medicineID]: response.data.result}\n                });\n            }\n        );\n    };\n}\n\nexport function getFrequentList(data) {\n    const request = dataService.post(prescriptionTemplateAppEndpoints.getFrequentListOptions, data);\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: GET_FREQUENT_LIST,\n                    payload: {[data.medicineID]: response.data.result}\n                });\n            }\n        );\n    };\n}\n\nexport function addTemplateMedicine(data) {\n\n    return (dispatch, getState) => {\n        dispatch({\n            type: ADD_TEMPLATE_MEDICINE,\n            payload: data\n        })\n    };\n}\n\nexport function getMedicineValueList(data) {\n    const request = dataService.post(prescriptionTemplateAppEndpoints.getMedicineListOptions, data);\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: GET_MEDICINE_VALUE_LIST,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\n\nexport function toggleState(data) {\n\n    return (dispatch, getState) => {\n        dispatch({\n            type: TOGGLE_STATE,\n            payload: data\n        })\n    };\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}