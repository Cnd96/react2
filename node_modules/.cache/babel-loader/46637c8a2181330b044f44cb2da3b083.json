{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\medicalTests\\\\components\\\\MedicalTestTabBody.js\";\nimport React from 'react';\nimport { CCard, CCardBody, CCol, CRow, CTabPane } from \"@coreui/react\";\nimport MedicalTestRecord from \"./MedicalTestRecord\";\nimport Constants from \"../../../../../../../../../utils/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MedicalTestTabBody = _ref => {\n  let {\n    medicalTestType\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(CTabPane, {\n    \"data-tab\": `${medicalTestType.medicalTestTypeID}`,\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: /*#__PURE__*/_jsxDEV(CCol, {\n        xs: \"12\",\n        children: /*#__PURE__*/_jsxDEV(CCard, {\n          children: /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table medical-test-record-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: '50%'\n                    },\n                    children: \"Measurement\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 16,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: '30%'\n                    },\n                    children: \"Value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 17,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: '20%'\n                    },\n                    children: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 18,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 15,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: medicalTestType.medicalTestRecords.filter(medicalTestRecord => medicalTestRecord.status === Constants.STATUS_CONST.ACT).sort((a, b) => parseFloat(a.medicalTestRecordID) - parseFloat(b.medicalTestRecordID)).map((medicalTestRecord, index) => {\n                  return /*#__PURE__*/_jsxDEV(MedicalTestRecord, {\n                    medicalTestRecord: medicalTestRecord\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 25,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MedicalTestTabBody;\nexport default MedicalTestTabBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicalTestTabBody\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/medicalTests/components/MedicalTestTabBody.js"],"names":["React","CCard","CCardBody","CCol","CRow","CTabPane","MedicalTestRecord","Constants","MedicalTestTabBody","medicalTestType","medicalTestTypeID","width","medicalTestRecords","filter","medicalTestRecord","status","STATUS_CONST","ACT","sort","a","b","parseFloat","medicalTestRecordID","map","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,QAAtC,QAAqD,eAArD;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,4CAAtB;;;AAEA,MAAMC,kBAAkB,GAAG,QAAuB;AAAA,MAAtB;AAACC,IAAAA;AAAD,GAAsB;AAC9C,sBACI,QAAC,QAAD;AAAU,gBAAW,GAAEA,eAAe,CAACC,iBAAkB,EAAzD;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,IAAT;AAAA,+BACI,QAAC,KAAD;AAAA,iCACI,QAAC,SAAD;AAAA,mCACI;AAAO,cAAA,SAAS,EAAC,iCAAjB;AAAA,sCACI;AAAA,uCACA;AAAA,0CACI;AAAI,oBAAA,KAAK,EAAE;AAACC,sBAAAA,KAAK,EAAC;AAAP,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAI,oBAAA,KAAK,EAAE;AAACA,sBAAAA,KAAK,EAAC;AAAP,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAI,oBAAA,KAAK,EAAE;AAACA,sBAAAA,KAAK,EAAC;AAAP,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI;AAAA,0BAEIF,eAAe,CAACG,kBAAhB,CAAmCC,MAAnC,CAA0CC,iBAAiB,IAAIA,iBAAiB,CAACC,MAAlB,KAA6BR,SAAS,CAACS,YAAV,CAAuBC,GAAnH,EAAwHC,IAAxH,CAA6H,CAACC,CAAD,EAAIC,CAAJ,KAAUC,UAAU,CAACF,CAAC,CAACG,mBAAH,CAAV,GAAoCD,UAAU,CAACD,CAAC,CAACE,mBAAH,CAArL,EAA8MC,GAA9M,CAAkN,CAACT,iBAAD,EAAoBU,KAApB,KAA8B;AAC5O,sCACI,QAAC,iBAAD;AAAmB,oBAAA,iBAAiB,EAAEV;AAAtC,qBAA8DU,KAA9D;AAAA;AAAA;AAAA;AAAA,0BADJ;AAGH,iBAJD;AAFJ;AAAA;AAAA;AAAA;AAAA,sBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CA/BD;;KAAMhB,kB;AAiCN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport {CCard, CCardBody, CCol, CRow, CTabPane} from \"@coreui/react\";\nimport MedicalTestRecord from \"./MedicalTestRecord\";\nimport Constants from \"../../../../../../../../../utils/Constants\";\n\nconst MedicalTestTabBody = ({medicalTestType}) => {\n    return (\n        <CTabPane data-tab={`${medicalTestType.medicalTestTypeID}`}>\n            <CRow>\n                <CCol xs=\"12\">\n                    <CCard>\n                        <CCardBody>\n                            <table className=\"table medical-test-record-table\">\n                                <thead>\n                                <tr>\n                                    <th style={{width:'50%'}}>Measurement</th>\n                                    <th style={{width:'30%'}}>Value</th>\n                                    <th style={{width:'20%'}}>Unit</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {\n                                    medicalTestType.medicalTestRecords.filter(medicalTestRecord => medicalTestRecord.status === Constants.STATUS_CONST.ACT).sort((a, b) => parseFloat(a.medicalTestRecordID) - parseFloat(b.medicalTestRecordID)).map((medicalTestRecord, index) => {\n                                        return (\n                                            <MedicalTestRecord medicalTestRecord={medicalTestRecord} key={index}/>\n                                        )\n                                    })\n                                }\n                                </tbody>\n                            </table>\n                        </CCardBody>\n                    </CCard>\n                </CCol>\n            </CRow>\n        </CTabPane>\n    );\n};\n\nexport default MedicalTestTabBody;\n"]},"metadata":{},"sourceType":"module"}