{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\selectPhysicalActivities\\\\SelectPhysicalActivities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport NextPrevButtonGroup from \"../../../../../../common/NextPrevButtonGroup\";\nimport * as Actions from \"./store/actions\";\nimport * as CheckupAction from '../../stepComponents/createCheckUp/store/action/checkup.app.add.edit.action';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport withReducer from \"../../../../../../../store/withReducer\";\nimport reducer from \"./store/reducers\";\nimport PhysicalActivitiesCategories from \"./components/PhysicalActivitiesCategories\";\nimport * as _ from \"lodash\";\nimport { trimData } from \"../../../../../../../../utils/DataExtractHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generateSaveObject = (physicalActivitiesData, checkup) => {\n  let removedIDList = _.difference(physicalActivitiesData.prevPhysicalActivityIds, physicalActivitiesData.currentIDs);\n\n  let addedIDList = _.difference(physicalActivitiesData.currentIDs, physicalActivitiesData.prevPhysicalActivityIds);\n\n  return Object.assign({}, {\n    addedIDList: addedIDList,\n    removedIDList: removedIDList\n  }, {\n    checkupID: checkup.checkupID ? checkup.checkupID : null\n  });\n};\n\nconst SelectPhysicalActivities = _ref => {\n  _s();\n\n  let {\n    setPageIndex,\n    nextPageIndex,\n    prevPageIndex\n  } = _ref;\n  let dispatch = useDispatch();\n  const physicalActivitiesData = useSelector(_ref2 => {\n    let {\n      selectPhysicalActivities\n    } = _ref2;\n    return selectPhysicalActivities.selectPhysicalActivity;\n  });\n  const checkupData = useSelector(_ref3 => {\n    let {\n      checkup\n    } = _ref3;\n    return checkup.checkupAddEdit;\n  });\n  useEffect(() => {\n    dispatch(Actions.getPhysicalActivityCategories());\n  }, []);\n  useEffect(() => {\n    dispatch(Actions.setCheckupPhysicalActivityIds(checkupData.checkup.physicalActivities));\n  }, [dispatch, checkupData]);\n\n  const saveFunction = () => {\n    let saveObj = generateSaveObject(physicalActivitiesData, checkupData.checkup);\n\n    if (saveObj.removedIDList.length > 0 || saveObj.addedIDList.length > 0) {\n      dispatch(Actions.saveOrUpdateCheckupWithPhysicalActivities(trimData(saveObj))).then(response => {\n        dispatch(CheckupAction.onSetCheckup(response.payload));\n        setPageIndex(nextPageIndex);\n      });\n    } else {\n      setPageIndex(nextPageIndex);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Physical Activities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NextPrevButtonGroup, {\n      setPageIndex: setPageIndex,\n      prevPageIndex: prevPageIndex,\n      saveFunction: saveFunction,\n      isValid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), physicalActivitiesData.physicalActivityCategories && physicalActivitiesData.physicalActivityCategories.map((physicalActivityCategory, index) => {\n      return /*#__PURE__*/_jsxDEV(PhysicalActivitiesCategories, {\n        physicalActivityCategory: physicalActivityCategory\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 28\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(NextPrevButtonGroup, {\n      setPageIndex: setPageIndex,\n      prevPageIndex: prevPageIndex,\n      saveFunction: saveFunction,\n      isValid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectPhysicalActivities, \"nBFGu+jW1Fo5lD+TxPN/Zuxlx0U=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SelectPhysicalActivities;\nexport default withReducer('selectPhysicalActivities', reducer)(SelectPhysicalActivities);\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectPhysicalActivities\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/selectPhysicalActivities/SelectPhysicalActivities.js"],"names":["React","useEffect","NextPrevButtonGroup","Actions","CheckupAction","useDispatch","useSelector","withReducer","reducer","PhysicalActivitiesCategories","_","trimData","generateSaveObject","physicalActivitiesData","checkup","removedIDList","difference","prevPhysicalActivityIds","currentIDs","addedIDList","Object","assign","checkupID","SelectPhysicalActivities","setPageIndex","nextPageIndex","prevPageIndex","dispatch","selectPhysicalActivities","selectPhysicalActivity","checkupData","checkupAddEdit","getPhysicalActivityCategories","setCheckupPhysicalActivityIds","physicalActivities","saveFunction","saveObj","length","saveOrUpdateCheckupWithPhysicalActivities","then","response","onSetCheckup","payload","physicalActivityCategories","map","physicalActivityCategory","index"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport NextPrevButtonGroup from \"../../../../../../common/NextPrevButtonGroup\";\nimport * as Actions from \"./store/actions\";\nimport * as CheckupAction from '../../stepComponents/createCheckUp/store/action/checkup.app.add.edit.action'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport withReducer from \"../../../../../../../store/withReducer\";\nimport reducer from \"./store/reducers\";\nimport PhysicalActivitiesCategories from \"./components/PhysicalActivitiesCategories\";\nimport * as _ from \"lodash\";\nimport {trimData} from \"../../../../../../../../utils/DataExtractHelper\";\n\nconst generateSaveObject = (physicalActivitiesData, checkup) => {\n\n    let removedIDList = _.difference(physicalActivitiesData.prevPhysicalActivityIds, physicalActivitiesData.currentIDs);\n    let addedIDList = _.difference(physicalActivitiesData.currentIDs, physicalActivitiesData.prevPhysicalActivityIds);\n    return Object.assign({}, {\n        addedIDList: addedIDList,\n        removedIDList: removedIDList\n    }, {checkupID: checkup.checkupID ? checkup.checkupID : null});\n};\n\nconst SelectPhysicalActivities = ({setPageIndex, nextPageIndex, prevPageIndex}) => {\n\n    let dispatch = useDispatch();\n    const physicalActivitiesData = useSelector(({selectPhysicalActivities}) => selectPhysicalActivities.selectPhysicalActivity);\n    const checkupData = useSelector(({checkup}) => checkup.checkupAddEdit);\n\n    useEffect(() => {\n        dispatch(Actions.getPhysicalActivityCategories());\n    }, []);\n\n\n    useEffect(() => {\n        dispatch(Actions.setCheckupPhysicalActivityIds(checkupData.checkup.physicalActivities));\n    }, [dispatch, checkupData]);\n\n\n    const saveFunction = () => {\n        let saveObj = generateSaveObject(physicalActivitiesData, checkupData.checkup);\n        if (saveObj.removedIDList.length > 0 || saveObj.addedIDList.length > 0) {\n            dispatch(Actions.saveOrUpdateCheckupWithPhysicalActivities(trimData(saveObj))).then(response => {\n                dispatch(CheckupAction.onSetCheckup(response.payload));\n                setPageIndex(nextPageIndex);\n            })\n        } else {\n            setPageIndex(nextPageIndex);\n        }\n    };\n\n    return (\n        <div>\n            <h5>Physical Activities</h5>\n            <NextPrevButtonGroup\n                setPageIndex={setPageIndex}\n                prevPageIndex={prevPageIndex}\n                saveFunction={saveFunction}\n                isValid={true}\n            />\n\n            {\n                physicalActivitiesData.physicalActivityCategories &&\n                physicalActivitiesData.physicalActivityCategories.map((physicalActivityCategory, index) => {\n                    return <PhysicalActivitiesCategories key={index}\n                                                         physicalActivityCategory={physicalActivityCategory}/>\n                })\n            }\n\n            <NextPrevButtonGroup\n                setPageIndex={setPageIndex}\n                prevPageIndex={prevPageIndex}\n                saveFunction={saveFunction}\n                isValid={true}\n            />\n        </div>\n    );\n};\n\nexport default withReducer('selectPhysicalActivities', reducer)(SelectPhysicalActivities);"]},"metadata":{},"sourceType":"module"}