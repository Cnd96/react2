{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\allergyHistory\\\\components\\\\addEdit\\\\AllergyHistoryAddEditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Constants from \"../../../../../../../../../../utils/Constants\";\nimport { Field, Form, Formik } from \"formik\";\nimport { CButton, CCol, CFormGroup, CLabel, CRow, CTooltip } from \"@coreui/react\";\nimport { getConstantValueForSearch, getInputFieldClassNames } from \"../../../../../../../../../../utils/FormUtils\";\nimport NextPrevButtonGroup from \"../../../../../../../../common/NextPrevButtonGroup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Action from \"../../store/actions/index\";\nimport { getStorageItem, setStorageItem } from \"../../../../../../../../../../utils/StorageUtils\";\nimport customValidator from \"../../../../../../../../../../utils/ValidationUtil\";\nimport withReducer from \"../../../../../../../../../store/withReducer\";\nimport reducer from \"../../store/reducers\";\nimport { getPagedDataFromState, trimData } from \"../../../../../../../../../../utils/DataExtractHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getValidations = () => {\n  return {\n    status: {\n      required: {\n        message: 'Required'\n      }\n    },\n    allergyDescription: {\n      required: {\n        message: 'Required'\n      }\n    }\n  };\n};\n\nconst initValues = {\n  allergyHistoryID: '',\n  patientID: '',\n  allergyDescription: '',\n  status: Constants.STATUS_CONST.ACT\n};\n\nconst generateSaveObject = data => {\n  let allergyHistory = data.allergyHistory;\n  let patientID = getStorageItem(Constants.STORAGE.PATIENT_ID);\n  let saveObj = Object.assign({}, { ...allergyHistory\n  }, data.formData.values, {\n    status: Constants.STATUS_CONST.ACT\n  }, {\n    allergyHistoryID: allergyHistory.allergyHistoryID\n  }, {\n    patientID\n  });\n  return trimData(saveObj);\n};\n\nconst AllergyHistoryAddEditForm = _ref => {\n  _s();\n\n  let {\n    setPageIndex,\n    nextPageIndex,\n    prevPageIndex\n  } = _ref;\n  const dispatch = useDispatch();\n  const data = useSelector(_ref2 => {\n    let {\n      allergyHistory\n    } = _ref2;\n    return allergyHistory.allergyHistoryAddEdit;\n  });\n  const searchStoreData = useSelector(_ref3 => {\n    let {\n      allergyHistory\n    } = _ref3;\n    return allergyHistory.allergyHistorySearch;\n  });\n  const [allergyHistory, setAllergyHistory] = useState(initValues);\n  useEffect(() => {\n    let allergyHistory = data.allergyHistory;\n    let initData = {\n      allergyHistoryID: allergyHistory.allergyHistoryID ? allergyHistory.allergyHistoryID : initValues.allergyHistoryID,\n      patientID: allergyHistory.patientID ? allergyHistory.patientID : initValues.patientID,\n      allergyDescription: allergyHistory.allergyDescription ? allergyHistory.allergyDescription : initValues.allergyDescription,\n      status: allergyHistory.status ? allergyHistory.status : initValues.status\n    };\n    setAllergyHistory(initData);\n  }, [dispatch, data.allergyHistory]);\n  useEffect(() => {\n    let allergyHistory = data.allergyHistory;\n    let initData = {\n      allergyHistoryID: allergyHistory.allergyHistoryID ? allergyHistory.allergyHistoryID : initValues.allergyHistoryID,\n      patientID: allergyHistory.patientID ? allergyHistory.patientID : initValues.patientID,\n      allergyDescription: allergyHistory.allergyDescription ? allergyHistory.allergyDescription : initValues.allergyDescription,\n      status: allergyHistory.status ? allergyHistory.status : initValues.status\n    };\n    onCustomValidation(initData);\n  }, [data.allergyHistory]);\n  useEffect(() => {\n    return () => {\n      dispatch(Action.onResetForm());\n    };\n  }, []);\n\n  const saveFunction = () => {\n    let saveObject = generateSaveObject(data);\n\n    if (saveObject.patientID) {\n      dispatch(Action.saveOrUpdateAllergyHistory(saveObject)).then(response => {\n        setStorageItem(Constants.STORAGE.ALLERGY_HISTORY_ID, response.payload.allergyHistoryID);\n        dispatch(Action.onResetForm());\n      });\n    }\n\n    setPageIndex(nextPageIndex);\n  };\n\n  const update = () => {\n    let saveObject = generateSaveObject(data);\n    dispatch(Action.saveOrUpdateAllergyHistoryWithMessage(saveObject)).then(re => {\n      onSearch();\n    });\n  };\n\n  let onSearch = () => {\n    let pageInfo = searchStoreData.pageInfo;\n    let formData = searchStoreData.searchData;\n    let pageData = getPagedDataFromState(pageInfo);\n    let searchData = { ...pageData,\n      ...formData,\n      patientID: getStorageItem(Constants.STORAGE.PATIENT_ID),\n      status: getConstantValueForSearch(formData.status, Constants.STATUS_CONST.ACT)\n    };\n    dispatch(Action.getPagedAllergyHistory(searchData));\n  };\n\n  const reset = () => {\n    dispatch(Action.onResetForm());\n  };\n\n  const onCustomValidation = values => {\n    let validate = customValidator(values, getValidations());\n    dispatch(Action.onFormChange({\n      isValid: validate.isValid,\n      values: values\n    }));\n    return validate.errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      enableReinitialize: true,\n      initialValues: allergyHistory,\n      onSubmit: (values, _ref4) => {\n        let {\n          setSubmitting\n        } = _ref4;\n        setTimeout(() => {\n          setSubmitting(false);\n        }, 200);\n      },\n      validateOnChange: true,\n      validate: values => {\n        return onCustomValidation(values);\n      },\n      children: _ref5 => {\n        let {\n          errors,\n          touched\n        } = _ref5;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"12\",\n              children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                  htmlFor: \"allergyDescription\",\n                  children: [\"Allergy History\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"margin-left-10\",\n                    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                      children: [data && data.allergyHistory && data.allergyHistory.allergyHistoryID && /*#__PURE__*/_jsxDEV(CTooltip, {\n                        content: 'Update Allergy',\n                        placement: 'left-start',\n                        children: /*#__PURE__*/_jsxDEV(CButton, {\n                          disabled: !data.formData.isValid,\n                          type: \"button\",\n                          onClick: e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            update();\n                          },\n                          color: \"success\",\n                          className: \" mr-2\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fa fa-floppy-o\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 183,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 172,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(CTooltip, {\n                        content: 'Reset',\n                        placement: 'left-start',\n                        children: /*#__PURE__*/_jsxDEV(CButton, {\n                          type: \"button\",\n                          onClick: e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            reset();\n                          },\n                          color: \"warning\",\n                          className: \" mr-2\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fa fa-refresh\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 202,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 192,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 53\n                      }, this), data && data.allergyHistory && !data.allergyHistory.allergyHistoryID && /*#__PURE__*/_jsxDEV(CTooltip, {\n                        content: 'Save Allergy',\n                        placement: 'left-start',\n                        children: /*#__PURE__*/_jsxDEV(CButton, {\n                          type: \"button\",\n                          disabled: !data.formData.isValid,\n                          onClick: e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            update();\n                          },\n                          color: \"info\",\n                          className: \" mr-2\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fa fa-floppy-o\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 224,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 213,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  rows: \"5\",\n                  cols: \"120\",\n                  name: \"allergyDescription\",\n                  placeholder: 'Allergy Description',\n                  className: getInputFieldClassNames(touched.indication, errors.indication),\n                  as: \"textarea\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AllergyHistoryAddEditForm, \"6ziNMsHSuW7YDLmx9SZMwgDDG/o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AllergyHistoryAddEditForm;\nexport default withReducer('allergyHistory', reducer)(AllergyHistoryAddEditForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AllergyHistoryAddEditForm\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/allergyHistory/components/addEdit/AllergyHistoryAddEditForm.js"],"names":["React","useEffect","useState","Constants","Field","Form","Formik","CButton","CCol","CFormGroup","CLabel","CRow","CTooltip","getConstantValueForSearch","getInputFieldClassNames","NextPrevButtonGroup","useDispatch","useSelector","Action","getStorageItem","setStorageItem","customValidator","withReducer","reducer","getPagedDataFromState","trimData","getValidations","status","required","message","allergyDescription","initValues","allergyHistoryID","patientID","STATUS_CONST","ACT","generateSaveObject","data","allergyHistory","STORAGE","PATIENT_ID","saveObj","Object","assign","formData","values","AllergyHistoryAddEditForm","setPageIndex","nextPageIndex","prevPageIndex","dispatch","allergyHistoryAddEdit","searchStoreData","allergyHistorySearch","setAllergyHistory","initData","onCustomValidation","onResetForm","saveFunction","saveObject","saveOrUpdateAllergyHistory","then","response","ALLERGY_HISTORY_ID","payload","update","saveOrUpdateAllergyHistoryWithMessage","re","onSearch","pageInfo","searchData","pageData","getPagedAllergyHistory","reset","validate","onFormChange","isValid","errors","setSubmitting","setTimeout","touched","e","preventDefault","stopPropagation","indication"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,+CAAtB;AACA,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,MAArB,QAAkC,QAAlC;AACA,SAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,MAAnC,EAA2CC,IAA3C,EAAiDC,QAAjD,QAAgE,eAAhE;AACA,SAAQC,yBAAR,EAAmCC,uBAAnC,QAAiE,+CAAjE;AACA,OAAOC,mBAAP,MAAgC,oDAAhC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,KAAKC,MAAZ,MAAwB,2BAAxB;AACA,SAAQC,cAAR,EAAwBC,cAAxB,QAA6C,kDAA7C;AACA,OAAOC,eAAP,MAA4B,oDAA5B;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,qBAAR,EAA+BC,QAA/B,QAA8C,uDAA9C;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,SAAO;AACHC,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV;AADN,KADL;AAIHC,IAAAA,kBAAkB,EAAE;AAChBF,MAAAA,QAAQ,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV;AADM;AAJjB,GAAP;AAQH,CATD;;AAWA,MAAME,UAAU,GAAG;AACfC,EAAAA,gBAAgB,EAAE,EADH;AAEfC,EAAAA,SAAS,EAAE,EAFI;AAGfH,EAAAA,kBAAkB,EAAE,EAHL;AAIfH,EAAAA,MAAM,EAAExB,SAAS,CAAC+B,YAAV,CAAuBC;AAJhB,CAAnB;;AAOA,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACjC,MAAIC,cAAc,GAAGD,IAAI,CAACC,cAA1B;AACA,MAAIL,SAAS,GAAGd,cAAc,CAAChB,SAAS,CAACoC,OAAV,CAAkBC,UAAnB,CAA9B;AACA,MAAIC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EACV,EAAC,GAAGL;AAAJ,GADU,EAEVD,IAAI,CAACO,QAAL,CAAcC,MAFJ,EAGV;AAAClB,IAAAA,MAAM,EAAExB,SAAS,CAAC+B,YAAV,CAAuBC;AAAhC,GAHU,EAIV;AAACH,IAAAA,gBAAgB,EAAEM,cAAc,CAACN;AAAlC,GAJU,EAKV;AAACC,IAAAA;AAAD,GALU,CAAd;AAOA,SAAOR,QAAQ,CAACgB,OAAD,CAAf;AACH,CAXD;;AAaA,MAAMK,yBAAyB,GAAG,QAAkD;AAAA;;AAAA,MAAjD;AAACC,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,GAAiD;AAChF,QAAMC,QAAQ,GAAGlC,WAAW,EAA5B;AACA,QAAMqB,IAAI,GAAGpB,WAAW,CAAC;AAAA,QAAC;AAACqB,MAAAA;AAAD,KAAD;AAAA,WAAsBA,cAAc,CAACa,qBAArC;AAAA,GAAD,CAAxB;AACA,QAAMC,eAAe,GAAGnC,WAAW,CAAC;AAAA,QAAC;AAACqB,MAAAA;AAAD,KAAD;AAAA,WAAsBA,cAAc,CAACe,oBAArC;AAAA,GAAD,CAAnC;AAEA,QAAM,CAACf,cAAD,EAAiBgB,iBAAjB,IAAsCpD,QAAQ,CAAC6B,UAAD,CAApD;AAEA9B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqC,cAAc,GAAGD,IAAI,CAACC,cAA1B;AACA,QAAIiB,QAAQ,GAAG;AACXvB,MAAAA,gBAAgB,EAAEM,cAAc,CAACN,gBAAf,GAAkCM,cAAc,CAACN,gBAAjD,GAAoED,UAAU,CAACC,gBADtF;AAEXC,MAAAA,SAAS,EAAEK,cAAc,CAACL,SAAf,GAA2BK,cAAc,CAACL,SAA1C,GAAsDF,UAAU,CAACE,SAFjE;AAGXH,MAAAA,kBAAkB,EAAEQ,cAAc,CAACR,kBAAf,GAAoCQ,cAAc,CAACR,kBAAnD,GAAwEC,UAAU,CAACD,kBAH5F;AAIXH,MAAAA,MAAM,EAAEW,cAAc,CAACX,MAAf,GAAwBW,cAAc,CAACX,MAAvC,GAAgDI,UAAU,CAACJ;AAJxD,KAAf;AAMA2B,IAAAA,iBAAiB,CAACC,QAAD,CAAjB;AACH,GATQ,EASN,CAACL,QAAD,EAAWb,IAAI,CAACC,cAAhB,CATM,CAAT;AAWArC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqC,cAAc,GAAGD,IAAI,CAACC,cAA1B;AACA,QAAIiB,QAAQ,GAAG;AACXvB,MAAAA,gBAAgB,EAAEM,cAAc,CAACN,gBAAf,GAAkCM,cAAc,CAACN,gBAAjD,GAAoED,UAAU,CAACC,gBADtF;AAEXC,MAAAA,SAAS,EAAEK,cAAc,CAACL,SAAf,GAA2BK,cAAc,CAACL,SAA1C,GAAsDF,UAAU,CAACE,SAFjE;AAGXH,MAAAA,kBAAkB,EAAEQ,cAAc,CAACR,kBAAf,GAAoCQ,cAAc,CAACR,kBAAnD,GAAwEC,UAAU,CAACD,kBAH5F;AAIXH,MAAAA,MAAM,EAAEW,cAAc,CAACX,MAAf,GAAwBW,cAAc,CAACX,MAAvC,GAAgDI,UAAU,CAACJ;AAJxD,KAAf;AAMA6B,IAAAA,kBAAkB,CAACD,QAAD,CAAlB;AACH,GATQ,EASN,CAAClB,IAAI,CAACC,cAAN,CATM,CAAT;AAWArC,EAAAA,SAAS,CAAC,MAAM;AACZ,WACI,MAAM;AACFiD,MAAAA,QAAQ,CAAChC,MAAM,CAACuC,WAAP,EAAD,CAAR;AACH,KAHL;AAKH,GANQ,EAMN,EANM,CAAT;;AASA,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAIC,UAAU,GAAGvB,kBAAkB,CAACC,IAAD,CAAnC;;AACA,QAAIsB,UAAU,CAAC1B,SAAf,EAA0B;AACtBiB,MAAAA,QAAQ,CAAChC,MAAM,CAAC0C,0BAAP,CAAkCD,UAAlC,CAAD,CAAR,CAAwDE,IAAxD,CAA6DC,QAAQ,IAAI;AACrE1C,QAAAA,cAAc,CAACjB,SAAS,CAACoC,OAAV,CAAkBwB,kBAAnB,EAAuCD,QAAQ,CAACE,OAAT,CAAiBhC,gBAAxD,CAAd;AACAkB,QAAAA,QAAQ,CAAChC,MAAM,CAACuC,WAAP,EAAD,CAAR;AACH,OAHD;AAIH;;AACDV,IAAAA,YAAY,CAACC,aAAD,CAAZ;AACH,GATD;;AAWA,QAAMiB,MAAM,GAAG,MAAM;AACjB,QAAIN,UAAU,GAAGvB,kBAAkB,CAACC,IAAD,CAAnC;AACAa,IAAAA,QAAQ,CAAChC,MAAM,CAACgD,qCAAP,CAA6CP,UAA7C,CAAD,CAAR,CAAmEE,IAAnE,CACIM,EAAE,IAAI;AACFC,MAAAA,QAAQ;AACX,KAHL;AAKH,GAPD;;AASA,MAAIA,QAAQ,GAAG,MAAM;AACjB,QAAIC,QAAQ,GAAGjB,eAAe,CAACiB,QAA/B;AACA,QAAIzB,QAAQ,GAAGQ,eAAe,CAACkB,UAA/B;AACA,QAAIC,QAAQ,GAAG/C,qBAAqB,CAAC6C,QAAD,CAApC;AACA,QAAIC,UAAU,GAAG,EACb,GAAGC,QADU;AAEb,SAAG3B,QAFU;AAGbX,MAAAA,SAAS,EAAEd,cAAc,CAAChB,SAAS,CAACoC,OAAV,CAAkBC,UAAnB,CAHZ;AAIbb,MAAAA,MAAM,EAAEd,yBAAyB,CAAC+B,QAAQ,CAACjB,MAAV,EAAkBxB,SAAS,CAAC+B,YAAV,CAAuBC,GAAzC;AAJpB,KAAjB;AAMAe,IAAAA,QAAQ,CAAChC,MAAM,CAACsD,sBAAP,CAA8BF,UAA9B,CAAD,CAAR;AACH,GAXD;;AAaA,QAAMG,KAAK,GAAG,MAAM;AAChBvB,IAAAA,QAAQ,CAAChC,MAAM,CAACuC,WAAP,EAAD,CAAR;AACH,GAFD;;AAIA,QAAMD,kBAAkB,GAAIX,MAAD,IAAY;AAEnC,QAAI6B,QAAQ,GAAGrD,eAAe,CAACwB,MAAD,EAASnB,cAAc,EAAvB,CAA9B;AACAwB,IAAAA,QAAQ,CAAChC,MAAM,CAACyD,YAAP,CACL;AACIC,MAAAA,OAAO,EAAEF,QAAQ,CAACE,OADtB;AAEI/B,MAAAA,MAAM,EAAEA;AAFZ,KADK,CAAD,CAAR;AAKA,WAAO6B,QAAQ,CAACG,MAAhB;AACH,GATD;;AAWA,sBACI;AAAA,2BAMI,QAAC,MAAD;AACI,MAAA,kBAAkB,EAAE,IADxB;AAEI,MAAA,aAAa,EAAEvC,cAFnB;AAGI,MAAA,QAAQ,EAAE,CAACO,MAAD,YAA6B;AAAA,YAApB;AAACiC,UAAAA;AAAD,SAAoB;AACnCC,QAAAA,UAAU,CAAC,MAAM;AACbD,UAAAA,aAAa,CAAC,KAAD,CAAb;AACH,SAFS,EAEP,GAFO,CAAV;AAGH,OAPL;AAQI,MAAA,gBAAgB,EAAE,IARtB;AASI,MAAA,QAAQ,EAAGjC,MAAD,IAAY;AAClB,eAAOW,kBAAkB,CAACX,MAAD,CAAzB;AACH,OAXL;AAAA,gBAaK,SAAuB;AAAA,YAAtB;AAACgC,UAAAA,MAAD;AAASG,UAAAA;AAAT,SAAsB;AACpB,4BACI,QAAC,IAAD;AAAA,iCACI,QAAC,IAAD;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,IAAT;AAAA,qCACI,QAAC,UAAD;AAAA,wCACI,QAAC,MAAD;AACI,kBAAA,OAAO,EAAC,oBADZ;AAAA,6DAII;AAAM,oBAAA,SAAS,EAAC,gBAAhB;AAAA,2CACI,QAAC,KAAD,CAAO,QAAP;AAAA,iCAGQ3C,IAAI,IAAIA,IAAI,CAACC,cAAb,IAA+BD,IAAI,CAACC,cAAL,CAAoBN,gBAAnD,iBAEA,QAAC,QAAD;AACI,wBAAA,OAAO,EAAE,gBADb;AAEI,wBAAA,SAAS,EAAE,YAFf;AAAA,+CAII,QAAC,OAAD;AACI,0BAAA,QAAQ,EAAE,CAACK,IAAI,CAACO,QAAL,CAAcgC,OAD7B;AAEI,0BAAA,IAAI,EAAC,QAFT;AAGI,0BAAA,OAAO,EAAGK,CAAD,IAAO;AACZA,4BAAAA,CAAC,CAACC,cAAF;AACAD,4BAAAA,CAAC,CAACE,eAAF;AACAlB,4BAAAA,MAAM;AACT,2BAPL;AAQI,0BAAA,KAAK,EAAC,SARV;AASI,0BAAA,SAAS,EAAC,OATd;AAAA,iDAWI;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,8BALR,eAyBI,QAAC,QAAD;AACI,wBAAA,OAAO,EAAE,OADb;AAEI,wBAAA,SAAS,EAAE,YAFf;AAAA,+CAII,QAAC,OAAD;AACI,0BAAA,IAAI,EAAC,QADT;AAEI,0BAAA,OAAO,EAAGgB,CAAD,IAAO;AACZA,4BAAAA,CAAC,CAACC,cAAF;AACAD,4BAAAA,CAAC,CAACE,eAAF;AACAV,4BAAAA,KAAK;AACR,2BANL;AAOI,0BAAA,KAAK,EAAC,SAPV;AAQI,0BAAA,SAAS,EAAC,OARd;AAAA,iDAUI;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,8BAzBJ,EA4CQpC,IAAI,IAAIA,IAAI,CAACC,cAAb,IAA+B,CAACD,IAAI,CAACC,cAAL,CAAoBN,gBAApD,iBAEA,QAAC,QAAD;AACI,wBAAA,OAAO,EAAE,cADb;AAEI,wBAAA,SAAS,EAAE,YAFf;AAAA,+CAII,QAAC,OAAD;AACI,0BAAA,IAAI,EAAC,QADT;AAEI,0BAAA,QAAQ,EAAE,CAACK,IAAI,CAACO,QAAL,CAAcgC,OAF7B;AAGI,0BAAA,OAAO,EAAGK,CAAD,IAAO;AACZA,4BAAAA,CAAC,CAACC,cAAF;AACAD,4BAAAA,CAAC,CAACE,eAAF;AACAlB,4BAAAA,MAAM;AACT,2BAPL;AAQI,0BAAA,KAAK,EAAC,MARV;AASI,0BAAA,SAAS,EAAC,OATd;AAAA,iDAWI;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,8BA9CR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eA0EI,QAAC,KAAD;AACI,kBAAA,IAAI,EAAC,GADT;AACa,kBAAA,IAAI,EAAC,KADlB;AAEI,kBAAA,IAAI,EAAC,oBAFT;AAGI,kBAAA,WAAW,EAAE,qBAHjB;AAII,kBAAA,SAAS,EAAEnD,uBAAuB,CAACkE,OAAO,CAACI,UAAT,EAAqBP,MAAM,CAACO,UAA5B,CAJtC;AAKI,kBAAA,EAAE,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,wBA1EJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AA2FH;AAzGL;AAAA;AAAA;AAAA;AAAA;AANJ,mBADJ;AAoHH,CA1MD;;GAAMtC,yB;UACe9B,W,EACJC,W,EACWA,W;;;KAHtB6B,yB;AA6MN,eAAexB,WAAW,CAAC,gBAAD,EAAmBC,OAAnB,CAAX,CAAuCuB,yBAAvC,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Constants from \"../../../../../../../../../../utils/Constants\";\nimport {Field, Form, Formik} from \"formik\";\nimport {CButton, CCol, CFormGroup, CLabel, CRow, CTooltip} from \"@coreui/react\";\nimport {getConstantValueForSearch, getInputFieldClassNames} from \"../../../../../../../../../../utils/FormUtils\";\nimport NextPrevButtonGroup from \"../../../../../../../../common/NextPrevButtonGroup\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as Action from \"../../store/actions/index\";\nimport {getStorageItem, setStorageItem} from \"../../../../../../../../../../utils/StorageUtils\";\nimport customValidator from \"../../../../../../../../../../utils/ValidationUtil\";\nimport withReducer from \"../../../../../../../../../store/withReducer\";\nimport reducer from \"../../store/reducers\";\nimport {getPagedDataFromState, trimData} from \"../../../../../../../../../../utils/DataExtractHelper\";\n\nconst getValidations = () => {\n    return {\n        status: {\n            required: {message: 'Required'},\n        },\n        allergyDescription: {\n            required: {message: 'Required'}\n        }\n    };\n};\n\nconst initValues = {\n    allergyHistoryID: '',\n    patientID: '',\n    allergyDescription: '',\n    status: Constants.STATUS_CONST.ACT\n};\n\nconst generateSaveObject = (data) => {\n    let allergyHistory = data.allergyHistory;\n    let patientID = getStorageItem(Constants.STORAGE.PATIENT_ID);\n    let saveObj = Object.assign({},\n        {...allergyHistory},\n        data.formData.values,\n        {status: Constants.STATUS_CONST.ACT},\n        {allergyHistoryID: allergyHistory.allergyHistoryID},\n        {patientID}\n    );\n    return trimData(saveObj);\n};\n\nconst AllergyHistoryAddEditForm = ({setPageIndex, nextPageIndex, prevPageIndex}) => {\n    const dispatch = useDispatch();\n    const data = useSelector(({allergyHistory}) => allergyHistory.allergyHistoryAddEdit);\n    const searchStoreData = useSelector(({allergyHistory}) => allergyHistory.allergyHistorySearch);\n\n    const [allergyHistory, setAllergyHistory] = useState(initValues);\n\n    useEffect(() => {\n        let allergyHistory = data.allergyHistory;\n        let initData = {\n            allergyHistoryID: allergyHistory.allergyHistoryID ? allergyHistory.allergyHistoryID : initValues.allergyHistoryID,\n            patientID: allergyHistory.patientID ? allergyHistory.patientID : initValues.patientID,\n            allergyDescription: allergyHistory.allergyDescription ? allergyHistory.allergyDescription : initValues.allergyDescription,\n            status: allergyHistory.status ? allergyHistory.status : initValues.status\n        };\n        setAllergyHistory(initData);\n    }, [dispatch, data.allergyHistory]);\n\n    useEffect(() => {\n        let allergyHistory = data.allergyHistory;\n        let initData = {\n            allergyHistoryID: allergyHistory.allergyHistoryID ? allergyHistory.allergyHistoryID : initValues.allergyHistoryID,\n            patientID: allergyHistory.patientID ? allergyHistory.patientID : initValues.patientID,\n            allergyDescription: allergyHistory.allergyDescription ? allergyHistory.allergyDescription : initValues.allergyDescription,\n            status: allergyHistory.status ? allergyHistory.status : initValues.status\n        };\n        onCustomValidation(initData)\n    }, [data.allergyHistory]);\n\n    useEffect(() => {\n        return (\n            () => {\n                dispatch(Action.onResetForm())\n            }\n        );\n    }, []);\n\n\n    const saveFunction = () => {\n        let saveObject = generateSaveObject(data);\n        if (saveObject.patientID) {\n            dispatch(Action.saveOrUpdateAllergyHistory(saveObject)).then(response => {\n                setStorageItem(Constants.STORAGE.ALLERGY_HISTORY_ID, response.payload.allergyHistoryID);\n                dispatch(Action.onResetForm())\n            })\n        }\n        setPageIndex(nextPageIndex);\n    };\n\n    const update = () => {\n        let saveObject = generateSaveObject(data);\n        dispatch(Action.saveOrUpdateAllergyHistoryWithMessage(saveObject)).then(\n            re => {\n                onSearch();\n            }\n        )\n    };\n\n    let onSearch = () => {\n        let pageInfo = searchStoreData.pageInfo;\n        let formData = searchStoreData.searchData;\n        let pageData = getPagedDataFromState(pageInfo);\n        let searchData = {\n            ...pageData,\n            ...formData,\n            patientID: getStorageItem(Constants.STORAGE.PATIENT_ID),\n            status: getConstantValueForSearch(formData.status, Constants.STATUS_CONST.ACT)\n        };\n        dispatch(Action.getPagedAllergyHistory(searchData));\n    };\n\n    const reset = () => {\n        dispatch(Action.onResetForm())\n    };\n\n    const onCustomValidation = (values) => {\n\n        let validate = customValidator(values, getValidations());\n        dispatch(Action.onFormChange(\n            {\n                isValid: validate.isValid,\n                values: values\n            }));\n        return validate.errors;\n    };\n\n    return (\n        <>\n            {/*<NextPrevButtonGroup*/}\n            {/*    setPageIndex={setPageIndex}*/}\n            {/*    prevPageIndex={prevPageIndex}*/}\n            {/*    saveFunction={saveFunction}*/}\n            {/*    isValid={true}/>*/}\n            <Formik\n                enableReinitialize={true}\n                initialValues={allergyHistory}\n                onSubmit={(values, {setSubmitting}) => {\n                    setTimeout(() => {\n                        setSubmitting(false)\n                    }, 200)\n                }}\n                validateOnChange={true}\n                validate={(values) => {\n                    return onCustomValidation(values);\n                }}\n            >\n                {({errors, touched}) => {\n                    return (\n                        <Form>\n                            <CRow>\n                                <CCol sm=\"12\">\n                                    <CFormGroup>\n                                        <CLabel\n                                            htmlFor=\"allergyDescription\"\n                                        >\n                                            Allergy History\n                                            <span className=\"margin-left-10\">\n                                                <React.Fragment>\n\n                                                    {\n                                                        data && data.allergyHistory && data.allergyHistory.allergyHistoryID &&\n\n                                                        <CTooltip\n                                                            content={'Update Allergy'}\n                                                            placement={'left-start'}\n                                                        >\n                                                            <CButton\n                                                                disabled={!data.formData.isValid}\n                                                                type=\"button\"\n                                                                onClick={(e) => {\n                                                                    e.preventDefault();\n                                                                    e.stopPropagation();\n                                                                    update()\n                                                                }}\n                                                                color=\"success\"\n                                                                className=\" mr-2\"\n                                                            >\n                                                                <i className='fa fa-floppy-o'></i>\n                                                            </CButton>\n                                                        </CTooltip>\n                                                    }\n\n                                                    <CTooltip\n                                                        content={'Reset'}\n                                                        placement={'left-start'}\n                                                    >\n                                                        <CButton\n                                                            type=\"button\"\n                                                            onClick={(e) => {\n                                                                e.preventDefault();\n                                                                e.stopPropagation();\n                                                                reset()\n                                                            }}\n                                                            color=\"warning\"\n                                                            className=\" mr-2\"\n                                                        >\n                                                            <i className='fa fa-refresh'></i>\n                                                        </CButton>\n                                                    </CTooltip>\n\n                                                    {\n                                                        data && data.allergyHistory && !data.allergyHistory.allergyHistoryID &&\n\n                                                        <CTooltip\n                                                            content={'Save Allergy'}\n                                                            placement={'left-start'}\n                                                        >\n                                                            <CButton\n                                                                type=\"button\"\n                                                                disabled={!data.formData.isValid}\n                                                                onClick={(e) => {\n                                                                    e.preventDefault();\n                                                                    e.stopPropagation();\n                                                                    update()\n                                                                }}\n                                                                color=\"info\"\n                                                                className=\" mr-2\"\n                                                            >\n                                                                <i className='fa fa-floppy-o'></i>\n                                                            </CButton>\n                                                        </CTooltip>\n                                                    }\n                                                </React.Fragment>\n                                            </span>\n                                        </CLabel>\n                                        <Field\n                                            rows=\"5\" cols=\"120\"\n                                            name=\"allergyDescription\"\n                                            placeholder={'Allergy Description'}\n                                            className={getInputFieldClassNames(touched.indication, errors.indication)}\n                                            as='textarea'\n                                        >\n                                        </Field>\n                                    </CFormGroup>\n                                </CCol>\n                            </CRow>\n                        </Form>\n                    );\n                }}\n            </Formik>\n        </>\n    );\n};\n\n\nexport default withReducer('allergyHistory', reducer)(AllergyHistoryAddEditForm);\n"]},"metadata":{},"sourceType":"module"}