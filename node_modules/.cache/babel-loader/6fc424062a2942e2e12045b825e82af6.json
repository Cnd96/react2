{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\selectDiagnosis\\\\components\\\\DiagnosisList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as _ from \"lodash\";\nimport * as Action from \"../store/actions\";\nimport * as CheckupAction from \"../../createCheckUp/store/action\";\nimport Constants from \"../../../../../../../../../utils/Constants\";\nimport Diagnosis from \"./Diagnosis\";\nimport NextPrevButtonGroup from \"../../../../../../../common/NextPrevButtonGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generateSaveObject = (checkupData, diagnosisData) => {\n  let removedIDList = _.difference(diagnosisData.currentDiagnosisIDs, diagnosisData.selectedDiagnosisIDs);\n\n  let addedIDList = _.difference(diagnosisData.selectedDiagnosisIDs, diagnosisData.currentDiagnosisIDs); // let diagnosisIDList = diagnosisData.selectedDiagnosisIDs;\n\n\n  return Object.assign({}, {\n    checkupID: checkupData.checkup ? checkupData.checkup.checkupID : null,\n    removedIDList: removedIDList,\n    diagnosisIDList: addedIDList\n  });\n};\n\nconst DiagnosisList = _ref => {\n  _s();\n\n  let {\n    setPageIndex,\n    nextPageIndex,\n    prevPageIndex\n  } = _ref;\n  const dispatch = useDispatch();\n  const diagnosisData = useSelector(_ref2 => {\n    let {\n      selectDiagnosis\n    } = _ref2;\n    return selectDiagnosis.diagnosisSelect;\n  });\n  const checkupData = useSelector(_ref3 => {\n    let {\n      checkup\n    } = _ref3;\n    return checkup.checkupAddEdit;\n  });\n  const [activeDiagnosis, setActiveDiagnosis] = useState([]);\n  useEffect(() => {\n    dispatch(Action.setCurrentDiagnosisIDs(checkupData.checkup.diagnosisList));\n  }, [dispatch, checkupData.checkup.diagnosisList]);\n  useEffect(() => {\n    let activeDiagnosis = diagnosisData.diagnosis.filter(diagnosis => diagnosis.status === Constants.STATUS_CONST.ACT);\n    activeDiagnosis = activeDiagnosis.length > 0 ? activeDiagnosis : [];\n    setActiveDiagnosis(activeDiagnosis);\n  }, [dispatch, diagnosisData.diagnosis]);\n\n  const saveFunction = () => {\n    let saveObject = generateSaveObject(checkupData, diagnosisData);\n\n    if (saveObject.removedIDList.length > 0 || saveObject.diagnosisIDList.length > 0) {\n      dispatch(Action.saveOrUpdateCheckupWithDiagnosis(saveObject)).then(response => {\n        dispatch(CheckupAction.onSetCheckup(response.payload));\n        setPageIndex(nextPageIndex);\n      });\n    } else {\n      setPageIndex(nextPageIndex);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"privilege-scroll-section\",\n    children: [/*#__PURE__*/_jsxDEV(NextPrevButtonGroup, {\n      setPageIndex: setPageIndex,\n      prevPageIndex: prevPageIndex,\n      saveFunction: saveFunction,\n      isValid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'privilege-main-category-section',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'privilege-category-name',\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Diagnosis \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'privilege-category-section',\n        style: {\n          marginLeft: '5%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: activeDiagnosis.map((diagnosis, index) => {\n            return /*#__PURE__*/_jsxDEV(Diagnosis, {\n              diagnosis: diagnosis\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DiagnosisList, \"4BUGBa4KKHAmbnGRVbwTt/hlq78=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = DiagnosisList;\nexport default DiagnosisList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiagnosisList\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/selectDiagnosis/components/DiagnosisList.js"],"names":["React","useEffect","useState","useDispatch","useSelector","_","Action","CheckupAction","Constants","Diagnosis","NextPrevButtonGroup","generateSaveObject","checkupData","diagnosisData","removedIDList","difference","currentDiagnosisIDs","selectedDiagnosisIDs","addedIDList","Object","assign","checkupID","checkup","diagnosisIDList","DiagnosisList","setPageIndex","nextPageIndex","prevPageIndex","dispatch","selectDiagnosis","diagnosisSelect","checkupAddEdit","activeDiagnosis","setActiveDiagnosis","setCurrentDiagnosisIDs","diagnosisList","diagnosis","filter","status","STATUS_CONST","ACT","length","saveFunction","saveObject","saveOrUpdateCheckupWithDiagnosis","then","response","onSetCheckup","payload","marginLeft","map","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as _ from \"lodash\";\nimport * as Action from \"../store/actions\"\nimport * as CheckupAction from \"../../createCheckUp/store/action\"\nimport Constants from \"../../../../../../../../../utils/Constants\";\nimport Diagnosis from \"./Diagnosis\";\nimport NextPrevButtonGroup from \"../../../../../../../common/NextPrevButtonGroup\";\n\nconst generateSaveObject = (checkupData, diagnosisData) => {\n\n    let removedIDList = _.difference(diagnosisData.currentDiagnosisIDs, diagnosisData.selectedDiagnosisIDs);\n    let addedIDList = _.difference(diagnosisData.selectedDiagnosisIDs, diagnosisData.currentDiagnosisIDs);\n\n    // let diagnosisIDList = diagnosisData.selectedDiagnosisIDs;\n\n    return Object.assign({}, {\n        checkupID: checkupData.checkup ? checkupData.checkup.checkupID : null,\n        removedIDList: removedIDList,\n        diagnosisIDList: addedIDList\n    });\n};\n\nconst DiagnosisList = ({setPageIndex, nextPageIndex, prevPageIndex}) => {\n\n    const dispatch = useDispatch();\n    const diagnosisData = useSelector(({selectDiagnosis}) => selectDiagnosis.diagnosisSelect);\n    const checkupData = useSelector(({checkup}) => checkup.checkupAddEdit);\n    const [activeDiagnosis, setActiveDiagnosis] = useState([]);\n\n\n    useEffect(() => {\n        dispatch(Action.setCurrentDiagnosisIDs(checkupData.checkup.diagnosisList));\n    }, [dispatch, checkupData.checkup.diagnosisList]);\n\n    useEffect(() => {\n        let activeDiagnosis = diagnosisData.diagnosis.filter(diagnosis => diagnosis.status === Constants.STATUS_CONST.ACT);\n        activeDiagnosis = activeDiagnosis.length > 0 ? activeDiagnosis : [];\n        setActiveDiagnosis(activeDiagnosis);\n    }, [dispatch, diagnosisData.diagnosis]);\n\n    const saveFunction = () => {\n        let saveObject = generateSaveObject(checkupData, diagnosisData);\n        if (saveObject.removedIDList.length > 0 || saveObject.diagnosisIDList.length > 0) {\n            dispatch(Action.saveOrUpdateCheckupWithDiagnosis(saveObject)).then(response => {\n                dispatch(CheckupAction.onSetCheckup(response.payload));\n                setPageIndex(nextPageIndex);\n            })\n        } else {\n            setPageIndex(nextPageIndex);\n        }\n    };\n\n    return (\n\n        <div className='privilege-scroll-section'>\n\n            <NextPrevButtonGroup\n                setPageIndex={setPageIndex}\n                prevPageIndex={prevPageIndex}\n                saveFunction={saveFunction}\n                isValid={true}/>\n\n            <div className={'privilege-main-category-section'}>\n                <div className={'privilege-category-name'}>\n                    <h5>Diagnosis </h5>\n                </div>\n\n                <div className={'privilege-category-section'} style={{marginLeft: '5%'}}>\n                    <div>\n                        {\n                            activeDiagnosis.map((diagnosis, index) => {\n                                return <Diagnosis key={index} diagnosis={diagnosis}/>\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default DiagnosisList;"]},"metadata":{},"sourceType":"module"}