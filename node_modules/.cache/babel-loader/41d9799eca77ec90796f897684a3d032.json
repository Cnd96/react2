{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\patientSummery\\\\components\\\\PatientFamilyDiseases\\\\PatientFamilyDiseases.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CCard, CCardBody, CCardHeader, CCollapse } from \"@coreui/react\";\nimport * as _ from \"lodash\";\nimport FamilyDiseases from \"./FamilyDiseases\";\nimport CIcon from \"@coreui/icons-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PatientFamilyDiseases = () => {\n  _s();\n\n  let dispatch = useDispatch();\n  const [collapse, setCollapse] = useState(true);\n  const patientSummeryData = useSelector(_ref => {\n    let {\n      patientSummery\n    } = _ref;\n    return patientSummery.patientSummeryReport;\n  });\n  const [familyTypes, setFamilyTypes] = useState([]);\n\n  const toggle = e => {\n    setCollapse(!collapse);\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    let familyTypes = _.keys(patientSummeryData.patientFamilyDiseases);\n\n    setFamilyTypes(familyTypes);\n  }, [dispatch, patientSummeryData.patientFamilyDiseases]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CCard, {\n      children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n        onClick: toggle,\n        className: 'card-header-custom',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-row flex-wrap  justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Family Diseases\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(CIcon, {\n              size: 'lg',\n              name: collapse ? 'cil-chevron-circle-up-alt' : 'cil-chevron-circle-down-alt'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CCollapse, {\n        show: collapse,\n        children: /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: familyTypes.map((familyType, index) => {\n              return /*#__PURE__*/_jsxDEV(FamilyDiseases, {\n                familyType: familyType\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 44\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PatientFamilyDiseases, \"+KPRF6Ql3tg4X6KIylGwPz/BDw8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PatientFamilyDiseases;\nexport default PatientFamilyDiseases;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientFamilyDiseases\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/patientSummery/components/PatientFamilyDiseases/PatientFamilyDiseases.js"],"names":["React","useEffect","useState","useDispatch","useSelector","CCard","CCardBody","CCardHeader","CCollapse","_","FamilyDiseases","CIcon","PatientFamilyDiseases","dispatch","collapse","setCollapse","patientSummeryData","patientSummery","patientSummeryReport","familyTypes","setFamilyTypes","toggle","e","preventDefault","keys","patientFamilyDiseases","map","familyType","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,KAAR,EAAeC,SAAf,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAuD,eAAvD;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAAA;;AAChC,MAAIC,QAAQ,GAAGV,WAAW,EAA1B;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMc,kBAAkB,GAAGZ,WAAW,CAAC;AAAA,QAAC;AAACa,MAAAA;AAAD,KAAD;AAAA,WAAsBA,cAAc,CAACC,oBAArC;AAAA,GAAD,CAAtC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMmB,MAAM,GAAIC,CAAD,IAAO;AAClBP,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAQ,IAAAA,CAAC,CAACC,cAAF;AACH,GAHD;;AAKAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,WAAW,GAAGV,CAAC,CAACe,IAAF,CAAOR,kBAAkB,CAACS,qBAA1B,CAAlB;;AACAL,IAAAA,cAAc,CAACD,WAAD,CAAd;AACH,GAHQ,EAGN,CAACN,QAAD,EAAWG,kBAAkB,CAACS,qBAA9B,CAHM,CAAT;AAKA,sBACI;AAAA,2BACI,QAAC,KAAD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEJ,MAAtB;AAA8B,QAAA,SAAS,EAAE,oBAAzC;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,oDAAf;AAAA,kCACI;AAAA,mCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,mCAAM,QAAC,KAAD;AAAO,cAAA,IAAI,EAAE,IAAb;AAAmB,cAAA,IAAI,EAAGP,QAAQ,GAAG,2BAAH,GAA+B;AAAjE;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,SAAD;AACI,QAAA,IAAI,EAAEA,QADV;AAAA,+BAGI,QAAC,SAAD;AAAA,iCACI;AAAA,sBAEQK,WAAW,CAACO,GAAZ,CAAgB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACnC,kCAAO,QAAC,cAAD;AAAgB,gBAAA,UAAU,EAAED;AAA5B,iBAA6CC,KAA7C;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAFD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA1CD;;GAAMhB,qB;UACaT,W,EAEYC,W;;;KAHzBQ,qB;AA4CN,eAAeA,qBAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CCard, CCardBody, CCardHeader, CCollapse} from \"@coreui/react\";\nimport * as _ from \"lodash\";\nimport FamilyDiseases from \"./FamilyDiseases\";\nimport CIcon from \"@coreui/icons-react\";\n\nconst PatientFamilyDiseases = () => {\n    let dispatch = useDispatch();\n    const [collapse, setCollapse] = useState(true);\n    const patientSummeryData = useSelector(({patientSummery}) => patientSummery.patientSummeryReport);\n    const [familyTypes, setFamilyTypes] = useState([]);\n\n    const toggle = (e) => {\n        setCollapse(!collapse);\n        e.preventDefault();\n    };\n\n    useEffect(() => {\n        let familyTypes = _.keys(patientSummeryData.patientFamilyDiseases);\n        setFamilyTypes(familyTypes);\n    }, [dispatch, patientSummeryData.patientFamilyDiseases]);\n\n    return (\n        <div>\n            <CCard>\n                <CCardHeader onClick={toggle} className={'card-header-custom'}>\n                    <div className=\"d-flex flex-row flex-wrap  justify-content-between\">\n                        <h5><b>Family Diseases</b></h5>\n                        <span><CIcon size={'lg'} name={ collapse ? 'cil-chevron-circle-up-alt':'cil-chevron-circle-down-alt'}/></span>\n                    </div>\n                </CCardHeader>\n\n                <CCollapse\n                    show={collapse}\n                >\n                    <CCardBody>\n                        <div>\n                            {\n                                familyTypes.map((familyType, index) => {\n                                    return <FamilyDiseases familyType={familyType} key={index}/>\n                                })\n                            }\n                        </div>\n                    </CCardBody>\n                </CCollapse>\n            </CCard>\n        </div>\n    );\n};\n\nexport default PatientFamilyDiseases;"]},"metadata":{},"sourceType":"module"}