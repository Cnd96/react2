{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\selectPrescription\\\\SelectPrescription.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PrescriptionTemplate from \"./components/PrescriptionTemplate\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Actions from \"./store/actions/index\";\nimport withReducer from \"../../../../../../../store/withReducer\";\nimport reducer from \"./store/reducer\";\nimport PrescriptionMedicineList from \"./components/PrescriptionMedicineList\";\nimport NextPrevButtonGroup from \"../../../../../../common/NextPrevButtonGroup\";\nimport { getStorageItem } from \"../../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../../utils/Constants\";\nimport { trimData } from \"../../../../../../../../utils/DataExtractHelper\";\nimport * as CheckupAction from \"../createCheckUp/store/action/checkup.app.add.edit.action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectPrescription = _ref => {\n  _s();\n\n  let {\n    setPageIndex,\n    nextPageIndex,\n    prevPageIndex\n  } = _ref;\n  const dispatch = useDispatch();\n  const data = useSelector(_ref2 => {\n    let {\n      selectPrescriptionTemplate\n    } = _ref2;\n    return selectPrescriptionTemplate.selectPrescriptionTemplate;\n  });\n  let checkupID = getStorageItem(Constants.STORAGE.CHECKUP_ID);\n  const checkupData = useSelector(_ref3 => {\n    let {\n      checkup\n    } = _ref3;\n    return checkup.checkupAddEdit;\n  });\n\n  const saveFunction = () => {\n    let saveObj = Object.assign({}, {\n      checkupID: checkupID\n    }, { ...data.prescription\n    }, data.prescriptionTemplateID ? {\n      prescriptionTemplateID: data.prescriptionTemplateID\n    } : {}, {\n      addedTemplateMedicine: data.addedTemplateMedicine\n    });\n    dispatch(Actions.saveOrUpdateCheckupWithPrescription(trimData(saveObj))).then(response => {\n      dispatch(CheckupAction.onSetCheckup(response.payload));\n      setPageIndex(nextPageIndex);\n    });\n  };\n\n  useEffect(() => {\n    dispatch(Actions.getMedicineValueList({}));\n    dispatch(Actions.getPrescriptionTemplateList());\n\n    if (checkupData.checkup.prescriptionID) {\n      dispatch(Actions.getPrescriptionByID(checkupData.checkup.prescriptionID));\n    }\n\n    return () => {\n      dispatch(Actions.onResetPrescription());\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NextPrevButtonGroup, {\n      setPageIndex: setPageIndex,\n      prevPageIndex: prevPageIndex,\n      saveFunction: saveFunction,\n      isValid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrescriptionTemplate, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrescriptionMedicineList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NextPrevButtonGroup, {\n      setPageIndex: setPageIndex,\n      prevPageIndex: prevPageIndex,\n      saveFunction: saveFunction,\n      isValid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectPrescription, \"Vluu1bCJzDAxx6a4HZE/XkN9pBk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SelectPrescription;\nexport default withReducer('selectPrescriptionTemplate', reducer)(SelectPrescription);\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectPrescription\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/selectPrescription/SelectPrescription.js"],"names":["React","useEffect","PrescriptionTemplate","useDispatch","useSelector","Actions","withReducer","reducer","PrescriptionMedicineList","NextPrevButtonGroup","getStorageItem","Constants","trimData","CheckupAction","SelectPrescription","setPageIndex","nextPageIndex","prevPageIndex","dispatch","data","selectPrescriptionTemplate","checkupID","STORAGE","CHECKUP_ID","checkupData","checkup","checkupAddEdit","saveFunction","saveObj","Object","assign","prescription","prescriptionTemplateID","addedTemplateMedicine","saveOrUpdateCheckupWithPrescription","then","response","onSetCheckup","payload","getMedicineValueList","getPrescriptionTemplateList","prescriptionID","getPrescriptionByID","onResetPrescription"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport PrescriptionTemplate from \"./components/PrescriptionTemplate\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as Actions from \"./store/actions/index\";\nimport withReducer from \"../../../../../../../store/withReducer\";\nimport reducer from \"./store/reducer\";\nimport PrescriptionMedicineList from \"./components/PrescriptionMedicineList\";\nimport NextPrevButtonGroup from \"../../../../../../common/NextPrevButtonGroup\";\nimport {getStorageItem} from \"../../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../../utils/Constants\";\nimport {trimData} from \"../../../../../../../../utils/DataExtractHelper\";\nimport * as CheckupAction from \"../createCheckUp/store/action/checkup.app.add.edit.action\";\n\nconst SelectPrescription = ({setPageIndex, nextPageIndex, prevPageIndex}) => {\n\n    const dispatch = useDispatch();\n    const data = useSelector(({selectPrescriptionTemplate}) => selectPrescriptionTemplate.selectPrescriptionTemplate);\n    let checkupID = getStorageItem(Constants.STORAGE.CHECKUP_ID);\n    const checkupData = useSelector(({checkup}) => checkup.checkupAddEdit);\n\n    const saveFunction = () => {\n        let saveObj = Object.assign({},\n            {checkupID: checkupID},\n            {...data.prescription},\n            data.prescriptionTemplateID ? {prescriptionTemplateID: data.prescriptionTemplateID} : {},\n            {addedTemplateMedicine: data.addedTemplateMedicine});\n\n        dispatch(Actions.saveOrUpdateCheckupWithPrescription(trimData(saveObj))).then(response => {\n            dispatch(CheckupAction.onSetCheckup(response.payload));\n            setPageIndex(nextPageIndex);\n        })\n\n    };\n\n\n    useEffect(() => {\n        dispatch(Actions.getMedicineValueList({}));\n        dispatch(Actions.getPrescriptionTemplateList());\n\n        if (checkupData.checkup.prescriptionID) {\n            dispatch(Actions.getPrescriptionByID(checkupData.checkup.prescriptionID));\n        }\n\n        return (() => {\n            dispatch(Actions.onResetPrescription());\n        })\n    }, []);\n\n    return (\n        <div>\n            <NextPrevButtonGroup\n                setPageIndex={setPageIndex}\n                prevPageIndex={prevPageIndex}\n                saveFunction={saveFunction}\n                isValid={true}/>\n            <PrescriptionTemplate/>\n            <PrescriptionMedicineList/>\n            <NextPrevButtonGroup\n                setPageIndex={setPageIndex}\n                prevPageIndex={prevPageIndex}\n                saveFunction={saveFunction}\n                isValid={true}/>\n        </div>\n    );\n};\n\nexport default withReducer('selectPrescriptionTemplate', reducer)(SelectPrescription);"]},"metadata":{},"sourceType":"module"}