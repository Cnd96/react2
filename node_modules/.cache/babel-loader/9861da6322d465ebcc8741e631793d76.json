{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\registeredPatient\\\\patientDetails\\\\PatientDetailsApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport withReducer from \"../../../../../store/withReducer\";\nimport reducer from \"../store/reducers\";\nimport { useDispatch } from \"react-redux\";\nimport { getStorageItem } from \"../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../utils/Constants\";\nimport * as Action from \"../store/actions/patient.details.app.actions\";\nimport PatientDetailsBase from \"./components/PatientDetailsBase\";\nimport PatientCheckupSearchApp from \"./patinetCheckupSearch/PatientCheckupSearchApp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PatientDetailsApp = () => {\n  _s();\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    let patientID = getStorageItem(Constants.STORAGE.PATIENT_ID_FOR_DETAIL);\n\n    if (patientID) {\n      dispatch(Action.getPatientDTOByID(patientID));\n    }\n\n    return () => {\n      dispatch(Action.resetPatientDetails());\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PatientDetailsBase, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PatientCheckupSearchApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PatientDetailsApp, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PatientDetailsApp;\nexport default withReducer('patientDetails', reducer)(PatientDetailsApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientDetailsApp\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/registeredPatient/patientDetails/PatientDetailsApp.js"],"names":["React","useEffect","withReducer","reducer","useDispatch","getStorageItem","Constants","Action","PatientDetailsBase","PatientCheckupSearchApp","PatientDetailsApp","dispatch","patientID","STORAGE","PATIENT_ID_FOR_DETAIL","getPatientDTOByID","resetPatientDetails"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,cAAR,QAA6B,sCAA7B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,8CAAxB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,uBAAP,MAAoC,gDAApC;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAE5B,MAAIC,QAAQ,GAAGP,WAAW,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,SAAS,GAAGP,cAAc,CAACC,SAAS,CAACO,OAAV,CAAkBC,qBAAnB,CAA9B;;AACA,QAAIF,SAAJ,EAAe;AACXD,MAAAA,QAAQ,CAACJ,MAAM,CAACQ,iBAAP,CAAyBH,SAAzB,CAAD,CAAR;AACH;;AACD,WAAQ,MAAM;AACVD,MAAAA,QAAQ,CAACJ,MAAM,CAACS,mBAAP,EAAD,CAAR;AACH,KAFD;AAGH,GARQ,EAQN,CAACL,QAAD,CARM,CAAT;AAUA,sBACI;AAAA,4BACI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CApBD;;GAAMD,iB;UAEaN,W;;;KAFbM,iB;AAsBN,eAAeR,WAAW,CAAC,gBAAD,EAAmBC,OAAnB,CAAX,CAAuCO,iBAAvC,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport withReducer from \"../../../../../store/withReducer\";\nimport reducer from \"../store/reducers\";\nimport {useDispatch} from \"react-redux\";\nimport {getStorageItem} from \"../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../utils/Constants\";\nimport * as Action from \"../store/actions/patient.details.app.actions\";\nimport PatientDetailsBase from \"./components/PatientDetailsBase\";\nimport PatientCheckupSearchApp from \"./patinetCheckupSearch/PatientCheckupSearchApp\";\n\nconst PatientDetailsApp = () => {\n\n    let dispatch = useDispatch();\n\n    useEffect(() => {\n        let patientID = getStorageItem(Constants.STORAGE.PATIENT_ID_FOR_DETAIL);\n        if (patientID) {\n            dispatch(Action.getPatientDTOByID(patientID));\n        }\n        return (() => {\n            dispatch(Action.resetPatientDetails());\n        });\n    }, [dispatch]);\n\n    return (\n        <div>\n            <PatientDetailsBase/>\n            <PatientCheckupSearchApp/>\n        </div>\n    );\n};\n\nexport default withReducer('patientDetails', reducer)(PatientDetailsApp);"]},"metadata":{},"sourceType":"module"}