{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\config\\\\prescriptionTemplate\\\\add-edit\\\\components\\\\PrescriptionTemplateAddEditBase.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PrescriptionTemplateAddEditForm from \"./PrescriptionTemplateAddEditForm\";\nimport { CButton, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStorageItem } from \"../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport * as Action from \"../../store/actions\";\nimport PrescriptionTemplateMedicineList from \"./PrescriptionTemplateMedicineList\";\nimport { showErrorMessage } from \"../../../../../../../utils/ToastUtil\";\nimport { trimData } from \"../../../../../../../utils/DataExtractHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrescriptionTemplateAddEditBase = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = useSelector(_ref => {\n    let {\n      prescriptionTemplate\n    } = _ref;\n    return prescriptionTemplate.prescriptionTemplateAddEdit;\n  });\n  useEffect(() => {\n    let prescriptionTemplateID = getStorageItem(Constants.STORAGE.SELECTED_PRESCRIPTION_TEMPLATE_ID);\n\n    if (prescriptionTemplateID) {\n      dispatch(Action.getPrescriptionTemplateByID(prescriptionTemplateID));\n    }\n\n    return () => {\n      dispatch(Action.reset());\n    };\n  }, [dispatch]);\n\n  const saveOrUpdate = () => {\n    let templateData;\n\n    if (data.formData.values) {\n      templateData = Object.assign({}, data.formData.values);\n    } else {\n      templateData = Object.assign({}, data.prescriptionTemplate);\n    }\n\n    let saveObj = Object.assign({}, templateData, {\n      addedTemplateMedicine: data.addedTemplateMedicine\n    });\n\n    if (templateData.prescriptionTemplate) {\n      dispatch(Action.saveOrUpdatePrescriptionTemplate(trimData(saveObj)));\n    } else if (!templateData.prescriptionTemplate || data.addedTemplateMedicine.length === 0) {\n      showErrorMessage(\"Please Insert Template Name and Add Medicine\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: [/*#__PURE__*/_jsxDEV(CCol, {\n        xs: \"12\",\n        children: /*#__PURE__*/_jsxDEV(CCard, {\n          children: /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: [/*#__PURE__*/_jsxDEV(PrescriptionTemplateAddEditForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CRow, {\n              children: /*#__PURE__*/_jsxDEV(CCol, {\n                xs: \"12\",\n                children: /*#__PURE__*/_jsxDEV(CButton, {\n                  onClick: () => {\n                    saveOrUpdate();\n                  },\n                  color: \"primary\",\n                  className: \"float-right\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), data.addedTemplateMedicine && data.addedTemplateMedicine.length > 0 && /*#__PURE__*/_jsxDEV(PrescriptionTemplateMedicineList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PrescriptionTemplateAddEditBase, \"8ZSi0OBRHkt2uIn6fVrA7mYaxeA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PrescriptionTemplateAddEditBase;\nexport default PrescriptionTemplateAddEditBase;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrescriptionTemplateAddEditBase\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/prescriptionTemplate/add-edit/components/PrescriptionTemplateAddEditBase.js"],"names":["React","useEffect","PrescriptionTemplateAddEditForm","CButton","CCard","CCardBody","CCol","CRow","useDispatch","useSelector","getStorageItem","Constants","Action","PrescriptionTemplateMedicineList","showErrorMessage","trimData","PrescriptionTemplateAddEditBase","dispatch","data","prescriptionTemplate","prescriptionTemplateAddEdit","prescriptionTemplateID","STORAGE","SELECTED_PRESCRIPTION_TEMPLATE_ID","getPrescriptionTemplateByID","reset","saveOrUpdate","templateData","formData","values","Object","assign","saveObj","addedTemplateMedicine","saveOrUpdatePrescriptionTemplate","length"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport PrescriptionTemplateAddEditForm from \"./PrescriptionTemplateAddEditForm\";\nimport {CButton, CCard, CCardBody, CCol, CRow,} from \"@coreui/react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getStorageItem} from \"../../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport * as Action from \"../../store/actions\";\nimport PrescriptionTemplateMedicineList from \"./PrescriptionTemplateMedicineList\";\nimport {showErrorMessage} from \"../../../../../../../utils/ToastUtil\";\nimport {trimData} from \"../../../../../../../utils/DataExtractHelper\";\n\nconst PrescriptionTemplateAddEditBase = () => {\n\n    const dispatch = useDispatch();\n    const data = useSelector(({prescriptionTemplate}) => prescriptionTemplate.prescriptionTemplateAddEdit);\n\n\n    useEffect(() => {\n        let prescriptionTemplateID = getStorageItem(Constants.STORAGE.SELECTED_PRESCRIPTION_TEMPLATE_ID);\n        if (prescriptionTemplateID) {\n            dispatch(Action.getPrescriptionTemplateByID(prescriptionTemplateID));\n        }\n        return () => {\n            dispatch(Action.reset());\n        };\n    }, [dispatch]);\n\n    const saveOrUpdate = () => {\n        let templateData;\n        if (data.formData.values) {\n            templateData = Object.assign({}, data.formData.values);\n        } else {\n            templateData = Object.assign({}, data.prescriptionTemplate);\n        }\n        let saveObj = Object.assign({}, templateData, {addedTemplateMedicine: data.addedTemplateMedicine});\n        if (templateData.prescriptionTemplate) {\n            dispatch(Action.saveOrUpdatePrescriptionTemplate(trimData(saveObj)));\n        } else if (!templateData.prescriptionTemplate || data.addedTemplateMedicine.length === 0) {\n            showErrorMessage(\"Please Insert Template Name and Add Medicine\");\n        }\n\n    };\n\n    return (\n\n        <div>\n            <CRow>\n                <CCol xs=\"12\">\n                    <CCard>\n                        <CCardBody>\n                            <PrescriptionTemplateAddEditForm/>\n                            <CRow>\n                                <CCol xs=\"12\">\n                                    <CButton\n                                        onClick={() => {\n                                            saveOrUpdate();\n                                        }}\n                                        color=\"primary\" className=\"float-right\">Save</CButton>\n                                </CCol>\n                            </CRow>\n                        </CCardBody>\n                    </CCard>\n                </CCol>\n\n                {\n                    data.addedTemplateMedicine && data.addedTemplateMedicine.length > 0 &&\n                    <PrescriptionTemplateMedicineList/>\n                }\n\n            </CRow>\n\n        </div>\n    );\n};\n\nexport default PrescriptionTemplateAddEditBase;"]},"metadata":{},"sourceType":"module"}