{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\medicalTests\\\\MedicalTest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Action from \"./store/actions/patient.add.medical.test.results.action\";\nimport withReducer from \"../../../../../../../store/withReducer\";\nimport reducer from \"./store/reducers\";\nimport MedicalTestListNew from \"./components/MedicalTestListNew\";\nimport MedicalTestList from \"./components//MedicalTestList\";\nimport { CCol, CRow } from \"@coreui/react\";\nimport NextPrevButtonGroup from \"../../../../../../common/NextPrevButtonGroup\";\nimport * as CheckupAction from \"../createCheckUp/store/action/checkup.app.add.edit.action\";\nimport CheckupHistory from \"../checkupHistory/CheckupHistory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generateSaveObject = (checkupData, patientMedicalTestsData) => {\n  return Object.assign({}, {\n    checkupID: checkupData.checkup ? checkupData.checkup.checkupID : null,\n    medicalTestResults: patientMedicalTestsData.formData\n  });\n};\n\nconst MedicalTest = _ref => {\n  _s();\n\n  let {\n    setPageIndex,\n    nextPageIndex,\n    prevPageIndex\n  } = _ref;\n  let dispatch = useDispatch();\n  const checkupData = useSelector(_ref2 => {\n    let {\n      checkup\n    } = _ref2;\n    return checkup.checkupAddEdit;\n  });\n  const patientMedicalTestsData = useSelector(_ref3 => {\n    let {\n      patientMedicalTest\n    } = _ref3;\n    return patientMedicalTest.patientMedicalTestAddEdit;\n  });\n  useEffect(() => {\n    dispatch(Action.getMedicalTestTypes());\n    return () => {\n      dispatch(Action.resetMedicalTest());\n    };\n  }, []);\n\n  const saveFunction = () => {\n    let saveObj = generateSaveObject(checkupData, patientMedicalTestsData);\n\n    if (saveObj.checkupID) {\n      dispatch(Action.saveOrUpdateCheckupWithPatientMedicalTestsResults(saveObj)).then(response => {\n        dispatch(CheckupAction.onSetCheckup(response.payload));\n        setPageIndex(nextPageIndex);\n      });\n    } else {\n      setPageIndex(prevPageIndex);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row flex-wrap  justify-content-end\",\n      children: /*#__PURE__*/_jsxDEV(NextPrevButtonGroup, {\n        setPageIndex: setPageIndex,\n        prevPageIndex: prevPageIndex,\n        saveFunction: saveFunction,\n        isValid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MedicalTestListNew, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MedicalTestListNew, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row flex-wrap  justify-content-end\",\n      children: /*#__PURE__*/_jsxDEV(NextPrevButtonGroup, {\n        setPageIndex: setPageIndex,\n        prevPageIndex: prevPageIndex,\n        saveFunction: saveFunction,\n        isValid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MedicalTest, \"HH+9oWDQvXd+w6BMSf5p4XhMySg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MedicalTest;\nexport default withReducer('patientMedicalTest', reducer)(MedicalTest);\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicalTest\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/medicalTests/MedicalTest.js"],"names":["React","useEffect","useDispatch","useSelector","Action","withReducer","reducer","MedicalTestListNew","MedicalTestList","CCol","CRow","NextPrevButtonGroup","CheckupAction","CheckupHistory","generateSaveObject","checkupData","patientMedicalTestsData","Object","assign","checkupID","checkup","medicalTestResults","formData","MedicalTest","setPageIndex","nextPageIndex","prevPageIndex","dispatch","checkupAddEdit","patientMedicalTest","patientMedicalTestAddEdit","getMedicalTestTypes","resetMedicalTest","saveFunction","saveObj","saveOrUpdateCheckupWithPatientMedicalTestsResults","then","response","onSetCheckup","payload"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as Action from \"./store/actions/patient.add.medical.test.results.action\";\nimport withReducer from \"../../../../../../../store/withReducer\";\nimport reducer from \"./store/reducers\";\nimport MedicalTestListNew from \"./components/MedicalTestListNew\";\nimport MedicalTestList from \"./components//MedicalTestList\";\nimport {CCol, CRow} from \"@coreui/react\";\nimport NextPrevButtonGroup from \"../../../../../../common/NextPrevButtonGroup\";\nimport * as CheckupAction from \"../createCheckUp/store/action/checkup.app.add.edit.action\";\nimport CheckupHistory from \"../checkupHistory/CheckupHistory\";\n\nconst generateSaveObject = (checkupData, patientMedicalTestsData) => {\n    return Object.assign({}, {\n        checkupID: checkupData.checkup ? checkupData.checkup.checkupID : null,\n        medicalTestResults: patientMedicalTestsData.formData\n    });\n};\n\nconst MedicalTest = ({setPageIndex, nextPageIndex, prevPageIndex}) => {\n\n    let dispatch = useDispatch();\n    const checkupData = useSelector(({checkup}) => checkup.checkupAddEdit);\n    const patientMedicalTestsData = useSelector(({patientMedicalTest}) => patientMedicalTest.patientMedicalTestAddEdit);\n\n\n    useEffect(() => {\n        dispatch(Action.getMedicalTestTypes());\n        return (() => {\n            dispatch(Action.resetMedicalTest());\n        })\n    }, []);\n\n    const saveFunction = () => {\n        let saveObj = generateSaveObject(checkupData, patientMedicalTestsData);\n        if (saveObj.checkupID) {\n            dispatch(Action.saveOrUpdateCheckupWithPatientMedicalTestsResults(saveObj)).then(\n                response => {\n                    dispatch(CheckupAction.onSetCheckup(response.payload));\n                    setPageIndex(nextPageIndex);\n                }\n            )\n        } else {\n            setPageIndex(prevPageIndex);\n        }\n    };\n\n\n    return (\n        <div>\n            <div className='d-flex flex-row flex-wrap  justify-content-end'>\n                <NextPrevButtonGroup\n                    setPageIndex={setPageIndex}\n                    prevPageIndex={prevPageIndex}\n                    saveFunction={saveFunction}\n                    isValid={true}/>\n            </div>\n            <MedicalTestListNew/>\n            <MedicalTestListNew/>\n\n            <div className='d-flex flex-row flex-wrap  justify-content-end'>\n                <NextPrevButtonGroup\n                    setPageIndex={setPageIndex}\n                    prevPageIndex={prevPageIndex}\n                    saveFunction={saveFunction}\n                    isValid={true}/>\n            </div>\n\n        </div>\n    );\n};\n\nexport default withReducer('patientMedicalTest', reducer)(MedicalTest);"]},"metadata":{},"sourceType":"module"}