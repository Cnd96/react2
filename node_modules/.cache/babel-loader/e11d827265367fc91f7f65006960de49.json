{"ast":null,"code":"import { ADD_MEDICAL_DISEASE_ID, GET_ALL_FAMILY_TYPES, GET_MEDICAL_DISEASES_LIST, ON_ADD_EDIT_FORM_CHANGE, ON_SAVE_FAMILY_DISEASES, REMOVE_MEDICAL_DISEASE_ID, SET_PATIENT_INITIAL_DATA } from \"../actions\";\nimport * as _ from \"lodash\";\nconst initialState = {\n  familyTypes: [],\n  formData: {},\n  medicalDiseases: [],\n  selectedMedicalDiseasesMap: {},\n  currentMedicalDiseasesMap: {},\n  familyTypeID: ''\n};\n\nconst familyTypeAddEditReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ALL_FAMILY_TYPES:\n      {\n        return { ...state,\n          familyTypes: action.payload\n        };\n      }\n\n    case ON_ADD_EDIT_FORM_CHANGE:\n      {\n        return { ...state,\n          formData: action.payload\n        };\n      }\n\n    case ADD_MEDICAL_DISEASE_ID:\n      {\n        let {\n          medicalDiseaseID,\n          familyTypeID\n        } = action.payload;\n\n        let medicalDiseaseMap = _.cloneDeep(state.selectedMedicalDiseasesMap);\n\n        if (medicalDiseaseMap[familyTypeID]) {\n          medicalDiseaseMap[familyTypeID].push(medicalDiseaseID);\n        } else {\n          medicalDiseaseMap[familyTypeID] = [medicalDiseaseID];\n        }\n\n        return { ...state,\n          selectedMedicalDiseasesMap: medicalDiseaseMap\n        };\n      }\n\n    case REMOVE_MEDICAL_DISEASE_ID:\n      {\n        let {\n          medicalDiseaseID,\n          familyTypeID\n        } = action.payload;\n\n        let medicalDiseaseMap = _.cloneDeep(state.selectedMedicalDiseasesMap);\n\n        let idArray = medicalDiseaseMap[familyTypeID];\n        const index = idArray.indexOf(medicalDiseaseID);\n\n        if (index > -1) {\n          idArray.splice(index, 1);\n        }\n\n        medicalDiseaseMap[familyTypeID] = idArray;\n        return { ...state,\n          selectedMedicalDiseasesMap: medicalDiseaseMap\n        };\n      }\n\n    case GET_MEDICAL_DISEASES_LIST:\n      {\n        return { ...state,\n          medicalDiseases: action.payload\n        };\n      }\n\n    case SET_PATIENT_INITIAL_DATA:\n      {\n        let {\n          currentMedicalDiseasesMap\n        } = action.payload;\n        return { ...state,\n          currentMedicalDiseasesMap: currentMedicalDiseasesMap ? currentMedicalDiseasesMap : {},\n          selectedMedicalDiseasesMap: currentMedicalDiseasesMap ? currentMedicalDiseasesMap : {}\n        };\n      }\n\n    case ON_SAVE_FAMILY_DISEASES:\n      {\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default familyTypeAddEditReducer;","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/selectFamilyHistory/store/reducers/family.type.add.edit.reducer.js"],"names":["ADD_MEDICAL_DISEASE_ID","GET_ALL_FAMILY_TYPES","GET_MEDICAL_DISEASES_LIST","ON_ADD_EDIT_FORM_CHANGE","ON_SAVE_FAMILY_DISEASES","REMOVE_MEDICAL_DISEASE_ID","SET_PATIENT_INITIAL_DATA","_","initialState","familyTypes","formData","medicalDiseases","selectedMedicalDiseasesMap","currentMedicalDiseasesMap","familyTypeID","familyTypeAddEditReducer","state","action","type","payload","medicalDiseaseID","medicalDiseaseMap","cloneDeep","push","idArray","index","indexOf","splice"],"mappings":"AAAA,SACIA,sBADJ,EAEIC,oBAFJ,EAGIC,yBAHJ,EAIIC,uBAJJ,EAKIC,uBALJ,EAMIC,yBANJ,EAOIC,wBAPJ,QAQO,YARP;AAUA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,eAAe,EAAE,EAHA;AAIjBC,EAAAA,0BAA0B,EAAE,EAJX;AAKjBC,EAAAA,yBAAyB,EAAE,EALV;AAMjBC,EAAAA,YAAY,EAAE;AANG,CAArB;;AASA,MAAMC,wBAAwB,GAAG,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBR,YAAsB;AAAA,MAARS,MAAQ;;AAErE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,oBAAL;AAA2B;AACvB,eAAO,EACH,GAAGe,KADA;AAEHP,UAAAA,WAAW,EAAEQ,MAAM,CAACE;AAFjB,SAAP;AAIH;;AAED,SAAKhB,uBAAL;AAA+B;AAC3B,eAAO,EACH,GAAGa,KADA;AAEHN,UAAAA,QAAQ,EAAEO,MAAM,CAACE;AAFd,SAAP;AAIH;;AAED,SAAKnB,sBAAL;AAA8B;AAE1B,YAAI;AAACoB,UAAAA,gBAAD;AAAmBN,UAAAA;AAAnB,YAAmCG,MAAM,CAACE,OAA9C;;AACA,YAAIE,iBAAiB,GAAGd,CAAC,CAACe,SAAF,CAAYN,KAAK,CAACJ,0BAAlB,CAAxB;;AAEA,YAAIS,iBAAiB,CAACP,YAAD,CAArB,EAAqC;AACjCO,UAAAA,iBAAiB,CAACP,YAAD,CAAjB,CAAgCS,IAAhC,CAAqCH,gBAArC;AACH,SAFD,MAEO;AACHC,UAAAA,iBAAiB,CAACP,YAAD,CAAjB,GAAkC,CAACM,gBAAD,CAAlC;AACH;;AAED,eAAO,EACH,GAAGJ,KADA;AAEHJ,UAAAA,0BAA0B,EAAES;AAFzB,SAAP;AAKH;;AAED,SAAKhB,yBAAL;AAAiC;AAC7B,YAAI;AAACe,UAAAA,gBAAD;AAAmBN,UAAAA;AAAnB,YAAmCG,MAAM,CAACE,OAA9C;;AACA,YAAIE,iBAAiB,GAAGd,CAAC,CAACe,SAAF,CAAYN,KAAK,CAACJ,0BAAlB,CAAxB;;AACA,YAAIY,OAAO,GAAGH,iBAAiB,CAACP,YAAD,CAA/B;AAEA,cAAMW,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgBN,gBAAhB,CAAd;;AAEA,YAAIK,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZD,UAAAA,OAAO,CAACG,MAAR,CAAeF,KAAf,EAAsB,CAAtB;AACH;;AACDJ,QAAAA,iBAAiB,CAACP,YAAD,CAAjB,GAAkCU,OAAlC;AAEA,eAAO,EACH,GAAGR,KADA;AAEHJ,UAAAA,0BAA0B,EAAES;AAFzB,SAAP;AAIH;;AAED,SAAKnB,yBAAL;AAAgC;AAC5B,eAAO,EACH,GAAGc,KADA;AAEHL,UAAAA,eAAe,EAAEM,MAAM,CAACE;AAFrB,SAAP;AAIH;;AAED,SAAKb,wBAAL;AAA+B;AAC3B,YAAI;AAACO,UAAAA;AAAD,YAA8BI,MAAM,CAACE,OAAzC;AAEA,eAAO,EACH,GAAGH,KADA;AAEHH,UAAAA,yBAAyB,EAAEA,yBAAyB,GAAGA,yBAAH,GAA+B,EAFhF;AAGHD,UAAAA,0BAA0B,EAAEC,yBAAyB,GAAGA,yBAAH,GAA+B;AAHjF,SAAP;AAKH;;AAED,SAAKT,uBAAL;AAA8B;AAC1B,eAAO,EACH,GAAGY;AADA,SAAP;AAGH;;AAED;AACI,aAAOA,KAAP;AA3ER;AA6EH,CA/ED;;AAiFA,eAAeD,wBAAf","sourcesContent":["import {\n    ADD_MEDICAL_DISEASE_ID,\n    GET_ALL_FAMILY_TYPES,\n    GET_MEDICAL_DISEASES_LIST,\n    ON_ADD_EDIT_FORM_CHANGE,\n    ON_SAVE_FAMILY_DISEASES,\n    REMOVE_MEDICAL_DISEASE_ID,\n    SET_PATIENT_INITIAL_DATA\n} from \"../actions\";\n\nimport * as _ from \"lodash\";\n\nconst initialState = {\n    familyTypes: [],\n    formData: {},\n    medicalDiseases: [],\n    selectedMedicalDiseasesMap: {},\n    currentMedicalDiseasesMap: {},\n    familyTypeID: ''\n};\n\nconst familyTypeAddEditReducer = function (state = initialState, action) {\n\n    switch (action.type) {\n        case GET_ALL_FAMILY_TYPES: {\n            return {\n                ...state,\n                familyTypes: action.payload,\n            }\n        }\n\n        case ON_ADD_EDIT_FORM_CHANGE : {\n            return {\n                ...state,\n                formData: action.payload\n            }\n        }\n\n        case ADD_MEDICAL_DISEASE_ID : {\n\n            let {medicalDiseaseID, familyTypeID} = action.payload;\n            let medicalDiseaseMap = _.cloneDeep(state.selectedMedicalDiseasesMap);\n\n            if (medicalDiseaseMap[familyTypeID]) {\n                medicalDiseaseMap[familyTypeID].push(medicalDiseaseID);\n            } else {\n                medicalDiseaseMap[familyTypeID] = [medicalDiseaseID];\n            }\n\n            return {\n                ...state,\n                selectedMedicalDiseasesMap: medicalDiseaseMap\n            }\n\n        }\n\n        case REMOVE_MEDICAL_DISEASE_ID : {\n            let {medicalDiseaseID, familyTypeID} = action.payload;\n            let medicalDiseaseMap = _.cloneDeep(state.selectedMedicalDiseasesMap);\n            let idArray = medicalDiseaseMap[familyTypeID];\n\n            const index = idArray.indexOf(medicalDiseaseID);\n\n            if (index > -1) {\n                idArray.splice(index, 1);\n            }\n            medicalDiseaseMap[familyTypeID] = idArray;\n\n            return {\n                ...state,\n                selectedMedicalDiseasesMap: medicalDiseaseMap\n            }\n        }\n\n        case GET_MEDICAL_DISEASES_LIST: {\n            return {\n                ...state,\n                medicalDiseases: action.payload\n            }\n        }\n\n        case SET_PATIENT_INITIAL_DATA: {\n            let {currentMedicalDiseasesMap} = action.payload;\n\n            return {\n                ...state,\n                currentMedicalDiseasesMap: currentMedicalDiseasesMap ? currentMedicalDiseasesMap : {},\n                selectedMedicalDiseasesMap: currentMedicalDiseasesMap ? currentMedicalDiseasesMap : {},\n            }\n        }\n\n        case ON_SAVE_FAMILY_DISEASES: {\n            return {\n                ...state,\n            }\n        }\n\n        default :\n            return state;\n    }\n};\n\nexport default familyTypeAddEditReducer;\n\n"]},"metadata":{},"sourceType":"module"}