{"ast":null,"code":"import dataService from \"../../../../../../services/dataService\";\nimport userAppEndpoints from \"./user.app.endpoints\";\nexport const ON_ADD_EDIT_FORM_CHANGE = '[USER ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_RESET = '[USER ADD EDIT] ON_RESET';\nexport const ON_SAVE_UPDATE_USER = '[USER ADD EDIT] ON_SAVE_UPDATE_USER';\nexport const ON_RESET_ADMIN_PASSWORD = '[USER ADD EDIT] ON_RESET_ADMIN_PASSWORD';\nexport const GET_USER = '[USER ADD EDIT] GET_USER';\nexport const GET_ACTIVE_USERS = '[USER ADD EDIT] GET_ACTIVE_USERS';\nexport const GET_ACTIVE_ROLES = '[USER ADD EDIT] GET_ACTIVE_ROLES';\nexport const SET_ROLE_CHANGE = '[USER ADD EDIT] SET_ROLE_CHANGE';\nexport const ON_UPDATE_IMAGE = '[USER ADD EDIT] ON_UPDATE_IMAGE';\nexport function onFormChnange(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_ADD_EDIT_FORM_CHANGE,\n      payload: data\n    });\n  };\n}\nexport function reSet() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET,\n      payload: {}\n    });\n  };\n}\nexport function addAdminUser(data) {\n  const request = dataService.post(userAppEndpoints.addAdminUser, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: ON_SAVE_UPDATE_USER,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function updateAdminUser(data) {\n  const request = dataService.post(userAppEndpoints.updateAdminUser, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: ON_SAVE_UPDATE_USER,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function resetUserPassword(userID) {\n  const request = dataService.post(userAppEndpoints.resetUserPassword, {\n    userID\n  });\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: ON_RESET_ADMIN_PASSWORD,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function updateUserImage(data) {\n  const request = dataService.post(userAppEndpoints.updateUserImage, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: ON_UPDATE_IMAGE,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function getUserDTO(userID) {\n  let endPoint = Object.assign({}, userAppEndpoints.getUserUpdateDTO);\n  endPoint.url = endPoint.url + '/' + userID;\n  const request = dataService.get(endPoint);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_USER,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function getAllUsers() {\n  const request = dataService.get(userAppEndpoints.getAllActiveUsers);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_ACTIVE_USERS,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function onRoleActionChange(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SET_ROLE_CHANGE,\n      payload: data\n    });\n  };\n}\nexport function getAllRoles() {\n  const request = dataService.get(userAppEndpoints.getRoles);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: GET_ACTIVE_ROLES,\n        payload: response.data.result\n      });\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/user/store/actions/user.app.add.edit.action.js"],"names":["dataService","userAppEndpoints","ON_ADD_EDIT_FORM_CHANGE","ON_RESET","ON_SAVE_UPDATE_USER","ON_RESET_ADMIN_PASSWORD","GET_USER","GET_ACTIVE_USERS","GET_ACTIVE_ROLES","SET_ROLE_CHANGE","ON_UPDATE_IMAGE","onFormChnange","data","dispatch","getState","type","payload","reSet","addAdminUser","request","post","then","response","result","updateAdminUser","resetUserPassword","userID","updateUserImage","getUserDTO","endPoint","Object","assign","getUserUpdateDTO","url","get","getAllUsers","getAllActiveUsers","onRoleActionChange","getAllRoles","getRoles"],"mappings":"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","sourcesContent":["import dataService from \"../../../../../../services/dataService\"\nimport userAppEndpoints from \"./user.app.endpoints\";\n\nexport const ON_ADD_EDIT_FORM_CHANGE = '[USER ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_RESET = '[USER ADD EDIT] ON_RESET';\nexport const ON_SAVE_UPDATE_USER = '[USER ADD EDIT] ON_SAVE_UPDATE_USER';\nexport const ON_RESET_ADMIN_PASSWORD = '[USER ADD EDIT] ON_RESET_ADMIN_PASSWORD';\nexport const GET_USER = '[USER ADD EDIT] GET_USER';\nexport const GET_ACTIVE_USERS = '[USER ADD EDIT] GET_ACTIVE_USERS';\nexport const GET_ACTIVE_ROLES = '[USER ADD EDIT] GET_ACTIVE_ROLES';\nexport const SET_ROLE_CHANGE = '[USER ADD EDIT] SET_ROLE_CHANGE';\nexport const ON_UPDATE_IMAGE = '[USER ADD EDIT] ON_UPDATE_IMAGE';\n\n\nexport function onFormChnange(data) {\n\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_ADD_EDIT_FORM_CHANGE,\n            payload: data\n        })\n    }\n}\n\nexport function reSet() {\n\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET,\n            payload: {}\n        })\n    }\n}\n\nexport function addAdminUser(data) {\n    const request = dataService.post(userAppEndpoints.addAdminUser, data);\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n            dispatch({\n                type: ON_SAVE_UPDATE_USER,\n                payload: response.data.result\n            })\n        })\n    }\n}\n\nexport function updateAdminUser(data) {\n    const request = dataService.post(userAppEndpoints.updateAdminUser, data);\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n            dispatch({\n                type: ON_SAVE_UPDATE_USER,\n                payload: response.data.result\n            })\n        })\n    }\n}\n\nexport function resetUserPassword(userID) {\n    const request = dataService.post(userAppEndpoints.resetUserPassword, {\n        userID\n    });\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n            dispatch({\n                type: ON_RESET_ADMIN_PASSWORD,\n                payload: response.data.result\n            })\n        })\n    }\n}\n\nexport function updateUserImage(data) {\n\n    const request = dataService.post(userAppEndpoints.updateUserImage, data);\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n            dispatch({\n                type: ON_UPDATE_IMAGE,\n                payload: response.data.result\n            })\n        })\n    }\n}\n\nexport function getUserDTO(userID) {\n\n    let endPoint = Object.assign({}, userAppEndpoints.getUserUpdateDTO);\n    endPoint.url = endPoint.url + '/' + userID;\n\n    const request = dataService.get(endPoint);\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n            dispatch({\n                type: GET_USER,\n                payload: response.data.result\n            })\n        })\n    }\n}\n\nexport function getAllUsers() {\n\n    const request = dataService.get(userAppEndpoints.getAllActiveUsers);\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n            dispatch({\n                type: GET_ACTIVE_USERS,\n                payload: response.data.result\n            })\n        })\n    }\n\n}\n\nexport function onRoleActionChange(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: SET_ROLE_CHANGE,\n            payload: data\n        })\n    };\n}\n\n\nexport function getAllRoles() {\n\n    const request = dataService.get(userAppEndpoints.getRoles);\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n            dispatch({\n                type: GET_ACTIVE_ROLES,\n                payload: response.data.result\n            })\n        })\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}