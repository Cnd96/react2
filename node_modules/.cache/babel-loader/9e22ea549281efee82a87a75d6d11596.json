{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\config\\\\fitToWork\\\\search\\\\components\\\\FitToWorkResult.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CAlert, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport { getActInaFromConstantForGrid, getCommonStringForGrid } from \"../../../../../../../utils/GridUtil\";\nimport history from \"../../../../../../../@history\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport { setStorageItem } from \"../../../../../../../utils/StorageUtils\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst gotToAddEdit = fitToWorkID => {\n  setStorageItem(Constants.STORAGE.SELECTED_FIT_TO_WORK_ID, fitToWorkID);\n  history.push({\n    pathname: Constants.PAGES.fitToWorkAddEdit\n  });\n};\n\nconst FitToWorkResult = () => {\n  _s();\n\n  const data = useSelector(_ref => {\n    let {\n      fitToWork\n    } = _ref;\n    return fitToWork.fitToWorkSearch;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: /*#__PURE__*/_jsxDEV(CCol, {\n        xs: \"12\",\n        children: /*#__PURE__*/_jsxDEV(CCard, {\n          children: /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: [data.fitToWorkList && data.fitToWorkList.length == 0 && /*#__PURE__*/_jsxDEV(CAlert, {\n              color: \"warning\",\n              children: \"No Fit to Work Categories(s) found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this), data.fitToWorkList && data.fitToWorkList.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-striped\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Category\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 38,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 39,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 37,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: data.fitToWorkList.map(data => {\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        className: 'clickable-data-row',\n                        onClick: e => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          gotToAddEdit(data.fitToWorkID);\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getCommonStringForGrid(data.category)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 55,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getActInaFromConstantForGrid(data.status)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 56,\n                          columnNumber: 61\n                        }, this)]\n                      }, data.fitToWorkID, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 47,\n                        columnNumber: 57\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 37\n              }, this)\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(FitToWorkResult, \"0jBbmNjfXnGYIThfZPLXiFYV2+k=\", false, function () {\n  return [useSelector];\n});\n\n_c = FitToWorkResult;\nexport default FitToWorkResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"FitToWorkResult\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/fitToWork/search/components/FitToWorkResult.js"],"names":["React","CAlert","CCard","CCardBody","CCol","CRow","getActInaFromConstantForGrid","getCommonStringForGrid","history","Constants","setStorageItem","useSelector","gotToAddEdit","fitToWorkID","STORAGE","SELECTED_FIT_TO_WORK_ID","push","pathname","PAGES","fitToWorkAddEdit","FitToWorkResult","data","fitToWork","fitToWorkSearch","fitToWorkList","length","map","e","preventDefault","stopPropagation","category","status"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,SAAvB,EAAkCC,IAAlC,EAAwCC,IAAxC,QAAmD,eAAnD;AACA,SAAQC,4BAAR,EAAsCC,sBAAtC,QAAmE,qCAAnE;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAQC,cAAR,QAA6B,yCAA7B;AACA,SAAQC,WAAR,QAA0B,aAA1B;;;;AAEA,MAAMC,YAAY,GAAIC,WAAD,IAAiB;AAClCH,EAAAA,cAAc,CAACD,SAAS,CAACK,OAAV,CAAkBC,uBAAnB,EAA4CF,WAA5C,CAAd;AACAL,EAAAA,OAAO,CAACQ,IAAR,CAAa;AACTC,IAAAA,QAAQ,EAAER,SAAS,CAACS,KAAV,CAAgBC;AADjB,GAAb;AAGH,CALD;;AAMA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAMC,IAAI,GAAGV,WAAW,CAAC;AAAA,QAAC;AAACW,MAAAA;AAAD,KAAD;AAAA,WAAiBA,SAAS,CAACC,eAA3B;AAAA,GAAD,CAAxB;AACA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,IAAT;AAAA,+BACI,QAAC,KAAD;AAAA,iCACI,QAAC,SAAD;AAAA,uBAGQF,IAAI,CAACG,aAAL,IAAsBH,IAAI,CAACG,aAAL,CAAmBC,MAAnB,IAA6B,CAAnD,iBACA,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJR,EAUQJ,IAAI,CAACG,aAAL,IAAsBH,IAAI,CAACG,aAAL,CAAmBC,MAAnB,GAA4B,CAAlD,iBACA;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,kBAAf;AAAA,uCACI;AAAO,kBAAA,SAAS,EAAC,qBAAjB;AAAA,0CACI;AAAA,2CACA;AAAA,8CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAOI;AAAA,8BAGIJ,IAAI,CAACG,aAAL,CAAmBE,GAAnB,CAAwBL,IAAD,IAAU;AAC7B,0CACI;AACI,wBAAA,SAAS,EAAE,oBADf;AAEI,wBAAA,OAAO,EAAGM,CAAD,IAAO;AACZA,0BAAAA,CAAC,CAACC,cAAF;AACAD,0BAAAA,CAAC,CAACE,eAAF;AACAjB,0BAAAA,YAAY,CAACS,IAAI,CAACR,WAAN,CAAZ;AACH,yBANL;AAAA,gDAQI;AAAA,oCAAKN,sBAAsB,CAACc,IAAI,CAACS,QAAN;AAA3B;AAAA;AAAA;AAAA;AAAA,gCARJ,eASI;AAAA,oCAEQxB,4BAA4B,CAACe,IAAI,CAACU,MAAN;AAFpC;AAAA;AAAA;AAAA;AAAA,gCATJ;AAAA,yBAASV,IAAI,CAACR,WAAd;AAAA;AAAA;AAAA;AAAA,8BADJ;AAiBH,qBAlBD;AAHJ;AAAA;AAAA;AAAA;AAAA,0BAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,6BAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA2DH,CA7DD;;GAAMO,e;UACWT,W;;;KADXS,e;AA+DN,eAAeA,eAAf","sourcesContent":["import React from 'react';\nimport {CAlert, CCard, CCardBody, CCol, CRow} from \"@coreui/react\";\nimport {getActInaFromConstantForGrid, getCommonStringForGrid} from \"../../../../../../../utils/GridUtil\";\nimport history from \"../../../../../../../@history\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport {setStorageItem} from \"../../../../../../../utils/StorageUtils\";\nimport {useSelector} from \"react-redux\";\n\nconst gotToAddEdit = (fitToWorkID) => {\n    setStorageItem(Constants.STORAGE.SELECTED_FIT_TO_WORK_ID, fitToWorkID);\n    history.push({\n        pathname: Constants.PAGES.fitToWorkAddEdit\n    });\n};\nconst FitToWorkResult = () => {\n    const data = useSelector(({fitToWork}) => fitToWork.fitToWorkSearch);\n    return (\n        <>\n            <CRow>\n                <CCol xs=\"12\">\n                    <CCard>\n                        <CCardBody>\n\n                            {\n                                data.fitToWorkList && data.fitToWorkList.length == 0 &&\n                                <CAlert color=\"warning\">\n                                    No Fit to Work Categories(s) found.\n                                </CAlert>\n                            }\n\n                            {\n                                data.fitToWorkList && data.fitToWorkList.length > 0 &&\n                                <>\n                                    <div className=\"table-responsive\">\n                                        <table className=\"table table-striped\">\n                                            <thead>\n                                            <tr>\n                                                <th>Category</th>\n                                                <th>Status</th>\n                                            </tr>\n                                            </thead>\n                                            <tbody>\n\n                                            {\n                                                data.fitToWorkList.map((data) => {\n                                                    return (\n                                                        <tr key={data.fitToWorkID}\n                                                            className={'clickable-data-row'}\n                                                            onClick={(e) => {\n                                                                e.preventDefault();\n                                                                e.stopPropagation();\n                                                                gotToAddEdit(data.fitToWorkID);\n                                                            }}\n                                                        >\n                                                            <td>{getCommonStringForGrid(data.category)}</td>\n                                                            <td>\n                                                                {\n                                                                    getActInaFromConstantForGrid(data.status)\n                                                                }\n                                                            </td>\n                                                        </tr>\n                                                    );\n                                                })\n                                            }\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </>\n                            }\n                        </CCardBody>\n                    </CCard>\n                </CCol>\n            </CRow>\n        </>\n    );\n};\n\nexport default FitToWorkResult;"]},"metadata":{},"sourceType":"module"}