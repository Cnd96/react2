{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\config\\\\medicine\\\\add-edit\\\\components\\\\MedicineAddEditBase.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MedicineAddEditFrom from \"./MedicineAddEditFrom\";\nimport { CButton, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport * as _ from \"lodash\";\nimport { getStringArrayVales } from \"./SupportFuntions\";\nimport * as Actions from \"../../store/action/medicine.add.edit.action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MedicineAddEditBase = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = useSelector(_ref => {\n    let {\n      medicine\n    } = _ref;\n    return medicine.medicineAddEdit;\n  });\n\n  const generateSaveObj = () => {\n    let doseArr = [];\n    let frequentArr = [];\n    let mealTimeArr = [];\n    let tradeArr = [];\n\n    let medicine = _.cloneDeep(data.medicine);\n\n    if (!_.isEmpty(data.formData.values)) {\n      let formDoseArray = _.uniq(data.formData.values.medicineDose.split(','));\n\n      let formFrequentArray = _.uniq(data.formData.values.medicineFrequent.split(','));\n\n      let formMealTime = _.uniq(data.formData.values.medicineMealTime.split(','));\n\n      let formTrades = _.uniq(data.formData.values.trade.split(','));\n\n      formDoseArray.forEach((dose, index) => {\n        if (!_.isEmpty(dose)) {\n          doseArr.push(Object.assign({}, {\n            dose: dose.trim()\n          }, {\n            status: Constants.STATUS_CONST.ACT,\n            isDefault: index === 0 ? Constants.YES_NO_CONST.Y : Constants.YES_NO_CONST.N\n          }));\n        }\n      }); //Remove Does Array\n\n      let currentDoses = getStringArrayVales(medicine.doseDTOS ? medicine.doseDTOS : [], 'dose');\n\n      let removedDoeses = _.difference(currentDoses, formDoseArray);\n\n      console.log(\"currentDoses\", currentDoses);\n      console.log(\"formDoseArray\", formDoseArray);\n      console.log(\"Removed Doesea\", removedDoeses);\n\n      if (removedDoeses.length > 0) {\n        removedDoeses.forEach(element => {\n          doseArr.push(Object.assign({}, {\n            dose: element.trim()\n          }, {\n            status: Constants.STATUS_CONST.INA,\n            isDefault: Constants.YES_NO_CONST.N\n          }));\n        });\n      }\n\n      formFrequentArray.forEach((frequent, index) => {\n        if (!_.isEmpty(frequent)) {\n          frequentArr.push(Object.assign({}, {\n            frequent: _.upperFirst(frequent.trim())\n          }, {\n            status: Constants.STATUS_CONST.ACT,\n            isDefault: index === 0 ? Constants.YES_NO_CONST.Y : Constants.YES_NO_CONST.N\n          }));\n        }\n      }); // To Remove Frequent Array\n\n      let currentFrequents = getStringArrayVales(medicine.frequentDTOS ? medicine.frequentDTOS : [], 'frequent');\n\n      let removedFrequents = _.difference(currentFrequents, formFrequentArray);\n\n      console.log(\"currentFrequents\", currentFrequents);\n      console.log(\"formFrequentArray\", formFrequentArray);\n      console.log(\"remove frequents\", removedFrequents);\n\n      if (removedFrequents.length > 0) {\n        removedFrequents.forEach(element => {\n          frequentArr.push(Object.assign({}, {\n            frequent: element.trim()\n          }, {\n            status: Constants.STATUS_CONST.INA,\n            isDefault: Constants.YES_NO_CONST.N\n          }));\n        });\n      }\n\n      formMealTime.forEach((mealTime, index) => {\n        if (!_.isEmpty(mealTime)) {\n          mealTimeArr.push(Object.assign({}, {\n            mealTime: _.upperFirst(mealTime.trim())\n          }, {\n            status: Constants.STATUS_CONST.ACT,\n            isDefault: index === 0 ? Constants.YES_NO_CONST.Y : Constants.YES_NO_CONST.N\n          }));\n        }\n      }); //To Remove Meal times\n\n      let currentMealTimes = getStringArrayVales(medicine.mealTimeDTOS ? medicine.mealTimeDTOS : [], 'mealTime');\n\n      let removedMealTimes = _.difference(currentMealTimes, formMealTime);\n\n      console.log(\"currnetMeals\", currentMealTimes);\n      console.log(\"formMealtimes\", formMealTime);\n      console.log(\"remove meals\", removedMealTimes);\n\n      if (removedMealTimes.length > 0) {\n        removedMealTimes.forEach(element => {\n          mealTimeArr.push(Object.assign({}, {\n            mealTime: element.trim()\n          }, {\n            status: Constants.STATUS_CONST.INA,\n            isDefault: Constants.YES_NO_CONST.N\n          }));\n        });\n      }\n\n      formTrades.forEach(trade => {\n        if (!_.isEmpty(trade)) {\n          tradeArr.push(Object.assign({}, {\n            tradeName: _.upperFirst(trade.trim())\n          }, {\n            status: Constants.STATUS_CONST.ACT\n          }));\n        }\n      });\n      let currentTrades = getStringArrayVales(medicine.tradeDTOS ? medicine.tradeDTOS : [], 'tradeName');\n\n      let removedTrades = _.difference(currentTrades, formTrades);\n\n      if (removedTrades.length > 0) {\n        removedTrades.forEach(element => {\n          tradeArr.push(Object.assign({}, {\n            tradeName: element.trim()\n          }, {\n            status: Constants.STATUS_CONST.INA\n          }));\n        });\n      }\n\n      let saveObject = Object.assign({}, {\n        medicineID: data.formData.values.medicineID\n      }, {\n        medicineName: data.formData.values.medicineName\n      }, {\n        doseDTOS: doseArr\n      }, {\n        frequentDTOS: frequentArr\n      }, {\n        mealTimeDTOS: mealTimeArr\n      }, {\n        tradeDTOS: tradeArr\n      }, {\n        status: data.formData.values.status\n      });\n      console.log(saveObject);\n      dispatch(Actions.saveOrUpdateMedicine(saveObject));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: /*#__PURE__*/_jsxDEV(CCol, {\n        xs: \"12\",\n        children: /*#__PURE__*/_jsxDEV(CCard, {\n          children: /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: [/*#__PURE__*/_jsxDEV(MedicineAddEditFrom, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CRow, {\n              children: /*#__PURE__*/_jsxDEV(CCol, {\n                xs: \"12\",\n                children: /*#__PURE__*/_jsxDEV(CButton // disabled={!data.formData.isValid}\n                , {\n                  onClick: () => {\n                    console.log(\"here We save\");\n                    generateSaveObj();\n                  },\n                  color: \"primary\",\n                  className: \"float-right\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MedicineAddEditBase, \"VrJnXoQP2+XQ+/f/72CAYzsOD3w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MedicineAddEditBase;\nexport default MedicineAddEditBase;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicineAddEditBase\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/medicine/add-edit/components/MedicineAddEditBase.js"],"names":["React","MedicineAddEditFrom","CButton","CCard","CCardBody","CCol","CRow","useDispatch","useSelector","Constants","_","getStringArrayVales","Actions","MedicineAddEditBase","dispatch","data","medicine","medicineAddEdit","generateSaveObj","doseArr","frequentArr","mealTimeArr","tradeArr","cloneDeep","isEmpty","formData","values","formDoseArray","uniq","medicineDose","split","formFrequentArray","medicineFrequent","formMealTime","medicineMealTime","formTrades","trade","forEach","dose","index","push","Object","assign","trim","status","STATUS_CONST","ACT","isDefault","YES_NO_CONST","Y","N","currentDoses","doseDTOS","removedDoeses","difference","console","log","length","element","INA","frequent","upperFirst","currentFrequents","frequentDTOS","removedFrequents","mealTime","currentMealTimes","mealTimeDTOS","removedMealTimes","tradeName","currentTrades","tradeDTOS","removedTrades","saveObject","medicineID","medicineName","saveOrUpdateMedicine"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,IAAnC,EAAyCC,IAAzC,QAAoD,eAApD;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,SAAQC,mBAAR,QAAkC,mBAAlC;AACA,OAAO,KAAKC,OAAZ,MAAyB,6CAAzB;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAE9B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,IAAI,GAAGP,WAAW,CAAC;AAAA,QAAC;AAACQ,MAAAA;AAAD,KAAD;AAAA,WAAgBA,QAAQ,CAACC,eAAzB;AAAA,GAAD,CAAxB;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC1B,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AAEA,QAAIN,QAAQ,GAAGN,CAAC,CAACa,SAAF,CAAYR,IAAI,CAACC,QAAjB,CAAf;;AAEA,QAAI,CAACN,CAAC,CAACc,OAAF,CAAUT,IAAI,CAACU,QAAL,CAAcC,MAAxB,CAAL,EAAsC;AAElC,UAAIC,aAAa,GAAGjB,CAAC,CAACkB,IAAF,CAAOb,IAAI,CAACU,QAAL,CAAcC,MAAd,CAAqBG,YAArB,CAAkCC,KAAlC,CAAwC,GAAxC,CAAP,CAApB;;AACA,UAAIC,iBAAiB,GAAGrB,CAAC,CAACkB,IAAF,CAAOb,IAAI,CAACU,QAAL,CAAcC,MAAd,CAAqBM,gBAArB,CAAsCF,KAAtC,CAA4C,GAA5C,CAAP,CAAxB;;AACA,UAAIG,YAAY,GAAGvB,CAAC,CAACkB,IAAF,CAAOb,IAAI,CAACU,QAAL,CAAcC,MAAd,CAAqBQ,gBAArB,CAAsCJ,KAAtC,CAA4C,GAA5C,CAAP,CAAnB;;AACA,UAAIK,UAAU,GAAGzB,CAAC,CAACkB,IAAF,CAAOb,IAAI,CAACU,QAAL,CAAcC,MAAd,CAAqBU,KAArB,CAA2BN,KAA3B,CAAiC,GAAjC,CAAP,CAAjB;;AAEAH,MAAAA,aAAa,CAACU,OAAd,CACI,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACb,YAAI,CAAC7B,CAAC,CAACc,OAAF,CAAUc,IAAV,CAAL,EAAsB;AAClBnB,UAAAA,OAAO,CAACqB,IAAR,CAAaC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAACJ,YAAAA,IAAI,EAAEA,IAAI,CAACK,IAAL;AAAP,WAAlB,EAAuC;AAChDC,YAAAA,MAAM,EAAEnC,SAAS,CAACoC,YAAV,CAAuBC,GADiB;AAEhDC,YAAAA,SAAS,EAAER,KAAK,KAAK,CAAV,GAAc9B,SAAS,CAACuC,YAAV,CAAuBC,CAArC,GAAyCxC,SAAS,CAACuC,YAAV,CAAuBE;AAF3B,WAAvC,CAAb;AAIH;AACJ,OARL,EAPkC,CAkBlC;;AACA,UAAIC,YAAY,GAAGxC,mBAAmB,CAACK,QAAQ,CAACoC,QAAT,GAAoBpC,QAAQ,CAACoC,QAA7B,GAAwC,EAAzC,EAA6C,MAA7C,CAAtC;;AACA,UAAIC,aAAa,GAAG3C,CAAC,CAAC4C,UAAF,CAAaH,YAAb,EAA2BxB,aAA3B,CAApB;;AACA4B,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,YAA5B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B7B,aAA7B;AACA4B,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,aAA9B;;AACA,UAAIA,aAAa,CAACI,MAAd,GAAuB,CAA3B,EAA8B;AAC1BJ,QAAAA,aAAa,CAAChB,OAAd,CAAsBqB,OAAO,IAAI;AAC7BvC,UAAAA,OAAO,CAACqB,IAAR,CAAaC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAACJ,YAAAA,IAAI,EAAEoB,OAAO,CAACf,IAAR;AAAP,WAAlB,EAA0C;AACnDC,YAAAA,MAAM,EAAEnC,SAAS,CAACoC,YAAV,CAAuBc,GADoB;AAEnDZ,YAAAA,SAAS,EAAEtC,SAAS,CAACuC,YAAV,CAAuBE;AAFiB,WAA1C,CAAb;AAIH,SALD;AAMH;;AAGDnB,MAAAA,iBAAiB,CAACM,OAAlB,CACI,CAACuB,QAAD,EAAWrB,KAAX,KAAqB;AACjB,YAAI,CAAC7B,CAAC,CAACc,OAAF,CAAUoC,QAAV,CAAL,EAA0B;AACtBxC,UAAAA,WAAW,CAACoB,IAAZ,CAAiBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAACkB,YAAAA,QAAQ,EAAElD,CAAC,CAACmD,UAAF,CAAaD,QAAQ,CAACjB,IAAT,EAAb;AAAX,WAAlB,EAA6D;AAC1EC,YAAAA,MAAM,EAAEnC,SAAS,CAACoC,YAAV,CAAuBC,GAD2C;AAE1EC,YAAAA,SAAS,EAAER,KAAK,KAAK,CAAV,GAAc9B,SAAS,CAACuC,YAAV,CAAuBC,CAArC,GAAyCxC,SAAS,CAACuC,YAAV,CAAuBE;AAFD,WAA7D,CAAjB;AAIH;AACJ,OARL,EAlCkC,CA6ClC;;AACA,UAAIY,gBAAgB,GAAGnD,mBAAmB,CAACK,QAAQ,CAAC+C,YAAT,GAAwB/C,QAAQ,CAAC+C,YAAjC,GAAgD,EAAjD,EAAqD,UAArD,CAA1C;;AACA,UAAIC,gBAAgB,GAAGtD,CAAC,CAAC4C,UAAF,CAAaQ,gBAAb,EAA+B/B,iBAA/B,CAAvB;;AACAwB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCM,gBAAhC;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCzB,iBAAjC;AACAwB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCQ,gBAAhC;;AACA,UAAIA,gBAAgB,CAACP,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BO,QAAAA,gBAAgB,CAAC3B,OAAjB,CAAyBqB,OAAO,IAAI;AAChCtC,UAAAA,WAAW,CAACoB,IAAZ,CAAiBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAACkB,YAAAA,QAAQ,EAAEF,OAAO,CAACf,IAAR;AAAX,WAAlB,EAA8C;AAC3DC,YAAAA,MAAM,EAAEnC,SAAS,CAACoC,YAAV,CAAuBc,GAD4B;AAE3DZ,YAAAA,SAAS,EAAEtC,SAAS,CAACuC,YAAV,CAAuBE;AAFyB,WAA9C,CAAjB;AAIH,SALD;AAMH;;AAGDjB,MAAAA,YAAY,CAACI,OAAb,CACI,CAAC4B,QAAD,EAAW1B,KAAX,KAAqB;AACjB,YAAI,CAAC7B,CAAC,CAACc,OAAF,CAAUyC,QAAV,CAAL,EAA0B;AACtB5C,UAAAA,WAAW,CAACmB,IAAZ,CAAiBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAACuB,YAAAA,QAAQ,EAAEvD,CAAC,CAACmD,UAAF,CAAaI,QAAQ,CAACtB,IAAT,EAAb;AAAX,WAAlB,EAA6D;AAC1EC,YAAAA,MAAM,EAAEnC,SAAS,CAACoC,YAAV,CAAuBC,GAD2C;AAE1EC,YAAAA,SAAS,EAAER,KAAK,KAAK,CAAV,GAAc9B,SAAS,CAACuC,YAAV,CAAuBC,CAArC,GAAyCxC,SAAS,CAACuC,YAAV,CAAuBE;AAFD,WAA7D,CAAjB;AAIH;AACJ,OARL,EA7DkC,CAwElC;;AACA,UAAIgB,gBAAgB,GAAGvD,mBAAmB,CAACK,QAAQ,CAACmD,YAAT,GAAwBnD,QAAQ,CAACmD,YAAjC,GAAgD,EAAjD,EAAqD,UAArD,CAA1C;;AACA,UAAIC,gBAAgB,GAAG1D,CAAC,CAAC4C,UAAF,CAAaY,gBAAb,EAA+BjC,YAA/B,CAAvB;;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BU,gBAA5B;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BvB,YAA7B;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BY,gBAA5B;;AACA,UAAIA,gBAAgB,CAACX,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BW,QAAAA,gBAAgB,CAAC/B,OAAjB,CAAyBqB,OAAO,IAAI;AAChCrC,UAAAA,WAAW,CAACmB,IAAZ,CAAiBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAACuB,YAAAA,QAAQ,EAAEP,OAAO,CAACf,IAAR;AAAX,WAAlB,EAA8C;AAC3DC,YAAAA,MAAM,EAAEnC,SAAS,CAACoC,YAAV,CAAuBc,GAD4B;AAE3DZ,YAAAA,SAAS,EAAEtC,SAAS,CAACuC,YAAV,CAAuBE;AAFyB,WAA9C,CAAjB;AAIH,SALD;AAMH;;AAEDf,MAAAA,UAAU,CAACE,OAAX,CACID,KAAK,IAAI;AACL,YAAI,CAAC1B,CAAC,CAACc,OAAF,CAAUY,KAAV,CAAL,EAAuB;AACnBd,UAAAA,QAAQ,CAACkB,IAAT,CAAcC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAAC2B,YAAAA,SAAS,EAAE3D,CAAC,CAACmD,UAAF,CAAazB,KAAK,CAACO,IAAN,EAAb;AAAZ,WAAlB,EAA2D;AACrEC,YAAAA,MAAM,EAAEnC,SAAS,CAACoC,YAAV,CAAuBC;AADsC,WAA3D,CAAd;AAGH;AACJ,OAPL;AAUA,UAAIwB,aAAa,GAAG3D,mBAAmB,CAACK,QAAQ,CAACuD,SAAT,GAAqBvD,QAAQ,CAACuD,SAA9B,GAA0C,EAA3C,EAA+C,WAA/C,CAAvC;;AACA,UAAIC,aAAa,GAAG9D,CAAC,CAAC4C,UAAF,CAAagB,aAAb,EAA4BnC,UAA5B,CAApB;;AACA,UAAIqC,aAAa,CAACf,MAAd,GAAuB,CAA3B,EAA8B;AAC1Be,QAAAA,aAAa,CAACnC,OAAd,CAAsBqB,OAAO,IAAI;AAC7BpC,UAAAA,QAAQ,CAACkB,IAAT,CAAcC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAAC2B,YAAAA,SAAS,EAAEX,OAAO,CAACf,IAAR;AAAZ,WAAlB,EAA+C;AACzDC,YAAAA,MAAM,EAAEnC,SAAS,CAACoC,YAAV,CAAuBc;AAD0B,WAA/C,CAAd;AAGH,SAJD;AAKH;;AAED,UAAIc,UAAU,GAAGhC,MAAM,CAACC,MAAP,CACb,EADa,EAEb;AAACgC,QAAAA,UAAU,EAAE3D,IAAI,CAACU,QAAL,CAAcC,MAAd,CAAqBgD;AAAlC,OAFa,EAGb;AAACC,QAAAA,YAAY,EAAE5D,IAAI,CAACU,QAAL,CAAcC,MAAd,CAAqBiD;AAApC,OAHa,EAIb;AAACvB,QAAAA,QAAQ,EAAEjC;AAAX,OAJa,EAKb;AAAC4C,QAAAA,YAAY,EAAE3C;AAAf,OALa,EAMb;AAAC+C,QAAAA,YAAY,EAAE9C;AAAf,OANa,EAOb;AAACkD,QAAAA,SAAS,EAAEjD;AAAZ,OAPa,EAQb;AAACsB,QAAAA,MAAM,EAAE7B,IAAI,CAACU,QAAL,CAAcC,MAAd,CAAqBkB;AAA9B,OARa,CAAjB;AAUAW,MAAAA,OAAO,CAACC,GAAR,CAAYiB,UAAZ;AACA3D,MAAAA,QAAQ,CAACF,OAAO,CAACgE,oBAAR,CAA6BH,UAA7B,CAAD,CAAR;AACH;AACJ,GAhID;;AAkIA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,IAAT;AAAA,+BACI,QAAC,KAAD;AAAA,iCACI,QAAC,SAAD;AAAA,oCACI,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,IAAT;AAAA,uCACI,QAAC,OAAD,CACI;AADJ;AAEI,kBAAA,OAAO,EAAE,MAAM;AACXlB,oBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAtC,oBAAAA,eAAe;AAClB,mBALL;AAMI,kBAAA,KAAK,EAAC,SANV;AAMoB,kBAAA,SAAS,EAAC,aAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA/JD;;GAAML,mB;UAEeN,W,EACJC,W;;;KAHXK,mB;AAiKN,eAAeA,mBAAf","sourcesContent":["import React from 'react';\nimport MedicineAddEditFrom from \"./MedicineAddEditFrom\";\nimport {CButton, CCard, CCardBody, CCol, CRow} from \"@coreui/react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Constants from \"../../../../../../../utils/Constants\";\nimport * as _ from \"lodash\";\nimport {getStringArrayVales} from \"./SupportFuntions\";\nimport * as Actions from \"../../store/action/medicine.add.edit.action\"\n\nconst MedicineAddEditBase = () => {\n\n    const dispatch = useDispatch();\n    const data = useSelector(({medicine}) => medicine.medicineAddEdit);\n\n    const generateSaveObj = () => {\n        let doseArr = [];\n        let frequentArr = [];\n        let mealTimeArr = [];\n        let tradeArr = [];\n\n        let medicine = _.cloneDeep(data.medicine);\n\n        if (!_.isEmpty(data.formData.values)) {\n\n            let formDoseArray = _.uniq(data.formData.values.medicineDose.split(','));\n            let formFrequentArray = _.uniq(data.formData.values.medicineFrequent.split(','));\n            let formMealTime = _.uniq(data.formData.values.medicineMealTime.split(','));\n            let formTrades = _.uniq(data.formData.values.trade.split(','));\n\n            formDoseArray.forEach(\n                (dose, index) => {\n                    if (!_.isEmpty(dose)) {\n                        doseArr.push(Object.assign({}, {dose: dose.trim()}, {\n                            status: Constants.STATUS_CONST.ACT,\n                            isDefault: index === 0 ? Constants.YES_NO_CONST.Y : Constants.YES_NO_CONST.N\n                        }))\n                    }\n                }\n            );\n\n            //Remove Does Array\n            let currentDoses = getStringArrayVales(medicine.doseDTOS ? medicine.doseDTOS : [], 'dose');\n            let removedDoeses = _.difference(currentDoses, formDoseArray);\n            console.log(\"currentDoses\", currentDoses);\n            console.log(\"formDoseArray\", formDoseArray);\n            console.log(\"Removed Doesea\", removedDoeses);\n            if (removedDoeses.length > 0) {\n                removedDoeses.forEach(element => {\n                    doseArr.push(Object.assign({}, {dose: element.trim()}, {\n                        status: Constants.STATUS_CONST.INA,\n                        isDefault: Constants.YES_NO_CONST.N\n                    }))\n                });\n            }\n\n\n            formFrequentArray.forEach(\n                (frequent, index) => {\n                    if (!_.isEmpty(frequent)) {\n                        frequentArr.push(Object.assign({}, {frequent: _.upperFirst(frequent.trim())}, {\n                            status: Constants.STATUS_CONST.ACT,\n                            isDefault: index === 0 ? Constants.YES_NO_CONST.Y : Constants.YES_NO_CONST.N\n                        }))\n                    }\n                }\n            );\n\n            // To Remove Frequent Array\n            let currentFrequents = getStringArrayVales(medicine.frequentDTOS ? medicine.frequentDTOS : [], 'frequent');\n            let removedFrequents = _.difference(currentFrequents, formFrequentArray);\n            console.log(\"currentFrequents\", currentFrequents);\n            console.log(\"formFrequentArray\", formFrequentArray);\n            console.log(\"remove frequents\", removedFrequents);\n            if (removedFrequents.length > 0) {\n                removedFrequents.forEach(element => {\n                    frequentArr.push(Object.assign({}, {frequent: element.trim()}, {\n                        status: Constants.STATUS_CONST.INA,\n                        isDefault: Constants.YES_NO_CONST.N\n                    }))\n                });\n            }\n\n\n            formMealTime.forEach(\n                (mealTime, index) => {\n                    if (!_.isEmpty(mealTime)) {\n                        mealTimeArr.push(Object.assign({}, {mealTime: _.upperFirst(mealTime.trim())}, {\n                            status: Constants.STATUS_CONST.ACT,\n                            isDefault: index === 0 ? Constants.YES_NO_CONST.Y : Constants.YES_NO_CONST.N\n                        }))\n                    }\n                }\n            );\n\n            //To Remove Meal times\n            let currentMealTimes = getStringArrayVales(medicine.mealTimeDTOS ? medicine.mealTimeDTOS : [], 'mealTime');\n            let removedMealTimes = _.difference(currentMealTimes, formMealTime);\n            console.log(\"currnetMeals\", currentMealTimes);\n            console.log(\"formMealtimes\", formMealTime);\n            console.log(\"remove meals\", removedMealTimes);\n            if (removedMealTimes.length > 0) {\n                removedMealTimes.forEach(element => {\n                    mealTimeArr.push(Object.assign({}, {mealTime: element.trim()}, {\n                        status: Constants.STATUS_CONST.INA,\n                        isDefault: Constants.YES_NO_CONST.N\n                    }))\n                });\n            }\n\n            formTrades.forEach(\n                trade => {\n                    if (!_.isEmpty(trade)) {\n                        tradeArr.push(Object.assign({}, {tradeName: _.upperFirst(trade.trim())}, {\n                            status: Constants.STATUS_CONST.ACT\n                        }))\n                    }\n                }\n            );\n\n            let currentTrades = getStringArrayVales(medicine.tradeDTOS ? medicine.tradeDTOS : [], 'tradeName');\n            let removedTrades = _.difference(currentTrades, formTrades);\n            if (removedTrades.length > 0) {\n                removedTrades.forEach(element => {\n                    tradeArr.push(Object.assign({}, {tradeName: element.trim()}, {\n                        status: Constants.STATUS_CONST.INA,\n                    }))\n                });\n            }\n\n            let saveObject = Object.assign(\n                {},\n                {medicineID: data.formData.values.medicineID},\n                {medicineName: data.formData.values.medicineName},\n                {doseDTOS: doseArr},\n                {frequentDTOS: frequentArr},\n                {mealTimeDTOS: mealTimeArr},\n                {tradeDTOS: tradeArr},\n                {status: data.formData.values.status}\n            );\n            console.log(saveObject);\n            dispatch(Actions.saveOrUpdateMedicine(saveObject));\n        }\n    };\n\n    return (\n        <div>\n            <CRow>\n                <CCol xs=\"12\">\n                    <CCard>\n                        <CCardBody>\n                            <MedicineAddEditFrom/>\n                            <CRow>\n                                <CCol xs=\"12\">\n                                    <CButton\n                                        // disabled={!data.formData.isValid}\n                                        onClick={() => {\n                                            console.log(\"here We save\");\n                                            generateSaveObj();\n                                        }}\n                                        color=\"primary\" className=\"float-right\">Save</CButton>\n                                </CCol>\n                            </CRow>\n                        </CCardBody>\n                    </CCard>\n                </CCol>\n            </CRow>\n        </div>\n    );\n};\n\nexport default MedicineAddEditBase;"]},"metadata":{},"sourceType":"module"}