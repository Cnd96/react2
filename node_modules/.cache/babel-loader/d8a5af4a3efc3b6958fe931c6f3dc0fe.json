{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\selectPhysicalActivities\\\\components\\\\PhysicalActivity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CustomCheckBox from \"../../../../../../../common/CustomCheckBox\";\nimport * as Action from \"../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhysicalActivity = _ref => {\n  _s();\n\n  let {\n    physicalActivity\n  } = _ref;\n  const dispatch = useDispatch();\n  const physicalActivitiesData = useSelector(_ref2 => {\n    let {\n      selectPhysicalActivities\n    } = _ref2;\n    return selectPhysicalActivities.selectPhysicalActivity;\n  });\n  const [index, setIndex] = useState();\n  useEffect(() => {\n    let index = physicalActivitiesData.currentIDs.findIndex(id => {\n      return id == physicalActivity.physicalActivityID;\n    });\n\n    if (index !== -1) {\n      dispatch(Action.onSelectOption(physicalActivity));\n    }\n\n    setIndex(index);\n  }, []);\n  useEffect(() => {\n    let index = physicalActivitiesData.currentIDs.findIndex(id => {\n      return id == physicalActivity.physicalActivityID;\n    });\n    setIndex(index);\n  }, [physicalActivitiesData.currentIDs, physicalActivitiesData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'privilege-checkbox',\n    children: /*#__PURE__*/_jsxDEV(CustomCheckBox, {\n      id: physicalActivity.physicalActivityID,\n      name: physicalActivity.physicalActivityID,\n      value: physicalActivity,\n      checked: index !== -1,\n      label: physicalActivity.activityName,\n      onCheckChange: (e, value) => {\n        dispatch(Action.onSelectOption(value));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PhysicalActivity, \"JsjJbr86imlIxZdaaCYBYXruTuQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PhysicalActivity;\nexport default PhysicalActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhysicalActivity\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/selectPhysicalActivities/components/PhysicalActivity.js"],"names":["React","useEffect","useState","CustomCheckBox","Action","useDispatch","useSelector","PhysicalActivity","physicalActivity","dispatch","physicalActivitiesData","selectPhysicalActivities","selectPhysicalActivity","index","setIndex","currentIDs","findIndex","id","physicalActivityID","onSelectOption","activityName","e","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;;AAEA,MAAMC,gBAAgB,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAACC,IAAAA;AAAD,GAAuB;AAE7C,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,sBAAsB,GAAGJ,WAAW,CAAC;AAAA,QAAC;AAACK,MAAAA;AAAD,KAAD;AAAA,WAAgCA,wBAAwB,CAACC,sBAAzD;AAAA,GAAD,CAA1C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,KAAK,GAAGH,sBAAsB,CAACK,UAAvB,CAAkCC,SAAlC,CAA6CC,EAAD,IAAQ;AAC5D,aAAOA,EAAE,IAAIT,gBAAgB,CAACU,kBAA9B;AACH,KAFW,CAAZ;;AAGA,QAAIL,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdJ,MAAAA,QAAQ,CAACL,MAAM,CAACe,cAAP,CAAsBX,gBAAtB,CAAD,CAAR;AACH;;AACDM,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GARQ,EAQN,EARM,CAAT;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,KAAK,GAAGH,sBAAsB,CAACK,UAAvB,CAAkCC,SAAlC,CAA6CC,EAAD,IAAQ;AAC5D,aAAOA,EAAE,IAAIT,gBAAgB,CAACU,kBAA9B;AACH,KAFW,CAAZ;AAGAJ,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GALQ,EAKN,CAACH,sBAAsB,CAACK,UAAxB,EAAoCL,sBAApC,CALM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAE,oBAAhB;AAAA,2BACI,QAAC,cAAD;AACI,MAAA,EAAE,EAAEF,gBAAgB,CAACU,kBADzB;AAEI,MAAA,IAAI,EAAEV,gBAAgB,CAACU,kBAF3B;AAGI,MAAA,KAAK,EAAEV,gBAHX;AAII,MAAA,OAAO,EAAEK,KAAK,KAAK,CAAC,CAJxB;AAKI,MAAA,KAAK,EAAEL,gBAAgB,CAACY,YAL5B;AAMI,MAAA,aAAa,EAAE,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACzBb,QAAAA,QAAQ,CAACL,MAAM,CAACe,cAAP,CAAsBG,KAAtB,CAAD,CAAR;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CArCD;;GAAMf,gB;UAEeF,W,EACcC,W;;;KAH7BC,gB;AAuCN,eAAeA,gBAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport CustomCheckBox from \"../../../../../../../common/CustomCheckBox\";\nimport * as Action from \"../store/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst PhysicalActivity = ({physicalActivity}) => {\n\n    const dispatch = useDispatch();\n    const physicalActivitiesData = useSelector(({selectPhysicalActivities}) => selectPhysicalActivities.selectPhysicalActivity);\n    const [index, setIndex] = useState();\n\n    useEffect(() => {\n        let index = physicalActivitiesData.currentIDs.findIndex((id) => {\n            return id == physicalActivity.physicalActivityID\n        });\n        if (index !== -1) {\n            dispatch(Action.onSelectOption(physicalActivity));\n        }\n        setIndex(index);\n    }, []);\n\n    useEffect(() => {\n        let index = physicalActivitiesData.currentIDs.findIndex((id) => {\n            return id == physicalActivity.physicalActivityID\n        });\n        setIndex(index);\n    }, [physicalActivitiesData.currentIDs, physicalActivitiesData]);\n\n    return (\n        <div className={'privilege-checkbox'}>\n            <CustomCheckBox\n                id={physicalActivity.physicalActivityID}\n                name={physicalActivity.physicalActivityID}\n                value={physicalActivity}\n                checked={index !== -1}\n                label={physicalActivity.activityName}\n                onCheckChange={(e, value) => {\n                    dispatch(Action.onSelectOption(value));\n                }}\n            />\n        </div>\n    );\n};\n\nexport default PhysicalActivity;"]},"metadata":{},"sourceType":"module"}