{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\selectDiagnosis\\\\components\\\\Diagnosis.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CustomCheckBox from \"../../../../../../../common/CustomCheckBox\";\nimport * as Action from \"../store/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Diagnosis = _ref => {\n  _s();\n\n  let {\n    diagnosis\n  } = _ref;\n  const dispatch = useDispatch();\n  const diagnosisData = useSelector(_ref2 => {\n    let {\n      selectDiagnosis\n    } = _ref2;\n    return selectDiagnosis.diagnosisSelect;\n  });\n  const [index, setIndex] = useState();\n  useEffect(() => {\n    let index = diagnosisData.selectedDiagnosisIDs.findIndex(id => {\n      return id == diagnosis.diagnosisID;\n    });\n    setIndex(index);\n  }, [dispatch, diagnosisData.selectedDiagnosisIDs]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'privilege-checkbox',\n    children: /*#__PURE__*/_jsxDEV(CustomCheckBox, {\n      id: diagnosis.diagnosisID,\n      name: diagnosis.diagnosisID,\n      value: diagnosis,\n      label: diagnosis.diagnosisName,\n      checked: index !== -1,\n      onCheckChange: (e, data) => {\n        let checked = e.target.checked;\n\n        if (checked) {\n          dispatch(Action.onAddDiagnosisID(diagnosis.diagnosisID));\n        } else {\n          dispatch(Action.onRemoveDiagnosisID(diagnosis.diagnosisID));\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Diagnosis, \"BFZCHz0i5doU+nMoXah7cro9Lg8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Diagnosis;\nexport default Diagnosis;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diagnosis\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/selectDiagnosis/components/Diagnosis.js"],"names":["React","useEffect","useState","CustomCheckBox","Action","useDispatch","useSelector","Diagnosis","diagnosis","dispatch","diagnosisData","selectDiagnosis","diagnosisSelect","index","setIndex","selectedDiagnosisIDs","findIndex","id","diagnosisID","diagnosisName","e","data","checked","target","onAddDiagnosisID","onRemoveDiagnosisID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;;AAEA,MAAMC,SAAS,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAACC,IAAAA;AAAD,GAAgB;AAC/B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,aAAa,GAAGJ,WAAW,CAAC;AAAA,QAAC;AAACK,MAAAA;AAAD,KAAD;AAAA,WAAuBA,eAAe,CAACC,eAAvC;AAAA,GAAD,CAAjC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,KAAK,GAAGH,aAAa,CAACK,oBAAd,CAAmCC,SAAnC,CAA8CC,EAAD,IAAQ;AAC7D,aAAOA,EAAE,IAAIT,SAAS,CAACU,WAAvB;AACH,KAFW,CAAZ;AAGAJ,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GALQ,EAKN,CAACJ,QAAD,EAAWC,aAAa,CAACK,oBAAzB,CALM,CAAT;AAOA,sBAEI;AAAK,IAAA,SAAS,EAAE,oBAAhB;AAAA,2BACI,QAAC,cAAD;AACI,MAAA,EAAE,EAAEP,SAAS,CAACU,WADlB;AAEI,MAAA,IAAI,EAAEV,SAAS,CAACU,WAFpB;AAGI,MAAA,KAAK,EAAEV,SAHX;AAII,MAAA,KAAK,EAAEA,SAAS,CAACW,aAJrB;AAKI,MAAA,OAAO,EAAEN,KAAK,KAAK,CAAC,CALxB;AAMI,MAAA,aAAa,EAAE,CAACO,CAAD,EAAIC,IAAJ,KAAa;AACxB,YAAIC,OAAO,GAAGF,CAAC,CAACG,MAAF,CAASD,OAAvB;;AACA,YAAIA,OAAJ,EAAa;AACTb,UAAAA,QAAQ,CAACL,MAAM,CAACoB,gBAAP,CAAwBhB,SAAS,CAACU,WAAlC,CAAD,CAAR;AACH,SAFD,MAEO;AACHT,UAAAA,QAAQ,CAACL,MAAM,CAACqB,mBAAP,CAA2BjB,SAAS,CAACU,WAArC,CAAD,CAAR;AACH;AACJ;AAbL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAqBH,CAjCD;;GAAMX,S;UACeF,W,EACKC,W;;;KAFpBC,S;AAmCN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport CustomCheckBox from \"../../../../../../../common/CustomCheckBox\";\nimport * as Action from \"../store/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Diagnosis = ({diagnosis}) => {\n    const dispatch = useDispatch();\n    const diagnosisData = useSelector(({selectDiagnosis}) => selectDiagnosis.diagnosisSelect);\n    const [index, setIndex] = useState();\n\n    useEffect(() => {\n        let index = diagnosisData.selectedDiagnosisIDs.findIndex((id) => {\n            return id == diagnosis.diagnosisID\n        });\n        setIndex(index);\n    }, [dispatch, diagnosisData.selectedDiagnosisIDs]);\n\n    return (\n\n        <div className={'privilege-checkbox'}>\n            <CustomCheckBox\n                id={diagnosis.diagnosisID}\n                name={diagnosis.diagnosisID}\n                value={diagnosis}\n                label={diagnosis.diagnosisName}\n                checked={index !== -1}\n                onCheckChange={(e, data) => {\n                    let checked = e.target.checked;\n                    if (checked) {\n                        dispatch(Action.onAddDiagnosisID(diagnosis.diagnosisID));\n                    } else {\n                        dispatch(Action.onRemoveDiagnosisID(diagnosis.diagnosisID));\n                    }\n                }}\n            />\n        </div>\n\n    );\n};\n\nexport default Diagnosis;"]},"metadata":{},"sourceType":"module"}