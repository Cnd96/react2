{"ast":null,"code":"import dataService from \"../../../../../../../../services/dataService\";\nimport patientCheckupSearchAppEndpoints from \"./patient.checkup.search.endpoints\";\nexport const SET_PAGE_INFO = '[PATIENT CHECKUP APP SEARCH] SET_PAGE_INFO';\nexport const SET_SEARCH_DATA = '[PATIENT CHECKUP APP SEARCH] SET_SEARCH_DATA';\nexport const GET_PAGED_PATIENT_CHECKUPS = '[PATIENT CHECKUP APP SEARCH] GET_PAGED_PATIENT_CHECKUPS';\nexport const ON_SEARCH_FORM_RESET = '[PATIENT CHECKUP APP SEARCH] ON_SEARCH_FORM_RESET';\nexport const ON_PAGED_DATA_RESET = '[PATIENT CHECKUP APP SEARCH] ON_PAGED_DATA_RESET';\nexport function getPagedPatientCheckups(searchRQ) {\n  const request = dataService.post(patientCheckupSearchAppEndpoints.getPagedCheckups, searchRQ);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_PAGED_PATIENT_CHECKUPS,\n      payload: response.data.result\n    }));\n  };\n}\nexport function setPageInfo(pageInfo) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SET_PAGE_INFO,\n      payload: pageInfo\n    });\n  };\n}\nexport function setSearchData(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SET_SEARCH_DATA,\n      payload: data\n    });\n  };\n}\nexport function resetSearchData() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_SEARCH_FORM_RESET\n    });\n  };\n}\nexport function resetPagedData() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_PAGED_DATA_RESET\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/registeredPatient/patientDetails/patinetCheckupSearch/store/actions/patient.checkup.search.action.js"],"names":["dataService","patientCheckupSearchAppEndpoints","SET_PAGE_INFO","SET_SEARCH_DATA","GET_PAGED_PATIENT_CHECKUPS","ON_SEARCH_FORM_RESET","ON_PAGED_DATA_RESET","getPagedPatientCheckups","searchRQ","request","post","getPagedCheckups","dispatch","getState","then","response","type","payload","data","result","setPageInfo","pageInfo","setSearchData","resetSearchData","resetPagedData"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,8CAAxB;AACA,OAAOC,gCAAP,MAA6C,oCAA7C;AAEA,OAAO,MAAMC,aAAa,GAAG,4CAAtB;AACP,OAAO,MAAMC,eAAe,GAAG,8CAAxB;AACP,OAAO,MAAMC,0BAA0B,GAAG,yDAAnC;AACP,OAAO,MAAMC,oBAAoB,GAAG,mDAA7B;AACP,OAAO,MAAMC,mBAAmB,GAAG,kDAA5B;AAEP,OAAO,SAASC,uBAAT,CAAiCC,QAAjC,EAA2C;AAC9C,QAAMC,OAAO,GAAGT,WAAW,CAACU,IAAZ,CAAiBT,gCAAgC,CAACU,gBAAlD,EAAoEH,QAApE,CAAhB;AAEA,SAAO,CAACI,QAAD,EAAWC,QAAX,KAAwB;AAC3BJ,IAAAA,OAAO,CAACK,IAAR,CAAcC,QAAD,IACTH,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEZ,0BADD;AAELa,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFlB,KAAD,CADZ;AAMH,GAPD;AAQH;AAED,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAClC,SAAO,CAACT,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEd,aADD;AAELe,MAAAA,OAAO,EAAEI;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASC,aAAT,CAAuBJ,IAAvB,EAA6B;AAChC,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEb,eADD;AAELc,MAAAA,OAAO,EAAEC;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASK,eAAT,GAA2B;AAC9B,SAAO,CAACX,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEX;AADD,KAAD,CAAR;AAGH,GAJD;AAKH;AAED,OAAO,SAASmB,cAAT,GAA0B;AAC7B,SAAO,CAACZ,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGH,GAJD;AAKH","sourcesContent":["import dataService from \"../../../../../../../../services/dataService\";\nimport patientCheckupSearchAppEndpoints from \"./patient.checkup.search.endpoints\";\n\nexport const SET_PAGE_INFO = '[PATIENT CHECKUP APP SEARCH] SET_PAGE_INFO';\nexport const SET_SEARCH_DATA = '[PATIENT CHECKUP APP SEARCH] SET_SEARCH_DATA';\nexport const GET_PAGED_PATIENT_CHECKUPS = '[PATIENT CHECKUP APP SEARCH] GET_PAGED_PATIENT_CHECKUPS';\nexport const ON_SEARCH_FORM_RESET = '[PATIENT CHECKUP APP SEARCH] ON_SEARCH_FORM_RESET';\nexport const ON_PAGED_DATA_RESET = '[PATIENT CHECKUP APP SEARCH] ON_PAGED_DATA_RESET';\n\nexport function getPagedPatientCheckups(searchRQ) {\n    const request = dataService.post(patientCheckupSearchAppEndpoints.getPagedCheckups, searchRQ);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_PAGED_PATIENT_CHECKUPS,\n                payload: response.data.result\n            })\n        );\n    }\n}\n\nexport function setPageInfo(pageInfo) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: SET_PAGE_INFO,\n            payload: pageInfo\n        });\n    };\n}\n\nexport function setSearchData(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: SET_SEARCH_DATA,\n            payload: data\n        });\n    };\n}\n\nexport function resetSearchData() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_SEARCH_FORM_RESET\n        });\n    }\n}\n\nexport function resetPagedData() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_PAGED_DATA_RESET\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}