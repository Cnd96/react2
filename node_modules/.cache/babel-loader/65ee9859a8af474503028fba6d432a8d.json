{"ast":null,"code":"import dataService from \"../../../../../../services/dataService\";\nimport physicalActivityAppEndpoints from \"./physical.activities.app.endpoints\";\nexport const GET_PHYSICAL_ACTIVITY = '[PHYSICAL ACTIVITY ADD EDIT] GET_PHYSICAL_ACTIVITY';\nexport const GET_PHYSICAL_ACTIVITY_CATEGORIES = '[PHYSICAL ACTIVITY  ADD EDIT] GET_PHYSICAL_ACTIVITY_CATEGORIES';\nexport const ON_ADD_EDIT_FORM_CHANGE = '[PHYSICAL ACTIVITY ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_SAVE_UPDATE = '[PHYSICAL ACTIVITY ADD EDIT] ON_SAVE_UPDATE';\nexport const ON_RESET = '[PHYSICAL ACTIVITY ADD EDIT] ON_RESET';\nexport const ON_FORM_RESET = '[PHYSICAL ACTIVITY  ADD EDIT] ON_FORM_RESET';\nexport function getPhysicalActivityByID(physicalActivityID) {\n  let endpoint = Object.assign({}, physicalActivityAppEndpoints.getPhysicalActivityByID);\n  endpoint.url = endpoint.url + '/' + physicalActivityID;\n  const request = dataService.get(endpoint);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_PHYSICAL_ACTIVITY,\n      payload: response.data.result\n    }));\n  };\n}\nexport function onFormChange(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_ADD_EDIT_FORM_CHANGE,\n      payload: data\n    });\n  };\n}\nexport function reset() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_RESET,\n      payload: {}\n    });\n  };\n}\nexport function onFormReset() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ON_FORM_RESET,\n      payload: {}\n    });\n  };\n}\nexport function saveOrUpdatePhysicalActivity(data) {\n  const request = dataService.post(physicalActivityAppEndpoints.saveOrUpdatePhysicalActivity, data);\n  return (dispatch, getState) => {\n    request.then(response => {\n      dispatch({\n        type: ON_SAVE_UPDATE,\n        payload: response.data.result\n      });\n    });\n  };\n}\nexport function getPhysicalActivityCategories() {\n  const request = dataService.get(physicalActivityAppEndpoints.getPhysicalActivityCategories);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_PHYSICAL_ACTIVITY_CATEGORIES,\n      payload: response.data.result\n    }));\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/physicalActivities/store/action/physical.activities.add.edit.actions.js"],"names":["dataService","physicalActivityAppEndpoints","GET_PHYSICAL_ACTIVITY","GET_PHYSICAL_ACTIVITY_CATEGORIES","ON_ADD_EDIT_FORM_CHANGE","ON_SAVE_UPDATE","ON_RESET","ON_FORM_RESET","getPhysicalActivityByID","physicalActivityID","endpoint","Object","assign","url","request","get","dispatch","getState","then","response","type","payload","data","result","onFormChange","reset","onFormReset","saveOrUpdatePhysicalActivity","post","getPhysicalActivityCategories"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,wCAAxB;AACA,OAAOC,4BAAP,MAAyC,qCAAzC;AAEA,OAAO,MAAMC,qBAAqB,GAAG,oDAA9B;AACP,OAAO,MAAMC,gCAAgC,GAAG,gEAAzC;AACP,OAAO,MAAMC,uBAAuB,GAAG,sDAAhC;AACP,OAAO,MAAMC,cAAc,GAAG,6CAAvB;AACP,OAAO,MAAMC,QAAQ,GAAG,uCAAjB;AACP,OAAO,MAAMC,aAAa,GAAG,6CAAtB;AAGP,OAAO,SAASC,uBAAT,CAAiCC,kBAAjC,EAAqD;AAExD,MAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,4BAA4B,CAACO,uBAA/C,CAAf;AACAE,EAAAA,QAAQ,CAACG,GAAT,GAAeH,QAAQ,CAACG,GAAT,GAAe,GAAf,GAAqBJ,kBAApC;AAEA,QAAMK,OAAO,GAAGd,WAAW,CAACe,GAAZ,CAAgBL,QAAhB,CAAhB;AAEA,SAAO,CAACM,QAAD,EAAWC,QAAX,KAAwB;AAC3BH,IAAAA,OAAO,CAACI,IAAR,CAAcC,QAAD,IACTH,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAElB,qBADD;AAELmB,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFlB,KAAD,CADZ;AAMH,GAPD;AASH;AAED,OAAO,SAASC,YAAT,CAAsBF,IAAtB,EAA4B;AAC/B,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEhB,uBADD;AAELiB,MAAAA,OAAO,EAAEC;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASG,KAAT,GAAiB;AACpB,SAAO,CAACT,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEd,QADD;AAELe,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASK,WAAT,GAAuB;AAC1B,SAAO,CAACV,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEb,aADD;AAELc,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASM,4BAAT,CAAsCL,IAAtC,EAA4C;AAC/C,QAAMR,OAAO,GAAGd,WAAW,CAAC4B,IAAZ,CAAiB3B,4BAA4B,CAAC0B,4BAA9C,EAA4EL,IAA5E,CAAhB;AAEA,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3BH,IAAAA,OAAO,CAACI,IAAR,CAAcC,QAAD,IAAc;AACnBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEf,cADD;AAELgB,QAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFlB,OAAD,CAAR;AAIH,KALL;AAOH,GARD;AASH;AAED,OAAO,SAASM,6BAAT,GAAyC;AAC5C,QAAMf,OAAO,GAAGd,WAAW,CAACe,GAAZ,CAAgBd,4BAA4B,CAAC4B,6BAA7C,CAAhB;AAEA,SAAO,CAACb,QAAD,EAAWC,QAAX,KAAwB;AAC3BH,IAAAA,OAAO,CAACI,IAAR,CAAcC,QAAD,IACTH,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEjB,gCADD;AAELkB,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFlB,KAAD,CADZ;AAMH,GAPD;AAQH","sourcesContent":["import dataService from \"../../../../../../services/dataService\";\nimport physicalActivityAppEndpoints from \"./physical.activities.app.endpoints\";\n\nexport const GET_PHYSICAL_ACTIVITY = '[PHYSICAL ACTIVITY ADD EDIT] GET_PHYSICAL_ACTIVITY';\nexport const GET_PHYSICAL_ACTIVITY_CATEGORIES = '[PHYSICAL ACTIVITY  ADD EDIT] GET_PHYSICAL_ACTIVITY_CATEGORIES';\nexport const ON_ADD_EDIT_FORM_CHANGE = '[PHYSICAL ACTIVITY ADD EDIT] ON_ADD_EDIT_FORM_CHANGE';\nexport const ON_SAVE_UPDATE = '[PHYSICAL ACTIVITY ADD EDIT] ON_SAVE_UPDATE';\nexport const ON_RESET = '[PHYSICAL ACTIVITY ADD EDIT] ON_RESET';\nexport const ON_FORM_RESET = '[PHYSICAL ACTIVITY  ADD EDIT] ON_FORM_RESET';\n\n\nexport function getPhysicalActivityByID(physicalActivityID) {\n\n    let endpoint = Object.assign({}, physicalActivityAppEndpoints.getPhysicalActivityByID);\n    endpoint.url = endpoint.url + '/' + physicalActivityID;\n\n    const request = dataService.get(endpoint);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_PHYSICAL_ACTIVITY,\n                payload: response.data.result\n            })\n        );\n    };\n\n}\n\nexport function onFormChange(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_ADD_EDIT_FORM_CHANGE,\n            payload: data\n        })\n    };\n}\n\nexport function reset() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_RESET,\n            payload: {}\n        })\n    };\n}\n\nexport function onFormReset() {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ON_FORM_RESET,\n            payload: {}\n        })\n    };\n}\n\nexport function saveOrUpdatePhysicalActivity(data) {\n    const request = dataService.post(physicalActivityAppEndpoints.saveOrUpdatePhysicalActivity, data);\n\n    return (dispatch, getState) => {\n        request.then((response) => {\n                dispatch({\n                    type: ON_SAVE_UPDATE,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\nexport function getPhysicalActivityCategories() {\n    const request = dataService.get(physicalActivityAppEndpoints.getPhysicalActivityCategories);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_PHYSICAL_ACTIVITY_CATEGORIES,\n                payload: response.data.result\n            })\n        );\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}