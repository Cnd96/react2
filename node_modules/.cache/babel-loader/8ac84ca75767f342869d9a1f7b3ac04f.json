{"ast":null,"code":"import dataService from \"../../../../../../../../../services/dataService\";\nimport selectDiagnosisAppEndpoints from \"./select.diagnosis.endpoints\";\nexport const GET_DIAGNOSIS_LIST = '[DIAGNOSIS SELECT] GET_DIAGNOSIS_LIST';\nexport const REMOVE_DIAGNOSIS_ID = '[DIAGNOSIS SELECT] REMOVE_DIAGNOSIS_ID';\nexport const ADD_DIAGNOSIS_ID = '[DIAGNOSIS SELECT] ADD_DIAGNOSIS_ID';\nexport const ON_SAVE_CHECKUP_DIAGNOSIS = '[DIAGNOSIS SELECT] ON_SAVE_CHECKUP_DIAGNOSIS';\nexport const SET_CURRENT_SELECTED_IDS = '[DIAGNOSIS SELECT] SET_CURRENT_SELECTED_IDS';\nexport function getDiagnosisList(searchRQ) {\n  const request = dataService.post(selectDiagnosisAppEndpoints.getDiagnosisList, searchRQ);\n  return (dispatch, getState) => {\n    request.then(response => dispatch({\n      type: GET_DIAGNOSIS_LIST,\n      payload: response.data.result\n    }));\n  };\n}\nexport function onAddDiagnosisID(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_DIAGNOSIS_ID,\n      payload: data\n    });\n  };\n}\nexport function setCurrentDiagnosisIDs(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SET_CURRENT_SELECTED_IDS,\n      payload: data\n    });\n  };\n}\nexport function onRemoveDiagnosisID(data) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: REMOVE_DIAGNOSIS_ID,\n      payload: data\n    });\n  };\n}\nexport function saveOrUpdateCheckupWithDiagnosis(data) {\n  const request = dataService.post(selectDiagnosisAppEndpoints.saveOrUpdateCheckupWithDiagnosis, data);\n  return (dispatch, getState) => {\n    return request.then(response => {\n      return dispatch({\n        type: ON_SAVE_CHECKUP_DIAGNOSIS,\n        payload: response.data.result\n      });\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/selectDiagnosis/store/actions/select.diagnosis.add.edit.action.js"],"names":["dataService","selectDiagnosisAppEndpoints","GET_DIAGNOSIS_LIST","REMOVE_DIAGNOSIS_ID","ADD_DIAGNOSIS_ID","ON_SAVE_CHECKUP_DIAGNOSIS","SET_CURRENT_SELECTED_IDS","getDiagnosisList","searchRQ","request","post","dispatch","getState","then","response","type","payload","data","result","onAddDiagnosisID","setCurrentDiagnosisIDs","onRemoveDiagnosisID","saveOrUpdateCheckupWithDiagnosis"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iDAAxB;AACA,OAAOC,2BAAP,MAAwC,8BAAxC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,uCAA3B;AACP,OAAO,MAAMC,mBAAmB,GAAG,wCAA5B;AACP,OAAO,MAAMC,gBAAgB,GAAG,qCAAzB;AACP,OAAO,MAAMC,yBAAyB,GAAG,8CAAlC;AACP,OAAO,MAAMC,wBAAwB,GAAG,6CAAjC;AAEP,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AACvC,QAAMC,OAAO,GAAGT,WAAW,CAACU,IAAZ,CAAiBT,2BAA2B,CAACM,gBAA7C,EAA+DC,QAA/D,CAAhB;AAEA,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3BH,IAAAA,OAAO,CAACI,IAAR,CAAcC,QAAD,IACTH,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEb,kBADD;AAELc,MAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFlB,KAAD,CADZ;AAMH,GAPD;AAQH;AAED,OAAO,SAASC,gBAAT,CAA0BF,IAA1B,EAAgC;AACnC,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEX,gBADD;AAELY,MAAAA,OAAO,EAAEC;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASG,sBAAT,CAAgCH,IAAhC,EAAsC;AACzC,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,wBADD;AAELU,MAAAA,OAAO,EAAEC;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASI,mBAAT,CAA6BJ,IAA7B,EAAmC;AACtC,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEZ,mBADD;AAELa,MAAAA,OAAO,EAAEC;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASK,gCAAT,CAA0CL,IAA1C,EAAgD;AACnD,QAAMR,OAAO,GAAGT,WAAW,CAACU,IAAZ,CAAiBT,2BAA2B,CAACqB,gCAA7C,EAA+EL,IAA/E,CAAhB;AAEA,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3B,WAAOH,OAAO,CAACI,IAAR,CAAcC,QAAD,IAAc;AAC1B,aAAOH,QAAQ,CAAC;AACZI,QAAAA,IAAI,EAAEV,yBADM;AAEZW,QAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAFX,OAAD,CAAf;AAIH,KALE,CAAP;AAOH,GARD;AASH","sourcesContent":["import dataService from \"../../../../../../../../../services/dataService\";\nimport selectDiagnosisAppEndpoints from \"./select.diagnosis.endpoints\";\n\nexport const GET_DIAGNOSIS_LIST = '[DIAGNOSIS SELECT] GET_DIAGNOSIS_LIST';\nexport const REMOVE_DIAGNOSIS_ID = '[DIAGNOSIS SELECT] REMOVE_DIAGNOSIS_ID';\nexport const ADD_DIAGNOSIS_ID = '[DIAGNOSIS SELECT] ADD_DIAGNOSIS_ID';\nexport const ON_SAVE_CHECKUP_DIAGNOSIS = '[DIAGNOSIS SELECT] ON_SAVE_CHECKUP_DIAGNOSIS';\nexport const SET_CURRENT_SELECTED_IDS = '[DIAGNOSIS SELECT] SET_CURRENT_SELECTED_IDS';\n\nexport function getDiagnosisList(searchRQ) {\n    const request = dataService.post(selectDiagnosisAppEndpoints.getDiagnosisList, searchRQ);\n\n    return (dispatch, getState) => {\n        request.then((response) =>\n            dispatch({\n                type: GET_DIAGNOSIS_LIST,\n                payload: response.data.result\n            })\n        );\n    }\n}\n\nexport function onAddDiagnosisID(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: ADD_DIAGNOSIS_ID,\n            payload: data\n        })\n    };\n}\n\nexport function setCurrentDiagnosisIDs(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: SET_CURRENT_SELECTED_IDS,\n            payload: data\n        })\n    };\n}\n\nexport function onRemoveDiagnosisID(data) {\n    return (dispatch, getState) => {\n        dispatch({\n            type: REMOVE_DIAGNOSIS_ID,\n            payload: data\n        })\n    };\n}\n\nexport function saveOrUpdateCheckupWithDiagnosis(data) {\n    const request = dataService.post(selectDiagnosisAppEndpoints.saveOrUpdateCheckupWithDiagnosis, data);\n\n    return (dispatch, getState) => {\n        return request.then((response) => {\n                return dispatch({\n                    type: ON_SAVE_CHECKUP_DIAGNOSIS,\n                    payload: response.data.result\n                });\n            }\n        );\n    };\n}\n\n\n"]},"metadata":{},"sourceType":"module"}