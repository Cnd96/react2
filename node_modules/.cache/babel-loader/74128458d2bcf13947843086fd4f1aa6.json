{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\patient\\\\newPatient\\\\stepper\\\\stepComponents\\\\otherLetters\\\\components\\\\OtherLettersSelection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CustomCheckBox from \"../../../../../../../common/CustomCheckBox\";\nimport Constants from \"../../../../../../../../../utils/Constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Actions from '../store/actions/select.other.letter.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OtherLettersSelection = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const reducerData = useSelector(_ref => {\n    let {\n      selectOtherLetter\n    } = _ref;\n    return selectOtherLetter.selectOtherLetter;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"privilege-scroll-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'privilege-main-category-section',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'privilege-category-name',\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'privilege-category-section',\n          style: {\n            marginLeft: '5%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Constants.OTHER_LETTERS.map((data, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'privilege-checkbox',\n                children: /*#__PURE__*/_jsxDEV(CustomCheckBox, {\n                  id: data.ID,\n                  name: data.ID,\n                  value: data,\n                  label: data.LABEL,\n                  checked: reducerData.letterType.ID == data.ID,\n                  onCheckChange: (e, data) => {\n                    let checked = e.target.checked;\n                    console.log(data);\n\n                    if (checked) {\n                      dispatch(Actions.onSelectOtherLetters(data));\n                    } else {\n                      dispatch(Actions.onSelectOtherLetters({\n                        ID: null,\n                        TYPE: null\n                      }));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OtherLettersSelection, \"DK1g3YBgF1l0ZJ59HL9/iln3zd4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = OtherLettersSelection;\nexport default OtherLettersSelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherLettersSelection\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/patient/newPatient/stepper/stepComponents/otherLetters/components/OtherLettersSelection.js"],"names":["React","CustomCheckBox","Constants","useDispatch","useSelector","Actions","OtherLettersSelection","dispatch","reducerData","selectOtherLetter","marginLeft","OTHER_LETTERS","map","data","index","ID","LABEL","letterType","e","checked","target","console","log","onSelectOtherLetters","TYPE"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,KAAKC,OAAZ,MAAyB,6CAAzB;;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAAA;;AAEhC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,WAAW,GAAGJ,WAAW,CAAC;AAAA,QAAC;AAACK,MAAAA;AAAD,KAAD;AAAA,WAAyBA,iBAAiB,CAACA,iBAA3C;AAAA,GAAD,CAA/B;AAGA,sBACI;AAAA,2BAEI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE,iCAAhB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAE,yBAAhB;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAE,4BAAhB;AAA8C,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAE;AAAb,WAArD;AAAA,iCACI;AAAA,sBAEQR,SAAS,CAACS,aAAV,CAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzC,kCACI;AAAK,gBAAA,SAAS,EAAE,oBAAhB;AAAA,uCACI,QAAC,cAAD;AACI,kBAAA,EAAE,EAAED,IAAI,CAACE,EADb;AAEI,kBAAA,IAAI,EAAEF,IAAI,CAACE,EAFf;AAGI,kBAAA,KAAK,EAAEF,IAHX;AAII,kBAAA,KAAK,EAAEA,IAAI,CAACG,KAJhB;AAKI,kBAAA,OAAO,EAAER,WAAW,CAACS,UAAZ,CAAuBF,EAAvB,IAA6BF,IAAI,CAACE,EAL/C;AAMI,kBAAA,aAAa,EAAE,CAACG,CAAD,EAAIL,IAAJ,KAAa;AACxB,wBAAIM,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASD,OAAvB;AACAE,oBAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;;AACA,wBAAIM,OAAJ,EAAa;AACTZ,sBAAAA,QAAQ,CAACF,OAAO,CAACkB,oBAAR,CAA6BV,IAA7B,CAAD,CAAR;AACH,qBAFD,MAEO;AACHN,sBAAAA,QAAQ,CAACF,OAAO,CAACkB,oBAAR,CAA6B;AAACR,wBAAAA,EAAE,EAAE,IAAL;AAAWS,wBAAAA,IAAI,EAAE;AAAjB,uBAA7B,CAAD,CAAR;AACH;AACJ;AAdL;AAAA;AAAA;AAAA;AAAA;AADJ,iBAA2CV,KAA3C;AAAA;AAAA;AAAA;AAAA,sBADJ;AAoBH,aArBD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4CH,CAlDD;;GAAMR,qB;UAEeH,W,EACGC,W;;;KAHlBE,qB;AAoDN,eAAeA,qBAAf","sourcesContent":["import React from 'react';\nimport CustomCheckBox from \"../../../../../../../common/CustomCheckBox\";\nimport Constants from \"../../../../../../../../../utils/Constants\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as Actions from '../store/actions/select.other.letter.action'\n\nconst OtherLettersSelection = () => {\n\n    const dispatch = useDispatch();\n    const reducerData = useSelector(({selectOtherLetter}) => selectOtherLetter.selectOtherLetter);\n\n\n    return (\n        <div>\n\n            <div className='privilege-scroll-section'>\n                <div className={'privilege-main-category-section'}>\n                    <div className={'privilege-category-name'}>\n                        <h5>Documents</h5>\n                    </div>\n\n                    <div className={'privilege-category-section'} style={{marginLeft: '5%'}}>\n                        <div>\n                            {\n                                Constants.OTHER_LETTERS.map((data, index) => {\n                                    return (\n                                        <div className={'privilege-checkbox'} key={index}>\n                                            <CustomCheckBox\n                                                id={data.ID}\n                                                name={data.ID}\n                                                value={data}\n                                                label={data.LABEL}\n                                                checked={reducerData.letterType.ID == data.ID}\n                                                onCheckChange={(e, data) => {\n                                                    let checked = e.target.checked;\n                                                    console.log(data);\n                                                    if (checked) {\n                                                        dispatch(Actions.onSelectOtherLetters(data))\n                                                    } else {\n                                                        dispatch(Actions.onSelectOtherLetters({ID: null, TYPE: null}));\n                                                    }\n                                                }}\n                                            />\n                                        </div>\n                                    )\n                                })\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n    );\n};\n\nexport default OtherLettersSelection;"]},"metadata":{},"sourceType":"module"}