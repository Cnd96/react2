{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\auth\\\\Auth.js\";\nimport React, { Component } from 'react';\nimport jwtService from '../services/auth/jwtService';\nimport * as userActions from \"./store/actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport history from '../../@history';\nimport Constants from \"../../utils/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initServices = () => {// dataService.init();\n    };\n\n    this.jwtCheck = () => {\n      jwtService.on('onAutoLogin', () => {\n        let loginUser = jwtService.getLoginUser();\n\n        if (loginUser) {\n          this.props.setLoginUser(loginUser);\n          Constants.LOGGED_IN_USER = loginUser;\n        }\n      });\n      jwtService.on('onAutoLogout', message => {\n        //TODO\n        console.log('onAutoLogout ==========>');\n        Constants.LOGGED_IN_USER = null; // this.props.logout();\n      });\n      jwtService.on('onLoginSuccess', message => {\n        history.push({\n          pathname: Constants.PAGES.adminDashboard\n        });\n      });\n      jwtService.init();\n    };\n\n    this.initServices();\n    this.jwtCheck();\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setLoginUser: userActions.setLoginUser\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/auth/Auth.js"],"names":["React","Component","jwtService","userActions","connect","bindActionCreators","history","Constants","Auth","constructor","props","initServices","jwtCheck","on","loginUser","getLoginUser","setLoginUser","LOGGED_IN_USER","message","console","log","push","pathname","PAGES","adminDashboard","init","render","children","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAEzBQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,YAPmB,GAOJ,MAAM,CACjB;AACH,KATkB;;AAAA,SAWnBC,QAXmB,GAWR,MAAM;AACbV,MAAAA,UAAU,CAACW,EAAX,CAAc,aAAd,EAA6B,MAAM;AAE/B,YAAIC,SAAS,GAAGZ,UAAU,CAACa,YAAX,EAAhB;;AAEA,YAAID,SAAJ,EAAe;AACX,eAAKJ,KAAL,CAAWM,YAAX,CAAwBF,SAAxB;AACAP,UAAAA,SAAS,CAACU,cAAV,GAA2BH,SAA3B;AACH;AACJ,OARD;AAUAZ,MAAAA,UAAU,CAACW,EAAX,CAAc,cAAd,EAA+BK,OAAD,IAAa;AAEvC;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAb,QAAAA,SAAS,CAACU,cAAV,GAA2B,IAA3B,CAJuC,CAKvC;AACH,OAND;AAQAf,MAAAA,UAAU,CAACW,EAAX,CAAc,gBAAd,EAAiCK,OAAD,IAAa;AACzCZ,QAAAA,OAAO,CAACe,IAAR,CAAa;AACTC,UAAAA,QAAQ,EAAEf,SAAS,CAACgB,KAAV,CAAgBC;AADjB,SAAb;AAGH,OAJD;AAMAtB,MAAAA,UAAU,CAACuB,IAAX;AACH,KArCkB;;AAGf,SAAKd,YAAL;AACA,SAAKC,QAAL;AACH;;AAkCDc,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKjB,KAAxB;AAEA,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,gBACKiB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAjDwB;;AAoD7B,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAOxB,kBAAkB,CAAC;AAClBW,IAAAA,YAAY,EAAEb,WAAW,CAACa;AADR,GAAD,EAGrBa,QAHqB,CAAzB;AAIH;;AAED,eAAezB,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCpB,IAAlC,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport jwtService from '../services/auth/jwtService';\nimport * as userActions from \"./store/actions\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from 'redux';\nimport history from '../../@history';\nimport Constants from \"../../utils/Constants\";\n\nclass Auth extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initServices();\n        this.jwtCheck();\n    }\n\n    initServices = () => {\n        // dataService.init();\n    };\n\n    jwtCheck = () => {\n        jwtService.on('onAutoLogin', () => {\n\n            let loginUser = jwtService.getLoginUser();\n\n            if (loginUser) {\n                this.props.setLoginUser(loginUser);\n                Constants.LOGGED_IN_USER = loginUser;\n            }\n        });\n\n        jwtService.on('onAutoLogout', (message) => {\n\n            //TODO\n            console.log('onAutoLogout ==========>');\n            Constants.LOGGED_IN_USER = null;\n            // this.props.logout();\n        });\n\n        jwtService.on('onLoginSuccess', (message) => {\n            history.push({\n                pathname: Constants.PAGES.adminDashboard\n            });\n        });\n\n        jwtService.init();\n    };\n\n    render() {\n        const {children} = this.props;\n\n        return (\n            <React.Fragment>\n                {children}\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n            setLoginUser: userActions.setLoginUser,\n        },\n        dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);\n"]},"metadata":{},"sourceType":"module"}