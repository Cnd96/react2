{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chamald\\\\Desktop\\\\Chamal\\\\react\\\\react-app\\\\src\\\\app\\\\views\\\\admin\\\\config\\\\medicalTestRecords\\\\add-edit\\\\MedicalTestRecordAddEditApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport withReducer from \"../../../../../store/withReducer\";\nimport reducer from \"../store/reducers\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStorageItem, removeStorageItem } from \"../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../utils/Constants\";\nimport * as Action from \"../store/actions\";\nimport { trimData } from \"../../../../../../utils/DataExtractHelper\";\nimport { CButton, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport MedicalTestRecordAddEditForm from \"./components/MedicalTestRecordAddEditForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MedicalTestRecordAddEditApp = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = useSelector(_ref => {\n    let {\n      medicalTestRecords\n    } = _ref;\n    return medicalTestRecords.medicalTestRecordAddEdit;\n  });\n  useEffect(() => {\n    let medicalTestRecordID = getStorageItem(Constants.STORAGE.SELECTED_MEDICAL_TEST_RECORD_ID);\n\n    if (medicalTestRecordID) {\n      dispatch(Action.getMedicalTestRecordDTOByID(medicalTestRecordID));\n    }\n\n    dispatch(Action.getMedicalTestTypes());\n    return () => {\n      dispatch(Action.reset());\n      removeStorageItem(Constants.STORAGE.SELECTED_MEDICAL_TEST_TYPE_ID);\n    };\n  }, [dispatch]);\n\n  const saveOrUpdateMedicalTestType = () => {\n    let saveObj = trimData(data.formData.values);\n    console.log(saveObj); // dispatch(Action.saveOrUpdateMedicalTestRecord(saveObj));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: /*#__PURE__*/_jsxDEV(CCol, {\n        xs: \"12\",\n        children: /*#__PURE__*/_jsxDEV(CCard, {\n          children: /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: [/*#__PURE__*/_jsxDEV(MedicalTestRecordAddEditForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CRow, {\n              children: /*#__PURE__*/_jsxDEV(CCol, {\n                xs: \"12\",\n                children: /*#__PURE__*/_jsxDEV(CButton, {\n                  disabled: !data.formData.isValid,\n                  onClick: () => {\n                    saveOrUpdateMedicalTestType();\n                  },\n                  color: \"primary\",\n                  className: \"float-right\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MedicalTestRecordAddEditApp, \"8ZSi0OBRHkt2uIn6fVrA7mYaxeA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MedicalTestRecordAddEditApp;\nexport default withReducer('medicalTestRecords', reducer)(MedicalTestRecordAddEditApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicalTestRecordAddEditApp\");","map":{"version":3,"sources":["C:/Users/chamald/Desktop/Chamal/react/react-app/src/app/views/admin/config/medicalTestRecords/add-edit/MedicalTestRecordAddEditApp.js"],"names":["React","useEffect","withReducer","reducer","useDispatch","useSelector","getStorageItem","removeStorageItem","Constants","Action","trimData","CButton","CCard","CCardBody","CCol","CRow","MedicalTestRecordAddEditForm","MedicalTestRecordAddEditApp","dispatch","data","medicalTestRecords","medicalTestRecordAddEdit","medicalTestRecordID","STORAGE","SELECTED_MEDICAL_TEST_RECORD_ID","getMedicalTestRecordDTOByID","getMedicalTestTypes","reset","SELECTED_MEDICAL_TEST_TYPE_ID","saveOrUpdateMedicalTestType","saveObj","formData","values","console","log","isValid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,sCAAhD;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,SAAQC,QAAR,QAAuB,2CAAvB;AACA,SAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,IAAnC,EAAyCC,IAAzC,QAAoD,eAApD;AACA,OAAOC,4BAAP,MAAyC,2CAAzC;;;AAEA,MAAMC,2BAA2B,GAAG,MAAM;AAAA;;AAEtC,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,IAAI,GAAGd,WAAW,CAAC;AAAA,QAAC;AAACe,MAAAA;AAAD,KAAD;AAAA,WAA0BA,kBAAkB,CAACC,wBAA7C;AAAA,GAAD,CAAxB;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqB,mBAAmB,GAAGhB,cAAc,CAACE,SAAS,CAACe,OAAV,CAAkBC,+BAAnB,CAAxC;;AACA,QAAIF,mBAAJ,EAAyB;AACrBJ,MAAAA,QAAQ,CAACT,MAAM,CAACgB,2BAAP,CAAmCH,mBAAnC,CAAD,CAAR;AACH;;AACDJ,IAAAA,QAAQ,CAACT,MAAM,CAACiB,mBAAP,EAAD,CAAR;AACA,WAAO,MAAM;AACTR,MAAAA,QAAQ,CAACT,MAAM,CAACkB,KAAP,EAAD,CAAR;AACApB,MAAAA,iBAAiB,CAACC,SAAS,CAACe,OAAV,CAAkBK,6BAAnB,CAAjB;AACH,KAHD;AAIH,GAVQ,EAUN,CAACV,QAAD,CAVM,CAAT;;AAYA,QAAMW,2BAA2B,GAAG,MAAM;AACtC,QAAIC,OAAO,GAAGpB,QAAQ,CAACS,IAAI,CAACY,QAAL,CAAcC,MAAf,CAAtB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAHsC,CAItC;AACH,GALD;;AAOA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,IAAT;AAAA,+BACI,QAAC,KAAD;AAAA,iCACI,QAAC,SAAD;AAAA,oCACI,QAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,IAAT;AAAA,uCACI,QAAC,OAAD;AACI,kBAAA,QAAQ,EAAE,CAACX,IAAI,CAACY,QAAL,CAAcI,OAD7B;AAEI,kBAAA,OAAO,EAAE,MAAM;AACXN,oBAAAA,2BAA2B;AAC9B,mBAJL;AAKI,kBAAA,KAAK,EAAC,SALV;AAKoB,kBAAA,SAAS,EAAC,aAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA/CD;;GAAMZ,2B;UAEeb,W,EACJC,W;;;KAHXY,2B;AAiDN,eAAef,WAAW,CAAC,oBAAD,EAAuBC,OAAvB,CAAX,CAA2Cc,2BAA3C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport withReducer from \"../../../../../store/withReducer\";\nimport reducer from \"../store/reducers\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getStorageItem, removeStorageItem} from \"../../../../../../utils/StorageUtils\";\nimport Constants from \"../../../../../../utils/Constants\";\nimport * as Action from \"../store/actions\";\nimport {trimData} from \"../../../../../../utils/DataExtractHelper\";\nimport {CButton, CCard, CCardBody, CCol, CRow} from \"@coreui/react\";\nimport MedicalTestRecordAddEditForm from \"./components/MedicalTestRecordAddEditForm\";\n\nconst MedicalTestRecordAddEditApp = () => {\n\n    const dispatch = useDispatch();\n    const data = useSelector(({medicalTestRecords}) => medicalTestRecords.medicalTestRecordAddEdit);\n\n    useEffect(() => {\n        let medicalTestRecordID = getStorageItem(Constants.STORAGE.SELECTED_MEDICAL_TEST_RECORD_ID);\n        if (medicalTestRecordID) {\n            dispatch(Action.getMedicalTestRecordDTOByID(medicalTestRecordID));\n        }\n        dispatch(Action.getMedicalTestTypes());\n        return () => {\n            dispatch(Action.reset());\n            removeStorageItem(Constants.STORAGE.SELECTED_MEDICAL_TEST_TYPE_ID);\n        };\n    }, [dispatch]);\n\n    const saveOrUpdateMedicalTestType = () => {\n        let saveObj = trimData(data.formData.values);\n        \n        console.log(saveObj)\n        // dispatch(Action.saveOrUpdateMedicalTestRecord(saveObj));\n    };\n\n    return (\n        <div>\n            <CRow>\n                <CCol xs=\"12\">\n                    <CCard>\n                        <CCardBody>\n                            <MedicalTestRecordAddEditForm/>\n                            <CRow>\n                                <CCol xs=\"12\">\n                                    <CButton\n                                        disabled={!data.formData.isValid}\n                                        onClick={() => {\n                                            saveOrUpdateMedicalTestType();\n                                        }}\n                                        color=\"primary\" className=\"float-right\">Save</CButton>\n                                </CCol>\n                            </CRow>\n                        </CCardBody>\n                    </CCard>\n                </CCol>\n            </CRow>\n        </div>\n    );\n};\n\nexport default withReducer('medicalTestRecords', reducer)(MedicalTestRecordAddEditApp);"]},"metadata":{},"sourceType":"module"}